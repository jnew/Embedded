

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Mar 04 16:40:28 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           	psect	idataBANK0
    83  002024                     __pidataBANK0:
    84                           	opt stack 0
    85                           
    86                           ;initializer for i2c_slave_int_handler@F5130
    87  002024  AA                 	db	170
    88  002025  00                 	db	0
    89  002026  00                 	db	0
    90  002027  00                 	db	0
    91  002028  00                 	db	0
    92                           
    93                           ;initializer for i2c_slave_int_handler@F5128
    94  002029  00                 	db	0
    95  00202A  01                 	db	1
    96  00202B  01                 	db	1
    97                           
    98                           ;initializer for i2c_slave_int_handler@F5137
    99  00202C  02                 	db	2
   100  00202D  01                 	db	1
   101  00202E  01                 	db	1
   102                           
   103                           	psect	idataBANK1
   104  002044                     __pidataBANK1:
   105                           	opt stack 0
   106                           
   107                           ;initializer for main@F5212
   108  002044  01                 	db	1
   109  002045  02                 	db	2
   110  0000                     _ADCON0	set	4034
   111  0000                     _ADCON0bits	set	4034
   112  0000                     _ADCON1	set	4033
   113  0000                     _ADCON2	set	4032
   114  0000                     _ADRESH	set	4036
   115  0000                     _INTCONbits	set	4082
   116  0000                     _IPR1bits	set	3999
   117  0000                     _LATA	set	3977
   118  0000                     _LATB	set	3978
   119  0000                     _LATBbits	set	3978
   120  0000                     _OSCCON	set	4051
   121  0000                     _OSCCONbits	set	4051
   122  0000                     _OSCTUNEbits	set	3995
   123  0000                     _PIE1bits	set	3997
   124  0000                     _PIR1bits	set	3998
   125  0000                     _PORTA	set	3968
   126  0000                     _RCONbits	set	4048
   127  0000                     _RCREG	set	4014
   128  0000                     _RCSTA	set	4011
   129  0000                     _RCSTAbits	set	4011
   130  0000                     _SPBRG	set	4015
   131  0000                     _SPBRGH	set	4016
   132  0000                     _SSPADD	set	4040
   133  0000                     _SSPBUF	set	4041
   134  0000                     _SSPCON1	set	4038
   135  0000                     _SSPCON1bits	set	4038
   136  0000                     _SSPCON2	set	4037
   137  0000                     _SSPCON2bits	set	4037
   138  0000                     _SSPSTAT	set	4039
   139  0000                     _SSPSTATbits	set	4039
   140  0000                     _T0CON	set	4053
   141  0000                     _T0CONbits	set	4053
   142  0000                     _T1CON	set	4045
   143  0000                     _T1CONbits	set	4045
   144  0000                     _TMR0H	set	4055
   145  0000                     _TMR0L	set	4054
   146  0000                     _TMR1H	set	4047
   147  0000                     _TMR1L	set	4046
   148  0000                     _TRISA	set	3986
   149  0000                     _TRISB	set	3987
   150  0000                     _TRISC	set	3988
   151  0000                     _TRISCbits	set	3988
   152  0000                     _TXREG	set	4013
   153  0000                     _TXSTA	set	4012
   154  0000                     _TXSTAbits	set	4012
   155                           
   156                           	psect	nvCOMRAM
   157  000050                     __pnvCOMRAM:
   158                           	opt stack 0
   159  000050                     _ic_ptr:
   160                           	opt stack 0
   161  000050                     	ds	2
   162  000052                     _uc_ptr:
   163                           	opt stack 0
   164  000052                     	ds	2
   165                           
   166                           ; #config settings
   167  0000                     
   168                           	psect	cinit
   169  001876                     __pcinit:
   170                           	opt stack 0
   171  001876                     start_initialization:
   172                           	opt stack 0
   173  001876                     __initialization:
   174                           	opt stack 0
   175                           
   176                           ; Clear objects allocated to BANK2 (134 bytes)
   177  001876  EE02  F000         	lfsr	0,__pbssBANK2
   178  00187A  0E86               	movlw	134
   179  00187C                     clear_0:
   180  00187C  6AEE               	clrf	postinc0,c
   181  00187E  06E8               	decf	wreg,f,c
   182  001880  E1FD               	bnz	clear_0
   183                           
   184                           ; Clear objects allocated to BANK1 (134 bytes)
   185  001882  EE01  F000         	lfsr	0,__pbssBANK1
   186  001886  0E86               	movlw	134
   187  001888                     clear_1:
   188  001888  6AEE               	clrf	postinc0,c
   189  00188A  06E8               	decf	wreg,f,c
   190  00188C  E1FD               	bnz	clear_1
   191                           
   192                           ; Clear objects allocated to BANK0 (5 bytes)
   193  00188E  0100               	movlb	0
   194  001890  6BDD               	clrf	(__pbssBANK0+4)& (0+255),b
   195  001892  6BDC               	clrf	(__pbssBANK0+3)& (0+255),b
   196  001894  6BDB               	clrf	(__pbssBANK0+2)& (0+255),b
   197  001896  6BDA               	clrf	(__pbssBANK0+1)& (0+255),b
   198  001898  6BD9               	clrf	__pbssBANK0& (0+255),b
   199                           
   200                           ; Clear objects allocated to COMRAM (32 bytes)
   201  00189A  EE00  F030         	lfsr	0,__pbssCOMRAM
   202  00189E  0E20               	movlw	32
   203  0018A0                     clear_2:
   204  0018A0  6AEE               	clrf	postinc0,c
   205  0018A2  06E8               	decf	wreg,f,c
   206  0018A4  E1FD               	bnz	clear_2
   207                           
   208                           ; Initialize objects allocated to BANK1 (2 bytes)
   209                           ; load TBLPTR registers with __pidataBANK1
   210  0018A6  0E44               	movlw	low __pidataBANK1
   211  0018A8  6EF6               	movwf	tblptrl,c
   212  0018AA  0E20               	movlw	high __pidataBANK1
   213  0018AC  6EF7               	movwf	tblptrh,c
   214  0018AE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   215  0018B0  6EF8               	movwf	tblptru,c
   216  0018B2  0009               	tblrd		*+	;fetch initializer
   217  0018B4  CFF5 F1EA          	movff	tablat,__pdataBANK1
   218  0018B8  0009               	tblrd		*+	;fetch initializer
   219  0018BA  CFF5 F1EB          	movff	tablat,__pdataBANK1+1
   220                           
   221                           ; Initialize objects allocated to BANK0 (11 bytes)
   222                           ; load TBLPTR registers with __pidataBANK0
   223  0018BE  0E24               	movlw	low __pidataBANK0
   224  0018C0  6EF6               	movwf	tblptrl,c
   225  0018C2  0E20               	movlw	high __pidataBANK0
   226  0018C4  6EF7               	movwf	tblptrh,c
   227  0018C6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   228  0018C8  6EF8               	movwf	tblptru,c
   229  0018CA  EE00  F0CE         	lfsr	0,__pdataBANK0
   230  0018CE  EE10 F00B          	lfsr	1,11
   231  0018D2                     copy_data0:
   232  0018D2  0009               	tblrd		*+
   233  0018D4  CFF5 FFEE          	movff	tablat,postinc0
   234  0018D8  50E5               	movf	postdec1,w,c
   235  0018DA  50E1               	movf	fsr1l,w,c
   236  0018DC  E1FA               	bnz	copy_data0
   237  0018DE                     end_of_initialization:
   238                           	opt stack 0
   239  0018DE                     __end_of__initialization:
   240                           	opt stack 0
   241  0018DE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   242  0018E0  6EF8               	movwf	tblptru,c
   243  0018E2  0100               	movlb	0
   244  0018E4  EFB6  F003         	goto	_main	;jump to C main() function
   245                           tblptru	equ	0xFF8
   246                           tblptrh	equ	0xFF7
   247                           tblptrl	equ	0xFF6
   248                           tablat	equ	0xFF5
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           postdec1	equ	0xFE5
   252                           fsr1l	equ	0xFE1
   253                           
   254                           	psect	bssCOMRAM
   255  000030                     __pbssCOMRAM:
   256                           	opt stack 0
   257  000030                     _adcbuffer:
   258                           	opt stack 0
   259  000030                     	ds	28
   260  00004C                     _uartTimeOut:
   261                           	opt stack 0
   262  00004C                     	ds	2
   263  00004E                     _MQ_Main_Willing_to_block:
   264                           	opt stack 0
   265  00004E                     	ds	1
   266  00004F                     _USART_Status:
   267                           	opt stack 0
   268  00004F                     	ds	1
   269                           tblptru	equ	0xFF8
   270                           tblptrh	equ	0xFF7
   271                           tblptrl	equ	0xFF6
   272                           tablat	equ	0xFF5
   273                           postinc0	equ	0xFEE
   274                           wreg	equ	0xFE8
   275                           postdec1	equ	0xFE5
   276                           fsr1l	equ	0xFE1
   277                           
   278                           	psect	bssBANK0
   279  0000D9                     __pbssBANK0:
   280                           	opt stack 0
   281  0000D9                     i2c_slave_int_handler@F5134:
   282                           	opt stack 0
   283  0000D9                     	ds	5
   284                           tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           postdec1	equ	0xFE5
   291                           fsr1l	equ	0xFE1
   292                           
   293                           	psect	dataBANK0
   294  0000CE                     __pdataBANK0:
   295                           	opt stack 0
   296  0000CE                     i2c_slave_int_handler@F5130:
   297                           	opt stack 0
   298  0000CE                     	ds	5
   299  0000D3                     i2c_slave_int_handler@F5128:
   300                           	opt stack 0
   301  0000D3                     	ds	3
   302  0000D6                     i2c_slave_int_handler@F5137:
   303                           	opt stack 0
   304  0000D6                     	ds	3
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           postdec1	equ	0xFE5
   312                           fsr1l	equ	0xFE1
   313                           
   314                           	psect	bssBANK1
   315  000100                     __pbssBANK1:
   316                           	opt stack 0
   317  000100                     _ToMainHigh_MQ:
   318                           	opt stack 0
   319  000100                     	ds	67
   320  000143                     _ToMainLow_MQ:
   321                           	opt stack 0
   322  000143                     	ds	67
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           postdec1	equ	0xFE5
   330                           fsr1l	equ	0xFE1
   331                           
   332                           	psect	dataBANK1
   333  0001EA                     __pdataBANK1:
   334                           	opt stack 0
   335  0001EA                     main@F5212:
   336                           	opt stack 0
   337  0001EA                     	ds	2
   338                           tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           postdec1	equ	0xFE5
   345                           fsr1l	equ	0xFE1
   346                           
   347                           	psect	bssBANK2
   348  000200                     __pbssBANK2:
   349                           	opt stack 0
   350  000200                     _FromMainHigh_MQ:
   351                           	opt stack 0
   352  000200                     	ds	67
   353  000243                     _FromMainLow_MQ:
   354                           	opt stack 0
   355  000243                     	ds	67
   356                           tblptru	equ	0xFF8
   357                           tblptrh	equ	0xFF7
   358                           tblptrl	equ	0xFF6
   359                           tablat	equ	0xFF5
   360                           postinc0	equ	0xFEE
   361                           wreg	equ	0xFE8
   362                           postdec1	equ	0xFE5
   363                           fsr1l	equ	0xFE1
   364                           
   365                           	psect	cstackBANK1
   366  000186                     __pcstackBANK1:
   367                           	opt stack 0
   368  000186                     ??_SetChanADC:
   369  000186                     ?_in_high_int:
   370                           	opt stack 0
   371  000186                     ?___awmod:
   372                           	opt stack 0
   373  000186                     ?___lwmod:
   374                           	opt stack 0
   375  000186                     i2c_configure_slave@addr:
   376                           	opt stack 0
   377  000186                     OpenADC@config2:
   378                           	opt stack 0
   379  000186                     OpenTimer0@config:
   380                           	opt stack 0
   381  000186                     OpenTimer1@config:
   382                           	opt stack 0
   383  000186                     Delay1KTCYx@unit:
   384                           	opt stack 0
   385  000186                     init_queue@qptr:
   386                           	opt stack 0
   387  000186                     check_msg@qptr:
   388                           	opt stack 0
   389  000186                     init_i2c@ic:
   390                           	opt stack 0
   391  000186                     init_uart_recv@uc:
   392                           	opt stack 0
   393  000186                     uart_trans@data:
   394                           	opt stack 0
   395  000186                     timer0_lthread@tptr:
   396                           	opt stack 0
   397  000186                     init_timer1_lthread@tptr:
   398                           	opt stack 0
   399  000186                     OpenUSART@spbrg:
   400                           	opt stack 0
   401  000186                     ___awmod@dividend:
   402                           	opt stack 0
   403  000186                     ___lwmod@dividend:
   404                           	opt stack 0
   405  000186                     memcpy@d1:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x0
   409  000186                     	ds	1
   410  000187                     OpenADC@portconfig:
   411                           	opt stack 0
   412  000187                     SetChanADC@channel:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0x1
   416  000187                     	ds	1
   417  000188                     ??_OpenUSART:
   418  000188                     ??_OpenADC:
   419  000188                     ??_uart_trans:
   420  000188                     ??_init_queue:
   421  000188                     ??_check_msg:
   422  000188                     ?_in_low_int:
   423                           	opt stack 0
   424  000188                     timer0_lthread@msgtype:
   425                           	opt stack 0
   426  000188                     ___awmod@divisor:
   427                           	opt stack 0
   428  000188                     ___lwmod@divisor:
   429                           	opt stack 0
   430  000188                     memcpy@s1:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0x2
   434  000188                     	ds	1
   435  000189                     init_queue@i:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x3
   439  000189                     	ds	1
   440  00018A                     ??_init_queues:
   441  00018A                     ??___awmod:
   442  00018A                     ??___lwmod:
   443  00018A                     ?_in_main:
   444                           	opt stack 0
   445  00018A                     uart_trans@length:
   446                           	opt stack 0
   447  00018A                     OpenADC@config:
   448                           	opt stack 0
   449  00018A                     timer0_lthread@length:
   450                           	opt stack 0
   451  00018A                     memcpy@n:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x4
   455  00018A                     	ds	1
   456  00018B                     OpenUSART@config:
   457                           	opt stack 0
   458  00018B                     ___awmod@counter:
   459                           	opt stack 0
   460  00018B                     ___lwmod@counter:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0x5
   464  00018B                     	ds	1
   465  00018C                     ??_block_on_To_msgqueues:
   466  00018C                     ___awmod@sign:
   467                           	opt stack 0
   468  00018C                     timer0_lthread@msgbuffer:
   469                           	opt stack 0
   470  00018C                     memcpy@d:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x6
   474  00018C                     	ds	2
   475  00018E                     timer0_lthread@msgval:
   476                           	opt stack 0
   477  00018E                     memcpy@s:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x8
   481  00018E                     	ds	2
   482  000190                     send_msg@qptr:
   483                           	opt stack 0
   484  000190                     recv_msg@qptr:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0xA
   488  000190                     	ds	2
   489  000192                     send_msg@length:
   490                           	opt stack 0
   491  000192                     recv_msg@maxlength:
   492                           	opt stack 0
   493                           
   494                           ; 1 bytes @ 0xC
   495  000192                     	ds	1
   496  000193                     send_msg@msgtype:
   497                           	opt stack 0
   498  000193                     recv_msg@msgtype:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0xD
   502  000193                     	ds	1
   503  000194                     send_msg@data:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0xE
   507  000194                     	ds	1
   508  000195                     recv_msg@data:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0xF
   512  000195                     	ds	1
   513  000196                     ??_send_msg:
   514                           
   515                           ; 0 bytes @ 0x10
   516  000196                     	ds	1
   517  000197                     ??_recv_msg:
   518  000197                     send_msg@tlength:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x11
   522  000197                     	ds	2
   523  000199                     send_msg@slot:
   524                           	opt stack 0
   525  000199                     recv_msg@slot:
   526                           	opt stack 0
   527                           
   528                           ; 1 bytes @ 0x13
   529  000199                     	ds	1
   530  00019A                     send_msg@qmsg:
   531                           	opt stack 0
   532  00019A                     recv_msg@tlength:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x14
   536  00019A                     	ds	2
   537  00019C                     FromMainLow_sendmsg@msgtype:
   538                           	opt stack 0
   539  00019C                     FromMainHigh_sendmsg@msgtype:
   540                           	opt stack 0
   541  00019C                     recv_msg@qmsg:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x16
   545  00019C                     	ds	1
   546  00019D                     FromMainLow_sendmsg@data:
   547                           	opt stack 0
   548  00019D                     FromMainHigh_sendmsg@data:
   549                           	opt stack 0
   550                           
   551                           ; 2 bytes @ 0x17
   552  00019D                     	ds	1
   553  00019E                     ToMainLow_recvmsg@msgtype:
   554                           	opt stack 0
   555  00019E                     ToMainHigh_recvmsg@msgtype:
   556                           	opt stack 0
   557                           
   558                           ; 2 bytes @ 0x18
   559  00019E                     	ds	1
   560  00019F                     FromMainLow_sendmsg@length:
   561                           	opt stack 0
   562  00019F                     FromMainHigh_sendmsg@length:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x19
   566  00019F                     	ds	1
   567  0001A0                     ToMainLow_recvmsg@data:
   568                           	opt stack 0
   569  0001A0                     ToMainHigh_recvmsg@data:
   570                           	opt stack 0
   571  0001A0                     timer1_lthread@tptr:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x1A
   575  0001A0                     	ds	2
   576  0001A2                     ToMainLow_recvmsg@maxlength:
   577                           	opt stack 0
   578  0001A2                     ToMainHigh_recvmsg@maxlength:
   579                           	opt stack 0
   580  0001A2                     timer1_lthread@msgtype:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x1C
   584  0001A2                     	ds	2
   585  0001A4                     timer1_lthread@length:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x1E
   589  0001A4                     	ds	2
   590  0001A6                     timer1_lthread@msgbuffer:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x20
   594  0001A6                     	ds	2
   595  0001A8                     ??_timer1_lthread:
   596                           
   597                           ; 0 bytes @ 0x22
   598  0001A8                     	ds	1
   599  0001A9                     timer1_lthread@retval:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x23
   603  0001A9                     	ds	1
   604  0001AA                     ??_main:
   605                           
   606                           ; 0 bytes @ 0x24
   607  0001AA                     	ds	2
   608  0001AC                     main@msg:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x26
   612  0001AC                     	ds	2
   613  0001AE                     main@last_reg_recvd:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x28
   617  0001AE                     	ds	1
   618  0001AF                     main@msgbuffer:
   619                           	opt stack 0
   620                           
   621                           ; 11 bytes @ 0x29
   622  0001AF                     	ds	11
   623  0001BA                     main@t0thread_data:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x34
   627  0001BA                     	ds	2
   628  0001BC                     main@t1thread_data:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x36
   632  0001BC                     	ds	2
   633  0001BE                     main@msgtype:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0x38
   637  0001BE                     	ds	1
   638  0001BF                     main@length:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x39
   642  0001BF                     	ds	1
   643  0001C0                     main@uc:
   644                           	opt stack 0
   645                           
   646                           ; 13 bytes @ 0x3A
   647  0001C0                     	ds	13
   648  0001CD                     main@ic:
   649                           	opt stack 0
   650                           
   651                           ; 29 bytes @ 0x47
   652  0001CD                     	ds	29
   653                           tblptru	equ	0xFF8
   654                           tblptrh	equ	0xFF7
   655                           tblptrl	equ	0xFF6
   656                           tablat	equ	0xFF5
   657                           postinc0	equ	0xFEE
   658                           wreg	equ	0xFE8
   659                           postdec1	equ	0xFE5
   660                           fsr1l	equ	0xFE1
   661                           
   662                           	psect	cstackBANK0
   663  000080                     __pcstackBANK0:
   664                           	opt stack 0
   665  000080                     ??_start_i2c_slave_reply:
   666  000080                     ?i2_in_low_int:
   667                           	opt stack 0
   668  000080                     ?i2___awmod:
   669                           	opt stack 0
   670  000080                     WriteTimer0@timer:
   671                           	opt stack 0
   672  000080                     i2memcpy@d1:
   673                           	opt stack 0
   674  000080                     i2___awmod@dividend:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0x0
   678  000080                     	ds	2
   679  000082                     i2memcpy@s1:
   680                           	opt stack 0
   681  000082                     i2___awmod@divisor:
   682                           	opt stack 0
   683                           
   684                           ; 2 bytes @ 0x2
   685  000082                     	ds	2
   686  000084                     i2memcpy@n:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x4
   690  000084                     	ds	2
   691  000086                     i2memcpy@d:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x6
   695  000086                     	ds	2
   696  000088                     i2memcpy@s:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x8
   700  000088                     	ds	2
   701  00008A                     i2send_msg@qptr:
   702                           	opt stack 0
   703  00008A                     i2recv_msg@qptr:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0xA
   707  00008A                     	ds	2
   708  00008C                     i2send_msg@length:
   709                           	opt stack 0
   710  00008C                     i2recv_msg@maxlength:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0xC
   714  00008C                     	ds	1
   715  00008D                     i2send_msg@msgtype:
   716                           	opt stack 0
   717  00008D                     i2recv_msg@msgtype:
   718                           	opt stack 0
   719                           
   720                           ; 2 bytes @ 0xD
   721  00008D                     	ds	1
   722  00008E                     i2send_msg@data:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0xE
   726  00008E                     	ds	1
   727  00008F                     i2recv_msg@data:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0xF
   731  00008F                     	ds	1
   732  000090                     ??i2_send_msg:
   733                           
   734                           ; 0 bytes @ 0x10
   735  000090                     	ds	1
   736  000091                     ??i2_recv_msg:
   737  000091                     i2send_msg@tlength:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x11
   741  000091                     	ds	2
   742  000093                     i2send_msg@slot:
   743                           	opt stack 0
   744  000093                     i2recv_msg@slot:
   745                           	opt stack 0
   746                           
   747                           ; 1 bytes @ 0x13
   748  000093                     	ds	1
   749  000094                     i2send_msg@qmsg:
   750                           	opt stack 0
   751  000094                     i2recv_msg@tlength:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x14
   755  000094                     	ds	2
   756  000096                     ToMainHigh_sendmsg@msgtype:
   757                           	opt stack 0
   758  000096                     i2recv_msg@qmsg:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x16
   762  000096                     	ds	1
   763  000097                     ToMainHigh_sendmsg@data:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x17
   767  000097                     	ds	1
   768  000098                     FromMainLow_recvmsg@msgtype:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x18
   772  000098                     	ds	1
   773  000099                     ToMainHigh_sendmsg@length:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x19
   777  000099                     	ds	1
   778  00009A                     FromMainLow_recvmsg@data:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x1A
   782  00009A                     	ds	2
   783  00009C                     FromMainLow_recvmsg@maxlength:
   784                           	opt stack 0
   785                           
   786                           ; 1 bytes @ 0x1C
   787  00009C                     	ds	1
   788  00009D                     ??_i2c_slave_int_handler:
   789                           
   790                           ; 0 bytes @ 0x1D
   791  00009D                     	ds	2
   792  00009F                     i2c_slave_int_handler@noData:
   793                           	opt stack 0
   794                           
   795                           ; 5 bytes @ 0x1F
   796  00009F                     	ds	5
   797  0000A4                     i2c_slave_int_handler@reply:
   798                           	opt stack 0
   799                           
   800                           ; 5 bytes @ 0x24
   801  0000A4                     	ds	5
   802  0000A9                     i2c_slave_int_handler@gatherAck:
   803                           	opt stack 0
   804                           
   805                           ; 3 bytes @ 0x29
   806  0000A9                     	ds	3
   807  0000AC                     i2c_slave_int_handler@movecomAck:
   808                           	opt stack 0
   809                           
   810                           ; 3 bytes @ 0x2C
   811  0000AC                     	ds	3
   812  0000AF                     i2c_slave_int_handler@sensorData:
   813                           	opt stack 0
   814                           
   815                           ; 5 bytes @ 0x2F
   816  0000AF                     	ds	5
   817  0000B4                     i2c_slave_int_handler@error_buf:
   818                           	opt stack 0
   819                           
   820                           ; 3 bytes @ 0x34
   821  0000B4                     	ds	3
   822  0000B7                     i2c_slave_int_handler@data_written:
   823                           	opt stack 0
   824                           
   825                           ; 1 bytes @ 0x37
   826  0000B7                     	ds	1
   827  0000B8                     i2c_slave_int_handler@overrun_error:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x38
   831  0000B8                     	ds	1
   832  0000B9                     i2c_slave_int_handler@i2c_data:
   833                           	opt stack 0
   834                           
   835                           ; 1 bytes @ 0x39
   836  0000B9                     	ds	1
   837  0000BA                     i2c_slave_int_handler@msg_to_send:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0x3A
   841  0000BA                     	ds	1
   842  0000BB                     i2c_slave_int_handler@msgtype:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x3B
   846  0000BB                     	ds	2
   847  0000BD                     i2c_slave_int_handler@msg_ready:
   848                           	opt stack 0
   849                           
   850                           ; 1 bytes @ 0x3D
   851  0000BD                     	ds	1
   852  0000BE                     i2c_slave_int_handler@length:
   853                           	opt stack 0
   854                           
   855                           ; 1 bytes @ 0x3E
   856  0000BE                     	ds	1
   857  0000BF                     i2c_slave_int_handler@data_read:
   858                           	opt stack 0
   859                           
   860                           ; 1 bytes @ 0x3F
   861  0000BF                     	ds	1
   862  0000C0                     ??_InterruptHandlerHigh:
   863                           
   864                           ; 0 bytes @ 0x40
   865  0000C0                     	ds	14
   866                           tblptru	equ	0xFF8
   867                           tblptrh	equ	0xFF7
   868                           tblptrl	equ	0xFF6
   869                           tablat	equ	0xFF5
   870                           postinc0	equ	0xFEE
   871                           wreg	equ	0xFE8
   872                           postdec1	equ	0xFE5
   873                           fsr1l	equ	0xFE1
   874                           
   875                           	psect	cstackCOMRAM
   876  000001                     __pcstackCOMRAM:
   877                           	opt stack 0
   878  000001                     ??_uart_trans_int_handler:
   879  000001                     ?i1___awmod:
   880                           	opt stack 0
   881  000001                     ReadUSART@data:
   882                           	opt stack 0
   883  000001                     WriteTimer1@timer1:
   884                           	opt stack 0
   885  000001                     i1memcpy@d1:
   886                           	opt stack 0
   887  000001                     i1___awmod@dividend:
   888                           	opt stack 0
   889                           
   890                           ; 2 bytes @ 0x0
   891  000001                     	ds	2
   892  000003                     WriteTimer1@timer:
   893                           	opt stack 0
   894  000003                     i1memcpy@s1:
   895                           	opt stack 0
   896  000003                     i1___awmod@divisor:
   897                           	opt stack 0
   898                           
   899                           ; 2 bytes @ 0x2
   900  000003                     	ds	2
   901  000005                     ??i1___awmod:
   902  000005                     i1memcpy@n:
   903                           	opt stack 0
   904                           
   905                           ; 2 bytes @ 0x4
   906  000005                     	ds	1
   907  000006                     i1___awmod@counter:
   908                           	opt stack 0
   909                           
   910                           ; 1 bytes @ 0x5
   911  000006                     	ds	1
   912  000007                     i1___awmod@sign:
   913                           	opt stack 0
   914  000007                     i1memcpy@d:
   915                           	opt stack 0
   916                           
   917                           ; 2 bytes @ 0x6
   918  000007                     	ds	2
   919  000009                     i1memcpy@s:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x8
   923  000009                     	ds	2
   924  00000B                     i1send_msg@qptr:
   925                           	opt stack 0
   926                           
   927                           ; 2 bytes @ 0xA
   928  00000B                     	ds	2
   929  00000D                     i1send_msg@length:
   930                           	opt stack 0
   931                           
   932                           ; 1 bytes @ 0xC
   933  00000D                     	ds	1
   934  00000E                     i1send_msg@msgtype:
   935                           	opt stack 0
   936                           
   937                           ; 1 bytes @ 0xD
   938  00000E                     	ds	1
   939  00000F                     i1send_msg@data:
   940                           	opt stack 0
   941                           
   942                           ; 2 bytes @ 0xE
   943  00000F                     	ds	2
   944  000011                     ??i1_send_msg:
   945                           
   946                           ; 0 bytes @ 0x10
   947  000011                     	ds	1
   948  000012                     i1send_msg@tlength:
   949                           	opt stack 0
   950                           
   951                           ; 2 bytes @ 0x11
   952  000012                     	ds	2
   953  000014                     i1send_msg@slot:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x13
   957  000014                     	ds	1
   958  000015                     i1send_msg@qmsg:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0x14
   962  000015                     	ds	2
   963  000017                     ToMainLow_sendmsg@msgtype:
   964                           	opt stack 0
   965                           
   966                           ; 1 bytes @ 0x16
   967  000017                     	ds	1
   968  000018                     ToMainLow_sendmsg@data:
   969                           	opt stack 0
   970                           
   971                           ; 2 bytes @ 0x17
   972  000018                     	ds	2
   973  00001A                     ToMainLow_sendmsg@length:
   974                           	opt stack 0
   975                           
   976                           ; 1 bytes @ 0x19
   977  00001A                     	ds	1
   978  00001B                     ??_uart_recv_int_handler:
   979                           
   980                           ; 0 bytes @ 0x1A
   981  00001B                     	ds	1
   982  00001C                     ??_InterruptHandlerLow:
   983                           
   984                           ; 0 bytes @ 0x1B
   985  00001C                     	ds	17
   986  00002D                     ??i2___awmod:
   987  00002D                     ?i2_in_high_int:
   988                           	opt stack 0
   989  00002D                     handle_start@data_read:
   990                           	opt stack 0
   991  00002D                     start_i2c_slave_reply@msg:
   992                           	opt stack 0
   993  00002D                     WriteTimer0@timer0:
   994                           	opt stack 0
   995  00002D                     i2check_msg@qptr:
   996                           	opt stack 0
   997                           
   998                           ; 2 bytes @ 0x2C
   999  00002D                     	ds	1
  1000  00002E                     i2___awmod@counter:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0x2D
  1004  00002E                     	ds	1
  1005  00002F                     ??i2_check_msg:
  1006  00002F                     start_i2c_slave_reply@length:
  1007                           	opt stack 0
  1008  00002F                     i2___awmod@sign:
  1009                           	opt stack 0
  1010                           
  1011                           ; 1 bytes @ 0x2E
  1012  00002F                     	ds	1
  1013  000030                     tblptru	equ	0xFF8
  1014                           tblptrh	equ	0xFF7
  1015                           tblptrl	equ	0xFF6
  1016                           tablat	equ	0xFF5
  1017                           postinc0	equ	0xFEE
  1018                           wreg	equ	0xFE8
  1019                           postdec1	equ	0xFE5
  1020                           fsr1l	equ	0xFE1
  1021                           
  1022                           ; 0 bytes @ 0x2F
  1023 ;;
  1024 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1025 ;;
  1026 ;; *************** function _main *****************
  1027 ;; Defined at:
  1028 ;;		line 186 in file "../src/main.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  ic             29   71[BANK1 ] struct __i2c_comm
  1033 ;;  uc             13   58[BANK1 ] struct __uart_comm
  1034 ;;  msgbuffer      11   41[BANK1 ] unsigned char [11]
  1035 ;;  t1thread_dat    2   54[BANK1 ] struct __timer1_thread_s
  1036 ;;  t0thread_dat    2   52[BANK1 ] struct __timer0_thread_s
  1037 ;;  msg             2   38[BANK1 ] unsigned char [2]
  1038 ;;  uthread_data    2    0        struct __uart_thread_str
  1039 ;;  length          1   57[BANK1 ] char 
  1040 ;;  msgtype         1   56[BANK1 ] unsigned char 
  1041 ;;  last_reg_rec    1   40[BANK1 ] unsigned char 
  1042 ;;  i               1    0        unsigned char 
  1043 ;;  c               1    0        unsigned char 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;		None               void
  1046 ;; Registers used:
  1047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1053 ;;      Params:         0       0       0       0       0
  1054 ;;      Locals:         0       0      62       0       0
  1055 ;;      Temps:          0       0       2       0       0
  1056 ;;      Totals:         0       0      64       0       0
  1057 ;;Total ram usage:       64 bytes
  1058 ;; Hardware stack levels required when called:   15
  1059 ;; This function calls:
  1060 ;;		_FromMainLow_sendmsg
  1061 ;;		_OpenADC
  1062 ;;		_OpenTimer0
  1063 ;;		_OpenTimer1
  1064 ;;		_OpenUSART
  1065 ;;		_SetChanADC
  1066 ;;		_ToMainHigh_recvmsg
  1067 ;;		_ToMainLow_recvmsg
  1068 ;;		_block_on_To_msgqueues
  1069 ;;		_enable_interrupts
  1070 ;;		_i2c_configure_slave
  1071 ;;		_init_i2c
  1072 ;;		_init_queues
  1073 ;;		_init_timer1_lthread
  1074 ;;		_init_uart_recv
  1075 ;;		_timer0_lthread
  1076 ;;		_timer1_lthread
  1077 ;;		_uart_trans
  1078 ;; This function is called by:
  1079 ;;		Startup code after reset
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           	psect	text0
  1084  00076C                     __ptext0:
  1085                           	opt stack 0
  1086  00076C                     _main:
  1087                           	opt stack 16
  1088                           
  1089                           ;main.c: 187: char c;
  1090                           ;main.c: 188: signed char length;
  1091                           ;main.c: 189: unsigned char msgtype;
  1092                           ;main.c: 190: unsigned char last_reg_recvd;
  1093                           ;main.c: 191: uart_comm uc;
  1094                           ;main.c: 192: i2c_comm ic;
  1095                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
  1096                           ;main.c: 194: unsigned char i;
  1097                           ;main.c: 195: uart_thread_struct uthread_data;
  1098                           ;main.c: 196: timer1_thread_struct t1thread_data;
  1099                           ;main.c: 197: timer0_thread_struct t0thread_data;
  1100                           ;main.c: 205: OSCCON = 0x82;
  1101                           
  1102                           ;incstack = 0
  1103  00076C  0E82               	movlw	130
  1104  00076E  6ED3               	movwf	4051,c	;volatile
  1105                           
  1106                           ;main.c: 206: OSCTUNEbits.PLLEN = 0;
  1107  000770  9C9B               	bcf	3995,6,c	;volatile
  1108                           
  1109                           ;main.c: 224: init_uart_recv(&uc);
  1110  000772  0101               	movlb	1	; () banked
  1111  000774  0E01               	movlw	high main@uc
  1112  000776  0101               	movlb	1	; () banked
  1113  000778  0101               	movlb	1	; () banked
  1114  00077A  6F87               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1115  00077C  0101               	movlb	1	; () banked
  1116  00077E  0EC0               	movlw	low main@uc
  1117  000780  0101               	movlb	1	; () banked
  1118  000782  0101               	movlb	1	; () banked
  1119  000784  6F86               	movwf	init_uart_recv@uc& (0+255),b
  1120  000786  ECA6  F00F         	call	_init_uart_recv	;wreg free
  1121                           
  1122                           ;main.c: 227: init_i2c(&ic);
  1123  00078A  0101               	movlb	1	; () banked
  1124  00078C  0E01               	movlw	high main@ic
  1125  00078E  0101               	movlb	1	; () banked
  1126  000790  0101               	movlb	1	; () banked
  1127  000792  6F87               	movwf	(init_i2c@ic+1)& (0+255),b
  1128  000794  0101               	movlb	1	; () banked
  1129  000796  0ECD               	movlw	low main@ic
  1130  000798  0101               	movlb	1	; () banked
  1131  00079A  0101               	movlb	1	; () banked
  1132  00079C  6F86               	movwf	init_i2c@ic& (0+255),b
  1133  00079E  ECA0  F00D         	call	_init_i2c	;wreg free
  1134                           
  1135                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1136  0007A2  0101               	movlb	1	; () banked
  1137  0007A4  0E01               	movlw	high main@t1thread_data
  1138  0007A6  0101               	movlb	1	; () banked
  1139  0007A8  0101               	movlb	1	; () banked
  1140  0007AA  6F87               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1141  0007AC  0101               	movlb	1	; () banked
  1142  0007AE  0EBC               	movlw	low main@t1thread_data
  1143  0007B0  0101               	movlb	1	; () banked
  1144  0007B2  0101               	movlb	1	; () banked
  1145  0007B4  6F86               	movwf	init_timer1_lthread@tptr& (0+255),b
  1146  0007B6  ECD8  F00F         	call	_init_timer1_lthread	;wreg free
  1147                           
  1148                           ;main.c: 233: init_queues();
  1149  0007BA  ECAD  F00C         	call	_init_queues	;wreg free
  1150                           
  1151                           ;main.c: 237: TRISB = 0x0;
  1152  0007BE  0E00               	movlw	0
  1153  0007C0  6E93               	movwf	3987,c	;volatile
  1154                           
  1155                           ;main.c: 238: LATB = 0x0;
  1156  0007C2  0E00               	movlw	0
  1157  0007C4  6E8A               	movwf	3978,c	;volatile
  1158                           
  1159                           ;main.c: 240: PORTA = 0x0;
  1160  0007C6  0E00               	movlw	0
  1161  0007C8  6E80               	movwf	3968,c	;volatile
  1162                           
  1163                           ;main.c: 241: LATA = 0x0;
  1164  0007CA  0E00               	movlw	0
  1165  0007CC  6E89               	movwf	3977,c	;volatile
  1166                           
  1167                           ;main.c: 242: TRISA = 0x0F;
  1168  0007CE  0E0F               	movlw	15
  1169  0007D0  6E92               	movwf	3986,c	;volatile
  1170                           
  1171                           ;main.c: 255: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110101);
  1172  0007D2  0ED5               	movlw	213
  1173  0007D4  EC37  F00F         	call	_OpenTimer0
  1174                           
  1175                           ;main.c: 264: OpenTimer1(0b11111111 & 0b10111111 & 0b11001111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1176  0007D8  0E85               	movlw	133
  1177  0007DA  ECAF  F00E         	call	_OpenTimer1
  1178                           
  1179                           ;main.c: 272: IPR1bits.ADIP = 0;
  1180  0007DE  9C9F               	bcf	3999,6,c	;volatile
  1181                           
  1182                           ;main.c: 273: PIE1bits.ADIE = 1;
  1183  0007E0  8C9D               	bsf	3997,6,c	;volatile
  1184                           
  1185                           ;main.c: 275: IPR1bits.TMR1IP = 0;
  1186  0007E2  909F               	bcf	3999,0,c	;volatile
  1187                           
  1188                           ;main.c: 277: IPR1bits.RCIP = 0;
  1189  0007E4  9A9F               	bcf	3999,5,c	;volatile
  1190                           
  1191                           ;main.c: 279: IPR1bits.TXIP = 0;
  1192  0007E6  989F               	bcf	3999,4,c	;volatile
  1193                           
  1194                           ;main.c: 281: IPR1bits.SSPIP = 1;
  1195  0007E8  869F               	bsf	3999,3,c	;volatile
  1196                           
  1197                           ;main.c: 301: i2c_configure_slave(0x9E);
  1198  0007EA  0E9E               	movlw	158
  1199  0007EC  EC4C  F00F         	call	_i2c_configure_slave
  1200                           
  1201                           ;main.c: 320: PIE1bits.SSPIE = 1;
  1202  0007F0  869D               	bsf	3997,3,c	;volatile
  1203                           
  1204                           ;main.c: 331: OpenUSART(0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1205                           ;main.c: 332: 0b11111111 & 0b11111111, 38);
  1206  0007F2  0E00               	movlw	0
  1207  0007F4  0101               	movlb	1	; () banked
  1208  0007F6  0101               	movlb	1	; () banked
  1209  0007F8  6F87               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1210  0007FA  0E26               	movlw	38
  1211  0007FC  0101               	movlb	1	; () banked
  1212  0007FE  6F86               	movwf	OpenUSART@spbrg& (0+255),b
  1213  000800  0EFC               	movlw	252
  1214  000802  ECAE  F00A         	call	_OpenUSART
  1215                           
  1216                           ;main.c: 333: RCSTAbits.SPEN = 1;
  1217  000806  8EAB               	bsf	4011,7,c	;volatile
  1218                           
  1219                           ;main.c: 334: TRISC = 0xFF;
  1220  000808  6894               	setf	3988,c	;volatile
  1221                           
  1222                           ;main.c: 341: enable_interrupts();
  1223  00080A  EC18  F010         	call	_enable_interrupts	;wreg free
  1224                           
  1225                           ;main.c: 355: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1226                           ;main.c: 356: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1227                           ;main.c: 357: 0b1011);
  1228  00080E  0101               	movlb	1	; () banked
  1229  000810  6FAA               	movwf	??_main& (0+255),b
  1230  000812  0E0C               	movlw	12
  1231  000814  0101               	movlb	1	; () banked
  1232  000816  0101               	movlb	1	; () banked
  1233  000818  6F86               	movwf	OpenADC@config2& (0+255),b
  1234  00081A  0101               	movlb	1	; () banked
  1235  00081C  51AA               	movf	??_main& (0+255),w,b
  1236  00081E  0101               	movlb	1	; () banked
  1237  000820  6FAB               	movwf	(??_main+1)& (0+255),b
  1238  000822  0E0B               	movlw	11
  1239  000824  0101               	movlb	1	; () banked
  1240  000826  0101               	movlb	1	; () banked
  1241  000828  6F87               	movwf	OpenADC@portconfig& (0+255),b
  1242  00082A  0101               	movlb	1	; () banked
  1243  00082C  51AB               	movf	(??_main+1)& (0+255),w,b
  1244  00082E  0E53               	movlw	83
  1245  000830  EC3C  F00B         	call	_OpenADC
  1246                           
  1247                           ;main.c: 358: SetChanADC(0b10001111);
  1248  000834  0E8F               	movlw	143
  1249  000836  EC96  F00F         	call	_SetChanADC
  1250                           
  1251                           ;main.c: 369: unsigned char msg[2] = {0x01, 0x02};
  1252  00083A  C1EA  F1AC         	movff	main@F5212,main@msg
  1253  00083E  C1EB  F1AD         	movff	main@F5212+1,main@msg+1
  1254  000842                     l3830:
  1255                           
  1256                           ;main.c: 381: block_on_To_msgqueues();
  1257  000842  ECBF  F00B         	call	_block_on_To_msgqueues	;wreg free
  1258                           
  1259                           ;main.c: 388: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1260  000846  0101               	movlb	1	; () banked
  1261  000848  0E01               	movlw	high main@msgtype
  1262  00084A  0101               	movlb	1	; () banked
  1263  00084C  0101               	movlb	1	; () banked
  1264  00084E  6F9F               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1265  000850  0101               	movlb	1	; () banked
  1266  000852  0EBE               	movlw	low main@msgtype
  1267  000854  0101               	movlb	1	; () banked
  1268  000856  0101               	movlb	1	; () banked
  1269  000858  6F9E               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1270  00085A  0101               	movlb	1	; () banked
  1271  00085C  0E01               	movlw	high main@msgbuffer
  1272  00085E  0101               	movlb	1	; () banked
  1273  000860  0101               	movlb	1	; () banked
  1274  000862  6FA1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1275  000864  0101               	movlb	1	; () banked
  1276  000866  0EAF               	movlw	low main@msgbuffer
  1277  000868  0101               	movlb	1	; () banked
  1278  00086A  0101               	movlb	1	; () banked
  1279  00086C  6FA0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1280  00086E  0E0A               	movlw	10
  1281  000870  EC2D  F00E         	call	_ToMainHigh_recvmsg
  1282  000874  0101               	movlb	1	; () banked
  1283  000876  0101               	movlb	1	; () banked
  1284  000878  6FBF               	movwf	main@length& (0+255),b
  1285                           
  1286                           ; BSR set to: 1
  1287                           ;main.c: 389: if (length < 0) {
  1288  00087A  0101               	movlb	1	; () banked
  1289  00087C  0101               	movlb	1	; () banked
  1290  00087E  BFBF               	btfsc	main@length& (0+255),7,b
  1291  000880  D060               	goto	l3848
  1292  000882  D04C               	goto	l3846
  1293  000884                     l3838:
  1294                           
  1295                           ; BSR set to: 1
  1296                           ;main.c: 397: {
  1297                           ;main.c: 398: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1298  000884  0101               	movlb	1	; () banked
  1299  000886  0E01               	movlw	high main@t0thread_data
  1300  000888  0101               	movlb	1	; () banked
  1301  00088A  0101               	movlb	1	; () banked
  1302  00088C  6F87               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1303  00088E  0101               	movlb	1	; () banked
  1304  000890  0EBA               	movlw	low main@t0thread_data
  1305  000892  0101               	movlb	1	; () banked
  1306  000894  0101               	movlb	1	; () banked
  1307  000896  6F86               	movwf	timer0_lthread@tptr& (0+255),b
  1308  000898  0101               	movlb	1	; () banked
  1309  00089A  0101               	movlb	1	; () banked
  1310  00089C  C1BE  F188         	movff	main@msgtype,timer0_lthread@msgtype
  1311  0008A0  0101               	movlb	1	; () banked
  1312  0008A2  0101               	movlb	1	; () banked
  1313  0008A4  6B89               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1314  0008A6  0101               	movlb	1	; () banked
  1315  0008A8  0101               	movlb	1	; () banked
  1316  0008AA  51BF               	movf	main@length& (0+255),w,b
  1317  0008AC  0101               	movlb	1	; () banked
  1318  0008AE  0101               	movlb	1	; () banked
  1319  0008B0  6F8A               	movwf	timer0_lthread@length& (0+255),b
  1320  0008B2  0101               	movlb	1	; () banked
  1321  0008B4  6B8B               	clrf	(timer0_lthread@length+1)& (0+255),b
  1322  0008B6  0101               	movlb	1	; () banked
  1323  0008B8  BF8A               	btfsc	timer0_lthread@length& (0+255),7,b
  1324  0008BA  078B               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1325  0008BC  0101               	movlb	1	; () banked
  1326  0008BE  0E01               	movlw	high main@msgbuffer
  1327  0008C0  0101               	movlb	1	; () banked
  1328  0008C2  0101               	movlb	1	; () banked
  1329  0008C4  6F8D               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1330  0008C6  0101               	movlb	1	; () banked
  1331  0008C8  0EAF               	movlw	low main@msgbuffer
  1332  0008CA  0101               	movlb	1	; () banked
  1333  0008CC  0101               	movlb	1	; () banked
  1334  0008CE  6F8C               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1335  0008D0  ECCF  F00F         	call	_timer0_lthread	;wreg free
  1336                           
  1337                           ;main.c: 399: break;
  1338  0008D4  D036               	goto	l3848
  1339  0008D6                     l132:
  1340                           
  1341                           ;main.c: 402: case 41:
  1342                           ;main.c: 403: {
  1343                           ;main.c: 406: last_reg_recvd = msgbuffer[0];
  1344  0008D6  C1AF  F1AE         	movff	main@msgbuffer,main@last_reg_recvd
  1345                           
  1346                           ;main.c: 407: break;
  1347  0008DA  D033               	goto	l3848
  1348  0008DC                     l3840:
  1349                           
  1350                           ;main.c: 410: {
  1351                           ;main.c: 413: uart_trans(length, msgbuffer);
  1352  0008DC  0101               	movlb	1	; () banked
  1353  0008DE  0E01               	movlw	high main@msgbuffer
  1354  0008E0  0101               	movlb	1	; () banked
  1355  0008E2  0101               	movlb	1	; () banked
  1356  0008E4  6F87               	movwf	(uart_trans@data+1)& (0+255),b
  1357  0008E6  0101               	movlb	1	; () banked
  1358  0008E8  0EAF               	movlw	low main@msgbuffer
  1359  0008EA  0101               	movlb	1	; () banked
  1360  0008EC  0101               	movlb	1	; () banked
  1361  0008EE  6F86               	movwf	uart_trans@data& (0+255),b
  1362  0008F0  0101               	movlb	1	; () banked
  1363  0008F2  0101               	movlb	1	; () banked
  1364  0008F4  51BF               	movf	main@length& (0+255),w,b
  1365  0008F6  ECBA  F009         	call	_uart_trans
  1366                           
  1367                           ;main.c: 416: break;
  1368  0008FA  D023               	goto	l3848
  1369  0008FC                     l3842:
  1370                           
  1371                           ;main.c: 426: {
  1372                           ;main.c: 427: uart_trans(length, msgbuffer);
  1373  0008FC  0101               	movlb	1	; () banked
  1374  0008FE  0E01               	movlw	high main@msgbuffer
  1375  000900  0101               	movlb	1	; () banked
  1376  000902  0101               	movlb	1	; () banked
  1377  000904  6F87               	movwf	(uart_trans@data+1)& (0+255),b
  1378  000906  0101               	movlb	1	; () banked
  1379  000908  0EAF               	movlw	low main@msgbuffer
  1380  00090A  0101               	movlb	1	; () banked
  1381  00090C  0101               	movlb	1	; () banked
  1382  00090E  6F86               	movwf	uart_trans@data& (0+255),b
  1383  000910  0101               	movlb	1	; () banked
  1384  000912  0101               	movlb	1	; () banked
  1385  000914  51BF               	movf	main@length& (0+255),w,b
  1386  000916  ECBA  F009         	call	_uart_trans
  1387                           
  1388                           ;main.c: 428: break;
  1389  00091A  D013               	goto	l3848
  1390  00091C                     l3846:
  1391  00091C  0101               	movlb	1	; () banked
  1392  00091E  0101               	movlb	1	; () banked
  1393  000920  51BE               	movf	main@msgtype& (0+255),w,b
  1394                           
  1395                           ; Switch size 1, requested type "space"
  1396                           ; Number of cases is 6, Range of values is 10 to 46
  1397                           ; switch strategies available:
  1398                           ; Name         Instructions Cycles
  1399                           ; simple_byte           19    10 (average)
  1400                           ;	Chosen strategy is simple_byte
  1401  000922  0A0A               	xorlw	10	; case 10
  1402  000924  B4D8               	btfsc	status,2,c
  1403  000926  D7AE               	goto	l3838
  1404  000928  0A2A               	xorlw	42	; case 32
  1405  00092A  B4D8               	btfsc	status,2,c
  1406  00092C  D7E7               	goto	l3842
  1407  00092E  0A08               	xorlw	8	; case 40
  1408  000930  B4D8               	btfsc	status,2,c
  1409  000932  D7D1               	goto	l132
  1410  000934  0A01               	xorlw	1	; case 41
  1411  000936  B4D8               	btfsc	status,2,c
  1412  000938  D7CE               	goto	l132
  1413  00093A  0A04               	xorlw	4	; case 45
  1414  00093C  B4D8               	btfsc	status,2,c
  1415  00093E  D7CE               	goto	l3840
  1416  000940  0A03               	xorlw	3	; case 46
  1417  000942                     l3848:
  1418                           
  1419                           ;main.c: 436: }
  1420                           ;main.c: 439: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1421  000942  0101               	movlb	1	; () banked
  1422  000944  0E01               	movlw	high main@msgtype
  1423  000946  0101               	movlb	1	; () banked
  1424  000948  0101               	movlb	1	; () banked
  1425  00094A  6F9F               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1426  00094C  0101               	movlb	1	; () banked
  1427  00094E  0EBE               	movlw	low main@msgtype
  1428  000950  0101               	movlb	1	; () banked
  1429  000952  0101               	movlb	1	; () banked
  1430  000954  6F9E               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1431  000956  0101               	movlb	1	; () banked
  1432  000958  0E01               	movlw	high main@msgbuffer
  1433  00095A  0101               	movlb	1	; () banked
  1434  00095C  0101               	movlb	1	; () banked
  1435  00095E  6FA1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1436  000960  0101               	movlb	1	; () banked
  1437  000962  0EAF               	movlw	low main@msgbuffer
  1438  000964  0101               	movlb	1	; () banked
  1439  000966  0101               	movlb	1	; () banked
  1440  000968  6FA0               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1441  00096A  0E0A               	movlw	10
  1442  00096C  EC0C  F00E         	call	_ToMainLow_recvmsg
  1443  000970  0101               	movlb	1	; () banked
  1444  000972  0101               	movlb	1	; () banked
  1445  000974  6FBF               	movwf	main@length& (0+255),b
  1446                           
  1447                           ; BSR set to: 1
  1448                           ;main.c: 440: if (length < 0) {
  1449  000976  0101               	movlb	1	; () banked
  1450  000978  0101               	movlb	1	; () banked
  1451  00097A  BFBF               	btfsc	main@length& (0+255),7,b
  1452  00097C  D762               	goto	l3830
  1453  00097E  D043               	goto	l3862
  1454  000980                     l3854:
  1455                           
  1456                           ; BSR set to: 1
  1457                           ;main.c: 448: {
  1458                           ;main.c: 449: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1459  000980  0101               	movlb	1	; () banked
  1460  000982  0E01               	movlw	high main@t1thread_data
  1461  000984  0101               	movlb	1	; () banked
  1462  000986  0101               	movlb	1	; () banked
  1463  000988  6FA1               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1464  00098A  0101               	movlb	1	; () banked
  1465  00098C  0EBC               	movlw	low main@t1thread_data
  1466  00098E  0101               	movlb	1	; () banked
  1467  000990  0101               	movlb	1	; () banked
  1468  000992  6FA0               	movwf	timer1_lthread@tptr& (0+255),b
  1469  000994  0101               	movlb	1	; () banked
  1470  000996  0101               	movlb	1	; () banked
  1471  000998  C1BE  F1A2         	movff	main@msgtype,timer1_lthread@msgtype
  1472  00099C  0101               	movlb	1	; () banked
  1473  00099E  0101               	movlb	1	; () banked
  1474  0009A0  6BA3               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1475  0009A2  0101               	movlb	1	; () banked
  1476  0009A4  0101               	movlb	1	; () banked
  1477  0009A6  51BF               	movf	main@length& (0+255),w,b
  1478  0009A8  0101               	movlb	1	; () banked
  1479  0009AA  0101               	movlb	1	; () banked
  1480  0009AC  6FA4               	movwf	timer1_lthread@length& (0+255),b
  1481  0009AE  0101               	movlb	1	; () banked
  1482  0009B0  6BA5               	clrf	(timer1_lthread@length+1)& (0+255),b
  1483  0009B2  0101               	movlb	1	; () banked
  1484  0009B4  BFA4               	btfsc	timer1_lthread@length& (0+255),7,b
  1485  0009B6  07A5               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1486  0009B8  0101               	movlb	1	; () banked
  1487  0009BA  0E01               	movlw	high main@msgbuffer
  1488  0009BC  0101               	movlb	1	; () banked
  1489  0009BE  0101               	movlb	1	; () banked
  1490  0009C0  6FA7               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1491  0009C2  0101               	movlb	1	; () banked
  1492  0009C4  0EAF               	movlw	low main@msgbuffer
  1493  0009C6  0101               	movlb	1	; () banked
  1494  0009C8  0101               	movlb	1	; () banked
  1495  0009CA  6FA6               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1496  0009CC  EC74  F00C         	call	_timer1_lthread	;wreg free
  1497                           
  1498                           ;main.c: 450: break;
  1499  0009D0  D738               	goto	l3830
  1500  0009D2                     l144:
  1501                           
  1502                           ;main.c: 456: if(1){
  1503  0009D2  848A               	bsf	3978,2,c	;volatile
  1504                           
  1505                           ;main.c: 458: FromMainLow_sendmsg(length, 31, msgbuffer);
  1506  0009D4  0101               	movlb	1	; () banked
  1507  0009D6  6FAA               	movwf	??_main& (0+255),b
  1508  0009D8  0E1F               	movlw	31
  1509  0009DA  0101               	movlb	1	; () banked
  1510  0009DC  0101               	movlb	1	; () banked
  1511  0009DE  6F9C               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  1512  0009E0  0101               	movlb	1	; () banked
  1513  0009E2  51AA               	movf	??_main& (0+255),w,b
  1514  0009E4  0101               	movlb	1	; () banked
  1515  0009E6  0E01               	movlw	high main@msgbuffer
  1516  0009E8  0101               	movlb	1	; () banked
  1517  0009EA  0101               	movlb	1	; () banked
  1518  0009EC  6F9E               	movwf	(FromMainLow_sendmsg@data+1)& (0+255),b
  1519  0009EE  0101               	movlb	1	; () banked
  1520  0009F0  0EAF               	movlw	low main@msgbuffer
  1521  0009F2  0101               	movlb	1	; () banked
  1522  0009F4  0101               	movlb	1	; () banked
  1523  0009F6  6F9D               	movwf	FromMainLow_sendmsg@data& (0+255),b
  1524  0009F8  0101               	movlb	1	; () banked
  1525  0009FA  0101               	movlb	1	; () banked
  1526  0009FC  51BF               	movf	main@length& (0+255),w,b
  1527  0009FE  EC01  F00F         	call	_FromMainLow_sendmsg
  1528                           
  1529                           ;main.c: 459: }
  1530                           ;main.c: 461: LATBbits.LATB2 = 0;
  1531  000A02  948A               	bcf	3978,2,c	;volatile
  1532                           
  1533                           ;main.c: 463: break;
  1534  000A04  D71E               	goto	l3830
  1535  000A06                     l3862:
  1536  000A06  0101               	movlb	1	; () banked
  1537  000A08  0101               	movlb	1	; () banked
  1538  000A0A  51BE               	movf	main@msgtype& (0+255),w,b
  1539                           
  1540                           ; Switch size 1, requested type "space"
  1541                           ; Number of cases is 3, Range of values is 11 to 31
  1542                           ; switch strategies available:
  1543                           ; Name         Instructions Cycles
  1544                           ; simple_byte           10     6 (average)
  1545                           ;	Chosen strategy is simple_byte
  1546  000A0C  0A0B               	xorlw	11	; case 11
  1547  000A0E  B4D8               	btfsc	status,2,c
  1548  000A10  D7B7               	goto	l3854
  1549  000A12  0A15               	xorlw	21	; case 30
  1550  000A14  B4D8               	btfsc	status,2,c
  1551  000A16  D7DD               	goto	l144
  1552  000A18  0A01               	xorlw	1	; case 31
  1553  000A1A  B4D8               	btfsc	status,2,c
  1554  000A1C  D7DA               	goto	l144
  1555  000A1E  D711               	goto	l3830
  1556  000A20                     __end_of_main:
  1557                           	opt stack 0
  1558                           tblptru	equ	0xFF8
  1559                           tblptrh	equ	0xFF7
  1560                           tblptrl	equ	0xFF6
  1561                           tablat	equ	0xFF5
  1562                           postinc0	equ	0xFEE
  1563                           wreg	equ	0xFE8
  1564                           postdec1	equ	0xFE5
  1565                           fsr1l	equ	0xFE1
  1566                           status	equ	0xFD8
  1567                           
  1568 ;; *************** function _uart_trans *****************
  1569 ;; Defined at:
  1570 ;;		line 60 in file "../src/my_uart.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  length          1    wreg     unsigned char 
  1573 ;;  data            2    0[BANK1 ] PTR unsigned char 
  1574 ;;		 -> main@msgbuffer(11), 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  length          1    4[BANK1 ] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;		None               void
  1579 ;; Registers used:
  1580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1586 ;;      Params:         0       0       2       0       0
  1587 ;;      Locals:         0       0       1       0       0
  1588 ;;      Temps:          0       0       2       0       0
  1589 ;;      Totals:         0       0       5       0       0
  1590 ;;Total ram usage:        5 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:   11
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text1
  1601  001374                     __ptext1:
  1602                           	opt stack 0
  1603  001374                     _uart_trans:
  1604                           	opt stack 19
  1605                           
  1606                           ; BSR set to: 1
  1607                           ;incstack = 0
  1608                           ;uart_trans@length stored from wreg
  1609  001374  CFE8 F18A          	movff	wreg,uart_trans@length
  1610                           
  1611                           ;my_uart.c: 62: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  1612  001378  EE20 F00B          	lfsr	2,11
  1613  00137C  5052               	movf	_uc_ptr,w,c
  1614  00137E  26D9               	addwf	fsr2l,f,c
  1615  001380  5053               	movf	_uc_ptr+1,w,c
  1616  001382  22DA               	addwfc	fsr2h,f,c
  1617  001384  0E00               	movlw	0
  1618  001386  6EDF               	movwf	indf2,c
  1619  001388  D035               	goto	l4034
  1620  00138A                     l4030:
  1621                           
  1622                           ;my_uart.c: 64: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  1623  00138A  EE20 F00B          	lfsr	2,11
  1624  00138E  5052               	movf	_uc_ptr,w,c
  1625  001390  26D9               	addwf	fsr2l,f,c
  1626  001392  5053               	movf	_uc_ptr+1,w,c
  1627  001394  22DA               	addwfc	fsr2h,f,c
  1628  001396  50DF               	movf	indf2,w,c
  1629  001398  0101               	movlb	1	; () banked
  1630  00139A  6F88               	movwf	??_uart_trans& (0+255),b
  1631  00139C  0101               	movlb	1	; () banked
  1632  00139E  5188               	movf	??_uart_trans& (0+255),w,b
  1633  0013A0  0D01               	mullw	1
  1634  0013A2  50F3               	movf	prodl,w,c
  1635  0013A4  0101               	movlb	1	; () banked
  1636  0013A6  0101               	movlb	1	; () banked
  1637  0013A8  2586               	addwf	uart_trans@data& (0+255),w,b
  1638  0013AA  6ED9               	movwf	fsr2l,c
  1639  0013AC  50F4               	movf	prodh,w,c
  1640  0013AE  0101               	movlb	1	; () banked
  1641  0013B0  0101               	movlb	1	; () banked
  1642  0013B2  2187               	addwfc	(uart_trans@data+1)& (0+255),w,b
  1643  0013B4  6EDA               	movwf	fsr2h,c
  1644  0013B6  EE10 F00B          	lfsr	1,11
  1645  0013BA  5052               	movf	_uc_ptr,w,c
  1646  0013BC  26E1               	addwf	fsr1l,f,c
  1647  0013BE  5053               	movf	_uc_ptr+1,w,c
  1648  0013C0  22E2               	addwfc	fsr1h,f,c
  1649  0013C2  50E7               	movf	indf1,w,c
  1650  0013C4  0101               	movlb	1	; () banked
  1651  0013C6  6F89               	movwf	(??_uart_trans+1)& (0+255),b
  1652  0013C8  0101               	movlb	1	; () banked
  1653  0013CA  5189               	movf	(??_uart_trans+1)& (0+255),w,b
  1654  0013CC  0D01               	mullw	1
  1655  0013CE  0E06               	movlw	6
  1656  0013D0  26F3               	addwf	prodl,f,c
  1657  0013D2  0E00               	movlw	0
  1658  0013D4  22F4               	addwfc	prodh,f,c
  1659  0013D6  50F3               	movf	prodl,w,c
  1660  0013D8  2452               	addwf	_uc_ptr,w,c
  1661  0013DA  6EE1               	movwf	fsr1l,c
  1662  0013DC  50F4               	movf	prodh,w,c
  1663  0013DE  2053               	addwfc	_uc_ptr+1,w,c
  1664  0013E0  6EE2               	movwf	fsr1h,c
  1665  0013E2  CFDF FFE7          	movff	indf2,indf1
  1666                           
  1667                           ; BSR set to: 1
  1668  0013E6  EE20 F00B          	lfsr	2,11
  1669  0013EA  5052               	movf	_uc_ptr,w,c
  1670  0013EC  26D9               	addwf	fsr2l,f,c
  1671  0013EE  5053               	movf	_uc_ptr+1,w,c
  1672  0013F0  22DA               	addwfc	fsr2h,f,c
  1673  0013F2  2ADF               	incf	indf2,f,c
  1674  0013F4                     l4034:
  1675  0013F4  EE20 F00B          	lfsr	2,11
  1676  0013F8  5052               	movf	_uc_ptr,w,c
  1677  0013FA  26D9               	addwf	fsr2l,f,c
  1678  0013FC  5053               	movf	_uc_ptr+1,w,c
  1679  0013FE  22DA               	addwfc	fsr2h,f,c
  1680  001400  50DF               	movf	indf2,w,c
  1681  001402  0101               	movlb	1	; () banked
  1682  001404  6F88               	movwf	??_uart_trans& (0+255),b
  1683  001406  0101               	movlb	1	; () banked
  1684  001408  0101               	movlb	1	; () banked
  1685  00140A  518A               	movf	uart_trans@length& (0+255),w,b
  1686  00140C  0101               	movlb	1	; () banked
  1687  00140E  5D88               	subwf	??_uart_trans& (0+255),w,b
  1688  001410  A0D8               	btfss	status,0,c
  1689  001412  D7BB               	goto	l4030
  1690                           
  1691                           ; BSR set to: 1
  1692                           ;my_uart.c: 66: }
  1693                           ;my_uart.c: 67: uc_ptr->txBufind = 0;
  1694                           
  1695                           ; BSR set to: 1
  1696  001414  EE20 F00C          	lfsr	2,12
  1697  001418  5052               	movf	_uc_ptr,w,c
  1698  00141A  26D9               	addwf	fsr2l,f,c
  1699  00141C  5053               	movf	_uc_ptr+1,w,c
  1700  00141E  22DA               	addwfc	fsr2h,f,c
  1701  001420  0E00               	movlw	0
  1702  001422  6EDF               	movwf	indf2,c
  1703                           
  1704                           ; BSR set to: 1
  1705                           ;my_uart.c: 68: PIE1bits.TX1IE = 1;
  1706  001424  889D               	bsf	3997,4,c	;volatile
  1707                           
  1708                           ; BSR set to: 1
  1709  001426  0012               	return	
  1710  001428                     __end_of_uart_trans:
  1711                           	opt stack 0
  1712                           tblptru	equ	0xFF8
  1713                           tblptrh	equ	0xFF7
  1714                           tblptrl	equ	0xFF6
  1715                           tablat	equ	0xFF5
  1716                           prodh	equ	0xFF4
  1717                           prodl	equ	0xFF3
  1718                           postinc0	equ	0xFEE
  1719                           wreg	equ	0xFE8
  1720                           indf1	equ	0xFE7
  1721                           postdec1	equ	0xFE5
  1722                           fsr1h	equ	0xFE2
  1723                           fsr1l	equ	0xFE1
  1724                           indf2	equ	0xFDF
  1725                           fsr2h	equ	0xFDA
  1726                           fsr2l	equ	0xFD9
  1727                           status	equ	0xFD8
  1728                           
  1729 ;; *************** function _timer1_lthread *****************
  1730 ;; Defined at:
  1731 ;;		line 14 in file "../src/timer1_thread.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  1734 ;;		 -> main@t1thread_data(2), 
  1735 ;;  msgtype         2   28[BANK1 ] int 
  1736 ;;  length          2   30[BANK1 ] int 
  1737 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1738 ;;		 -> main@msgbuffer(11), 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  retval          1   35[BANK1 ] char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  2   26[BANK1 ] int 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1750 ;;      Params:         0       0       8       0       0
  1751 ;;      Locals:         0       0       1       0       0
  1752 ;;      Temps:          0       0       1       0       0
  1753 ;;      Totals:         0       0      10       0       0
  1754 ;;Total ram usage:       10 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:   14
  1757 ;; This function calls:
  1758 ;;		_FromMainHigh_sendmsg
  1759 ;;		___lwmod
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text2
  1766  0018E8                     __ptext2:
  1767                           	opt stack 0
  1768  0018E8                     _timer1_lthread:
  1769                           	opt stack 16
  1770                           
  1771                           ;timer1_thread.c: 15: signed char retval;
  1772                           ;timer1_thread.c: 17: tptr->msgcount++;
  1773                           
  1774                           ; BSR set to: 1
  1775                           ;incstack = 0
  1776  0018E8  C1A0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1777  0018EC  C1A1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1778  0018F0  2ADE               	incf	postinc2,f,c
  1779  0018F2  0E00               	movlw	0
  1780  0018F4  22DD               	addwfc	postdec2,f,c
  1781                           
  1782                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1783  0018F6  C1A0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1784  0018FA  C1A1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1785  0018FE  0101               	movlb	1	; () banked
  1786  001900  CFDE F186          	movff	postinc2,___lwmod@dividend
  1787  001904  0101               	movlb	1	; () banked
  1788  001906  CFDD F187          	movff	postdec2,___lwmod@dividend+1
  1789  00190A  0E00               	movlw	0
  1790  00190C  0101               	movlb	1	; () banked
  1791  00190E  0101               	movlb	1	; () banked
  1792  001910  6F89               	movwf	(___lwmod@divisor+1)& (0+255),b
  1793  001912  0E0A               	movlw	10
  1794  001914  0101               	movlb	1	; () banked
  1795  001916  6F88               	movwf	___lwmod@divisor& (0+255),b
  1796  001918  ECF7  F00A         	call	___lwmod	;wreg free
  1797  00191C  0101               	movlb	1	; () banked
  1798  00191E  0101               	movlb	1	; () banked
  1799  001920  5186               	movf	?___lwmod& (0+255),w,b
  1800  001922  0A09               	xorlw	9
  1801  001924  0101               	movlb	1	; () banked
  1802  001926  1187               	iorwf	(?___lwmod+1)& (0+255),w,b
  1803  001928  A4D8               	btfss	status,2,c
  1804  00192A  0012               	return	
  1805                           
  1806                           ; BSR set to: 1
  1807                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1808  00192C  0101               	movlb	1	; () banked
  1809  00192E  6FA8               	movwf	??_timer1_lthread& (0+255),b
  1810  001930  0E14               	movlw	20
  1811  001932  0101               	movlb	1	; () banked
  1812  001934  0101               	movlb	1	; () banked
  1813  001936  6F9C               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1814  001938  0101               	movlb	1	; () banked
  1815  00193A  51A8               	movf	??_timer1_lthread& (0+255),w,b
  1816  00193C  0101               	movlb	1	; () banked
  1817  00193E  0101               	movlb	1	; () banked
  1818  001940  C1A1  F19E         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1819  001944  0101               	movlb	1	; () banked
  1820  001946  0101               	movlb	1	; () banked
  1821  001948  C1A0  F19D         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1822  00194C  0E02               	movlw	2
  1823  00194E  ECCB  F00E         	call	_FromMainHigh_sendmsg
  1824  001952  0101               	movlb	1	; () banked
  1825  001954  0101               	movlb	1	; () banked
  1826  001956  6FA9               	movwf	timer1_lthread@retval& (0+255),b
  1827  001958  0012               	return	
  1828  00195A                     __end_of_timer1_lthread:
  1829                           	opt stack 0
  1830                           tblptru	equ	0xFF8
  1831                           tblptrh	equ	0xFF7
  1832                           tblptrl	equ	0xFF6
  1833                           tablat	equ	0xFF5
  1834                           prodh	equ	0xFF4
  1835                           prodl	equ	0xFF3
  1836                           postinc0	equ	0xFEE
  1837                           wreg	equ	0xFE8
  1838                           indf1	equ	0xFE7
  1839                           postdec1	equ	0xFE5
  1840                           fsr1h	equ	0xFE2
  1841                           fsr1l	equ	0xFE1
  1842                           indf2	equ	0xFDF
  1843                           postinc2	equ	0xFDE
  1844                           postdec2	equ	0xFDD
  1845                           fsr2h	equ	0xFDA
  1846                           fsr2l	equ	0xFD9
  1847                           status	equ	0xFD8
  1848                           
  1849 ;; *************** function ___lwmod *****************
  1850 ;; Defined at:
  1851 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  dividend        2    0[BANK1 ] unsigned int 
  1854 ;;  divisor         2    2[BANK1 ] unsigned int 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  counter         1    5[BANK1 ] unsigned char 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  2    0[BANK1 ] unsigned int 
  1859 ;; Registers used:
  1860 ;;		wreg, status,2, status,0
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1866 ;;      Params:         0       0       4       0       0
  1867 ;;      Locals:         0       0       1       0       0
  1868 ;;      Temps:          0       0       1       0       0
  1869 ;;      Totals:         0       0       6       0       0
  1870 ;;Total ram usage:        6 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:   11
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_timer1_lthread
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text3
  1881  0015EE                     __ptext3:
  1882                           	opt stack 0
  1883  0015EE                     ___lwmod:
  1884                           	opt stack 18
  1885                           
  1886                           ; BSR set to: 1
  1887                           ;incstack = 0
  1888  0015EE  0101               	movlb	1	; () banked
  1889  0015F0  0101               	movlb	1	; () banked
  1890  0015F2  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1891  0015F4  1188               	iorwf	___lwmod@divisor& (0+255),w,b
  1892  0015F6  B4D8               	btfsc	status,2,c
  1893  0015F8  D03A               	goto	l1118
  1894                           
  1895                           ; BSR set to: 1
  1896  0015FA  0101               	movlb	1	; () banked
  1897  0015FC  6F8A               	movwf	??___lwmod& (0+255),b
  1898  0015FE  0E01               	movlw	1
  1899  001600  0101               	movlb	1	; () banked
  1900  001602  0101               	movlb	1	; () banked
  1901  001604  6F8B               	movwf	___lwmod@counter& (0+255),b
  1902  001606  0101               	movlb	1	; () banked
  1903  001608  518A               	movf	??___lwmod& (0+255),w,b
  1904  00160A  D009               	goto	l4456
  1905  00160C                     l4454:
  1906                           
  1907                           ; BSR set to: 1
  1908  00160C  0101               	movlb	1	; () banked
  1909  00160E  0101               	movlb	1	; () banked
  1910  001610  0101               	movlb	1	; () banked
  1911  001612  90D8               	bcf	status,0,c
  1912  001614  3788               	rlcf	___lwmod@divisor& (0+255),f,b
  1913  001616  3789               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1914  001618  0101               	movlb	1	; () banked
  1915  00161A  0101               	movlb	1	; () banked
  1916  00161C  2B8B               	incf	___lwmod@counter& (0+255),f,b
  1917  00161E                     l4456:
  1918                           
  1919                           ; BSR set to: 1
  1920  00161E  0101               	movlb	1	; () banked
  1921  001620  0101               	movlb	1	; () banked
  1922  001622  AF89               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1923  001624  D7F3               	goto	l4454
  1924  001626                     l4458:
  1925                           
  1926                           ; BSR set to: 1
  1927  001626  0101               	movlb	1	; () banked
  1928  001628  0101               	movlb	1	; () banked
  1929  00162A  5188               	movf	___lwmod@divisor& (0+255),w,b
  1930  00162C  0101               	movlb	1	; () banked
  1931  00162E  0101               	movlb	1	; () banked
  1932  001630  5D86               	subwf	___lwmod@dividend& (0+255),w,b
  1933  001632  0101               	movlb	1	; () banked
  1934  001634  0101               	movlb	1	; () banked
  1935  001636  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1936  001638  0101               	movlb	1	; () banked
  1937  00163A  0101               	movlb	1	; () banked
  1938  00163C  5987               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1939  00163E  A0D8               	btfss	status,0,c
  1940  001640  D00C               	goto	l4462
  1941                           
  1942                           ; BSR set to: 1
  1943  001642  0101               	movlb	1	; () banked
  1944  001644  0101               	movlb	1	; () banked
  1945  001646  5188               	movf	___lwmod@divisor& (0+255),w,b
  1946  001648  0101               	movlb	1	; () banked
  1947  00164A  0101               	movlb	1	; () banked
  1948  00164C  5F86               	subwf	___lwmod@dividend& (0+255),f,b
  1949  00164E  0101               	movlb	1	; () banked
  1950  001650  0101               	movlb	1	; () banked
  1951  001652  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1952  001654  0101               	movlb	1	; () banked
  1953  001656  0101               	movlb	1	; () banked
  1954  001658  5B87               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1955  00165A                     l4462:
  1956                           
  1957                           ; BSR set to: 1
  1958  00165A  0101               	movlb	1	; () banked
  1959  00165C  0101               	movlb	1	; () banked
  1960  00165E  0101               	movlb	1	; () banked
  1961  001660  90D8               	bcf	status,0,c
  1962  001662  3389               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1963  001664  3388               	rrcf	___lwmod@divisor& (0+255),f,b
  1964                           
  1965                           ; BSR set to: 1
  1966  001666  0101               	movlb	1	; () banked
  1967  001668  0101               	movlb	1	; () banked
  1968  00166A  2F8B               	decfsz	___lwmod@counter& (0+255),f,b
  1969  00166C  D7DC               	goto	l4458
  1970  00166E                     l1118:
  1971                           
  1972                           ; BSR set to: 1
  1973  00166E  C186  F186         	movff	___lwmod@dividend,?___lwmod
  1974  001672  C187  F187         	movff	___lwmod@dividend+1,?___lwmod+1
  1975                           
  1976                           ; BSR set to: 1
  1977  001676  0012               	return	
  1978  001678                     __end_of___lwmod:
  1979                           	opt stack 0
  1980                           tblptru	equ	0xFF8
  1981                           tblptrh	equ	0xFF7
  1982                           tblptrl	equ	0xFF6
  1983                           tablat	equ	0xFF5
  1984                           prodh	equ	0xFF4
  1985                           prodl	equ	0xFF3
  1986                           postinc0	equ	0xFEE
  1987                           wreg	equ	0xFE8
  1988                           indf1	equ	0xFE7
  1989                           postdec1	equ	0xFE5
  1990                           fsr1h	equ	0xFE2
  1991                           fsr1l	equ	0xFE1
  1992                           indf2	equ	0xFDF
  1993                           postinc2	equ	0xFDE
  1994                           postdec2	equ	0xFDD
  1995                           fsr2h	equ	0xFDA
  1996                           fsr2l	equ	0xFD9
  1997                           status	equ	0xFD8
  1998                           
  1999 ;; *************** function _FromMainHigh_sendmsg *****************
  2000 ;; Defined at:
  2001 ;;		line 174 in file "../src/messages.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  length          1    wreg     unsigned char 
  2004 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2005 ;;  data            2   23[BANK1 ] PTR void 
  2006 ;;		 -> main@t1thread_data(2), 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  length          1   25[BANK1 ] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      char 
  2011 ;; Registers used:
  2012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2018 ;;      Params:         0       0       3       0       0
  2019 ;;      Locals:         0       0       1       0       0
  2020 ;;      Temps:          0       0       0       0       0
  2021 ;;      Totals:         0       0       4       0       0
  2022 ;;Total ram usage:        4 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:   13
  2025 ;; This function calls:
  2026 ;;		_send_msg
  2027 ;; This function is called by:
  2028 ;;		_timer1_lthread
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text4
  2033  001D96                     __ptext4:
  2034                           	opt stack 0
  2035  001D96                     _FromMainHigh_sendmsg:
  2036                           	opt stack 16
  2037                           
  2038                           ; BSR set to: 1
  2039                           ;incstack = 0
  2040                           ;FromMainHigh_sendmsg@length stored from wreg
  2041  001D96  CFE8 F19F          	movff	wreg,FromMainHigh_sendmsg@length
  2042                           
  2043                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2044  001D9A  0102               	movlb	2	; () banked
  2045  001D9C  0E02               	movlw	high _FromMainHigh_MQ
  2046  001D9E  0101               	movlb	1	; () banked
  2047  001DA0  0101               	movlb	1	; () banked
  2048  001DA2  6F91               	movwf	(send_msg@qptr+1)& (0+255),b
  2049  001DA4  0102               	movlb	2	; () banked
  2050  001DA6  0E00               	movlw	low _FromMainHigh_MQ
  2051  001DA8  0101               	movlb	1	; () banked
  2052  001DAA  0101               	movlb	1	; () banked
  2053  001DAC  6F90               	movwf	send_msg@qptr& (0+255),b
  2054  001DAE  C19F  F192         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2055  001DB2  C19C  F193         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2056  001DB6  0101               	movlb	1	; () banked
  2057  001DB8  0101               	movlb	1	; () banked
  2058  001DBA  C19E  F195         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2059  001DBE  0101               	movlb	1	; () banked
  2060  001DC0  0101               	movlb	1	; () banked
  2061  001DC2  C19D  F194         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2062  001DC6  EC6E  F006         	call	_send_msg	;wreg free
  2063  001DCA  0012               	return	
  2064  001DCC                     __end_of_FromMainHigh_sendmsg:
  2065                           	opt stack 0
  2066                           tblptru	equ	0xFF8
  2067                           tblptrh	equ	0xFF7
  2068                           tblptrl	equ	0xFF6
  2069                           tablat	equ	0xFF5
  2070                           prodh	equ	0xFF4
  2071                           prodl	equ	0xFF3
  2072                           postinc0	equ	0xFEE
  2073                           wreg	equ	0xFE8
  2074                           indf1	equ	0xFE7
  2075                           postdec1	equ	0xFE5
  2076                           fsr1h	equ	0xFE2
  2077                           fsr1l	equ	0xFE1
  2078                           indf2	equ	0xFDF
  2079                           postinc2	equ	0xFDE
  2080                           postdec2	equ	0xFDD
  2081                           fsr2h	equ	0xFDA
  2082                           fsr2l	equ	0xFD9
  2083                           status	equ	0xFD8
  2084                           
  2085 ;; *************** function _timer0_lthread *****************
  2086 ;; Defined at:
  2087 ;;		line 9 in file "../src/timer0_thread.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2090 ;;		 -> main@t0thread_data(2), 
  2091 ;;  msgtype         2    2[BANK1 ] int 
  2092 ;;  length          2    4[BANK1 ] int 
  2093 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2094 ;;		 -> main@msgbuffer(11), 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2097 ;;		 -> main@msgbuffer(11), 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  2    0[BANK1 ] int 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2, status,0
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2107 ;;      Params:         0       0       8       0       0
  2108 ;;      Locals:         0       0       2       0       0
  2109 ;;      Temps:          0       0       0       0       0
  2110 ;;      Totals:         0       0      10       0       0
  2111 ;;Total ram usage:       10 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:   11
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_main
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text5
  2122  001F9E                     __ptext5:
  2123                           	opt stack 0
  2124  001F9E                     _timer0_lthread:
  2125                           	opt stack 19
  2126                           
  2127                           ;timer0_thread.c: 10: unsigned int *msgval;
  2128                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2129                           
  2130                           ;incstack = 0
  2131  001F9E  0101               	movlb	1	; () banked
  2132  001FA0  0101               	movlb	1	; () banked
  2133  001FA2  C18D  F18F         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2134  001FA6  0101               	movlb	1	; () banked
  2135  001FA8  0101               	movlb	1	; () banked
  2136  001FAA  C18C  F18E         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2137                           
  2138                           ; BSR set to: 1
  2139  001FAE  0012               	return	
  2140  001FB0                     __end_of_timer0_lthread:
  2141                           	opt stack 0
  2142                           tblptru	equ	0xFF8
  2143                           tblptrh	equ	0xFF7
  2144                           tblptrl	equ	0xFF6
  2145                           tablat	equ	0xFF5
  2146                           prodh	equ	0xFF4
  2147                           prodl	equ	0xFF3
  2148                           postinc0	equ	0xFEE
  2149                           wreg	equ	0xFE8
  2150                           indf1	equ	0xFE7
  2151                           postdec1	equ	0xFE5
  2152                           fsr1h	equ	0xFE2
  2153                           fsr1l	equ	0xFE1
  2154                           indf2	equ	0xFDF
  2155                           postinc2	equ	0xFDE
  2156                           postdec2	equ	0xFDD
  2157                           fsr2h	equ	0xFDA
  2158                           fsr2l	equ	0xFD9
  2159                           status	equ	0xFD8
  2160                           
  2161 ;; *************** function _init_uart_recv *****************
  2162 ;; Defined at:
  2163 ;;		line 53 in file "../src/my_uart.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2166 ;;		 -> main@uc(13), 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;		None               void
  2171 ;; Registers used:
  2172 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2178 ;;      Params:         0       0       2       0       0
  2179 ;;      Locals:         0       0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0
  2181 ;;      Totals:         0       0       2       0       0
  2182 ;;Total ram usage:        2 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:   11
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_main
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text6
  2193  001F4C                     __ptext6:
  2194                           	opt stack 0
  2195  001F4C                     _init_uart_recv:
  2196                           	opt stack 19
  2197                           
  2198                           ;my_uart.c: 56: uc_ptr = uc;
  2199                           
  2200                           ; BSR set to: 1
  2201                           ;incstack = 0
  2202  001F4C  0101               	movlb	1	; () banked
  2203  001F4E  C187  F053         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2204  001F52  0101               	movlb	1	; () banked
  2205  001F54  C186  F052         	movff	init_uart_recv@uc,_uc_ptr
  2206                           
  2207                           ; BSR set to: 1
  2208                           ;my_uart.c: 57: uc_ptr->buflen = 0;
  2209  001F58  EE20 F005          	lfsr	2,5
  2210  001F5C  5052               	movf	_uc_ptr,w,c
  2211  001F5E  26D9               	addwf	fsr2l,f,c
  2212  001F60  5053               	movf	_uc_ptr+1,w,c
  2213  001F62  22DA               	addwfc	fsr2h,f,c
  2214  001F64  0E00               	movlw	0
  2215  001F66  6EDF               	movwf	indf2,c
  2216                           
  2217                           ; BSR set to: 1
  2218  001F68  0012               	return	
  2219  001F6A                     __end_of_init_uart_recv:
  2220                           	opt stack 0
  2221                           tblptru	equ	0xFF8
  2222                           tblptrh	equ	0xFF7
  2223                           tblptrl	equ	0xFF6
  2224                           tablat	equ	0xFF5
  2225                           prodh	equ	0xFF4
  2226                           prodl	equ	0xFF3
  2227                           postinc0	equ	0xFEE
  2228                           wreg	equ	0xFE8
  2229                           indf1	equ	0xFE7
  2230                           postdec1	equ	0xFE5
  2231                           fsr1h	equ	0xFE2
  2232                           fsr1l	equ	0xFE1
  2233                           indf2	equ	0xFDF
  2234                           postinc2	equ	0xFDE
  2235                           postdec2	equ	0xFDD
  2236                           fsr2h	equ	0xFDA
  2237                           fsr2l	equ	0xFD9
  2238                           status	equ	0xFD8
  2239                           
  2240 ;; *************** function _init_timer1_lthread *****************
  2241 ;; Defined at:
  2242 ;;		line 6 in file "../src/timer1_thread.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2245 ;;		 -> main@t1thread_data(2), 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;		None               void
  2250 ;; Registers used:
  2251 ;;		wreg, fsr2l, fsr2h
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2257 ;;      Params:         0       0       2       0       0
  2258 ;;      Locals:         0       0       0       0       0
  2259 ;;      Temps:          0       0       0       0       0
  2260 ;;      Totals:         0       0       2       0       0
  2261 ;;Total ram usage:        2 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:   11
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_main
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text7
  2272  001FB0                     __ptext7:
  2273                           	opt stack 0
  2274  001FB0                     _init_timer1_lthread:
  2275                           	opt stack 19
  2276                           
  2277                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2278                           
  2279                           ; BSR set to: 1
  2280                           ;incstack = 0
  2281  001FB0  C186  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2282  001FB4  C187  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2283  001FB8  0E00               	movlw	0
  2284  001FBA  6EDE               	movwf	postinc2,c
  2285  001FBC  0E00               	movlw	0
  2286  001FBE  6EDD               	movwf	postdec2,c
  2287  001FC0  0012               	return	
  2288  001FC2                     __end_of_init_timer1_lthread:
  2289                           	opt stack 0
  2290                           tblptru	equ	0xFF8
  2291                           tblptrh	equ	0xFF7
  2292                           tblptrl	equ	0xFF6
  2293                           tablat	equ	0xFF5
  2294                           prodh	equ	0xFF4
  2295                           prodl	equ	0xFF3
  2296                           postinc0	equ	0xFEE
  2297                           wreg	equ	0xFE8
  2298                           indf1	equ	0xFE7
  2299                           postdec1	equ	0xFE5
  2300                           fsr1h	equ	0xFE2
  2301                           fsr1l	equ	0xFE1
  2302                           indf2	equ	0xFDF
  2303                           postinc2	equ	0xFDE
  2304                           postdec2	equ	0xFDD
  2305                           fsr2h	equ	0xFDA
  2306                           fsr2l	equ	0xFD9
  2307                           status	equ	0xFD8
  2308                           
  2309 ;; *************** function _init_queues *****************
  2310 ;; Defined at:
  2311 ;;		line 194 in file "../src/messages.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;		None
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;		None
  2316 ;; Return value:  Size  Location     Type
  2317 ;;		None               void
  2318 ;; Registers used:
  2319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2325 ;;      Params:         0       0       0       0       0
  2326 ;;      Locals:         0       0       0       0       0
  2327 ;;      Temps:          0       0       1       0       0
  2328 ;;      Totals:         0       0       1       0       0
  2329 ;;Total ram usage:        1 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:   12
  2332 ;; This function calls:
  2333 ;;		_init_queue
  2334 ;; This function is called by:
  2335 ;;		_main
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text8
  2340  00195A                     __ptext8:
  2341                           	opt stack 0
  2342  00195A                     _init_queues:
  2343                           	opt stack 18
  2344                           
  2345                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2346                           
  2347                           ;incstack = 0
  2348  00195A  0101               	movlb	1	; () banked
  2349  00195C  6F8A               	movwf	??_init_queues& (0+255),b
  2350  00195E  0E00               	movlw	0
  2351  001960  6E4E               	movwf	_MQ_Main_Willing_to_block,c
  2352  001962  0101               	movlb	1	; () banked
  2353  001964  518A               	movf	??_init_queues& (0+255),w,b
  2354                           
  2355                           ; BSR set to: 1
  2356                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2357  001966  0101               	movlb	1	; () banked
  2358  001968  0E01               	movlw	high _ToMainLow_MQ
  2359  00196A  0101               	movlb	1	; () banked
  2360  00196C  0101               	movlb	1	; () banked
  2361  00196E  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2362  001970  0101               	movlb	1	; () banked
  2363  001972  0E43               	movlw	low _ToMainLow_MQ
  2364  001974  0101               	movlb	1	; () banked
  2365  001976  0101               	movlb	1	; () banked
  2366  001978  6F86               	movwf	init_queue@qptr& (0+255),b
  2367  00197A  ECFE  F00B         	call	_init_queue	;wreg free
  2368                           
  2369                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2370  00197E  0101               	movlb	1	; () banked
  2371  001980  0E01               	movlw	high _ToMainHigh_MQ
  2372  001982  0101               	movlb	1	; () banked
  2373  001984  0101               	movlb	1	; () banked
  2374  001986  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2375  001988  0101               	movlb	1	; () banked
  2376  00198A  0E00               	movlw	low _ToMainHigh_MQ
  2377  00198C  0101               	movlb	1	; () banked
  2378  00198E  0101               	movlb	1	; () banked
  2379  001990  6F86               	movwf	init_queue@qptr& (0+255),b
  2380  001992  ECFE  F00B         	call	_init_queue	;wreg free
  2381                           
  2382                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2383  001996  0102               	movlb	2	; () banked
  2384  001998  0E02               	movlw	high _FromMainLow_MQ
  2385  00199A  0101               	movlb	1	; () banked
  2386  00199C  0101               	movlb	1	; () banked
  2387  00199E  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2388  0019A0  0102               	movlb	2	; () banked
  2389  0019A2  0E43               	movlw	low _FromMainLow_MQ
  2390  0019A4  0101               	movlb	1	; () banked
  2391  0019A6  0101               	movlb	1	; () banked
  2392  0019A8  6F86               	movwf	init_queue@qptr& (0+255),b
  2393  0019AA  ECFE  F00B         	call	_init_queue	;wreg free
  2394                           
  2395                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2396  0019AE  0102               	movlb	2	; () banked
  2397  0019B0  0E02               	movlw	high _FromMainHigh_MQ
  2398  0019B2  0101               	movlb	1	; () banked
  2399  0019B4  0101               	movlb	1	; () banked
  2400  0019B6  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2401  0019B8  0102               	movlb	2	; () banked
  2402  0019BA  0E00               	movlw	low _FromMainHigh_MQ
  2403  0019BC  0101               	movlb	1	; () banked
  2404  0019BE  0101               	movlb	1	; () banked
  2405  0019C0  6F86               	movwf	init_queue@qptr& (0+255),b
  2406  0019C2  ECFE  F00B         	call	_init_queue	;wreg free
  2407  0019C6  0012               	return	
  2408  0019C8                     __end_of_init_queues:
  2409                           	opt stack 0
  2410                           tblptru	equ	0xFF8
  2411                           tblptrh	equ	0xFF7
  2412                           tblptrl	equ	0xFF6
  2413                           tablat	equ	0xFF5
  2414                           prodh	equ	0xFF4
  2415                           prodl	equ	0xFF3
  2416                           postinc0	equ	0xFEE
  2417                           wreg	equ	0xFE8
  2418                           indf1	equ	0xFE7
  2419                           postdec1	equ	0xFE5
  2420                           fsr1h	equ	0xFE2
  2421                           fsr1l	equ	0xFE1
  2422                           indf2	equ	0xFDF
  2423                           postinc2	equ	0xFDE
  2424                           postdec2	equ	0xFDD
  2425                           fsr2h	equ	0xFDA
  2426                           fsr2l	equ	0xFD9
  2427                           status	equ	0xFD8
  2428                           
  2429 ;; *************** function _init_queue *****************
  2430 ;; Defined at:
  2431 ;;		line 14 in file "../src/messages.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2434 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2435 ;; Auto vars:     Size  Location     Type
  2436 ;;  i               1    3[BANK1 ] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;		None               void
  2439 ;; Registers used:
  2440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2446 ;;      Params:         0       0       2       0       0
  2447 ;;      Locals:         0       0       1       0       0
  2448 ;;      Temps:          0       0       1       0       0
  2449 ;;      Totals:         0       0       4       0       0
  2450 ;;Total ram usage:        4 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; Hardware stack levels required when called:   11
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_init_queues
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text9
  2461  0017FC                     __ptext9:
  2462                           	opt stack 0
  2463  0017FC                     _init_queue:
  2464                           	opt stack 18
  2465                           
  2466                           ;messages.c: 15: unsigned char i;
  2467                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2468                           
  2469                           ;incstack = 0
  2470  0017FC  0101               	movlb	1	; () banked
  2471  0017FE  EE20 F041          	lfsr	2,65
  2472  001802  0101               	movlb	1	; () banked
  2473  001804  5186               	movf	init_queue@qptr& (0+255),w,b
  2474  001806  26D9               	addwf	fsr2l,f,c
  2475  001808  0101               	movlb	1	; () banked
  2476  00180A  5187               	movf	(init_queue@qptr+1)& (0+255),w,b
  2477  00180C  22DA               	addwfc	fsr2h,f,c
  2478  00180E  0E00               	movlw	0
  2479  001810  6EDF               	movwf	indf2,c
  2480                           
  2481                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2482  001812  0101               	movlb	1	; () banked
  2483  001814  EE20 F042          	lfsr	2,66
  2484  001818  0101               	movlb	1	; () banked
  2485  00181A  5186               	movf	init_queue@qptr& (0+255),w,b
  2486  00181C  26D9               	addwf	fsr2l,f,c
  2487  00181E  0101               	movlb	1	; () banked
  2488  001820  5187               	movf	(init_queue@qptr+1)& (0+255),w,b
  2489  001822  22DA               	addwfc	fsr2h,f,c
  2490  001824  0E00               	movlw	0
  2491  001826  6EDF               	movwf	indf2,c
  2492                           
  2493                           ; BSR set to: 1
  2494                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2495  001828  0101               	movlb	1	; () banked
  2496  00182A  6F88               	movwf	??_init_queue& (0+255),b
  2497  00182C  0E00               	movlw	0
  2498  00182E  0101               	movlb	1	; () banked
  2499  001830  0101               	movlb	1	; () banked
  2500  001832  6F89               	movwf	init_queue@i& (0+255),b
  2501  001834  0101               	movlb	1	; () banked
  2502  001836  5188               	movf	??_init_queue& (0+255),w,b
  2503                           
  2504                           ; BSR set to: 1
  2505  001838  0E04               	movlw	4
  2506  00183A  0101               	movlb	1	; () banked
  2507  00183C  0101               	movlb	1	; () banked
  2508  00183E  6589               	cpfsgt	init_queue@i& (0+255),b
  2509  001840  D001               	goto	l4064
  2510  001842  0012               	return	
  2511  001844                     l4064:
  2512                           
  2513                           ; BSR set to: 1
  2514                           ;messages.c: 20: qptr->queue[i].full = 0;
  2515  001844  0101               	movlb	1	; () banked
  2516  001846  0101               	movlb	1	; () banked
  2517  001848  5189               	movf	init_queue@i& (0+255),w,b
  2518  00184A  0D0D               	mullw	13
  2519  00184C  50F3               	movf	prodl,w,c
  2520  00184E  0101               	movlb	1	; () banked
  2521  001850  0101               	movlb	1	; () banked
  2522  001852  2586               	addwf	init_queue@qptr& (0+255),w,b
  2523  001854  6ED9               	movwf	fsr2l,c
  2524  001856  50F4               	movf	prodh,w,c
  2525  001858  0101               	movlb	1	; () banked
  2526  00185A  0101               	movlb	1	; () banked
  2527  00185C  2187               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2528  00185E  6EDA               	movwf	fsr2h,c
  2529  001860  0E00               	movlw	0
  2530  001862  6EDF               	movwf	indf2,c
  2531                           
  2532                           ; BSR set to: 1
  2533  001864  0101               	movlb	1	; () banked
  2534  001866  0101               	movlb	1	; () banked
  2535  001868  2B89               	incf	init_queue@i& (0+255),f,b
  2536                           
  2537                           ; BSR set to: 1
  2538  00186A  0E04               	movlw	4
  2539  00186C  0101               	movlb	1	; () banked
  2540  00186E  0101               	movlb	1	; () banked
  2541  001870  6589               	cpfsgt	init_queue@i& (0+255),b
  2542  001872  D7E8               	goto	l4064
  2543  001874  0012               	return	
  2544  001876                     __end_of_init_queue:
  2545                           	opt stack 0
  2546                           tblptru	equ	0xFF8
  2547                           tblptrh	equ	0xFF7
  2548                           tblptrl	equ	0xFF6
  2549                           tablat	equ	0xFF5
  2550                           prodh	equ	0xFF4
  2551                           prodl	equ	0xFF3
  2552                           postinc0	equ	0xFEE
  2553                           wreg	equ	0xFE8
  2554                           indf1	equ	0xFE7
  2555                           postdec1	equ	0xFE5
  2556                           fsr1h	equ	0xFE2
  2557                           fsr1l	equ	0xFE1
  2558                           indf2	equ	0xFDF
  2559                           postinc2	equ	0xFDE
  2560                           postdec2	equ	0xFDD
  2561                           fsr2h	equ	0xFDA
  2562                           fsr2l	equ	0xFD9
  2563                           status	equ	0xFD8
  2564                           
  2565 ;; *************** function _init_i2c *****************
  2566 ;; Defined at:
  2567 ;;		line 439 in file "../src/my_i2c.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  2570 ;;		 -> main@ic(29), 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;		None               void
  2575 ;; Registers used:
  2576 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2582 ;;      Params:         0       0       2       0       0
  2583 ;;      Locals:         0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0
  2585 ;;      Totals:         0       0       2       0       0
  2586 ;;Total ram usage:        2 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:   11
  2589 ;; This function calls:
  2590 ;;		Nothing
  2591 ;; This function is called by:
  2592 ;;		_main
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text10
  2597  001B40                     __ptext10:
  2598                           	opt stack 0
  2599  001B40                     _init_i2c:
  2600                           	opt stack 19
  2601                           
  2602                           ;my_i2c.c: 440: ic_ptr = ic;
  2603                           
  2604                           ; BSR set to: 1
  2605                           ;incstack = 0
  2606  001B40  0101               	movlb	1	; () banked
  2607  001B42  C187  F051         	movff	init_i2c@ic+1,_ic_ptr+1
  2608  001B46  0101               	movlb	1	; () banked
  2609  001B48  C186  F050         	movff	init_i2c@ic,_ic_ptr
  2610                           
  2611                           ; BSR set to: 1
  2612                           ;my_i2c.c: 441: ic_ptr->buflen = 0;
  2613  001B4C  EE20 F00A          	lfsr	2,10
  2614  001B50  5050               	movf	_ic_ptr,w,c
  2615  001B52  26D9               	addwf	fsr2l,f,c
  2616  001B54  5051               	movf	_ic_ptr+1,w,c
  2617  001B56  22DA               	addwfc	fsr2h,f,c
  2618  001B58  0E00               	movlw	0
  2619  001B5A  6EDF               	movwf	indf2,c
  2620                           
  2621                           ; BSR set to: 1
  2622                           ;my_i2c.c: 442: ic_ptr->event_count = 0;
  2623  001B5C  EE20 F00C          	lfsr	2,12
  2624  001B60  5050               	movf	_ic_ptr,w,c
  2625  001B62  26D9               	addwf	fsr2l,f,c
  2626  001B64  5051               	movf	_ic_ptr+1,w,c
  2627  001B66  22DA               	addwfc	fsr2h,f,c
  2628  001B68  0E00               	movlw	0
  2629  001B6A  6EDF               	movwf	indf2,c
  2630                           
  2631                           ; BSR set to: 1
  2632                           ;my_i2c.c: 443: ic_ptr->status = 0x5;
  2633  001B6C  EE20 F00D          	lfsr	2,13
  2634  001B70  5050               	movf	_ic_ptr,w,c
  2635  001B72  26D9               	addwf	fsr2l,f,c
  2636  001B74  5051               	movf	_ic_ptr+1,w,c
  2637  001B76  22DA               	addwfc	fsr2h,f,c
  2638  001B78  0E05               	movlw	5
  2639  001B7A  6EDF               	movwf	indf2,c
  2640                           
  2641                           ; BSR set to: 1
  2642                           ;my_i2c.c: 444: ic_ptr->error_count = 0;
  2643  001B7C  EE20 F00F          	lfsr	2,15
  2644  001B80  5050               	movf	_ic_ptr,w,c
  2645  001B82  26D9               	addwf	fsr2l,f,c
  2646  001B84  5051               	movf	_ic_ptr+1,w,c
  2647  001B86  22DA               	addwfc	fsr2h,f,c
  2648  001B88  0E00               	movlw	0
  2649  001B8A  6EDF               	movwf	indf2,c
  2650                           
  2651                           ; BSR set to: 1
  2652  001B8C  0012               	return	
  2653  001B8E                     __end_of_init_i2c:
  2654                           	opt stack 0
  2655                           tblptru	equ	0xFF8
  2656                           tblptrh	equ	0xFF7
  2657                           tblptrl	equ	0xFF6
  2658                           tablat	equ	0xFF5
  2659                           prodh	equ	0xFF4
  2660                           prodl	equ	0xFF3
  2661                           postinc0	equ	0xFEE
  2662                           wreg	equ	0xFE8
  2663                           indf1	equ	0xFE7
  2664                           postdec1	equ	0xFE5
  2665                           fsr1h	equ	0xFE2
  2666                           fsr1l	equ	0xFE1
  2667                           indf2	equ	0xFDF
  2668                           postinc2	equ	0xFDE
  2669                           postdec2	equ	0xFDD
  2670                           fsr2h	equ	0xFDA
  2671                           fsr2l	equ	0xFD9
  2672                           status	equ	0xFD8
  2673                           
  2674 ;; *************** function _i2c_configure_slave *****************
  2675 ;; Defined at:
  2676 ;;		line 450 in file "../src/my_i2c.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  addr            1    wreg     unsigned char 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  addr            1    0[BANK1 ] unsigned char 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;		None               void
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2690 ;;      Params:         0       0       0       0       0
  2691 ;;      Locals:         0       0       1       0       0
  2692 ;;      Temps:          0       0       0       0       0
  2693 ;;      Totals:         0       0       1       0       0
  2694 ;;Total ram usage:        1 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:   11
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_main
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text11
  2705  001E98                     __ptext11:
  2706                           	opt stack 0
  2707  001E98                     _i2c_configure_slave:
  2708                           	opt stack 19
  2709                           
  2710                           ; BSR set to: 1
  2711                           ;incstack = 0
  2712                           ;i2c_configure_slave@addr stored from wreg
  2713  001E98  CFE8 F186          	movff	wreg,i2c_configure_slave@addr
  2714                           
  2715                           ;my_i2c.c: 462: TRISCbits.TRISC3 = 1;
  2716  001E9C  8694               	bsf	3988,3,c	;volatile
  2717                           
  2718                           ;my_i2c.c: 463: TRISCbits.TRISC4 = 1;
  2719  001E9E  8894               	bsf	3988,4,c	;volatile
  2720                           
  2721                           ;my_i2c.c: 468: SSPADD = addr;
  2722  001EA0  C186  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2723                           
  2724                           ;my_i2c.c: 470: SSPSTAT = 0x0;
  2725  001EA4  0E00               	movlw	0
  2726  001EA6  6EC7               	movwf	4039,c	;volatile
  2727                           
  2728                           ;my_i2c.c: 471: SSPCON1 = 0x0;
  2729  001EA8  0E00               	movlw	0
  2730  001EAA  6EC6               	movwf	4038,c	;volatile
  2731                           
  2732                           ;my_i2c.c: 472: SSPCON2 = 0x0;
  2733  001EAC  0E00               	movlw	0
  2734  001EAE  6EC5               	movwf	4037,c	;volatile
  2735                           
  2736                           ;my_i2c.c: 473: SSPCON1 |= 0x0E;
  2737  001EB0  0E0E               	movlw	14
  2738  001EB2  12C6               	iorwf	4038,f,c	;volatile
  2739                           
  2740                           ;my_i2c.c: 474: SSPSTAT |= 0b10000000;
  2741  001EB4  8EC7               	bsf	4039,7,c	;volatile
  2742                           
  2743                           ;my_i2c.c: 477: TRISCbits.TRISC3 = 1;
  2744  001EB6  8694               	bsf	3988,3,c	;volatile
  2745                           
  2746                           ;my_i2c.c: 478: TRISCbits.TRISC4 = 1;
  2747  001EB8  8894               	bsf	3988,4,c	;volatile
  2748                           
  2749                           ;my_i2c.c: 499: SSPCON2bits.SEN = 1;
  2750  001EBA  80C5               	bsf	4037,0,c	;volatile
  2751                           
  2752                           ;my_i2c.c: 500: SSPCON1 |= 0b00100000;
  2753  001EBC  8AC6               	bsf	4038,5,c	;volatile
  2754  001EBE  0012               	return	
  2755  001EC0                     __end_of_i2c_configure_slave:
  2756                           	opt stack 0
  2757                           tblptru	equ	0xFF8
  2758                           tblptrh	equ	0xFF7
  2759                           tblptrl	equ	0xFF6
  2760                           tablat	equ	0xFF5
  2761                           prodh	equ	0xFF4
  2762                           prodl	equ	0xFF3
  2763                           postinc0	equ	0xFEE
  2764                           wreg	equ	0xFE8
  2765                           indf1	equ	0xFE7
  2766                           postdec1	equ	0xFE5
  2767                           fsr1h	equ	0xFE2
  2768                           fsr1l	equ	0xFE1
  2769                           indf2	equ	0xFDF
  2770                           postinc2	equ	0xFDE
  2771                           postdec2	equ	0xFDD
  2772                           fsr2h	equ	0xFDA
  2773                           fsr2l	equ	0xFD9
  2774                           status	equ	0xFD8
  2775                           
  2776 ;; *************** function _enable_interrupts *****************
  2777 ;; Defined at:
  2778 ;;		line 15 in file "../src/interrupts.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;		None
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;		None               void
  2785 ;; Registers used:
  2786 ;;		None
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2792 ;;      Params:         0       0       0       0       0
  2793 ;;      Locals:         0       0       0       0       0
  2794 ;;      Temps:          0       0       0       0       0
  2795 ;;      Totals:         0       0       0       0       0
  2796 ;;Total ram usage:        0 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:   11
  2799 ;; This function calls:
  2800 ;;		Nothing
  2801 ;; This function is called by:
  2802 ;;		_main
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           	psect	text12
  2807  002030                     __ptext12:
  2808                           	opt stack 0
  2809  002030                     _enable_interrupts:
  2810                           	opt stack 19
  2811                           
  2812                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  2813                           
  2814                           ;incstack = 0
  2815  002030  8ED0               	bsf	4048,7,c	;volatile
  2816                           
  2817                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  2818  002032  8EF2               	bsf	intcon,7,c	;volatile
  2819                           
  2820                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  2821  002034  8CF2               	bsf	intcon,6,c	;volatile
  2822  002036  0012               	return	
  2823  002038                     __end_of_enable_interrupts:
  2824                           	opt stack 0
  2825                           tblptru	equ	0xFF8
  2826                           tblptrh	equ	0xFF7
  2827                           tblptrl	equ	0xFF6
  2828                           tablat	equ	0xFF5
  2829                           prodh	equ	0xFF4
  2830                           prodl	equ	0xFF3
  2831                           intcon	equ	0xFF2
  2832                           postinc0	equ	0xFEE
  2833                           wreg	equ	0xFE8
  2834                           indf1	equ	0xFE7
  2835                           postdec1	equ	0xFE5
  2836                           fsr1h	equ	0xFE2
  2837                           fsr1l	equ	0xFE1
  2838                           indf2	equ	0xFDF
  2839                           postinc2	equ	0xFDE
  2840                           postdec2	equ	0xFDD
  2841                           fsr2h	equ	0xFDA
  2842                           fsr2l	equ	0xFD9
  2843                           status	equ	0xFD8
  2844                           
  2845 ;; *************** function _block_on_To_msgqueues *****************
  2846 ;; Defined at:
  2847 ;;		line 258 in file "../src/messages.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;		None
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;		None
  2852 ;; Return value:  Size  Location     Type
  2853 ;;		None               void
  2854 ;; Registers used:
  2855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2861 ;;      Params:         0       0       0       0       0
  2862 ;;      Locals:         0       0       0       0       0
  2863 ;;      Temps:          0       0       1       0       0
  2864 ;;      Totals:         0       0       1       0       0
  2865 ;;Total ram usage:        1 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; Hardware stack levels required when called:   14
  2868 ;; This function calls:
  2869 ;;		_Delay1KTCYx
  2870 ;;		_check_msg
  2871 ;;		_in_main
  2872 ;; This function is called by:
  2873 ;;		_main
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text13
  2878  00177E                     __ptext13:
  2879                           	opt stack 0
  2880  00177E                     _block_on_To_msgqueues:
  2881                           	opt stack 16
  2882                           
  2883                           ;messages.c: 259: if (!in_main()) {
  2884                           
  2885                           ;incstack = 0
  2886  00177E  ECEA  F00D         	call	_in_main	;wreg free
  2887  001782  0101               	movlb	1	; () banked
  2888  001784  0101               	movlb	1	; () banked
  2889  001786  518B               	movf	(?_in_main+1)& (0+255),w,b
  2890  001788  0101               	movlb	1	; () banked
  2891  00178A  118A               	iorwf	?_in_main& (0+255),w,b
  2892  00178C  B4D8               	btfsc	status,2,c
  2893  00178E  0012               	return	
  2894                           
  2895                           ; BSR set to: 1
  2896                           ;messages.c: 261: }
  2897                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  2898                           
  2899                           ; BSR set to: 1
  2900                           
  2901                           ; BSR set to: 1
  2902                           ;messages.c: 260: return;
  2903  001790  0101               	movlb	1	; () banked
  2904  001792  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  2905  001794  0E01               	movlw	1
  2906  001796  6E4E               	movwf	_MQ_Main_Willing_to_block,c
  2907  001798  0101               	movlb	1	; () banked
  2908  00179A  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2909  00179C                     l4008:
  2910                           
  2911                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  2912  00179C  0101               	movlb	1	; () banked
  2913  00179E  0E01               	movlw	high _ToMainHigh_MQ
  2914  0017A0  0101               	movlb	1	; () banked
  2915  0017A2  0101               	movlb	1	; () banked
  2916  0017A4  6F87               	movwf	(check_msg@qptr+1)& (0+255),b
  2917  0017A6  0101               	movlb	1	; () banked
  2918  0017A8  0E00               	movlw	low _ToMainHigh_MQ
  2919  0017AA  0101               	movlb	1	; () banked
  2920  0017AC  0101               	movlb	1	; () banked
  2921  0017AE  6F86               	movwf	check_msg@qptr& (0+255),b
  2922  0017B0  ECE6  F00E         	call	_check_msg	;wreg free
  2923  0017B4  0900               	iorlw	0
  2924  0017B6  B4D8               	btfsc	status,2,c
  2925  0017B8  D007               	goto	l4014
  2926                           
  2927                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  2928  0017BA  0101               	movlb	1	; () banked
  2929  0017BC  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  2930  0017BE  0E00               	movlw	0
  2931  0017C0  6E4E               	movwf	_MQ_Main_Willing_to_block,c
  2932  0017C2  0101               	movlb	1	; () banked
  2933  0017C4  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2934  0017C6  0012               	return	
  2935  0017C8                     l4014:
  2936                           
  2937                           ;messages.c: 271: }
  2938                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  2939  0017C8  0101               	movlb	1	; () banked
  2940  0017CA  0E01               	movlw	high _ToMainLow_MQ
  2941  0017CC  0101               	movlb	1	; () banked
  2942  0017CE  0101               	movlb	1	; () banked
  2943  0017D0  6F87               	movwf	(check_msg@qptr+1)& (0+255),b
  2944  0017D2  0101               	movlb	1	; () banked
  2945  0017D4  0E43               	movlw	low _ToMainLow_MQ
  2946  0017D6  0101               	movlb	1	; () banked
  2947  0017D8  0101               	movlb	1	; () banked
  2948  0017DA  6F86               	movwf	check_msg@qptr& (0+255),b
  2949  0017DC  ECE6  F00E         	call	_check_msg	;wreg free
  2950  0017E0  0900               	iorlw	0
  2951  0017E2  B4D8               	btfsc	status,2,c
  2952  0017E4  D007               	goto	l4020
  2953                           
  2954                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  2955  0017E6  0101               	movlb	1	; () banked
  2956  0017E8  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  2957  0017EA  0E00               	movlw	0
  2958  0017EC  6E4E               	movwf	_MQ_Main_Willing_to_block,c
  2959  0017EE  0101               	movlb	1	; () banked
  2960  0017F0  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2961  0017F2  0012               	return	
  2962  0017F4                     l4020:
  2963                           
  2964                           ;messages.c: 278: }
  2965                           ;messages.c: 279: Delay1KTCYx(10);
  2966  0017F4  0E0A               	movlw	10
  2967  0017F6  ECC4  F00F         	call	_Delay1KTCYx
  2968  0017FA  D7D0               	goto	l4008
  2969  0017FC                     __end_of_block_on_To_msgqueues:
  2970                           	opt stack 0
  2971                           tblptru	equ	0xFF8
  2972                           tblptrh	equ	0xFF7
  2973                           tblptrl	equ	0xFF6
  2974                           tablat	equ	0xFF5
  2975                           prodh	equ	0xFF4
  2976                           prodl	equ	0xFF3
  2977                           intcon	equ	0xFF2
  2978                           postinc0	equ	0xFEE
  2979                           wreg	equ	0xFE8
  2980                           indf1	equ	0xFE7
  2981                           postdec1	equ	0xFE5
  2982                           fsr1h	equ	0xFE2
  2983                           fsr1l	equ	0xFE1
  2984                           indf2	equ	0xFDF
  2985                           postinc2	equ	0xFDE
  2986                           postdec2	equ	0xFDD
  2987                           fsr2h	equ	0xFDA
  2988                           fsr2l	equ	0xFD9
  2989                           status	equ	0xFD8
  2990                           
  2991 ;; *************** function _in_main *****************
  2992 ;; Defined at:
  2993 ;;		line 41 in file "../src/interrupts.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;		None
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  2    4[BANK1 ] int 
  3000 ;; Registers used:
  3001 ;;		wreg, status,2, status,0, cstack
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3007 ;;      Params:         0       0       2       0       0
  3008 ;;      Locals:         0       0       0       0       0
  3009 ;;      Temps:          0       0       0       0       0
  3010 ;;      Totals:         0       0       2       0       0
  3011 ;;Total ram usage:        2 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:   13
  3014 ;; This function calls:
  3015 ;;		_in_high_int
  3016 ;;		_in_low_int
  3017 ;; This function is called by:
  3018 ;;		_block_on_To_msgqueues
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text14
  3023  001BD4                     __ptext14:
  3024                           	opt stack 0
  3025  001BD4                     _in_main:
  3026                           	opt stack 16
  3027                           
  3028                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3029                           
  3030                           ;incstack = 0
  3031  001BD4  ECC7  F00D         	call	_in_low_int	;wreg free
  3032  001BD8  0101               	movlb	1	; () banked
  3033  001BDA  0101               	movlb	1	; () banked
  3034  001BDC  5189               	movf	(?_in_low_int+1)& (0+255),w,b
  3035  001BDE  0101               	movlb	1	; () banked
  3036  001BE0  1188               	iorwf	?_in_low_int& (0+255),w,b
  3037  001BE2  A4D8               	btfss	status,2,c
  3038  001BE4  D011               	goto	l3728
  3039                           
  3040                           ; BSR set to: 1
  3041  001BE6  ECE1  F00F         	call	_in_high_int	;wreg free
  3042  001BEA  0101               	movlb	1	; () banked
  3043  001BEC  0101               	movlb	1	; () banked
  3044  001BEE  5187               	movf	(?_in_high_int+1)& (0+255),w,b
  3045  001BF0  0101               	movlb	1	; () banked
  3046  001BF2  1186               	iorwf	?_in_high_int& (0+255),w,b
  3047  001BF4  A4D8               	btfss	status,2,c
  3048  001BF6  D008               	goto	l3728
  3049                           
  3050                           ; BSR set to: 1
  3051                           ;interrupts.c: 43: return (1);
  3052  001BF8  0E00               	movlw	0
  3053  001BFA  0101               	movlb	1	; () banked
  3054  001BFC  0101               	movlb	1	; () banked
  3055  001BFE  6F8B               	movwf	(?_in_main+1)& (0+255),b
  3056  001C00  0E01               	movlw	1
  3057  001C02  0101               	movlb	1	; () banked
  3058  001C04  6F8A               	movwf	?_in_main& (0+255),b
  3059  001C06  0012               	return	
  3060  001C08                     l3728:
  3061                           
  3062                           ; BSR set to: 1
  3063                           ;interrupts.c: 45: return (0);
  3064  001C08  0E00               	movlw	0
  3065  001C0A  0101               	movlb	1	; () banked
  3066  001C0C  0101               	movlb	1	; () banked
  3067  001C0E  6F8B               	movwf	(?_in_main+1)& (0+255),b
  3068  001C10  0E00               	movlw	0
  3069  001C12  0101               	movlb	1	; () banked
  3070  001C14  6F8A               	movwf	?_in_main& (0+255),b
  3071  001C16  0012               	return	
  3072  001C18                     __end_of_in_main:
  3073                           	opt stack 0
  3074                           tblptru	equ	0xFF8
  3075                           tblptrh	equ	0xFF7
  3076                           tblptrl	equ	0xFF6
  3077                           tablat	equ	0xFF5
  3078                           prodh	equ	0xFF4
  3079                           prodl	equ	0xFF3
  3080                           intcon	equ	0xFF2
  3081                           postinc0	equ	0xFEE
  3082                           wreg	equ	0xFE8
  3083                           indf1	equ	0xFE7
  3084                           postdec1	equ	0xFE5
  3085                           fsr1h	equ	0xFE2
  3086                           fsr1l	equ	0xFE1
  3087                           indf2	equ	0xFDF
  3088                           postinc2	equ	0xFDE
  3089                           postdec2	equ	0xFDD
  3090                           fsr2h	equ	0xFDA
  3091                           fsr2l	equ	0xFD9
  3092                           status	equ	0xFD8
  3093                           
  3094 ;; *************** function _in_low_int *****************
  3095 ;; Defined at:
  3096 ;;		line 31 in file "../src/interrupts.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;		None
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;		None
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  2    2[BANK1 ] int 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2, status,0, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3110 ;;      Params:         0       0       2       0       0
  3111 ;;      Locals:         0       0       0       0       0
  3112 ;;      Temps:          0       0       0       0       0
  3113 ;;      Totals:         0       0       2       0       0
  3114 ;;Total ram usage:        2 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:   12
  3117 ;; This function calls:
  3118 ;;		_in_high_int
  3119 ;; This function is called by:
  3120 ;;		_in_main
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           	psect	text15
  3125  001B8E                     __ptext15:
  3126                           	opt stack 0
  3127  001B8E                     _in_low_int:
  3128                           	opt stack 16
  3129                           
  3130                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3131                           
  3132                           ; BSR set to: 1
  3133                           ;incstack = 0
  3134  001B8E  ACF2               	btfss	intcon,6,c	;volatile
  3135  001B90  D008               	goto	l3706
  3136                           
  3137                           ;interrupts.c: 33: return (0);
  3138  001B92  0E00               	movlw	0
  3139  001B94  0101               	movlb	1	; () banked
  3140  001B96  0101               	movlb	1	; () banked
  3141  001B98  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3142  001B9A  0E00               	movlw	0
  3143  001B9C  0101               	movlb	1	; () banked
  3144  001B9E  6F88               	movwf	?_in_low_int& (0+255),b
  3145  001BA0  0012               	return	
  3146  001BA2                     l3706:
  3147  001BA2  ECE1  F00F         	call	_in_high_int	;wreg free
  3148  001BA6  0101               	movlb	1	; () banked
  3149  001BA8  0101               	movlb	1	; () banked
  3150  001BAA  5187               	movf	(?_in_high_int+1)& (0+255),w,b
  3151  001BAC  0101               	movlb	1	; () banked
  3152  001BAE  1186               	iorwf	?_in_high_int& (0+255),w,b
  3153  001BB0  B4D8               	btfsc	status,2,c
  3154  001BB2  D008               	goto	l3714
  3155                           
  3156                           ; BSR set to: 1
  3157                           ;interrupts.c: 35: return (0);
  3158  001BB4  0E00               	movlw	0
  3159  001BB6  0101               	movlb	1	; () banked
  3160  001BB8  0101               	movlb	1	; () banked
  3161  001BBA  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3162  001BBC  0E00               	movlw	0
  3163  001BBE  0101               	movlb	1	; () banked
  3164  001BC0  6F88               	movwf	?_in_low_int& (0+255),b
  3165  001BC2  0012               	return	
  3166  001BC4                     l3714:
  3167                           
  3168                           ; BSR set to: 1
  3169                           ;interrupts.c: 37: return (1);
  3170  001BC4  0E00               	movlw	0
  3171  001BC6  0101               	movlb	1	; () banked
  3172  001BC8  0101               	movlb	1	; () banked
  3173  001BCA  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3174  001BCC  0E01               	movlw	1
  3175  001BCE  0101               	movlb	1	; () banked
  3176  001BD0  6F88               	movwf	?_in_low_int& (0+255),b
  3177  001BD2  0012               	return	
  3178  001BD4                     __end_of_in_low_int:
  3179                           	opt stack 0
  3180                           tblptru	equ	0xFF8
  3181                           tblptrh	equ	0xFF7
  3182                           tblptrl	equ	0xFF6
  3183                           tablat	equ	0xFF5
  3184                           prodh	equ	0xFF4
  3185                           prodl	equ	0xFF3
  3186                           intcon	equ	0xFF2
  3187                           postinc0	equ	0xFEE
  3188                           wreg	equ	0xFE8
  3189                           indf1	equ	0xFE7
  3190                           postdec1	equ	0xFE5
  3191                           fsr1h	equ	0xFE2
  3192                           fsr1l	equ	0xFE1
  3193                           indf2	equ	0xFDF
  3194                           postinc2	equ	0xFDE
  3195                           postdec2	equ	0xFDD
  3196                           fsr2h	equ	0xFDA
  3197                           fsr2l	equ	0xFD9
  3198                           status	equ	0xFD8
  3199                           
  3200 ;; *************** function _in_high_int *****************
  3201 ;; Defined at:
  3202 ;;		line 23 in file "../src/interrupts.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;		None
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;		None
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  2    0[BANK1 ] int 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3216 ;;      Params:         0       0       2       0       0
  3217 ;;      Locals:         0       0       0       0       0
  3218 ;;      Temps:          0       0       0       0       0
  3219 ;;      Totals:         0       0       2       0       0
  3220 ;;Total ram usage:        2 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:   11
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_in_low_int
  3227 ;;		_in_main
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text16
  3232  001FC2                     __ptext16:
  3233                           	opt stack 0
  3234  001FC2                     _in_high_int:
  3235                           	opt stack 16
  3236                           
  3237                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  3238                           
  3239                           ; BSR set to: 1
  3240                           ;incstack = 0
  3241  001FC2  0E00               	movlw	0
  3242  001FC4  AEF2               	btfss	intcon,7,c	;volatile
  3243  001FC6  0E01               	movlw	1
  3244  001FC8  0101               	movlb	1	; () banked
  3245  001FCA  0101               	movlb	1	; () banked
  3246  001FCC  6F86               	movwf	?_in_high_int& (0+255),b
  3247  001FCE  0101               	movlb	1	; () banked
  3248  001FD0  6B87               	clrf	(?_in_high_int+1)& (0+255),b
  3249  001FD2  0012               	return	
  3250  001FD4                     __end_of_in_high_int:
  3251                           	opt stack 0
  3252                           tblptru	equ	0xFF8
  3253                           tblptrh	equ	0xFF7
  3254                           tblptrl	equ	0xFF6
  3255                           tablat	equ	0xFF5
  3256                           prodh	equ	0xFF4
  3257                           prodl	equ	0xFF3
  3258                           intcon	equ	0xFF2
  3259                           postinc0	equ	0xFEE
  3260                           wreg	equ	0xFE8
  3261                           indf1	equ	0xFE7
  3262                           postdec1	equ	0xFE5
  3263                           fsr1h	equ	0xFE2
  3264                           fsr1l	equ	0xFE1
  3265                           indf2	equ	0xFDF
  3266                           postinc2	equ	0xFDE
  3267                           postdec2	equ	0xFDD
  3268                           fsr2h	equ	0xFDA
  3269                           fsr2l	equ	0xFD9
  3270                           status	equ	0xFD8
  3271                           
  3272 ;; *************** function _check_msg *****************
  3273 ;; Defined at:
  3274 ;;		line 222 in file "../src/messages.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3277 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      unsigned char 
  3282 ;; Registers used:
  3283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3289 ;;      Params:         0       0       2       0       0
  3290 ;;      Locals:         0       0       0       0       0
  3291 ;;      Temps:          0       0       1       0       0
  3292 ;;      Totals:         0       0       3       0       0
  3293 ;;Total ram usage:        3 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:   11
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_block_on_To_msgqueues
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text17
  3304  001DCC                     __ptext17:
  3305                           	opt stack 0
  3306  001DCC                     _check_msg:
  3307                           	opt stack 18
  3308                           
  3309                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3310                           
  3311                           ; BSR set to: 1
  3312                           ;incstack = 0
  3313  001DCC  0101               	movlb	1	; () banked
  3314  001DCE  EE20 F042          	lfsr	2,66
  3315  001DD2  0101               	movlb	1	; () banked
  3316  001DD4  5186               	movf	check_msg@qptr& (0+255),w,b
  3317  001DD6  26D9               	addwf	fsr2l,f,c
  3318  001DD8  0101               	movlb	1	; () banked
  3319  001DDA  5187               	movf	(check_msg@qptr+1)& (0+255),w,b
  3320  001DDC  22DA               	addwfc	fsr2h,f,c
  3321  001DDE  50DF               	movf	indf2,w,c
  3322  001DE0  0101               	movlb	1	; () banked
  3323  001DE2  6F88               	movwf	??_check_msg& (0+255),b
  3324  001DE4  0101               	movlb	1	; () banked
  3325  001DE6  5188               	movf	??_check_msg& (0+255),w,b
  3326  001DE8  0D0D               	mullw	13
  3327  001DEA  50F3               	movf	prodl,w,c
  3328  001DEC  0101               	movlb	1	; () banked
  3329  001DEE  0101               	movlb	1	; () banked
  3330  001DF0  2586               	addwf	check_msg@qptr& (0+255),w,b
  3331  001DF2  6ED9               	movwf	fsr2l,c
  3332  001DF4  50F4               	movf	prodh,w,c
  3333  001DF6  0101               	movlb	1	; () banked
  3334  001DF8  0101               	movlb	1	; () banked
  3335  001DFA  2187               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3336  001DFC  6EDA               	movwf	fsr2h,c
  3337  001DFE  50DF               	movf	indf2,w,c
  3338  001E00  0012               	return	
  3339  001E02                     __end_of_check_msg:
  3340                           	opt stack 0
  3341                           tblptru	equ	0xFF8
  3342                           tblptrh	equ	0xFF7
  3343                           tblptrl	equ	0xFF6
  3344                           tablat	equ	0xFF5
  3345                           prodh	equ	0xFF4
  3346                           prodl	equ	0xFF3
  3347                           intcon	equ	0xFF2
  3348                           postinc0	equ	0xFEE
  3349                           wreg	equ	0xFE8
  3350                           indf1	equ	0xFE7
  3351                           postdec1	equ	0xFE5
  3352                           fsr1h	equ	0xFE2
  3353                           fsr1l	equ	0xFE1
  3354                           indf2	equ	0xFDF
  3355                           postinc2	equ	0xFDE
  3356                           postdec2	equ	0xFDD
  3357                           fsr2h	equ	0xFDA
  3358                           fsr2l	equ	0xFD9
  3359                           status	equ	0xFD8
  3360                           
  3361 ;; *************** function _Delay1KTCYx *****************
  3362 ;; Defined at:
  3363 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  unit            1    wreg     unsigned char 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  unit            1    0[BANK1 ] unsigned char 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;		None               void
  3370 ;; Registers used:
  3371 ;;		wreg
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3377 ;;      Params:         0       0       0       0       0
  3378 ;;      Locals:         0       0       1       0       0
  3379 ;;      Temps:          0       0       0       0       0
  3380 ;;      Totals:         0       0       1       0       0
  3381 ;;Total ram usage:        1 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:   11
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_block_on_To_msgqueues
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text18
  3392  001F88                     __ptext18:
  3393                           	opt stack 0
  3394  001F88                     _Delay1KTCYx:
  3395                           	opt stack 18
  3396                           
  3397                           ; BSR set to: 1
  3398                           ;incstack = 0
  3399                           ;Delay1KTCYx@unit stored from wreg
  3400  001F88  CFE8 F186          	movff	wreg,Delay1KTCYx@unit
  3401  001F8C                     l806:
  3402  001F8C  0EFA               	movlw	250
  3403  001F8E                     u3887:
  3404  001F8E  F000               	nop	
  3405  001F90  2EE8               	decfsz	wreg,f,c
  3406  001F92  D7FD               	goto	u3887
  3407  001F94  0101               	movlb	1	; () banked
  3408  001F96  0101               	movlb	1	; () banked
  3409  001F98  2F86               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3410  001F9A  D7F8               	goto	l806
  3411  001F9C  0012               	return	
  3412  001F9E                     __end_of_Delay1KTCYx:
  3413                           	opt stack 0
  3414                           tblptru	equ	0xFF8
  3415                           tblptrh	equ	0xFF7
  3416                           tblptrl	equ	0xFF6
  3417                           tablat	equ	0xFF5
  3418                           prodh	equ	0xFF4
  3419                           prodl	equ	0xFF3
  3420                           intcon	equ	0xFF2
  3421                           postinc0	equ	0xFEE
  3422                           wreg	equ	0xFE8
  3423                           indf1	equ	0xFE7
  3424                           postdec1	equ	0xFE5
  3425                           fsr1h	equ	0xFE2
  3426                           fsr1l	equ	0xFE1
  3427                           indf2	equ	0xFDF
  3428                           postinc2	equ	0xFDE
  3429                           postdec2	equ	0xFDD
  3430                           fsr2h	equ	0xFDA
  3431                           fsr2l	equ	0xFD9
  3432                           status	equ	0xFD8
  3433                           
  3434 ;; *************** function _ToMainLow_recvmsg *****************
  3435 ;; Defined at:
  3436 ;;		line 112 in file "../src/messages.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  maxlength       1    wreg     unsigned char 
  3439 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3440 ;;		 -> main@msgtype(1), 
  3441 ;;  data            2   26[BANK1 ] PTR void 
  3442 ;;		 -> main@msgbuffer(11), 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      char 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3454 ;;      Params:         0       0       4       0       0
  3455 ;;      Locals:         0       0       1       0       0
  3456 ;;      Temps:          0       0       0       0       0
  3457 ;;      Totals:         0       0       5       0       0
  3458 ;;Total ram usage:        5 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:   13
  3461 ;; This function calls:
  3462 ;;		_recv_msg
  3463 ;; This function is called by:
  3464 ;;		_main
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text19
  3469  001C18                     __ptext19:
  3470                           	opt stack 0
  3471  001C18                     _ToMainLow_recvmsg:
  3472                           	opt stack 17
  3473                           
  3474                           ; BSR set to: 1
  3475                           ;incstack = 0
  3476                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3477  001C18  CFE8 F1A2          	movff	wreg,ToMainLow_recvmsg@maxlength
  3478                           
  3479                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3480  001C1C  0101               	movlb	1	; () banked
  3481  001C1E  0E01               	movlw	high _ToMainLow_MQ
  3482  001C20  0101               	movlb	1	; () banked
  3483  001C22  0101               	movlb	1	; () banked
  3484  001C24  6F91               	movwf	(recv_msg@qptr+1)& (0+255),b
  3485  001C26  0101               	movlb	1	; () banked
  3486  001C28  0E43               	movlw	low _ToMainLow_MQ
  3487  001C2A  0101               	movlb	1	; () banked
  3488  001C2C  0101               	movlb	1	; () banked
  3489  001C2E  6F90               	movwf	recv_msg@qptr& (0+255),b
  3490  001C30  C1A2  F192         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3491  001C34  0101               	movlb	1	; () banked
  3492  001C36  0101               	movlb	1	; () banked
  3493  001C38  C19F  F194         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3494  001C3C  0101               	movlb	1	; () banked
  3495  001C3E  0101               	movlb	1	; () banked
  3496  001C40  C19E  F193         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3497  001C44  0101               	movlb	1	; () banked
  3498  001C46  0101               	movlb	1	; () banked
  3499  001C48  C1A1  F196         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3500  001C4C  0101               	movlb	1	; () banked
  3501  001C4E  0101               	movlb	1	; () banked
  3502  001C50  C1A0  F195         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3503  001C54  EC10  F005         	call	_recv_msg	;wreg free
  3504  001C58  0012               	return	
  3505  001C5A                     __end_of_ToMainLow_recvmsg:
  3506                           	opt stack 0
  3507                           tblptru	equ	0xFF8
  3508                           tblptrh	equ	0xFF7
  3509                           tblptrl	equ	0xFF6
  3510                           tablat	equ	0xFF5
  3511                           prodh	equ	0xFF4
  3512                           prodl	equ	0xFF3
  3513                           intcon	equ	0xFF2
  3514                           postinc0	equ	0xFEE
  3515                           wreg	equ	0xFE8
  3516                           indf1	equ	0xFE7
  3517                           postdec1	equ	0xFE5
  3518                           fsr1h	equ	0xFE2
  3519                           fsr1l	equ	0xFE1
  3520                           indf2	equ	0xFDF
  3521                           postinc2	equ	0xFDE
  3522                           postdec2	equ	0xFDD
  3523                           fsr2h	equ	0xFDA
  3524                           fsr2l	equ	0xFD9
  3525                           status	equ	0xFD8
  3526                           
  3527 ;; *************** function _ToMainHigh_recvmsg *****************
  3528 ;; Defined at:
  3529 ;;		line 135 in file "../src/messages.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  maxlength       1    wreg     unsigned char 
  3532 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3533 ;;		 -> main@msgtype(1), 
  3534 ;;  data            2   26[BANK1 ] PTR void 
  3535 ;;		 -> main@msgbuffer(11), 
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  1    wreg      char 
  3540 ;; Registers used:
  3541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3547 ;;      Params:         0       0       4       0       0
  3548 ;;      Locals:         0       0       1       0       0
  3549 ;;      Temps:          0       0       0       0       0
  3550 ;;      Totals:         0       0       5       0       0
  3551 ;;Total ram usage:        5 bytes
  3552 ;; Hardware stack levels used:    1
  3553 ;; Hardware stack levels required when called:   13
  3554 ;; This function calls:
  3555 ;;		_recv_msg
  3556 ;; This function is called by:
  3557 ;;		_main
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text20
  3562  001C5A                     __ptext20:
  3563                           	opt stack 0
  3564  001C5A                     _ToMainHigh_recvmsg:
  3565                           	opt stack 17
  3566                           
  3567                           ;incstack = 0
  3568                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3569  001C5A  CFE8 F1A2          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3570                           
  3571                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3572  001C5E  0101               	movlb	1	; () banked
  3573  001C60  0E01               	movlw	high _ToMainHigh_MQ
  3574  001C62  0101               	movlb	1	; () banked
  3575  001C64  0101               	movlb	1	; () banked
  3576  001C66  6F91               	movwf	(recv_msg@qptr+1)& (0+255),b
  3577  001C68  0101               	movlb	1	; () banked
  3578  001C6A  0E00               	movlw	low _ToMainHigh_MQ
  3579  001C6C  0101               	movlb	1	; () banked
  3580  001C6E  0101               	movlb	1	; () banked
  3581  001C70  6F90               	movwf	recv_msg@qptr& (0+255),b
  3582  001C72  C1A2  F192         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3583  001C76  0101               	movlb	1	; () banked
  3584  001C78  0101               	movlb	1	; () banked
  3585  001C7A  C19F  F194         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3586  001C7E  0101               	movlb	1	; () banked
  3587  001C80  0101               	movlb	1	; () banked
  3588  001C82  C19E  F193         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3589  001C86  0101               	movlb	1	; () banked
  3590  001C88  0101               	movlb	1	; () banked
  3591  001C8A  C1A1  F196         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3592  001C8E  0101               	movlb	1	; () banked
  3593  001C90  0101               	movlb	1	; () banked
  3594  001C92  C1A0  F195         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3595  001C96  EC10  F005         	call	_recv_msg	;wreg free
  3596  001C9A  0012               	return	
  3597  001C9C                     __end_of_ToMainHigh_recvmsg:
  3598                           	opt stack 0
  3599                           tblptru	equ	0xFF8
  3600                           tblptrh	equ	0xFF7
  3601                           tblptrl	equ	0xFF6
  3602                           tablat	equ	0xFF5
  3603                           prodh	equ	0xFF4
  3604                           prodl	equ	0xFF3
  3605                           intcon	equ	0xFF2
  3606                           postinc0	equ	0xFEE
  3607                           wreg	equ	0xFE8
  3608                           indf1	equ	0xFE7
  3609                           postdec1	equ	0xFE5
  3610                           fsr1h	equ	0xFE2
  3611                           fsr1l	equ	0xFE1
  3612                           indf2	equ	0xFDF
  3613                           postinc2	equ	0xFDE
  3614                           postdec2	equ	0xFDD
  3615                           fsr2h	equ	0xFDA
  3616                           fsr2l	equ	0xFD9
  3617                           status	equ	0xFD8
  3618                           
  3619 ;; *************** function _recv_msg *****************
  3620 ;; Defined at:
  3621 ;;		line 63 in file "../src/messages.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  3624 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3625 ;;  maxlength       1   12[BANK1 ] unsigned char 
  3626 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  3627 ;;		 -> i2c_slave_int_handler@msgtype(2), main@msgtype(1), 
  3628 ;;  data            2   15[BANK1 ] PTR void 
  3629 ;;		 -> i2c_slave_int_handler@sensorData(5), main@msgbuffer(11), 
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  3632 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  3633 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3634 ;;  tlength         2   20[BANK1 ] unsigned int 
  3635 ;;  slot            1   19[BANK1 ] unsigned char 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      char 
  3638 ;; Registers used:
  3639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3645 ;;      Params:         0       0       7       0       0
  3646 ;;      Locals:         0       0       5       0       0
  3647 ;;      Temps:          0       0       2       0       0
  3648 ;;      Totals:         0       0      14       0       0
  3649 ;;Total ram usage:       14 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:   12
  3652 ;; This function calls:
  3653 ;;		___awmod
  3654 ;;		_memcpy
  3655 ;; This function is called by:
  3656 ;;		_ToMainLow_recvmsg
  3657 ;;		_ToMainHigh_recvmsg
  3658 ;;		_FromMainHigh_recvmsg
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text21
  3663  000A20                     __ptext21:
  3664                           	opt stack 0
  3665  000A20                     _recv_msg:
  3666                           	opt stack 17
  3667                           
  3668                           ;messages.c: 64: unsigned char slot;
  3669                           ;messages.c: 68: msg *qmsg;
  3670                           ;messages.c: 69: size_t tlength;
  3671                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3672                           
  3673                           ;incstack = 0
  3674  000A20  0101               	movlb	1	; () banked
  3675  000A22  EE20 F042          	lfsr	2,66
  3676  000A26  0101               	movlb	1	; () banked
  3677  000A28  5190               	movf	recv_msg@qptr& (0+255),w,b
  3678  000A2A  26D9               	addwf	fsr2l,f,c
  3679  000A2C  0101               	movlb	1	; () banked
  3680  000A2E  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3681  000A30  22DA               	addwfc	fsr2h,f,c
  3682  000A32  50DF               	movf	indf2,w,c
  3683  000A34  0101               	movlb	1	; () banked
  3684  000A36  0101               	movlb	1	; () banked
  3685  000A38  6F99               	movwf	recv_msg@slot& (0+255),b
  3686                           
  3687                           ; BSR set to: 1
  3688                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3689  000A3A  0101               	movlb	1	; () banked
  3690  000A3C  0101               	movlb	1	; () banked
  3691  000A3E  5199               	movf	recv_msg@slot& (0+255),w,b
  3692  000A40  0D0D               	mullw	13
  3693  000A42  50F3               	movf	prodl,w,c
  3694  000A44  0101               	movlb	1	; () banked
  3695  000A46  0101               	movlb	1	; () banked
  3696  000A48  2590               	addwf	recv_msg@qptr& (0+255),w,b
  3697  000A4A  0101               	movlb	1	; () banked
  3698  000A4C  0101               	movlb	1	; () banked
  3699  000A4E  6F9C               	movwf	recv_msg@qmsg& (0+255),b
  3700  000A50  50F4               	movf	prodh,w,c
  3701  000A52  0101               	movlb	1	; () banked
  3702  000A54  0101               	movlb	1	; () banked
  3703  000A56  2191               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3704  000A58  0101               	movlb	1	; () banked
  3705  000A5A  6F9D               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3706                           
  3707                           ; BSR set to: 1
  3708                           ;messages.c: 74: if (qmsg->full == 1) {
  3709  000A5C  0E01               	movlw	1
  3710  000A5E  C19C  FFD9         	movff	recv_msg@qmsg,fsr2l
  3711  000A62  C19D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3712  000A66  62DF               	cpfseq	indf2,c
  3713  000A68  D088               	goto	l4132
  3714                           
  3715                           ; BSR set to: 1
  3716                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3717  000A6A  0101               	movlb	1	; () banked
  3718  000A6C  EE20 F001          	lfsr	2,1
  3719  000A70  0101               	movlb	1	; () banked
  3720  000A72  519C               	movf	recv_msg@qmsg& (0+255),w,b
  3721  000A74  26D9               	addwf	fsr2l,f,c
  3722  000A76  0101               	movlb	1	; () banked
  3723  000A78  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3724  000A7A  22DA               	addwfc	fsr2h,f,c
  3725  000A7C  50DF               	movf	indf2,w,c
  3726  000A7E  0101               	movlb	1	; () banked
  3727  000A80  0101               	movlb	1	; () banked
  3728  000A82  5D92               	subwf	recv_msg@maxlength& (0+255),w,b
  3729  000A84  B0D8               	btfsc	status,0,c
  3730  000A86  D002               	goto	l4116
  3731                           
  3732                           ; BSR set to: 1
  3733                           ;messages.c: 77: return (-3);
  3734  000A88  0EFD               	movlw	253
  3735  000A8A  0012               	return	
  3736  000A8C                     l4116:
  3737                           
  3738                           ; BSR set to: 1
  3739                           ;messages.c: 78: }
  3740                           ;messages.c: 80: tlength = qmsg->length;
  3741  000A8C  0101               	movlb	1	; () banked
  3742  000A8E  EE20 F001          	lfsr	2,1
  3743  000A92  0101               	movlb	1	; () banked
  3744  000A94  519C               	movf	recv_msg@qmsg& (0+255),w,b
  3745  000A96  26D9               	addwf	fsr2l,f,c
  3746  000A98  0101               	movlb	1	; () banked
  3747  000A9A  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3748  000A9C  22DA               	addwfc	fsr2h,f,c
  3749  000A9E  50DF               	movf	indf2,w,c
  3750  000AA0  0101               	movlb	1	; () banked
  3751  000AA2  6F97               	movwf	??_recv_msg& (0+255),b
  3752  000AA4  0101               	movlb	1	; () banked
  3753  000AA6  5197               	movf	??_recv_msg& (0+255),w,b
  3754  000AA8  0101               	movlb	1	; () banked
  3755  000AAA  0101               	movlb	1	; () banked
  3756  000AAC  6F9A               	movwf	recv_msg@tlength& (0+255),b
  3757  000AAE  0101               	movlb	1	; () banked
  3758  000AB0  6B9B               	clrf	(recv_msg@tlength+1)& (0+255),b
  3759                           
  3760                           ; BSR set to: 1
  3761                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3762  000AB2  0101               	movlb	1	; () banked
  3763  000AB4  0101               	movlb	1	; () banked
  3764  000AB6  C196  F187         	movff	recv_msg@data+1,memcpy@d1+1
  3765  000ABA  0101               	movlb	1	; () banked
  3766  000ABC  0101               	movlb	1	; () banked
  3767  000ABE  C195  F186         	movff	recv_msg@data,memcpy@d1
  3768  000AC2  0E03               	movlw	3
  3769  000AC4  0101               	movlb	1	; () banked
  3770  000AC6  0101               	movlb	1	; () banked
  3771  000AC8  259C               	addwf	recv_msg@qmsg& (0+255),w,b
  3772  000ACA  0101               	movlb	1	; () banked
  3773  000ACC  6F97               	movwf	??_recv_msg& (0+255),b
  3774  000ACE  0E00               	movlw	0
  3775  000AD0  0101               	movlb	1	; () banked
  3776  000AD2  0101               	movlb	1	; () banked
  3777  000AD4  219D               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3778  000AD6  0101               	movlb	1	; () banked
  3779  000AD8  6F98               	movwf	(??_recv_msg+1)& (0+255),b
  3780  000ADA  C197  F188         	movff	??_recv_msg,memcpy@s1
  3781  000ADE  C198  F189         	movff	??_recv_msg+1,memcpy@s1+1
  3782  000AE2  C19A  F18A         	movff	recv_msg@tlength,memcpy@n
  3783  000AE6  C19B  F18B         	movff	recv_msg@tlength+1,memcpy@n+1
  3784  000AEA  EC18  F00D         	call	_memcpy	;wreg free
  3785                           
  3786                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  3787  000AEE  0101               	movlb	1	; () banked
  3788  000AF0  EE20 F042          	lfsr	2,66
  3789  000AF4  0101               	movlb	1	; () banked
  3790  000AF6  5190               	movf	recv_msg@qptr& (0+255),w,b
  3791  000AF8  26D9               	addwf	fsr2l,f,c
  3792  000AFA  0101               	movlb	1	; () banked
  3793  000AFC  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3794  000AFE  22DA               	addwfc	fsr2h,f,c
  3795  000B00  0101               	movlb	1	; () banked
  3796  000B02  EE10 F042          	lfsr	1,66
  3797  000B06  0101               	movlb	1	; () banked
  3798  000B08  5190               	movf	recv_msg@qptr& (0+255),w,b
  3799  000B0A  26E1               	addwf	fsr1l,f,c
  3800  000B0C  0101               	movlb	1	; () banked
  3801  000B0E  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3802  000B10  22E2               	addwfc	fsr1h,f,c
  3803  000B12  50E7               	movf	indf1,w,c
  3804  000B14  0101               	movlb	1	; () banked
  3805  000B16  6F97               	movwf	??_recv_msg& (0+255),b
  3806  000B18  0E01               	movlw	1
  3807  000B1A  0101               	movlb	1	; () banked
  3808  000B1C  2597               	addwf	??_recv_msg& (0+255),w,b
  3809  000B1E  0101               	movlb	1	; () banked
  3810  000B20  0101               	movlb	1	; () banked
  3811  000B22  6F86               	movwf	___awmod@dividend& (0+255),b
  3812  000B24  0101               	movlb	1	; () banked
  3813  000B26  0101               	movlb	1	; () banked
  3814  000B28  6B87               	clrf	(___awmod@dividend+1)& (0+255),b
  3815  000B2A  0E00               	movlw	0
  3816  000B2C  2387               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3817  000B2E  0E00               	movlw	0
  3818  000B30  0101               	movlb	1	; () banked
  3819  000B32  0101               	movlb	1	; () banked
  3820  000B34  6F89               	movwf	(___awmod@divisor+1)& (0+255),b
  3821  000B36  0E05               	movlw	5
  3822  000B38  0101               	movlb	1	; () banked
  3823  000B3A  6F88               	movwf	___awmod@divisor& (0+255),b
  3824  000B3C  EC9A  F007         	call	___awmod	;wreg free
  3825  000B40  0101               	movlb	1	; () banked
  3826  000B42  0101               	movlb	1	; () banked
  3827  000B44  5186               	movf	?___awmod& (0+255),w,b
  3828  000B46  6EDF               	movwf	indf2,c
  3829                           
  3830                           ; BSR set to: 1
  3831                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3832  000B48  0101               	movlb	1	; () banked
  3833  000B4A  EE20 F002          	lfsr	2,2
  3834  000B4E  0101               	movlb	1	; () banked
  3835  000B50  519C               	movf	recv_msg@qmsg& (0+255),w,b
  3836  000B52  26D9               	addwf	fsr2l,f,c
  3837  000B54  0101               	movlb	1	; () banked
  3838  000B56  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3839  000B58  22DA               	addwfc	fsr2h,f,c
  3840  000B5A  C193  FFE1         	movff	recv_msg@msgtype,fsr1l
  3841  000B5E  C194  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3842  000B62  CFDF FFE7          	movff	indf2,indf1
  3843                           
  3844                           ; BSR set to: 1
  3845                           ;messages.c: 91: qmsg->full = 0;
  3846  000B66  C19C  FFD9         	movff	recv_msg@qmsg,fsr2l
  3847  000B6A  C19D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3848  000B6E  0E00               	movlw	0
  3849  000B70  6EDF               	movwf	indf2,c
  3850                           
  3851                           ; BSR set to: 1
  3852                           ;messages.c: 92: return (tlength);
  3853  000B72  0101               	movlb	1	; () banked
  3854  000B74  0101               	movlb	1	; () banked
  3855  000B76  519A               	movf	recv_msg@tlength& (0+255),w,b
  3856  000B78  0012               	return	
  3857  000B7A                     l4132:
  3858                           
  3859                           ; BSR set to: 1
  3860                           ;messages.c: 94: return (-4);
  3861  000B7A  0EFC               	movlw	252
  3862  000B7C  0012               	return	
  3863  000B7E                     __end_of_recv_msg:
  3864                           	opt stack 0
  3865                           tblptru	equ	0xFF8
  3866                           tblptrh	equ	0xFF7
  3867                           tblptrl	equ	0xFF6
  3868                           tablat	equ	0xFF5
  3869                           prodh	equ	0xFF4
  3870                           prodl	equ	0xFF3
  3871                           intcon	equ	0xFF2
  3872                           postinc0	equ	0xFEE
  3873                           wreg	equ	0xFE8
  3874                           indf1	equ	0xFE7
  3875                           postdec1	equ	0xFE5
  3876                           fsr1h	equ	0xFE2
  3877                           fsr1l	equ	0xFE1
  3878                           indf2	equ	0xFDF
  3879                           postinc2	equ	0xFDE
  3880                           postdec2	equ	0xFDD
  3881                           fsr2h	equ	0xFDA
  3882                           fsr2l	equ	0xFD9
  3883                           status	equ	0xFD8
  3884                           
  3885 ;; *************** function _SetChanADC *****************
  3886 ;; Defined at:
  3887 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  channel         1    wreg     unsigned char 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  channel         1    1[BANK1 ] unsigned char 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;		None               void
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3901 ;;      Params:         0       0       0       0       0
  3902 ;;      Locals:         0       0       1       0       0
  3903 ;;      Temps:          0       0       1       0       0
  3904 ;;      Totals:         0       0       2       0       0
  3905 ;;Total ram usage:        2 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:   11
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_main
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text22
  3916  001F2C                     __ptext22:
  3917                           	opt stack 0
  3918  001F2C                     _SetChanADC:
  3919                           	opt stack 19
  3920                           
  3921                           ; BSR set to: 1
  3922                           ;incstack = 0
  3923                           ;SetChanADC@channel stored from wreg
  3924  001F2C  CFE8 F187          	movff	wreg,SetChanADC@channel
  3925  001F30  CFC2 F186          	movff	4034,??_SetChanADC	;volatile
  3926  001F34  0EC3               	movlw	195
  3927  001F36  0101               	movlb	1	; () banked
  3928  001F38  1786               	andwf	??_SetChanADC& (0+255),f,b
  3929  001F3A  0101               	movlb	1	; () banked
  3930  001F3C  0101               	movlb	1	; () banked
  3931  001F3E  90D8               	bcf	status,0,c
  3932  001F40  3187               	rrcf	SetChanADC@channel& (0+255),w,b
  3933  001F42  0B3C               	andlw	60
  3934  001F44  0101               	movlb	1	; () banked
  3935  001F46  1186               	iorwf	??_SetChanADC& (0+255),w,b
  3936  001F48  6EC2               	movwf	4034,c	;volatile
  3937                           
  3938                           ; BSR set to: 1
  3939  001F4A  0012               	return	
  3940  001F4C                     __end_of_SetChanADC:
  3941                           	opt stack 0
  3942                           tblptru	equ	0xFF8
  3943                           tblptrh	equ	0xFF7
  3944                           tblptrl	equ	0xFF6
  3945                           tablat	equ	0xFF5
  3946                           prodh	equ	0xFF4
  3947                           prodl	equ	0xFF3
  3948                           intcon	equ	0xFF2
  3949                           postinc0	equ	0xFEE
  3950                           wreg	equ	0xFE8
  3951                           indf1	equ	0xFE7
  3952                           postdec1	equ	0xFE5
  3953                           fsr1h	equ	0xFE2
  3954                           fsr1l	equ	0xFE1
  3955                           indf2	equ	0xFDF
  3956                           postinc2	equ	0xFDE
  3957                           postdec2	equ	0xFDD
  3958                           fsr2h	equ	0xFDA
  3959                           fsr2l	equ	0xFD9
  3960                           status	equ	0xFD8
  3961                           
  3962 ;; *************** function _OpenUSART *****************
  3963 ;; Defined at:
  3964 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;  config          1    wreg     unsigned char 
  3967 ;;  spbrg           2    0[BANK1 ] unsigned int 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;  config          1    5[BANK1 ] unsigned char 
  3970 ;; Return value:  Size  Location     Type
  3971 ;;		None               void
  3972 ;; Registers used:
  3973 ;;		wreg, status,2
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3979 ;;      Params:         0       0       2       0       0
  3980 ;;      Locals:         0       0       1       0       0
  3981 ;;      Temps:          0       0       3       0       0
  3982 ;;      Totals:         0       0       6       0       0
  3983 ;;Total ram usage:        6 bytes
  3984 ;; Hardware stack levels used:    1
  3985 ;; Hardware stack levels required when called:   11
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_main
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           	psect	text23
  3994  00155C                     __ptext23:
  3995                           	opt stack 0
  3996  00155C                     _OpenUSART:
  3997                           	opt stack 19
  3998                           
  3999                           ; BSR set to: 1
  4000                           ;incstack = 0
  4001                           ;OpenUSART@config stored from wreg
  4002  00155C  CFE8 F18B          	movff	wreg,OpenUSART@config
  4003  001560  0E00               	movlw	0
  4004  001562  6EAC               	movwf	4012,c	;volatile
  4005  001564  0E00               	movlw	0
  4006  001566  6EAB               	movwf	4011,c	;volatile
  4007  001568  0101               	movlb	1	; () banked
  4008  00156A  0101               	movlb	1	; () banked
  4009  00156C  B18B               	btfsc	OpenUSART@config& (0+255),0,b
  4010                           
  4011                           ; BSR set to: 1
  4012  00156E  88AC               	bsf	4012,4,c	;volatile
  4013                           
  4014                           ; BSR set to: 1
  4015                           
  4016                           ; BSR set to: 1
  4017  001570  0101               	movlb	1	; () banked
  4018  001572  0101               	movlb	1	; () banked
  4019  001574  A38B               	btfss	OpenUSART@config& (0+255),1,b
  4020  001576  D002               	goto	l3948
  4021                           
  4022                           ; BSR set to: 1
  4023  001578  8CAC               	bsf	4012,6,c	;volatile
  4024  00157A  8CAB               	bsf	4011,6,c	;volatile
  4025  00157C                     l3948:
  4026                           
  4027                           ; BSR set to: 1
  4028  00157C  0101               	movlb	1	; () banked
  4029  00157E  0101               	movlb	1	; () banked
  4030  001580  B58B               	btfsc	OpenUSART@config& (0+255),2,b
  4031                           
  4032                           ; BSR set to: 1
  4033  001582  8EAC               	bsf	4012,7,c	;volatile
  4034                           
  4035                           ; BSR set to: 1
  4036                           
  4037                           ; BSR set to: 1
  4038  001584  0101               	movlb	1	; () banked
  4039  001586  0101               	movlb	1	; () banked
  4040  001588  A78B               	btfss	OpenUSART@config& (0+255),3,b
  4041  00158A  D002               	goto	l573
  4042                           
  4043                           ; BSR set to: 1
  4044  00158C  88AB               	bsf	4011,4,c	;volatile
  4045  00158E  D001               	goto	l3956
  4046  001590                     l573:
  4047                           
  4048                           ; BSR set to: 1
  4049  001590  8AAB               	bsf	4011,5,c	;volatile
  4050  001592                     l3956:
  4051                           
  4052                           ; BSR set to: 1
  4053  001592  0101               	movlb	1	; () banked
  4054  001594  0101               	movlb	1	; () banked
  4055  001596  B98B               	btfsc	OpenUSART@config& (0+255),4,b
  4056                           
  4057                           ; BSR set to: 1
  4058  001598  84AC               	bsf	4012,2,c	;volatile
  4059                           
  4060                           ; BSR set to: 1
  4061  00159A  989E               	bcf	3998,4,c	;volatile
  4062                           
  4063                           ; BSR set to: 1
  4064  00159C  0101               	movlb	1	; () banked
  4065  00159E  0101               	movlb	1	; () banked
  4066  0015A0  BB8B               	btfsc	OpenUSART@config& (0+255),5,b
  4067                           
  4068                           ; BSR set to: 1
  4069  0015A2  86AB               	bsf	4011,3,c	;volatile
  4070                           
  4071                           ; BSR set to: 1
  4072                           
  4073                           ; BSR set to: 1
  4074  0015A4  0101               	movlb	1	; () banked
  4075  0015A6  0101               	movlb	1	; () banked
  4076  0015A8  AD8B               	btfss	OpenUSART@config& (0+255),6,b
  4077  0015AA  D002               	goto	l577
  4078                           
  4079                           ; BSR set to: 1
  4080  0015AC  8A9D               	bsf	3997,5,c	;volatile
  4081  0015AE  D001               	goto	l578
  4082  0015B0                     l577:
  4083                           
  4084                           ; BSR set to: 1
  4085  0015B0  9A9D               	bcf	3997,5,c	;volatile
  4086  0015B2                     l578:
  4087                           
  4088                           ; BSR set to: 1
  4089  0015B2  9A9E               	bcf	3998,5,c	;volatile
  4090                           
  4091                           ; BSR set to: 1
  4092  0015B4  0101               	movlb	1	; () banked
  4093  0015B6  0101               	movlb	1	; () banked
  4094  0015B8  AF8B               	btfss	OpenUSART@config& (0+255),7,b
  4095  0015BA  D002               	goto	l579
  4096                           
  4097                           ; BSR set to: 1
  4098  0015BC  889D               	bsf	3997,4,c	;volatile
  4099  0015BE  D001               	goto	l580
  4100  0015C0                     l579:
  4101                           
  4102                           ; BSR set to: 1
  4103  0015C0  989D               	bcf	3997,4,c	;volatile
  4104  0015C2                     l580:
  4105                           
  4106                           ; BSR set to: 1
  4107  0015C2  C186  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4108                           
  4109                           ; BSR set to: 1
  4110  0015C6  0101               	movlb	1	; () banked
  4111  0015C8  C187  F188         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4112  0015CC  C188  F189         	movff	??_OpenUSART,??_OpenUSART+1
  4113  0015D0  0101               	movlb	1	; () banked
  4114  0015D2  6B8A               	clrf	(??_OpenUSART+2)& (0+255),b
  4115  0015D4  0101               	movlb	1	; () banked
  4116  0015D6  5189               	movf	(??_OpenUSART+1)& (0+255),w,b
  4117  0015D8  6EB0               	movwf	4016,c	;volatile
  4118                           
  4119                           ; BSR set to: 1
  4120  0015DA  8AAC               	bsf	4012,5,c	;volatile
  4121                           
  4122                           ; BSR set to: 1
  4123  0015DC  8EAB               	bsf	4011,7,c	;volatile
  4124                           
  4125                           ; BSR set to: 1
  4126  0015DE  9C94               	bcf	3988,6,c	;volatile
  4127                           
  4128                           ; BSR set to: 1
  4129  0015E0  8E94               	bsf	3988,7,c	;volatile
  4130                           
  4131                           ; BSR set to: 1
  4132  0015E2  A8AC               	btfss	4012,4,c	;volatile
  4133  0015E4  0012               	return	
  4134                           
  4135                           ; BSR set to: 1
  4136  0015E6  BEAC               	btfsc	4012,7,c	;volatile
  4137  0015E8  0012               	return	
  4138                           
  4139                           ; BSR set to: 1
  4140  0015EA  8C94               	bsf	3988,6,c	;volatile
  4141  0015EC  0012               	return	
  4142  0015EE                     __end_of_OpenUSART:
  4143                           	opt stack 0
  4144                           tblptru	equ	0xFF8
  4145                           tblptrh	equ	0xFF7
  4146                           tblptrl	equ	0xFF6
  4147                           tablat	equ	0xFF5
  4148                           prodh	equ	0xFF4
  4149                           prodl	equ	0xFF3
  4150                           intcon	equ	0xFF2
  4151                           postinc0	equ	0xFEE
  4152                           wreg	equ	0xFE8
  4153                           indf1	equ	0xFE7
  4154                           postdec1	equ	0xFE5
  4155                           fsr1h	equ	0xFE2
  4156                           fsr1l	equ	0xFE1
  4157                           indf2	equ	0xFDF
  4158                           postinc2	equ	0xFDE
  4159                           postdec2	equ	0xFDD
  4160                           fsr2h	equ	0xFDA
  4161                           fsr2l	equ	0xFD9
  4162                           status	equ	0xFD8
  4163                           
  4164 ;; *************** function _OpenTimer1 *****************
  4165 ;; Defined at:
  4166 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  config          1    wreg     unsigned char 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;  config          1    0[BANK1 ] unsigned char 
  4171 ;; Return value:  Size  Location     Type
  4172 ;;		None               void
  4173 ;; Registers used:
  4174 ;;		wreg, status,2, status,0
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4180 ;;      Params:         0       0       0       0       0
  4181 ;;      Locals:         0       0       1       0       0
  4182 ;;      Temps:          0       0       0       0       0
  4183 ;;      Totals:         0       0       1       0       0
  4184 ;;Total ram usage:        1 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; Hardware stack levels required when called:   11
  4187 ;; This function calls:
  4188 ;;		Nothing
  4189 ;; This function is called by:
  4190 ;;		_main
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text24
  4195  001D5E                     __ptext24:
  4196                           	opt stack 0
  4197  001D5E                     _OpenTimer1:
  4198                           	opt stack 19
  4199                           
  4200                           ; BSR set to: 1
  4201                           ;incstack = 0
  4202                           ;OpenTimer1@config stored from wreg
  4203  001D5E  CFE8 F186          	movff	wreg,OpenTimer1@config
  4204  001D62  0101               	movlb	1	; () banked
  4205  001D64  0101               	movlb	1	; () banked
  4206  001D66  5186               	movf	OpenTimer1@config& (0+255),w,b
  4207  001D68  0B7E               	andlw	126
  4208  001D6A  6ECD               	movwf	4045,c	;volatile
  4209                           
  4210                           ; BSR set to: 1
  4211  001D6C  0101               	movlb	1	; () banked
  4212  001D6E  0101               	movlb	1	; () banked
  4213  001D70  AD86               	btfss	OpenTimer1@config& (0+255),6,b
  4214  001D72  D002               	goto	l536
  4215                           
  4216                           ; BSR set to: 1
  4217  001D74  8ECD               	bsf	4045,7,c	;volatile
  4218  001D76  D001               	goto	l3908
  4219  001D78                     l536:
  4220                           
  4221                           ; BSR set to: 1
  4222  001D78  9ECD               	bcf	4045,7,c	;volatile
  4223  001D7A                     l3908:
  4224                           
  4225                           ; BSR set to: 1
  4226  001D7A  0E00               	movlw	0
  4227  001D7C  6ECF               	movwf	4047,c	;volatile
  4228  001D7E  0E00               	movlw	0
  4229  001D80  6ECE               	movwf	4046,c	;volatile
  4230                           
  4231                           ; BSR set to: 1
  4232  001D82  909E               	bcf	3998,0,c	;volatile
  4233                           
  4234                           ; BSR set to: 1
  4235  001D84  0101               	movlb	1	; () banked
  4236  001D86  0101               	movlb	1	; () banked
  4237  001D88  AF86               	btfss	OpenTimer1@config& (0+255),7,b
  4238  001D8A  D002               	goto	l538
  4239                           
  4240                           ; BSR set to: 1
  4241  001D8C  809D               	bsf	3997,0,c	;volatile
  4242  001D8E  D001               	goto	l539
  4243  001D90                     l538:
  4244                           
  4245                           ; BSR set to: 1
  4246  001D90  909D               	bcf	3997,0,c	;volatile
  4247  001D92                     l539:
  4248                           
  4249                           ; BSR set to: 1
  4250  001D92  80CD               	bsf	4045,0,c	;volatile
  4251                           
  4252                           ; BSR set to: 1
  4253  001D94  0012               	return	
  4254  001D96                     __end_of_OpenTimer1:
  4255                           	opt stack 0
  4256                           tblptru	equ	0xFF8
  4257                           tblptrh	equ	0xFF7
  4258                           tblptrl	equ	0xFF6
  4259                           tablat	equ	0xFF5
  4260                           prodh	equ	0xFF4
  4261                           prodl	equ	0xFF3
  4262                           intcon	equ	0xFF2
  4263                           postinc0	equ	0xFEE
  4264                           wreg	equ	0xFE8
  4265                           indf1	equ	0xFE7
  4266                           postdec1	equ	0xFE5
  4267                           fsr1h	equ	0xFE2
  4268                           fsr1l	equ	0xFE1
  4269                           indf2	equ	0xFDF
  4270                           postinc2	equ	0xFDE
  4271                           postdec2	equ	0xFDD
  4272                           fsr2h	equ	0xFDA
  4273                           fsr2l	equ	0xFD9
  4274                           status	equ	0xFD8
  4275                           
  4276 ;; *************** function _OpenTimer0 *****************
  4277 ;; Defined at:
  4278 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;  config          1    wreg     unsigned char 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;  config          1    0[BANK1 ] unsigned char 
  4283 ;; Return value:  Size  Location     Type
  4284 ;;		None               void
  4285 ;; Registers used:
  4286 ;;		wreg, status,2, status,0
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4292 ;;      Params:         0       0       0       0       0
  4293 ;;      Locals:         0       0       1       0       0
  4294 ;;      Temps:          0       0       0       0       0
  4295 ;;      Totals:         0       0       1       0       0
  4296 ;;Total ram usage:        1 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:   11
  4299 ;; This function calls:
  4300 ;;		Nothing
  4301 ;; This function is called by:
  4302 ;;		_main
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text25
  4307  001E6E                     __ptext25:
  4308                           	opt stack 0
  4309  001E6E                     _OpenTimer0:
  4310                           	opt stack 19
  4311                           
  4312                           ; BSR set to: 1
  4313                           ;incstack = 0
  4314                           ;OpenTimer0@config stored from wreg
  4315  001E6E  CFE8 F186          	movff	wreg,OpenTimer0@config
  4316  001E72  0101               	movlb	1	; () banked
  4317  001E74  0101               	movlb	1	; () banked
  4318  001E76  5186               	movf	OpenTimer0@config& (0+255),w,b
  4319  001E78  0B7F               	andlw	127
  4320  001E7A  6ED5               	movwf	4053,c	;volatile
  4321                           
  4322                           ; BSR set to: 1
  4323  001E7C  0E00               	movlw	0
  4324  001E7E  6ED7               	movwf	4055,c	;volatile
  4325                           
  4326                           ; BSR set to: 1
  4327  001E80  0E00               	movlw	0
  4328  001E82  6ED6               	movwf	4054,c	;volatile
  4329                           
  4330                           ; BSR set to: 1
  4331  001E84  94F2               	bcf	intcon,2,c	;volatile
  4332                           
  4333                           ; BSR set to: 1
  4334  001E86  0101               	movlb	1	; () banked
  4335  001E88  0101               	movlb	1	; () banked
  4336  001E8A  AF86               	btfss	OpenTimer0@config& (0+255),7,b
  4337  001E8C  D002               	goto	l512
  4338                           
  4339                           ; BSR set to: 1
  4340  001E8E  8AF2               	bsf	intcon,5,c	;volatile
  4341  001E90  D001               	goto	l513
  4342  001E92                     l512:
  4343                           
  4344                           ; BSR set to: 1
  4345  001E92  9AF2               	bcf	intcon,5,c	;volatile
  4346  001E94                     l513:
  4347                           
  4348                           ; BSR set to: 1
  4349  001E94  8ED5               	bsf	4053,7,c	;volatile
  4350                           
  4351                           ; BSR set to: 1
  4352  001E96  0012               	return	
  4353  001E98                     __end_of_OpenTimer0:
  4354                           	opt stack 0
  4355                           tblptru	equ	0xFF8
  4356                           tblptrh	equ	0xFF7
  4357                           tblptrl	equ	0xFF6
  4358                           tablat	equ	0xFF5
  4359                           prodh	equ	0xFF4
  4360                           prodl	equ	0xFF3
  4361                           intcon	equ	0xFF2
  4362                           postinc0	equ	0xFEE
  4363                           wreg	equ	0xFE8
  4364                           indf1	equ	0xFE7
  4365                           postdec1	equ	0xFE5
  4366                           fsr1h	equ	0xFE2
  4367                           fsr1l	equ	0xFE1
  4368                           indf2	equ	0xFDF
  4369                           postinc2	equ	0xFDE
  4370                           postdec2	equ	0xFDD
  4371                           fsr2h	equ	0xFDA
  4372                           fsr2l	equ	0xFD9
  4373                           status	equ	0xFD8
  4374                           
  4375 ;; *************** function _OpenADC *****************
  4376 ;; Defined at:
  4377 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;  config          1    wreg     unsigned char 
  4380 ;;  config2         1    0[BANK1 ] unsigned char 
  4381 ;;  portconfig      1    1[BANK1 ] unsigned char 
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;  config          1    4[BANK1 ] unsigned char 
  4384 ;; Return value:  Size  Location     Type
  4385 ;;		None               void
  4386 ;; Registers used:
  4387 ;;		wreg, status,2, status,0
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4393 ;;      Params:         0       0       2       0       0
  4394 ;;      Locals:         0       0       1       0       0
  4395 ;;      Temps:          0       0       2       0       0
  4396 ;;      Totals:         0       0       5       0       0
  4397 ;;Total ram usage:        5 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; Hardware stack levels required when called:   11
  4400 ;; This function calls:
  4401 ;;		Nothing
  4402 ;; This function is called by:
  4403 ;;		_main
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text26
  4408  001678                     __ptext26:
  4409                           	opt stack 0
  4410  001678                     _OpenADC:
  4411                           	opt stack 19
  4412                           
  4413                           ; BSR set to: 1
  4414                           ;incstack = 0
  4415                           ;OpenADC@config stored from wreg
  4416  001678  CFE8 F18A          	movff	wreg,OpenADC@config
  4417  00167C  0E00               	movlw	0
  4418  00167E  6EC2               	movwf	4034,c	;volatile
  4419  001680  0E00               	movlw	0
  4420  001682  6EC0               	movwf	4032,c	;volatile
  4421  001684  0101               	movlb	1	; () banked
  4422  001686  0101               	movlb	1	; () banked
  4423  001688  90D8               	bcf	status,0,c
  4424  00168A  3186               	rrcf	OpenADC@config2& (0+255),w,b
  4425  00168C  0B3C               	andlw	60
  4426  00168E  6EC2               	movwf	4034,c	;volatile
  4427                           
  4428                           ; BSR set to: 1
  4429  001690  C186  F188         	movff	OpenADC@config2,??_OpenADC
  4430  001694  0101               	movlb	1	; () banked
  4431  001696  3B88               	swapf	??_OpenADC& (0+255),f,b
  4432  001698  0EF0               	movlw	240
  4433  00169A  1788               	andwf	??_OpenADC& (0+255),f,b
  4434  00169C  0E30               	movlw	48
  4435  00169E  0101               	movlb	1	; () banked
  4436  0016A0  1788               	andwf	??_OpenADC& (0+255),f,b
  4437  0016A2  0101               	movlb	1	; () banked
  4438  0016A4  0101               	movlb	1	; () banked
  4439  0016A6  5187               	movf	OpenADC@portconfig& (0+255),w,b
  4440  0016A8  0B0F               	andlw	15
  4441  0016AA  0101               	movlb	1	; () banked
  4442  0016AC  1188               	iorwf	??_OpenADC& (0+255),w,b
  4443  0016AE  6EC1               	movwf	4033,c	;volatile
  4444                           
  4445                           ; BSR set to: 1
  4446  0016B0  C18A  F188         	movff	OpenADC@config,??_OpenADC
  4447  0016B4  0101               	movlb	1	; () banked
  4448  0016B6  90D8               	bcf	status,0,c
  4449  0016B8  3788               	rlcf	??_OpenADC& (0+255),f,b
  4450  0016BA  0101               	movlb	1	; () banked
  4451  0016BC  90D8               	bcf	status,0,c
  4452  0016BE  3788               	rlcf	??_OpenADC& (0+255),f,b
  4453  0016C0  0E38               	movlw	56
  4454  0016C2  0101               	movlb	1	; () banked
  4455  0016C4  1788               	andwf	??_OpenADC& (0+255),f,b
  4456  0016C6  C18A  F189         	movff	OpenADC@config,??_OpenADC+1
  4457  0016CA  0101               	movlb	1	; () banked
  4458  0016CC  3B89               	swapf	(??_OpenADC+1)& (0+255),f,b
  4459  0016CE  0E0F               	movlw	15
  4460  0016D0  1789               	andwf	(??_OpenADC+1)& (0+255),f,b
  4461  0016D2  0E07               	movlw	7
  4462  0016D4  0101               	movlb	1	; () banked
  4463  0016D6  1789               	andwf	(??_OpenADC+1)& (0+255),f,b
  4464  0016D8  0101               	movlb	1	; () banked
  4465  0016DA  0101               	movlb	1	; () banked
  4466  0016DC  518A               	movf	OpenADC@config& (0+255),w,b
  4467  0016DE  0B80               	andlw	128
  4468  0016E0  0101               	movlb	1	; () banked
  4469  0016E2  1189               	iorwf	(??_OpenADC+1)& (0+255),w,b
  4470  0016E4  0101               	movlb	1	; () banked
  4471  0016E6  1188               	iorwf	??_OpenADC& (0+255),w,b
  4472  0016E8  6EC0               	movwf	4032,c	;volatile
  4473                           
  4474                           ; BSR set to: 1
  4475  0016EA  0101               	movlb	1	; () banked
  4476  0016EC  0101               	movlb	1	; () banked
  4477  0016EE  AF86               	btfss	OpenADC@config2& (0+255),7,b
  4478  0016F0  D003               	goto	l493
  4479                           
  4480                           ; BSR set to: 1
  4481  0016F2  9C9E               	bcf	3998,6,c	;volatile
  4482  0016F4  8C9D               	bsf	3997,6,c	;volatile
  4483  0016F6  8CF2               	bsf	intcon,6,c	;volatile
  4484  0016F8                     l493:
  4485                           
  4486                           ; BSR set to: 1
  4487  0016F8  80C2               	bsf	4034,0,c	;volatile
  4488                           
  4489                           ; BSR set to: 1
  4490  0016FA  0012               	return	
  4491  0016FC                     __end_of_OpenADC:
  4492                           	opt stack 0
  4493                           tblptru	equ	0xFF8
  4494                           tblptrh	equ	0xFF7
  4495                           tblptrl	equ	0xFF6
  4496                           tablat	equ	0xFF5
  4497                           prodh	equ	0xFF4
  4498                           prodl	equ	0xFF3
  4499                           intcon	equ	0xFF2
  4500                           postinc0	equ	0xFEE
  4501                           wreg	equ	0xFE8
  4502                           indf1	equ	0xFE7
  4503                           postdec1	equ	0xFE5
  4504                           fsr1h	equ	0xFE2
  4505                           fsr1l	equ	0xFE1
  4506                           indf2	equ	0xFDF
  4507                           postinc2	equ	0xFDE
  4508                           postdec2	equ	0xFDD
  4509                           fsr2h	equ	0xFDA
  4510                           fsr2l	equ	0xFD9
  4511                           status	equ	0xFD8
  4512                           
  4513 ;; *************** function _FromMainLow_sendmsg *****************
  4514 ;; Defined at:
  4515 ;;		line 150 in file "../src/messages.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  length          1    wreg     unsigned char 
  4518 ;;  msgtype         1   22[BANK1 ] unsigned char 
  4519 ;;  data            2   23[BANK1 ] PTR void 
  4520 ;;		 -> main@msgbuffer(11), 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  length          1   25[BANK1 ] unsigned char 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  1    wreg      char 
  4525 ;; Registers used:
  4526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4532 ;;      Params:         0       0       3       0       0
  4533 ;;      Locals:         0       0       1       0       0
  4534 ;;      Temps:          0       0       0       0       0
  4535 ;;      Totals:         0       0       4       0       0
  4536 ;;Total ram usage:        4 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:   13
  4539 ;; This function calls:
  4540 ;;		_send_msg
  4541 ;; This function is called by:
  4542 ;;		_main
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text27
  4547  001E02                     __ptext27:
  4548                           	opt stack 0
  4549  001E02                     _FromMainLow_sendmsg:
  4550                           	opt stack 17
  4551                           
  4552                           ; BSR set to: 1
  4553                           ;incstack = 0
  4554                           ;FromMainLow_sendmsg@length stored from wreg
  4555  001E02  CFE8 F19F          	movff	wreg,FromMainLow_sendmsg@length
  4556                           
  4557                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  4558                           ;	Return value of _FromMainLow_sendmsg is never used
  4559  001E06  0102               	movlb	2	; () banked
  4560  001E08  0E02               	movlw	high _FromMainLow_MQ
  4561  001E0A  0101               	movlb	1	; () banked
  4562  001E0C  0101               	movlb	1	; () banked
  4563  001E0E  6F91               	movwf	(send_msg@qptr+1)& (0+255),b
  4564  001E10  0102               	movlb	2	; () banked
  4565  001E12  0E43               	movlw	low _FromMainLow_MQ
  4566  001E14  0101               	movlb	1	; () banked
  4567  001E16  0101               	movlb	1	; () banked
  4568  001E18  6F90               	movwf	send_msg@qptr& (0+255),b
  4569  001E1A  C19F  F192         	movff	FromMainLow_sendmsg@length,send_msg@length
  4570  001E1E  C19C  F193         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  4571  001E22  0101               	movlb	1	; () banked
  4572  001E24  0101               	movlb	1	; () banked
  4573  001E26  C19E  F195         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  4574  001E2A  0101               	movlb	1	; () banked
  4575  001E2C  0101               	movlb	1	; () banked
  4576  001E2E  C19D  F194         	movff	FromMainLow_sendmsg@data,send_msg@data
  4577  001E32  EC6E  F006         	call	_send_msg	;wreg free
  4578  001E36  0012               	return	
  4579  001E38                     __end_of_FromMainLow_sendmsg:
  4580                           	opt stack 0
  4581                           tblptru	equ	0xFF8
  4582                           tblptrh	equ	0xFF7
  4583                           tblptrl	equ	0xFF6
  4584                           tablat	equ	0xFF5
  4585                           prodh	equ	0xFF4
  4586                           prodl	equ	0xFF3
  4587                           intcon	equ	0xFF2
  4588                           postinc0	equ	0xFEE
  4589                           wreg	equ	0xFE8
  4590                           indf1	equ	0xFE7
  4591                           postdec1	equ	0xFE5
  4592                           fsr1h	equ	0xFE2
  4593                           fsr1l	equ	0xFE1
  4594                           indf2	equ	0xFDF
  4595                           postinc2	equ	0xFDE
  4596                           postdec2	equ	0xFDD
  4597                           fsr2h	equ	0xFDA
  4598                           fsr2l	equ	0xFD9
  4599                           status	equ	0xFD8
  4600                           
  4601 ;; *************** function _send_msg *****************
  4602 ;; Defined at:
  4603 ;;		line 24 in file "../src/messages.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4606 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4607 ;;  length          1   12[BANK1 ] unsigned char 
  4608 ;;  msgtype         1   13[BANK1 ] unsigned char 
  4609 ;;  data            2   14[BANK1 ] PTR void 
  4610 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), 
  4611 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  4614 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4615 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4616 ;;  tlength         2   17[BANK1 ] unsigned int 
  4617 ;;  slot            1   19[BANK1 ] unsigned char 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      char 
  4620 ;; Registers used:
  4621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4627 ;;      Params:         0       0       6       0       0
  4628 ;;      Locals:         0       0       5       0       0
  4629 ;;      Temps:          0       0       1       0       0
  4630 ;;      Totals:         0       0      12       0       0
  4631 ;;Total ram usage:       12 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:   12
  4634 ;; This function calls:
  4635 ;;		___awmod
  4636 ;;		_memcpy
  4637 ;; This function is called by:
  4638 ;;		_FromMainLow_sendmsg
  4639 ;;		_FromMainHigh_sendmsg
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text28
  4644  000CDC                     __ptext28:
  4645                           	opt stack 0
  4646  000CDC                     _send_msg:
  4647                           	opt stack 16
  4648                           
  4649                           ;messages.c: 25: unsigned char slot;
  4650                           ;messages.c: 27: msg *qmsg;
  4651                           ;messages.c: 28: size_t tlength = length;
  4652                           
  4653                           ;incstack = 0
  4654  000CDC  0101               	movlb	1	; () banked
  4655  000CDE  0101               	movlb	1	; () banked
  4656  000CE0  C192  F197         	movff	send_msg@length,send_msg@tlength
  4657  000CE4  0101               	movlb	1	; () banked
  4658  000CE6  0101               	movlb	1	; () banked
  4659  000CE8  6B98               	clrf	(send_msg@tlength+1)& (0+255),b
  4660                           
  4661                           ; BSR set to: 1
  4662                           ;messages.c: 38: slot = qptr->cur_write_ind;
  4663  000CEA  0101               	movlb	1	; () banked
  4664  000CEC  EE20 F041          	lfsr	2,65
  4665  000CF0  0101               	movlb	1	; () banked
  4666  000CF2  5190               	movf	send_msg@qptr& (0+255),w,b
  4667  000CF4  26D9               	addwf	fsr2l,f,c
  4668  000CF6  0101               	movlb	1	; () banked
  4669  000CF8  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  4670  000CFA  22DA               	addwfc	fsr2h,f,c
  4671  000CFC  50DF               	movf	indf2,w,c
  4672  000CFE  0101               	movlb	1	; () banked
  4673  000D00  0101               	movlb	1	; () banked
  4674  000D02  6F99               	movwf	send_msg@slot& (0+255),b
  4675                           
  4676                           ; BSR set to: 1
  4677                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  4678  000D04  0101               	movlb	1	; () banked
  4679  000D06  0101               	movlb	1	; () banked
  4680  000D08  5199               	movf	send_msg@slot& (0+255),w,b
  4681  000D0A  0D0D               	mullw	13
  4682  000D0C  50F3               	movf	prodl,w,c
  4683  000D0E  0101               	movlb	1	; () banked
  4684  000D10  0101               	movlb	1	; () banked
  4685  000D12  2590               	addwf	send_msg@qptr& (0+255),w,b
  4686  000D14  0101               	movlb	1	; () banked
  4687  000D16  0101               	movlb	1	; () banked
  4688  000D18  6F9A               	movwf	send_msg@qmsg& (0+255),b
  4689  000D1A  50F4               	movf	prodh,w,c
  4690  000D1C  0101               	movlb	1	; () banked
  4691  000D1E  0101               	movlb	1	; () banked
  4692  000D20  2191               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  4693  000D22  0101               	movlb	1	; () banked
  4694  000D24  6F9B               	movwf	(send_msg@qmsg+1)& (0+255),b
  4695                           
  4696                           ; BSR set to: 1
  4697                           ;messages.c: 41: if (qmsg->full != 0) {
  4698  000D26  C19A  FFD9         	movff	send_msg@qmsg,fsr2l
  4699  000D2A  C19B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4700  000D2E  50DF               	movf	indf2,w,c
  4701  000D30  B4D8               	btfsc	status,2,c
  4702  000D32  D002               	goto	l4082
  4703                           
  4704                           ; BSR set to: 1
  4705                           ;messages.c: 42: return (-1);
  4706  000D34  0EFF               	movlw	255
  4707  000D36  0012               	return	
  4708  000D38                     l4082:
  4709                           
  4710                           ; BSR set to: 1
  4711                           ;messages.c: 43: }
  4712                           ;messages.c: 46: qmsg->length = length;
  4713  000D38  0101               	movlb	1	; () banked
  4714  000D3A  EE20 F001          	lfsr	2,1
  4715  000D3E  0101               	movlb	1	; () banked
  4716  000D40  519A               	movf	send_msg@qmsg& (0+255),w,b
  4717  000D42  26D9               	addwf	fsr2l,f,c
  4718  000D44  0101               	movlb	1	; () banked
  4719  000D46  519B               	movf	(send_msg@qmsg+1)& (0+255),w,b
  4720  000D48  22DA               	addwfc	fsr2h,f,c
  4721  000D4A  0101               	movlb	1	; () banked
  4722  000D4C  C192  FFDF         	movff	send_msg@length,indf2
  4723                           
  4724                           ;messages.c: 47: qmsg->msgtype = msgtype;
  4725  000D50  0101               	movlb	1	; () banked
  4726  000D52  EE20 F002          	lfsr	2,2
  4727  000D56  0101               	movlb	1	; () banked
  4728  000D58  519A               	movf	send_msg@qmsg& (0+255),w,b
  4729  000D5A  26D9               	addwf	fsr2l,f,c
  4730  000D5C  0101               	movlb	1	; () banked
  4731  000D5E  519B               	movf	(send_msg@qmsg+1)& (0+255),w,b
  4732  000D60  22DA               	addwfc	fsr2h,f,c
  4733  000D62  0101               	movlb	1	; () banked
  4734  000D64  C193  FFDF         	movff	send_msg@msgtype,indf2
  4735                           
  4736                           ; BSR set to: 1
  4737                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  4738  000D68  0E03               	movlw	3
  4739  000D6A  0101               	movlb	1	; () banked
  4740  000D6C  0101               	movlb	1	; () banked
  4741  000D6E  259A               	addwf	send_msg@qmsg& (0+255),w,b
  4742  000D70  0101               	movlb	1	; () banked
  4743  000D72  0101               	movlb	1	; () banked
  4744  000D74  6F86               	movwf	memcpy@d1& (0+255),b
  4745  000D76  0E00               	movlw	0
  4746  000D78  0101               	movlb	1	; () banked
  4747  000D7A  0101               	movlb	1	; () banked
  4748  000D7C  219B               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  4749  000D7E  0101               	movlb	1	; () banked
  4750  000D80  6F87               	movwf	(memcpy@d1+1)& (0+255),b
  4751  000D82  0101               	movlb	1	; () banked
  4752  000D84  0101               	movlb	1	; () banked
  4753  000D86  C195  F189         	movff	send_msg@data+1,memcpy@s1+1
  4754  000D8A  0101               	movlb	1	; () banked
  4755  000D8C  0101               	movlb	1	; () banked
  4756  000D8E  C194  F188         	movff	send_msg@data,memcpy@s1
  4757  000D92  C197  F18A         	movff	send_msg@tlength,memcpy@n
  4758  000D96  C198  F18B         	movff	send_msg@tlength+1,memcpy@n+1
  4759  000D9A  EC18  F00D         	call	_memcpy	;wreg free
  4760                           
  4761                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  4762  000D9E  0101               	movlb	1	; () banked
  4763  000DA0  EE20 F041          	lfsr	2,65
  4764  000DA4  0101               	movlb	1	; () banked
  4765  000DA6  5190               	movf	send_msg@qptr& (0+255),w,b
  4766  000DA8  26D9               	addwf	fsr2l,f,c
  4767  000DAA  0101               	movlb	1	; () banked
  4768  000DAC  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  4769  000DAE  22DA               	addwfc	fsr2h,f,c
  4770  000DB0  0101               	movlb	1	; () banked
  4771  000DB2  EE10 F041          	lfsr	1,65
  4772  000DB6  0101               	movlb	1	; () banked
  4773  000DB8  5190               	movf	send_msg@qptr& (0+255),w,b
  4774  000DBA  26E1               	addwf	fsr1l,f,c
  4775  000DBC  0101               	movlb	1	; () banked
  4776  000DBE  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  4777  000DC0  22E2               	addwfc	fsr1h,f,c
  4778  000DC2  50E7               	movf	indf1,w,c
  4779  000DC4  0101               	movlb	1	; () banked
  4780  000DC6  6F96               	movwf	??_send_msg& (0+255),b
  4781  000DC8  0E01               	movlw	1
  4782  000DCA  0101               	movlb	1	; () banked
  4783  000DCC  2596               	addwf	??_send_msg& (0+255),w,b
  4784  000DCE  0101               	movlb	1	; () banked
  4785  000DD0  0101               	movlb	1	; () banked
  4786  000DD2  6F86               	movwf	___awmod@dividend& (0+255),b
  4787  000DD4  0101               	movlb	1	; () banked
  4788  000DD6  0101               	movlb	1	; () banked
  4789  000DD8  6B87               	clrf	(___awmod@dividend+1)& (0+255),b
  4790  000DDA  0E00               	movlw	0
  4791  000DDC  2387               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4792  000DDE  0E00               	movlw	0
  4793  000DE0  0101               	movlb	1	; () banked
  4794  000DE2  0101               	movlb	1	; () banked
  4795  000DE4  6F89               	movwf	(___awmod@divisor+1)& (0+255),b
  4796  000DE6  0E05               	movlw	5
  4797  000DE8  0101               	movlb	1	; () banked
  4798  000DEA  6F88               	movwf	___awmod@divisor& (0+255),b
  4799  000DEC  EC9A  F007         	call	___awmod	;wreg free
  4800  000DF0  0101               	movlb	1	; () banked
  4801  000DF2  0101               	movlb	1	; () banked
  4802  000DF4  5186               	movf	?___awmod& (0+255),w,b
  4803  000DF6  6EDF               	movwf	indf2,c
  4804                           
  4805                           ; BSR set to: 1
  4806                           ;messages.c: 59: qmsg->full = 1;
  4807  000DF8  C19A  FFD9         	movff	send_msg@qmsg,fsr2l
  4808  000DFC  C19B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4809  000E00  0E01               	movlw	1
  4810  000E02  6EDF               	movwf	indf2,c
  4811                           
  4812                           ; BSR set to: 1
  4813                           ;messages.c: 60: return (1);
  4814  000E04  0E01               	movlw	1
  4815  000E06  0012               	return	
  4816  000E08                     __end_of_send_msg:
  4817                           	opt stack 0
  4818                           tblptru	equ	0xFF8
  4819                           tblptrh	equ	0xFF7
  4820                           tblptrl	equ	0xFF6
  4821                           tablat	equ	0xFF5
  4822                           prodh	equ	0xFF4
  4823                           prodl	equ	0xFF3
  4824                           intcon	equ	0xFF2
  4825                           postinc0	equ	0xFEE
  4826                           wreg	equ	0xFE8
  4827                           indf1	equ	0xFE7
  4828                           postdec1	equ	0xFE5
  4829                           fsr1h	equ	0xFE2
  4830                           fsr1l	equ	0xFE1
  4831                           indf2	equ	0xFDF
  4832                           postinc2	equ	0xFDE
  4833                           postdec2	equ	0xFDD
  4834                           fsr2h	equ	0xFDA
  4835                           fsr2l	equ	0xFD9
  4836                           status	equ	0xFD8
  4837                           
  4838 ;; *************** function _memcpy *****************
  4839 ;; Defined at:
  4840 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;  d1              2    0[BANK1 ] PTR void 
  4843 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4844 ;;		 -> i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), 
  4845 ;;		 -> ToMainLow_MQ(67), main@msgbuffer(11), 
  4846 ;;  s1              2    2[BANK1 ] PTR const void 
  4847 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4848 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4849 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  4850 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  4851 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  4852 ;;  n               2    4[BANK1 ] unsigned int 
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4855 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4856 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4857 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  4858 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  4859 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  4860 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4861 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4862 ;;		 -> i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), 
  4863 ;;		 -> ToMainLow_MQ(67), main@msgbuffer(11), 
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  2    0[BANK1 ] PTR void 
  4866 ;; Registers used:
  4867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4873 ;;      Params:         0       0       6       0       0
  4874 ;;      Locals:         0       0       4       0       0
  4875 ;;      Temps:          0       0       0       0       0
  4876 ;;      Totals:         0       0      10       0       0
  4877 ;;Total ram usage:       10 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; Hardware stack levels required when called:   11
  4880 ;; This function calls:
  4881 ;;		Nothing
  4882 ;; This function is called by:
  4883 ;;		_send_msg
  4884 ;;		_recv_msg
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           	psect	text29
  4889  001A30                     __ptext29:
  4890                           	opt stack 0
  4891  001A30                     _memcpy:
  4892                           	opt stack 16
  4893                           
  4894                           ; BSR set to: 1
  4895                           ;incstack = 0
  4896  001A30  0101               	movlb	1	; () banked
  4897  001A32  0101               	movlb	1	; () banked
  4898  001A34  C189  F18F         	movff	memcpy@s1+1,memcpy@s+1
  4899  001A38  0101               	movlb	1	; () banked
  4900  001A3A  0101               	movlb	1	; () banked
  4901  001A3C  C188  F18E         	movff	memcpy@s1,memcpy@s
  4902  001A40  0101               	movlb	1	; () banked
  4903  001A42  0101               	movlb	1	; () banked
  4904  001A44  C187  F18D         	movff	memcpy@d1+1,memcpy@d+1
  4905  001A48  0101               	movlb	1	; () banked
  4906  001A4A  0101               	movlb	1	; () banked
  4907  001A4C  C186  F18C         	movff	memcpy@d1,memcpy@d
  4908  001A50  D012               	goto	l4102
  4909  001A52                     l4096:
  4910                           
  4911                           ; BSR set to: 1
  4912  001A52  C18E  FFD9         	movff	memcpy@s,fsr2l
  4913  001A56  C18F  FFDA         	movff	memcpy@s+1,fsr2h
  4914  001A5A  C18C  FFE1         	movff	memcpy@d,fsr1l
  4915  001A5E  C18D  FFE2         	movff	memcpy@d+1,fsr1h
  4916  001A62  CFDF FFE7          	movff	indf2,indf1
  4917                           
  4918                           ; BSR set to: 1
  4919  001A66  0101               	movlb	1	; () banked
  4920  001A68  0101               	movlb	1	; () banked
  4921  001A6A  4B8E               	infsnz	memcpy@s& (0+255),f,b
  4922  001A6C  2B8F               	incf	(memcpy@s+1)& (0+255),f,b
  4923                           
  4924                           ; BSR set to: 1
  4925  001A6E  0101               	movlb	1	; () banked
  4926  001A70  0101               	movlb	1	; () banked
  4927  001A72  4B8C               	infsnz	memcpy@d& (0+255),f,b
  4928  001A74  2B8D               	incf	(memcpy@d+1)& (0+255),f,b
  4929  001A76                     l4102:
  4930                           
  4931                           ; BSR set to: 1
  4932  001A76  0101               	movlb	1	; () banked
  4933  001A78  0101               	movlb	1	; () banked
  4934  001A7A  078A               	decf	memcpy@n& (0+255),f,b
  4935  001A7C  A0D8               	btfss	status,0,c
  4936  001A7E  078B               	decf	(memcpy@n+1)& (0+255),f,b
  4937  001A80  0101               	movlb	1	; () banked
  4938  001A82  298A               	incf	memcpy@n& (0+255),w,b
  4939  001A84  B4D8               	btfsc	status,2,c
  4940  001A86  298B               	incf	(memcpy@n+1)& (0+255),w,b
  4941  001A88  B4D8               	btfsc	status,2,c
  4942                           
  4943                           ; BSR set to: 1
  4944                           
  4945                           ; BSR set to: 1
  4946                           ;	Return value of _memcpy is never used
  4947  001A8A  0012               	return	
  4948  001A8C  D7E2               	goto	l4096
  4949  001A8E                     __end_of_memcpy:
  4950                           	opt stack 0
  4951                           tblptru	equ	0xFF8
  4952                           tblptrh	equ	0xFF7
  4953                           tblptrl	equ	0xFF6
  4954                           tablat	equ	0xFF5
  4955                           prodh	equ	0xFF4
  4956                           prodl	equ	0xFF3
  4957                           intcon	equ	0xFF2
  4958                           postinc0	equ	0xFEE
  4959                           wreg	equ	0xFE8
  4960                           indf1	equ	0xFE7
  4961                           postdec1	equ	0xFE5
  4962                           fsr1h	equ	0xFE2
  4963                           fsr1l	equ	0xFE1
  4964                           indf2	equ	0xFDF
  4965                           postinc2	equ	0xFDE
  4966                           postdec2	equ	0xFDD
  4967                           fsr2h	equ	0xFDA
  4968                           fsr2l	equ	0xFD9
  4969                           status	equ	0xFD8
  4970                           
  4971 ;; *************** function ___awmod *****************
  4972 ;; Defined at:
  4973 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;  dividend        2    0[BANK1 ] int 
  4976 ;;  divisor         2    2[BANK1 ] int 
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;  sign            1    6[BANK1 ] unsigned char 
  4979 ;;  counter         1    5[BANK1 ] unsigned char 
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  2    0[BANK1 ] int 
  4982 ;; Registers used:
  4983 ;;		wreg, status,2, status,0, prodl
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4989 ;;      Params:         0       0       4       0       0
  4990 ;;      Locals:         0       0       2       0       0
  4991 ;;      Temps:          0       0       1       0       0
  4992 ;;      Totals:         0       0       7       0       0
  4993 ;;Total ram usage:        7 bytes
  4994 ;; Hardware stack levels used:    1
  4995 ;; Hardware stack levels required when called:   11
  4996 ;; This function calls:
  4997 ;;		Nothing
  4998 ;; This function is called by:
  4999 ;;		_send_msg
  5000 ;;		_recv_msg
  5001 ;;		i1_send_msg
  5002 ;;		i2_send_msg
  5003 ;;		i2_recv_msg
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007                           	psect	text30
  5008  000F34                     __ptext30:
  5009                           	opt stack 0
  5010  000F34                     ___awmod:
  5011                           	opt stack 16
  5012                           
  5013                           ; BSR set to: 1
  5014                           ;incstack = 0
  5015  000F34  0101               	movlb	1	; () banked
  5016  000F36  6F8A               	movwf	??___awmod& (0+255),b
  5017  000F38  0E00               	movlw	0
  5018  000F3A  0101               	movlb	1	; () banked
  5019  000F3C  0101               	movlb	1	; () banked
  5020  000F3E  6F8C               	movwf	___awmod@sign& (0+255),b
  5021  000F40  0101               	movlb	1	; () banked
  5022  000F42  518A               	movf	??___awmod& (0+255),w,b
  5023                           
  5024                           ; BSR set to: 1
  5025  000F44  0101               	movlb	1	; () banked
  5026  000F46  0101               	movlb	1	; () banked
  5027  000F48  5187               	movf	(___awmod@dividend+1)& (0+255),w,b
  5028  000F4A  0A80               	xorlw	128
  5029  000F4C  6EF3               	movwf	prodl,c
  5030  000F4E  0E80               	movlw	128
  5031  000F50  5CF3               	subwf	prodl,w,c
  5032  000F52  0E00               	movlw	0
  5033  000F54  B4D8               	btfsc	status,2,c
  5034  000F56  5D86               	subwf	___awmod@dividend& (0+255),w,b
  5035  000F58  B0D8               	btfsc	status,0,c
  5036  000F5A  D00F               	goto	l4422
  5037                           
  5038                           ; BSR set to: 1
  5039  000F5C  0101               	movlb	1	; () banked
  5040  000F5E  0101               	movlb	1	; () banked
  5041  000F60  6D86               	negf	___awmod@dividend& (0+255),b
  5042  000F62  0101               	movlb	1	; () banked
  5043  000F64  1F87               	comf	(___awmod@dividend+1)& (0+255),f,b
  5044  000F66  B0D8               	btfsc	status,0,c
  5045  000F68  2B87               	incf	(___awmod@dividend+1)& (0+255),f,b
  5046                           
  5047                           ; BSR set to: 1
  5048  000F6A  0101               	movlb	1	; () banked
  5049  000F6C  6F8A               	movwf	??___awmod& (0+255),b
  5050  000F6E  0E01               	movlw	1
  5051  000F70  0101               	movlb	1	; () banked
  5052  000F72  0101               	movlb	1	; () banked
  5053  000F74  6F8C               	movwf	___awmod@sign& (0+255),b
  5054  000F76  0101               	movlb	1	; () banked
  5055  000F78  518A               	movf	??___awmod& (0+255),w,b
  5056  000F7A                     l4422:
  5057                           
  5058                           ; BSR set to: 1
  5059  000F7A  0101               	movlb	1	; () banked
  5060  000F7C  0101               	movlb	1	; () banked
  5061  000F7E  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  5062  000F80  0A80               	xorlw	128
  5063  000F82  6EF3               	movwf	prodl,c
  5064  000F84  0E80               	movlw	128
  5065  000F86  5CF3               	subwf	prodl,w,c
  5066  000F88  0E00               	movlw	0
  5067  000F8A  B4D8               	btfsc	status,2,c
  5068  000F8C  5D88               	subwf	___awmod@divisor& (0+255),w,b
  5069  000F8E  B0D8               	btfsc	status,0,c
  5070  000F90  D007               	goto	l4426
  5071                           
  5072                           ; BSR set to: 1
  5073  000F92  0101               	movlb	1	; () banked
  5074  000F94  0101               	movlb	1	; () banked
  5075  000F96  6D88               	negf	___awmod@divisor& (0+255),b
  5076  000F98  0101               	movlb	1	; () banked
  5077  000F9A  1F89               	comf	(___awmod@divisor+1)& (0+255),f,b
  5078  000F9C  B0D8               	btfsc	status,0,c
  5079  000F9E  2B89               	incf	(___awmod@divisor+1)& (0+255),f,b
  5080  000FA0                     l4426:
  5081                           
  5082                           ; BSR set to: 1
  5083  000FA0  0101               	movlb	1	; () banked
  5084  000FA2  0101               	movlb	1	; () banked
  5085  000FA4  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  5086  000FA6  1188               	iorwf	___awmod@divisor& (0+255),w,b
  5087  000FA8  B4D8               	btfsc	status,2,c
  5088  000FAA  D03A               	goto	l4442
  5089                           
  5090                           ; BSR set to: 1
  5091  000FAC  0101               	movlb	1	; () banked
  5092  000FAE  6F8A               	movwf	??___awmod& (0+255),b
  5093  000FB0  0E01               	movlw	1
  5094  000FB2  0101               	movlb	1	; () banked
  5095  000FB4  0101               	movlb	1	; () banked
  5096  000FB6  6F8B               	movwf	___awmod@counter& (0+255),b
  5097  000FB8  0101               	movlb	1	; () banked
  5098  000FBA  518A               	movf	??___awmod& (0+255),w,b
  5099  000FBC  D009               	goto	l4432
  5100  000FBE                     l4430:
  5101                           
  5102                           ; BSR set to: 1
  5103  000FBE  0101               	movlb	1	; () banked
  5104  000FC0  0101               	movlb	1	; () banked
  5105  000FC2  0101               	movlb	1	; () banked
  5106  000FC4  90D8               	bcf	status,0,c
  5107  000FC6  3788               	rlcf	___awmod@divisor& (0+255),f,b
  5108  000FC8  3789               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5109  000FCA  0101               	movlb	1	; () banked
  5110  000FCC  0101               	movlb	1	; () banked
  5111  000FCE  2B8B               	incf	___awmod@counter& (0+255),f,b
  5112  000FD0                     l4432:
  5113                           
  5114                           ; BSR set to: 1
  5115  000FD0  0101               	movlb	1	; () banked
  5116  000FD2  0101               	movlb	1	; () banked
  5117  000FD4  AF89               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5118  000FD6  D7F3               	goto	l4430
  5119  000FD8                     l4434:
  5120                           
  5121                           ; BSR set to: 1
  5122  000FD8  0101               	movlb	1	; () banked
  5123  000FDA  0101               	movlb	1	; () banked
  5124  000FDC  5188               	movf	___awmod@divisor& (0+255),w,b
  5125  000FDE  0101               	movlb	1	; () banked
  5126  000FE0  0101               	movlb	1	; () banked
  5127  000FE2  5D86               	subwf	___awmod@dividend& (0+255),w,b
  5128  000FE4  0101               	movlb	1	; () banked
  5129  000FE6  0101               	movlb	1	; () banked
  5130  000FE8  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  5131  000FEA  0101               	movlb	1	; () banked
  5132  000FEC  0101               	movlb	1	; () banked
  5133  000FEE  5987               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5134  000FF0  A0D8               	btfss	status,0,c
  5135  000FF2  D00C               	goto	l4438
  5136                           
  5137                           ; BSR set to: 1
  5138  000FF4  0101               	movlb	1	; () banked
  5139  000FF6  0101               	movlb	1	; () banked
  5140  000FF8  5188               	movf	___awmod@divisor& (0+255),w,b
  5141  000FFA  0101               	movlb	1	; () banked
  5142  000FFC  0101               	movlb	1	; () banked
  5143  000FFE  5F86               	subwf	___awmod@dividend& (0+255),f,b
  5144  001000  0101               	movlb	1	; () banked
  5145  001002  0101               	movlb	1	; () banked
  5146  001004  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  5147  001006  0101               	movlb	1	; () banked
  5148  001008  0101               	movlb	1	; () banked
  5149  00100A  5B87               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5150  00100C                     l4438:
  5151                           
  5152                           ; BSR set to: 1
  5153  00100C  0101               	movlb	1	; () banked
  5154  00100E  0101               	movlb	1	; () banked
  5155  001010  0101               	movlb	1	; () banked
  5156  001012  90D8               	bcf	status,0,c
  5157  001014  3389               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5158  001016  3388               	rrcf	___awmod@divisor& (0+255),f,b
  5159                           
  5160                           ; BSR set to: 1
  5161  001018  0101               	movlb	1	; () banked
  5162  00101A  0101               	movlb	1	; () banked
  5163  00101C  2F8B               	decfsz	___awmod@counter& (0+255),f,b
  5164  00101E  D7DC               	goto	l4434
  5165  001020                     l4442:
  5166                           
  5167                           ; BSR set to: 1
  5168  001020  0101               	movlb	1	; () banked
  5169  001022  0101               	movlb	1	; () banked
  5170  001024  518C               	movf	___awmod@sign& (0+255),w,b
  5171  001026  B4D8               	btfsc	status,2,c
  5172  001028  D007               	goto	l4446
  5173                           
  5174                           ; BSR set to: 1
  5175  00102A  0101               	movlb	1	; () banked
  5176  00102C  0101               	movlb	1	; () banked
  5177  00102E  6D86               	negf	___awmod@dividend& (0+255),b
  5178  001030  0101               	movlb	1	; () banked
  5179  001032  1F87               	comf	(___awmod@dividend+1)& (0+255),f,b
  5180  001034  B0D8               	btfsc	status,0,c
  5181  001036  2B87               	incf	(___awmod@dividend+1)& (0+255),f,b
  5182  001038                     l4446:
  5183                           
  5184                           ; BSR set to: 1
  5185  001038  C186  F186         	movff	___awmod@dividend,?___awmod
  5186  00103C  C187  F187         	movff	___awmod@dividend+1,?___awmod+1
  5187  001040  0012               	return	
  5188  001042                     __end_of___awmod:
  5189                           	opt stack 0
  5190                           tblptru	equ	0xFF8
  5191                           tblptrh	equ	0xFF7
  5192                           tblptrl	equ	0xFF6
  5193                           tablat	equ	0xFF5
  5194                           prodh	equ	0xFF4
  5195                           prodl	equ	0xFF3
  5196                           intcon	equ	0xFF2
  5197                           postinc0	equ	0xFEE
  5198                           wreg	equ	0xFE8
  5199                           indf1	equ	0xFE7
  5200                           postdec1	equ	0xFE5
  5201                           fsr1h	equ	0xFE2
  5202                           fsr1l	equ	0xFE1
  5203                           indf2	equ	0xFDF
  5204                           postinc2	equ	0xFDE
  5205                           postdec2	equ	0xFDD
  5206                           fsr2h	equ	0xFDA
  5207                           fsr2l	equ	0xFD9
  5208                           status	equ	0xFD8
  5209                           
  5210 ;; *************** function _InterruptHandlerLow *****************
  5211 ;; Defined at:
  5212 ;;		line 126 in file "../src/interrupts.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;		None
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;		None
  5217 ;; Return value:  Size  Location     Type
  5218 ;;		None               void
  5219 ;; Registers used:
  5220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5226 ;;      Params:         0       0       0       0       0
  5227 ;;      Locals:         0       0       0       0       0
  5228 ;;      Temps:         17       0       0       0       0
  5229 ;;      Totals:        17       0       0       0       0
  5230 ;;Total ram usage:       17 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; Hardware stack levels required when called:   10
  5233 ;; This function calls:
  5234 ;;		_adc_int_handler
  5235 ;;		_timer1_int_handler
  5236 ;;		_uart_recv_int_handler
  5237 ;;		_uart_trans_int_handler
  5238 ;; This function is called by:
  5239 ;;		Interrupt level 1
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           	psect	intcodelo
  5244  000018                     __pintcodelo:
  5245                           	opt stack 0
  5246  000018                     _InterruptHandlerLow:
  5247                           	opt stack 16
  5248                           
  5249                           ; BSR set to: 1
  5250                           ;incstack = 0
  5251  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  5252  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  5253  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  5254  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  5255  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  5256  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  5257  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  5258  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  5259  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  5260  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  5261  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  5262  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  5263  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  5264  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  5265  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  5266  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  5267  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  5268                           
  5269                           ;interrupts.c: 128: if(PIR1bits.ADIF){
  5270  00005C  AC9E               	btfss	3998,6,c	;volatile
  5271  00005E  D003               	goto	i1l4646
  5272                           
  5273                           ;interrupts.c: 130: PIR1bits.ADIF = 0;
  5274  000060  9C9E               	bcf	3998,6,c	;volatile
  5275                           
  5276                           ;interrupts.c: 131: adc_int_handler();
  5277  000062  EC85  F00F         	call	_adc_int_handler	;wreg free
  5278  000066                     i1l4646:
  5279                           
  5280                           ;interrupts.c: 132: }
  5281                           ;interrupts.c: 135: if (PIR1bits.TMR1IF) {
  5282  000066  A09E               	btfss	3998,0,c	;volatile
  5283  000068  D003               	goto	i1l4652
  5284                           
  5285                           ;interrupts.c: 136: PIR1bits.TMR1IF = 0;
  5286  00006A  909E               	bcf	3998,0,c	;volatile
  5287                           
  5288                           ;interrupts.c: 137: timer1_int_handler();
  5289  00006C  EC05  F010         	call	_timer1_int_handler	;wreg free
  5290  000070                     i1l4652:
  5291                           
  5292                           ;interrupts.c: 139: }
  5293                           ;interrupts.c: 141: if (PIR1bits.TXIF) {
  5294  000070  B89E               	btfsc	3998,4,c	;volatile
  5295                           
  5296                           ;interrupts.c: 143: uart_trans_int_handler();
  5297  000072  ECE4  F00C         	call	_uart_trans_int_handler	;wreg free
  5298                           
  5299                           ;interrupts.c: 144: }
  5300                           ;interrupts.c: 146: if (PIR1bits.RCIF) {
  5301  000076  AA9E               	btfss	3998,5,c	;volatile
  5302  000078  D003               	goto	i1l57
  5303                           
  5304                           ;interrupts.c: 147: PIR1bits.RCIF = 0;
  5305  00007A  9A9E               	bcf	3998,5,c	;volatile
  5306                           
  5307                           ;interrupts.c: 149: uart_recv_int_handler();
  5308  00007C  ECFA  F008         	call	_uart_recv_int_handler	;wreg free
  5309  000080                     i1l57:
  5310  000080  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5311  000084  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5312  000088  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5313  00008C  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5314  000090  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5315  000094  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5316  000098  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5317  00009C  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5318  0000A0  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5319  0000A4  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5320  0000A8  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5321  0000AC  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5322  0000B0  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5323  0000B4  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5324  0000B8  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5325  0000BC  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5326  0000C0  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5327  0000C4  0010               	retfie	
  5328  0000C6                     __end_of_InterruptHandlerLow:
  5329                           	opt stack 0
  5330                           pclatu	equ	0xFFB
  5331                           pclath	equ	0xFFA
  5332                           tblptru	equ	0xFF8
  5333                           tblptrh	equ	0xFF7
  5334                           tblptrl	equ	0xFF6
  5335                           tablat	equ	0xFF5
  5336                           prodh	equ	0xFF4
  5337                           prodl	equ	0xFF3
  5338                           intcon	equ	0xFF2
  5339                           postinc0	equ	0xFEE
  5340                           fsr0h	equ	0xFEA
  5341                           fsr0l	equ	0xFE9
  5342                           wreg	equ	0xFE8
  5343                           indf1	equ	0xFE7
  5344                           postdec1	equ	0xFE5
  5345                           fsr1h	equ	0xFE2
  5346                           fsr1l	equ	0xFE1
  5347                           bsr	equ	0xFE0
  5348                           indf2	equ	0xFDF
  5349                           postinc2	equ	0xFDE
  5350                           postdec2	equ	0xFDD
  5351                           fsr2h	equ	0xFDA
  5352                           fsr2l	equ	0xFD9
  5353                           status	equ	0xFD8
  5354                           
  5355 ;; *************** function _uart_trans_int_handler *****************
  5356 ;; Defined at:
  5357 ;;		line 72 in file "../src/my_uart.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;		None
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;		None
  5362 ;; Return value:  Size  Location     Type
  5363 ;;		None               void
  5364 ;; Registers used:
  5365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5371 ;;      Params:         0       0       0       0       0
  5372 ;;      Locals:         0       0       0       0       0
  5373 ;;      Temps:          1       0       0       0       0
  5374 ;;      Totals:         1       0       0       0       0
  5375 ;;Total ram usage:        1 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; Hardware stack levels required when called:    6
  5378 ;; This function calls:
  5379 ;;		Nothing
  5380 ;; This function is called by:
  5381 ;;		_InterruptHandlerLow
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385                           	psect	text32
  5386  0019C8                     __ptext32:
  5387                           	opt stack 0
  5388  0019C8                     _uart_trans_int_handler:
  5389                           	opt stack 19
  5390                           
  5391                           ;my_uart.c: 74: if(TXSTAbits.TRMT){
  5392                           
  5393                           ;incstack = 0
  5394  0019C8  A2AC               	btfss	4012,1,c	;volatile
  5395  0019CA  0012               	return	
  5396                           
  5397                           ;my_uart.c: 75: if(uc_ptr->txBufind < uc_ptr->txBuflen){
  5398  0019CC  EE20 F00C          	lfsr	2,12
  5399  0019D0  5052               	movf	_uc_ptr,w,c
  5400  0019D2  26D9               	addwf	fsr2l,f,c
  5401  0019D4  5053               	movf	_uc_ptr+1,w,c
  5402  0019D6  22DA               	addwfc	fsr2h,f,c
  5403  0019D8  50DF               	movf	indf2,w,c
  5404  0019DA  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5405  0019DC  EE20 F00B          	lfsr	2,11
  5406  0019E0  5052               	movf	_uc_ptr,w,c
  5407  0019E2  26D9               	addwf	fsr2l,f,c
  5408  0019E4  5053               	movf	_uc_ptr+1,w,c
  5409  0019E6  22DA               	addwfc	fsr2h,f,c
  5410  0019E8  50DF               	movf	indf2,w,c
  5411  0019EA  5C01               	subwf	??_uart_trans_int_handler,w,c
  5412  0019EC  B0D8               	btfsc	status,0,c
  5413  0019EE  D01E               	goto	i1l433
  5414                           
  5415                           ;my_uart.c: 76: TXREG = uc_ptr->txBuff[uc_ptr->txBufind];
  5416  0019F0  EE20 F00C          	lfsr	2,12
  5417  0019F4  5052               	movf	_uc_ptr,w,c
  5418  0019F6  26D9               	addwf	fsr2l,f,c
  5419  0019F8  5053               	movf	_uc_ptr+1,w,c
  5420  0019FA  22DA               	addwfc	fsr2h,f,c
  5421  0019FC  50DF               	movf	indf2,w,c
  5422  0019FE  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5423  001A00  5001               	movf	??_uart_trans_int_handler,w,c
  5424  001A02  0D01               	mullw	1
  5425  001A04  0E06               	movlw	6
  5426  001A06  26F3               	addwf	prodl,f,c
  5427  001A08  0E00               	movlw	0
  5428  001A0A  22F4               	addwfc	prodh,f,c
  5429  001A0C  50F3               	movf	prodl,w,c
  5430  001A0E  2452               	addwf	_uc_ptr,w,c
  5431  001A10  6ED9               	movwf	fsr2l,c
  5432  001A12  50F4               	movf	prodh,w,c
  5433  001A14  2053               	addwfc	_uc_ptr+1,w,c
  5434  001A16  6EDA               	movwf	fsr2h,c
  5435  001A18  50DF               	movf	indf2,w,c
  5436  001A1A  6EAD               	movwf	4013,c	;volatile
  5437                           
  5438                           ;my_uart.c: 78: uc_ptr->txBufind++;
  5439  001A1C  EE20 F00C          	lfsr	2,12
  5440  001A20  5052               	movf	_uc_ptr,w,c
  5441  001A22  26D9               	addwf	fsr2l,f,c
  5442  001A24  5053               	movf	_uc_ptr+1,w,c
  5443  001A26  22DA               	addwfc	fsr2h,f,c
  5444  001A28  2ADF               	incf	indf2,f,c
  5445                           
  5446                           ;my_uart.c: 79: } else
  5447  001A2A  0012               	return	
  5448  001A2C                     i1l433:
  5449                           
  5450                           ;my_uart.c: 80: PIE1bits.TX1IE = 0;
  5451  001A2C  989D               	bcf	3997,4,c	;volatile
  5452  001A2E  0012               	return	
  5453  001A30                     __end_of_uart_trans_int_handler:
  5454                           	opt stack 0
  5455                           pclatu	equ	0xFFB
  5456                           pclath	equ	0xFFA
  5457                           tblptru	equ	0xFF8
  5458                           tblptrh	equ	0xFF7
  5459                           tblptrl	equ	0xFF6
  5460                           tablat	equ	0xFF5
  5461                           prodh	equ	0xFF4
  5462                           prodl	equ	0xFF3
  5463                           intcon	equ	0xFF2
  5464                           postinc0	equ	0xFEE
  5465                           fsr0h	equ	0xFEA
  5466                           fsr0l	equ	0xFE9
  5467                           wreg	equ	0xFE8
  5468                           indf1	equ	0xFE7
  5469                           postdec1	equ	0xFE5
  5470                           fsr1h	equ	0xFE2
  5471                           fsr1l	equ	0xFE1
  5472                           bsr	equ	0xFE0
  5473                           indf2	equ	0xFDF
  5474                           postinc2	equ	0xFDE
  5475                           postdec2	equ	0xFDD
  5476                           fsr2h	equ	0xFDA
  5477                           fsr2l	equ	0xFD9
  5478                           status	equ	0xFD8
  5479                           
  5480 ;; *************** function _uart_recv_int_handler *****************
  5481 ;; Defined at:
  5482 ;;		line 11 in file "../src/my_uart.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;		None
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;		None
  5487 ;; Return value:  Size  Location     Type
  5488 ;;		None               void
  5489 ;; Registers used:
  5490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5496 ;;      Params:         0       0       0       0       0
  5497 ;;      Locals:         0       0       0       0       0
  5498 ;;      Temps:          1       0       0       0       0
  5499 ;;      Totals:         1       0       0       0       0
  5500 ;;Total ram usage:        1 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    9
  5503 ;; This function calls:
  5504 ;;		_ReadUSART
  5505 ;;		_ToMainLow_sendmsg
  5506 ;; This function is called by:
  5507 ;;		_InterruptHandlerLow
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text33
  5512  0011F4                     __ptext33:
  5513                           	opt stack 0
  5514  0011F4                     _uart_recv_int_handler:
  5515                           	opt stack 16
  5516                           
  5517                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  5518                           
  5519                           ;incstack = 0
  5520  0011F4  AA9E               	btfss	3998,5,c	;volatile
  5521  0011F6  D04E               	goto	i1l4634
  5522                           
  5523                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5524  0011F8  EE20 F005          	lfsr	2,5
  5525  0011FC  5052               	movf	_uc_ptr,w,c
  5526  0011FE  26D9               	addwf	fsr2l,f,c
  5527  001200  5053               	movf	_uc_ptr+1,w,c
  5528  001202  22DA               	addwfc	fsr2h,f,c
  5529  001204  50DF               	movf	indf2,w,c
  5530  001206  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5531  001208  501B               	movf	??_uart_recv_int_handler,w,c
  5532  00120A  0D01               	mullw	1
  5533  00120C  50F3               	movf	prodl,w,c
  5534  00120E  2452               	addwf	_uc_ptr,w,c
  5535  001210  6ED9               	movwf	fsr2l,c
  5536  001212  50F4               	movf	prodh,w,c
  5537  001214  2053               	addwfc	_uc_ptr+1,w,c
  5538  001216  6EDA               	movwf	fsr2h,c
  5539  001218  ECB5  F00F         	call	_ReadUSART	;wreg free
  5540  00121C  6EDF               	movwf	indf2,c
  5541                           
  5542                           ;my_uart.c: 25: uc_ptr->buflen++;
  5543  00121E  EE20 F005          	lfsr	2,5
  5544  001222  5052               	movf	_uc_ptr,w,c
  5545  001224  26D9               	addwf	fsr2l,f,c
  5546  001226  5053               	movf	_uc_ptr+1,w,c
  5547  001228  22DA               	addwfc	fsr2h,f,c
  5548  00122A  2ADF               	incf	indf2,f,c
  5549                           
  5550                           ;my_uart.c: 26: if(uartTimeOut > 200) {
  5551  00122C  0EC9               	movlw	201
  5552  00122E  5C4C               	subwf	_uartTimeOut,w,c
  5553  001230  0E00               	movlw	0
  5554  001232  584D               	subwfb	_uartTimeOut+1,w,c
  5555  001234  A0D8               	btfss	status,0,c
  5556  001236  D00C               	goto	i1l4628
  5557                           
  5558                           ;my_uart.c: 27: uc_ptr->buflen = 1;
  5559  001238  EE20 F005          	lfsr	2,5
  5560  00123C  5052               	movf	_uc_ptr,w,c
  5561  00123E  26D9               	addwf	fsr2l,f,c
  5562  001240  5053               	movf	_uc_ptr+1,w,c
  5563  001242  22DA               	addwfc	fsr2h,f,c
  5564  001244  0E01               	movlw	1
  5565  001246  6EDF               	movwf	indf2,c
  5566                           
  5567                           ;my_uart.c: 28: uartTimeOut = 0;
  5568  001248  0E00               	movlw	0
  5569  00124A  6E4D               	movwf	_uartTimeOut+1,c
  5570  00124C  0E00               	movlw	0
  5571  00124E  6E4C               	movwf	_uartTimeOut,c
  5572  001250                     i1l4628:
  5573                           
  5574                           ;my_uart.c: 29: }
  5575                           ;my_uart.c: 31: if (uc_ptr->buflen == 5) {
  5576  001250  EE20 F005          	lfsr	2,5
  5577  001254  5052               	movf	_uc_ptr,w,c
  5578  001256  26D9               	addwf	fsr2l,f,c
  5579  001258  5053               	movf	_uc_ptr+1,w,c
  5580  00125A  22DA               	addwfc	fsr2h,f,c
  5581  00125C  0E05               	movlw	5
  5582  00125E  62DF               	cpfseq	indf2,c
  5583  001260  D019               	goto	i1l4634
  5584                           
  5585                           ;my_uart.c: 32: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5586  001262  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5587  001264  0E1F               	movlw	31
  5588  001266  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5589  001268  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5590  00126A  C053  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5591  00126E  C052  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5592  001272  EE20 F005          	lfsr	2,5
  5593  001276  5052               	movf	_uc_ptr,w,c
  5594  001278  26D9               	addwf	fsr2l,f,c
  5595  00127A  5053               	movf	_uc_ptr+1,w,c
  5596  00127C  22DA               	addwfc	fsr2h,f,c
  5597  00127E  50DF               	movf	indf2,w,c
  5598  001280  EC60  F00F         	call	_ToMainLow_sendmsg
  5599                           
  5600                           ;my_uart.c: 33: uc_ptr->buflen = 0;
  5601  001284  EE20 F005          	lfsr	2,5
  5602  001288  5052               	movf	_uc_ptr,w,c
  5603  00128A  26D9               	addwf	fsr2l,f,c
  5604  00128C  5053               	movf	_uc_ptr+1,w,c
  5605  00128E  22DA               	addwfc	fsr2h,f,c
  5606  001290  0E00               	movlw	0
  5607  001292  6EDF               	movwf	indf2,c
  5608  001294                     i1l4634:
  5609                           
  5610                           ;my_uart.c: 34: }
  5611                           ;my_uart.c: 35: }
  5612                           ;my_uart.c: 42: if (USART_Status.OVERRUN_ERROR == 1) {
  5613  001294  A64F               	btfss	_USART_Status,3,c
  5614  001296  0012               	return	
  5615                           
  5616                           ;my_uart.c: 47: RCSTAbits.CREN = 0;
  5617  001298  98AB               	bcf	4011,4,c	;volatile
  5618                           
  5619                           ;my_uart.c: 48: RCSTAbits.CREN = 1;
  5620  00129A  88AB               	bsf	4011,4,c	;volatile
  5621                           
  5622                           ;my_uart.c: 49: ToMainLow_sendmsg(0, 30, (void *) 0);
  5623  00129C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5624  00129E  0E1E               	movlw	30
  5625  0012A0  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5626  0012A2  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5627  0012A4  0E00               	movlw	0
  5628  0012A6  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5629  0012A8  0E00               	movlw	0
  5630  0012AA  6E18               	movwf	ToMainLow_sendmsg@data,c
  5631  0012AC  0E00               	movlw	0
  5632  0012AE  EC60  F00F         	call	_ToMainLow_sendmsg
  5633  0012B2  0012               	return	
  5634  0012B4                     __end_of_uart_recv_int_handler:
  5635                           	opt stack 0
  5636                           pclatu	equ	0xFFB
  5637                           pclath	equ	0xFFA
  5638                           tblptru	equ	0xFF8
  5639                           tblptrh	equ	0xFF7
  5640                           tblptrl	equ	0xFF6
  5641                           tablat	equ	0xFF5
  5642                           prodh	equ	0xFF4
  5643                           prodl	equ	0xFF3
  5644                           intcon	equ	0xFF2
  5645                           postinc0	equ	0xFEE
  5646                           fsr0h	equ	0xFEA
  5647                           fsr0l	equ	0xFE9
  5648                           wreg	equ	0xFE8
  5649                           indf1	equ	0xFE7
  5650                           postdec1	equ	0xFE5
  5651                           fsr1h	equ	0xFE2
  5652                           fsr1l	equ	0xFE1
  5653                           bsr	equ	0xFE0
  5654                           indf2	equ	0xFDF
  5655                           postinc2	equ	0xFDE
  5656                           postdec2	equ	0xFDD
  5657                           fsr2h	equ	0xFDA
  5658                           fsr2l	equ	0xFD9
  5659                           status	equ	0xFD8
  5660                           
  5661 ;; *************** function _ToMainLow_sendmsg *****************
  5662 ;; Defined at:
  5663 ;;		line 103 in file "../src/messages.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  length          1    wreg     unsigned char 
  5666 ;;  msgtype         1   22[COMRAM] unsigned char 
  5667 ;;  data            2   23[COMRAM] PTR void 
  5668 ;;		 -> NULL(0), main@uc(13), 
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;  length          1   25[COMRAM] unsigned char 
  5671 ;; Return value:  Size  Location     Type
  5672 ;;                  1    wreg      char 
  5673 ;; Registers used:
  5674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5675 ;; Tracked objects:
  5676 ;;		On entry : 0/0
  5677 ;;		On exit  : 0/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5680 ;;      Params:         3       0       0       0       0
  5681 ;;      Locals:         1       0       0       0       0
  5682 ;;      Temps:          0       0       0       0       0
  5683 ;;      Totals:         4       0       0       0       0
  5684 ;;Total ram usage:        4 bytes
  5685 ;; Hardware stack levels used:    1
  5686 ;; Hardware stack levels required when called:    8
  5687 ;; This function calls:
  5688 ;;		i1_send_msg
  5689 ;; This function is called by:
  5690 ;;		_uart_recv_int_handler
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           	psect	text34
  5695  001EC0                     __ptext34:
  5696                           	opt stack 0
  5697  001EC0                     _ToMainLow_sendmsg:
  5698                           	opt stack 16
  5699                           
  5700                           ;incstack = 0
  5701                           ;ToMainLow_sendmsg@length stored from wreg
  5702  001EC0  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5703                           
  5704                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5705                           ;	Return value of _ToMainLow_sendmsg is never used
  5706  001EC4  0101               	movlb	1	; () banked
  5707  001EC6  0E01               	movlw	high _ToMainLow_MQ
  5708  001EC8  6E0C               	movwf	i1send_msg@qptr+1,c
  5709  001ECA  0101               	movlb	1	; () banked
  5710  001ECC  0E43               	movlw	low _ToMainLow_MQ
  5711  001ECE  6E0B               	movwf	i1send_msg@qptr,c
  5712  001ED0  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5713  001ED4  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5714  001ED8  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5715  001EDC  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5716  001EE0  EC5A  F009         	call	i1_send_msg	;wreg free
  5717  001EE4  0012               	return	
  5718  001EE6                     __end_of_ToMainLow_sendmsg:
  5719                           	opt stack 0
  5720                           pclatu	equ	0xFFB
  5721                           pclath	equ	0xFFA
  5722                           tblptru	equ	0xFF8
  5723                           tblptrh	equ	0xFF7
  5724                           tblptrl	equ	0xFF6
  5725                           tablat	equ	0xFF5
  5726                           prodh	equ	0xFF4
  5727                           prodl	equ	0xFF3
  5728                           intcon	equ	0xFF2
  5729                           postinc0	equ	0xFEE
  5730                           fsr0h	equ	0xFEA
  5731                           fsr0l	equ	0xFE9
  5732                           wreg	equ	0xFE8
  5733                           indf1	equ	0xFE7
  5734                           postdec1	equ	0xFE5
  5735                           fsr1h	equ	0xFE2
  5736                           fsr1l	equ	0xFE1
  5737                           bsr	equ	0xFE0
  5738                           indf2	equ	0xFDF
  5739                           postinc2	equ	0xFDE
  5740                           postdec2	equ	0xFDD
  5741                           fsr2h	equ	0xFDA
  5742                           fsr2l	equ	0xFD9
  5743                           status	equ	0xFD8
  5744                           
  5745 ;; *************** function i1_send_msg *****************
  5746 ;; Defined at:
  5747 ;;		line 24 in file "../src/messages.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5750 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5751 ;;  length          1   12[COMRAM] unsigned char 
  5752 ;;  msgtype         1   13[COMRAM] unsigned char 
  5753 ;;  data            2   14[COMRAM] PTR void 
  5754 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), 
  5755 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5758 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  5759 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5760 ;;  send_msg        2   17[COMRAM] unsigned int 
  5761 ;;  send_msg        1   19[COMRAM] unsigned char 
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  1    wreg      char 
  5764 ;; Registers used:
  5765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5771 ;;      Params:         6       0       0       0       0
  5772 ;;      Locals:         5       0       0       0       0
  5773 ;;      Temps:          1       0       0       0       0
  5774 ;;      Totals:        12       0       0       0       0
  5775 ;;Total ram usage:       12 bytes
  5776 ;; Hardware stack levels used:    1
  5777 ;; Hardware stack levels required when called:    7
  5778 ;; This function calls:
  5779 ;;		i1___awmod
  5780 ;;		i1_memcpy
  5781 ;; This function is called by:
  5782 ;;		_ToMainLow_sendmsg
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           	psect	text35
  5787  0012B4                     __ptext35:
  5788                           	opt stack 0
  5789  0012B4                     i1_send_msg:
  5790                           	opt stack 16
  5791                           
  5792                           ;messages.c: 25: unsigned char slot;
  5793                           ;messages.c: 27: msg *qmsg;
  5794                           ;messages.c: 28: size_t tlength = length;
  5795                           
  5796                           ;incstack = 0
  5797  0012B4  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5798  0012B8  6A13               	clrf	i1send_msg@tlength+1,c
  5799                           
  5800                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5801  0012BA  EE20 F041          	lfsr	2,65
  5802  0012BE  500B               	movf	i1send_msg@qptr,w,c
  5803  0012C0  26D9               	addwf	fsr2l,f,c
  5804  0012C2  500C               	movf	i1send_msg@qptr+1,w,c
  5805  0012C4  22DA               	addwfc	fsr2h,f,c
  5806  0012C6  50DF               	movf	indf2,w,c
  5807  0012C8  6E14               	movwf	i1send_msg@slot,c
  5808                           
  5809                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5810  0012CA  5014               	movf	i1send_msg@slot,w,c
  5811  0012CC  0D0D               	mullw	13
  5812  0012CE  50F3               	movf	prodl,w,c
  5813  0012D0  240B               	addwf	i1send_msg@qptr,w,c
  5814  0012D2  6E15               	movwf	i1send_msg@qmsg,c
  5815  0012D4  50F4               	movf	prodh,w,c
  5816  0012D6  200C               	addwfc	i1send_msg@qptr+1,w,c
  5817  0012D8  6E16               	movwf	i1send_msg@qmsg+1,c
  5818                           
  5819                           ;messages.c: 41: if (qmsg->full != 0) {
  5820  0012DA  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5821  0012DE  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5822  0012E2  50DF               	movf	indf2,w,c
  5823  0012E4  B4D8               	btfsc	status,2,c
  5824  0012E6  D002               	goto	i1l4600
  5825                           
  5826                           ;messages.c: 42: return (-1);
  5827  0012E8  0EFF               	movlw	255
  5828  0012EA  0012               	return	
  5829  0012EC                     i1l4600:
  5830                           
  5831                           ;messages.c: 43: }
  5832                           ;messages.c: 46: qmsg->length = length;
  5833  0012EC  EE20 F001          	lfsr	2,1
  5834  0012F0  5015               	movf	i1send_msg@qmsg,w,c
  5835  0012F2  26D9               	addwf	fsr2l,f,c
  5836  0012F4  5016               	movf	i1send_msg@qmsg+1,w,c
  5837  0012F6  22DA               	addwfc	fsr2h,f,c
  5838  0012F8  C00D  FFDF         	movff	i1send_msg@length,indf2
  5839                           
  5840                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5841  0012FC  EE20 F002          	lfsr	2,2
  5842  001300  5015               	movf	i1send_msg@qmsg,w,c
  5843  001302  26D9               	addwf	fsr2l,f,c
  5844  001304  5016               	movf	i1send_msg@qmsg+1,w,c
  5845  001306  22DA               	addwfc	fsr2h,f,c
  5846  001308  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5847                           
  5848                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5849  00130C  0E03               	movlw	3
  5850  00130E  2415               	addwf	i1send_msg@qmsg,w,c
  5851  001310  6E01               	movwf	i1memcpy@d1,c
  5852  001312  0E00               	movlw	0
  5853  001314  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5854  001316  6E02               	movwf	i1memcpy@d1+1,c
  5855  001318  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5856  00131C  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5857  001320  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5858  001324  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5859  001328  EC6F  F00E         	call	i1_memcpy	;wreg free
  5860                           
  5861                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  5862  00132C  EE20 F041          	lfsr	2,65
  5863  001330  500B               	movf	i1send_msg@qptr,w,c
  5864  001332  26D9               	addwf	fsr2l,f,c
  5865  001334  500C               	movf	i1send_msg@qptr+1,w,c
  5866  001336  22DA               	addwfc	fsr2h,f,c
  5867  001338  EE10 F041          	lfsr	1,65
  5868  00133C  500B               	movf	i1send_msg@qptr,w,c
  5869  00133E  26E1               	addwf	fsr1l,f,c
  5870  001340  500C               	movf	i1send_msg@qptr+1,w,c
  5871  001342  22E2               	addwfc	fsr1h,f,c
  5872  001344  50E7               	movf	indf1,w,c
  5873  001346  6E11               	movwf	??i1_send_msg& (0+255),c
  5874  001348  0E01               	movlw	1
  5875  00134A  2411               	addwf	??i1_send_msg,w,c
  5876  00134C  6E01               	movwf	i1___awmod@dividend,c
  5877  00134E  6A02               	clrf	i1___awmod@dividend+1,c
  5878  001350  0E00               	movlw	0
  5879  001352  2202               	addwfc	i1___awmod@dividend+1,f,c
  5880  001354  0E00               	movlw	0
  5881  001356  6E04               	movwf	i1___awmod@divisor+1,c
  5882  001358  0E05               	movlw	5
  5883  00135A  6E03               	movwf	i1___awmod@divisor,c
  5884  00135C  EC14  F00A         	call	i1___awmod	;wreg free
  5885  001360  5001               	movf	?i1___awmod,w,c
  5886  001362  6EDF               	movwf	indf2,c
  5887                           
  5888                           ;messages.c: 59: qmsg->full = 1;
  5889  001364  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5890  001368  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5891  00136C  0E01               	movlw	1
  5892  00136E  6EDF               	movwf	indf2,c
  5893                           
  5894                           ;messages.c: 60: return (1);
  5895  001370  0E01               	movlw	1
  5896  001372  0012               	return	
  5897  001374                     __end_ofi1_send_msg:
  5898                           	opt stack 0
  5899                           pclatu	equ	0xFFB
  5900                           pclath	equ	0xFFA
  5901                           tblptru	equ	0xFF8
  5902                           tblptrh	equ	0xFF7
  5903                           tblptrl	equ	0xFF6
  5904                           tablat	equ	0xFF5
  5905                           prodh	equ	0xFF4
  5906                           prodl	equ	0xFF3
  5907                           intcon	equ	0xFF2
  5908                           postinc0	equ	0xFEE
  5909                           fsr0h	equ	0xFEA
  5910                           fsr0l	equ	0xFE9
  5911                           wreg	equ	0xFE8
  5912                           indf1	equ	0xFE7
  5913                           postdec1	equ	0xFE5
  5914                           fsr1h	equ	0xFE2
  5915                           fsr1l	equ	0xFE1
  5916                           bsr	equ	0xFE0
  5917                           indf2	equ	0xFDF
  5918                           postinc2	equ	0xFDE
  5919                           postdec2	equ	0xFDD
  5920                           fsr2h	equ	0xFDA
  5921                           fsr2l	equ	0xFD9
  5922                           status	equ	0xFD8
  5923                           
  5924 ;; *************** function i1_memcpy *****************
  5925 ;; Defined at:
  5926 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  d1              2    0[COMRAM] PTR void 
  5929 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  5930 ;;		 -> i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), 
  5931 ;;		 -> ToMainLow_MQ(67), main@msgbuffer(11), 
  5932 ;;  s1              2    2[COMRAM] PTR const void 
  5933 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5934 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5935 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  5936 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  5937 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  5938 ;;  n               2    4[COMRAM] unsigned int 
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5941 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5942 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5943 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  5944 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  5945 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  5946 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5947 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  5948 ;;		 -> i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), 
  5949 ;;		 -> ToMainLow_MQ(67), main@msgbuffer(11), 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  2    0[COMRAM] PTR void 
  5952 ;; Registers used:
  5953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5959 ;;      Params:         6       0       0       0       0
  5960 ;;      Locals:         4       0       0       0       0
  5961 ;;      Temps:          0       0       0       0       0
  5962 ;;      Totals:        10       0       0       0       0
  5963 ;;Total ram usage:       10 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    6
  5966 ;; This function calls:
  5967 ;;		Nothing
  5968 ;; This function is called by:
  5969 ;;		i1_send_msg
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text36
  5974  001CDE                     __ptext36:
  5975                           	opt stack 0
  5976  001CDE                     i1_memcpy:
  5977                           	opt stack 16
  5978                           
  5979                           ;incstack = 0
  5980  001CDE  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5981  001CE2  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5982  001CE6  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5983  001CEA  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5984  001CEE  D00E               	goto	i1l3522
  5985  001CF0                     i1l3516:
  5986  001CF0  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5987  001CF4  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5988  001CF8  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5989  001CFC  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5990  001D00  CFDF FFE7          	movff	indf2,indf1
  5991  001D04  4A09               	infsnz	i1memcpy@s,f,c
  5992  001D06  2A0A               	incf	i1memcpy@s+1,f,c
  5993  001D08  4A07               	infsnz	i1memcpy@d,f,c
  5994  001D0A  2A08               	incf	i1memcpy@d+1,f,c
  5995  001D0C                     i1l3522:
  5996  001D0C  0605               	decf	i1memcpy@n,f,c
  5997  001D0E  A0D8               	btfss	status,0,c
  5998  001D10  0606               	decf	i1memcpy@n+1,f,c
  5999  001D12  2805               	incf	i1memcpy@n& (0+255),w,c
  6000  001D14  B4D8               	btfsc	status,2,c
  6001  001D16  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6002  001D18  B4D8               	btfsc	status,2,c
  6003                           
  6004                           ;	Return value of i1_memcpy is never used
  6005  001D1A  0012               	return	
  6006  001D1C  D7E9               	goto	i1l3516
  6007  001D1E                     __end_ofi1_memcpy:
  6008                           	opt stack 0
  6009                           pclatu	equ	0xFFB
  6010                           pclath	equ	0xFFA
  6011                           tblptru	equ	0xFF8
  6012                           tblptrh	equ	0xFF7
  6013                           tblptrl	equ	0xFF6
  6014                           tablat	equ	0xFF5
  6015                           prodh	equ	0xFF4
  6016                           prodl	equ	0xFF3
  6017                           intcon	equ	0xFF2
  6018                           postinc0	equ	0xFEE
  6019                           fsr0h	equ	0xFEA
  6020                           fsr0l	equ	0xFE9
  6021                           wreg	equ	0xFE8
  6022                           indf1	equ	0xFE7
  6023                           postdec1	equ	0xFE5
  6024                           fsr1h	equ	0xFE2
  6025                           fsr1l	equ	0xFE1
  6026                           bsr	equ	0xFE0
  6027                           indf2	equ	0xFDF
  6028                           postinc2	equ	0xFDE
  6029                           postdec2	equ	0xFDD
  6030                           fsr2h	equ	0xFDA
  6031                           fsr2l	equ	0xFD9
  6032                           status	equ	0xFD8
  6033                           
  6034 ;; *************** function i1___awmod *****************
  6035 ;; Defined at:
  6036 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;  dividend        2    0[COMRAM] int 
  6039 ;;  divisor         2    2[COMRAM] int 
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;  __awmod         1    6[COMRAM] unsigned char 
  6042 ;;  __awmod         1    5[COMRAM] unsigned char 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  2    0[COMRAM] int 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0, prodl
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6052 ;;      Params:         4       0       0       0       0
  6053 ;;      Locals:         2       0       0       0       0
  6054 ;;      Temps:          1       0       0       0       0
  6055 ;;      Totals:         7       0       0       0       0
  6056 ;;Total ram usage:        7 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    6
  6059 ;; This function calls:
  6060 ;;		Nothing
  6061 ;; This function is called by:
  6062 ;;		i1_send_msg
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           	psect	text37
  6067  001428                     __ptext37:
  6068                           	opt stack 0
  6069  001428                     i1___awmod:
  6070                           	opt stack 16
  6071                           
  6072                           ;incstack = 0
  6073  001428  6E05               	movwf	??i1___awmod& (0+255),c
  6074  00142A  0E00               	movlw	0
  6075  00142C  6E07               	movwf	i1___awmod@sign,c
  6076  00142E  5005               	movf	??i1___awmod& (0+255),w,c
  6077  001430  5002               	movf	i1___awmod@dividend+1,w,c
  6078  001432  0A80               	xorlw	128
  6079  001434  6EF3               	movwf	prodl,c
  6080  001436  0E80               	movlw	128
  6081  001438  5CF3               	subwf	prodl,w,c
  6082  00143A  0E00               	movlw	0
  6083  00143C  B4D8               	btfsc	status,2,c
  6084  00143E  5C01               	subwf	i1___awmod@dividend,w,c
  6085  001440  B0D8               	btfsc	status,0,c
  6086  001442  D008               	goto	i1l3542
  6087  001444  6C01               	negf	i1___awmod@dividend,c
  6088  001446  1E02               	comf	i1___awmod@dividend+1,f,c
  6089  001448  B0D8               	btfsc	status,0,c
  6090  00144A  2A02               	incf	i1___awmod@dividend+1,f,c
  6091  00144C  6E05               	movwf	??i1___awmod& (0+255),c
  6092  00144E  0E01               	movlw	1
  6093  001450  6E07               	movwf	i1___awmod@sign,c
  6094  001452  5005               	movf	??i1___awmod& (0+255),w,c
  6095  001454                     i1l3542:
  6096  001454  5004               	movf	i1___awmod@divisor+1,w,c
  6097  001456  0A80               	xorlw	128
  6098  001458  6EF3               	movwf	prodl,c
  6099  00145A  0E80               	movlw	128
  6100  00145C  5CF3               	subwf	prodl,w,c
  6101  00145E  0E00               	movlw	0
  6102  001460  B4D8               	btfsc	status,2,c
  6103  001462  5C03               	subwf	i1___awmod@divisor,w,c
  6104  001464  B0D8               	btfsc	status,0,c
  6105  001466  D004               	goto	i1l3546
  6106  001468  6C03               	negf	i1___awmod@divisor,c
  6107  00146A  1E04               	comf	i1___awmod@divisor+1,f,c
  6108  00146C  B0D8               	btfsc	status,0,c
  6109  00146E  2A04               	incf	i1___awmod@divisor+1,f,c
  6110  001470                     i1l3546:
  6111  001470  5004               	movf	i1___awmod@divisor+1,w,c
  6112  001472  1003               	iorwf	i1___awmod@divisor,w,c
  6113  001474  B4D8               	btfsc	status,2,c
  6114  001476  D01A               	goto	i1l3562
  6115  001478  6E05               	movwf	??i1___awmod& (0+255),c
  6116  00147A  0E01               	movlw	1
  6117  00147C  6E06               	movwf	i1___awmod@counter,c
  6118  00147E  5005               	movf	??i1___awmod& (0+255),w,c
  6119  001480  D004               	goto	i1l3552
  6120  001482                     i1l3550:
  6121  001482  90D8               	bcf	status,0,c
  6122  001484  3603               	rlcf	i1___awmod@divisor,f,c
  6123  001486  3604               	rlcf	i1___awmod@divisor+1,f,c
  6124  001488  2A06               	incf	i1___awmod@counter,f,c
  6125  00148A                     i1l3552:
  6126  00148A  AE04               	btfss	i1___awmod@divisor+1,7,c
  6127  00148C  D7FA               	goto	i1l3550
  6128  00148E                     i1l3554:
  6129  00148E  5003               	movf	i1___awmod@divisor,w,c
  6130  001490  5C01               	subwf	i1___awmod@dividend,w,c
  6131  001492  5004               	movf	i1___awmod@divisor+1,w,c
  6132  001494  5802               	subwfb	i1___awmod@dividend+1,w,c
  6133  001496  A0D8               	btfss	status,0,c
  6134  001498  D004               	goto	i1l3558
  6135  00149A  5003               	movf	i1___awmod@divisor,w,c
  6136  00149C  5E01               	subwf	i1___awmod@dividend,f,c
  6137  00149E  5004               	movf	i1___awmod@divisor+1,w,c
  6138  0014A0  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6139  0014A2                     i1l3558:
  6140  0014A2  90D8               	bcf	status,0,c
  6141  0014A4  3204               	rrcf	i1___awmod@divisor+1,f,c
  6142  0014A6  3203               	rrcf	i1___awmod@divisor,f,c
  6143  0014A8  2E06               	decfsz	i1___awmod@counter,f,c
  6144  0014AA  D7F1               	goto	i1l3554
  6145  0014AC                     i1l3562:
  6146  0014AC  5007               	movf	i1___awmod@sign,w,c
  6147  0014AE  B4D8               	btfsc	status,2,c
  6148  0014B0  D004               	goto	i1l3566
  6149  0014B2  6C01               	negf	i1___awmod@dividend,c
  6150  0014B4  1E02               	comf	i1___awmod@dividend+1,f,c
  6151  0014B6  B0D8               	btfsc	status,0,c
  6152  0014B8  2A02               	incf	i1___awmod@dividend+1,f,c
  6153  0014BA                     i1l3566:
  6154  0014BA  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6155  0014BE  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6156  0014C2  0012               	return	
  6157  0014C4                     __end_ofi1___awmod:
  6158                           	opt stack 0
  6159                           pclatu	equ	0xFFB
  6160                           pclath	equ	0xFFA
  6161                           tblptru	equ	0xFF8
  6162                           tblptrh	equ	0xFF7
  6163                           tblptrl	equ	0xFF6
  6164                           tablat	equ	0xFF5
  6165                           prodh	equ	0xFF4
  6166                           prodl	equ	0xFF3
  6167                           intcon	equ	0xFF2
  6168                           postinc0	equ	0xFEE
  6169                           fsr0h	equ	0xFEA
  6170                           fsr0l	equ	0xFE9
  6171                           wreg	equ	0xFE8
  6172                           indf1	equ	0xFE7
  6173                           postdec1	equ	0xFE5
  6174                           fsr1h	equ	0xFE2
  6175                           fsr1l	equ	0xFE1
  6176                           bsr	equ	0xFE0
  6177                           indf2	equ	0xFDF
  6178                           postinc2	equ	0xFDE
  6179                           postdec2	equ	0xFDD
  6180                           fsr2h	equ	0xFDA
  6181                           fsr2l	equ	0xFD9
  6182                           status	equ	0xFD8
  6183                           
  6184 ;; *************** function _ReadUSART *****************
  6185 ;; Defined at:
  6186 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;		None
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;  data            1    0[COMRAM] unsigned char 
  6191 ;; Return value:  Size  Location     Type
  6192 ;;                  1    wreg      unsigned char 
  6193 ;; Registers used:
  6194 ;;		wreg, status,2, status,0
  6195 ;; Tracked objects:
  6196 ;;		On entry : 0/0
  6197 ;;		On exit  : 0/0
  6198 ;;		Unchanged: 0/0
  6199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6200 ;;      Params:         0       0       0       0       0
  6201 ;;      Locals:         1       0       0       0       0
  6202 ;;      Temps:          0       0       0       0       0
  6203 ;;      Totals:         1       0       0       0       0
  6204 ;;Total ram usage:        1 bytes
  6205 ;; Hardware stack levels used:    1
  6206 ;; Hardware stack levels required when called:    6
  6207 ;; This function calls:
  6208 ;;		Nothing
  6209 ;; This function is called by:
  6210 ;;		_uart_recv_int_handler
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text38
  6215  001F6A                     __ptext38:
  6216                           	opt stack 0
  6217  001F6A                     _ReadUSART:
  6218                           	opt stack 18
  6219                           
  6220                           ;incstack = 0
  6221  001F6A  0EF2               	movlw	242
  6222  001F6C  164F               	andwf	_USART_Status,f,c
  6223  001F6E  ACAB               	btfss	4011,6,c	;volatile
  6224  001F70  D003               	goto	i1l591
  6225  001F72  904F               	bcf	_USART_Status,0,c
  6226  001F74  B0AB               	btfsc	4011,0,c	;volatile
  6227  001F76  804F               	bsf	_USART_Status,0,c
  6228  001F78                     i1l591:
  6229  001F78  B4AB               	btfsc	4011,2,c	;volatile
  6230  001F7A  844F               	bsf	_USART_Status,2,c
  6231  001F7C  B2AB               	btfsc	4011,1,c	;volatile
  6232  001F7E  864F               	bsf	_USART_Status,3,c
  6233  001F80  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6234  001F84  5001               	movf	ReadUSART@data,w,c
  6235  001F86  0012               	return	
  6236  001F88                     __end_of_ReadUSART:
  6237                           	opt stack 0
  6238                           pclatu	equ	0xFFB
  6239                           pclath	equ	0xFFA
  6240                           tblptru	equ	0xFF8
  6241                           tblptrh	equ	0xFF7
  6242                           tblptrl	equ	0xFF6
  6243                           tablat	equ	0xFF5
  6244                           prodh	equ	0xFF4
  6245                           prodl	equ	0xFF3
  6246                           intcon	equ	0xFF2
  6247                           postinc0	equ	0xFEE
  6248                           fsr0h	equ	0xFEA
  6249                           fsr0l	equ	0xFE9
  6250                           wreg	equ	0xFE8
  6251                           indf1	equ	0xFE7
  6252                           postdec1	equ	0xFE5
  6253                           fsr1h	equ	0xFE2
  6254                           fsr1l	equ	0xFE1
  6255                           bsr	equ	0xFE0
  6256                           indf2	equ	0xFDF
  6257                           postinc2	equ	0xFDE
  6258                           postdec2	equ	0xFDD
  6259                           fsr2h	equ	0xFDA
  6260                           fsr2l	equ	0xFD9
  6261                           status	equ	0xFD8
  6262                           
  6263 ;; *************** function _timer1_int_handler *****************
  6264 ;; Defined at:
  6265 ;;		line 46 in file "../src/user_interrupts.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;		None
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;		None
  6270 ;; Return value:  Size  Location     Type
  6271 ;;		None               void
  6272 ;; Registers used:
  6273 ;;		wreg, status,2, cstack
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6279 ;;      Params:         0       0       0       0       0
  6280 ;;      Locals:         0       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0
  6282 ;;      Totals:         0       0       0       0       0
  6283 ;;Total ram usage:        0 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; Hardware stack levels required when called:    7
  6286 ;; This function calls:
  6287 ;;		_WriteTimer1
  6288 ;; This function is called by:
  6289 ;;		_InterruptHandlerLow
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text39
  6294  00200A                     __ptext39:
  6295                           	opt stack 0
  6296  00200A                     _timer1_int_handler:
  6297                           	opt stack 18
  6298                           
  6299                           ;user_interrupts.c: 58: WriteTimer1(0);
  6300                           
  6301                           ;incstack = 0
  6302  00200A  0E00               	movlw	0
  6303  00200C  6E02               	movwf	WriteTimer1@timer1+1,c
  6304  00200E  0E00               	movlw	0
  6305  002010  6E01               	movwf	WriteTimer1@timer1,c
  6306  002012  ECEA  F00F         	call	_WriteTimer1	;wreg free
  6307  002016  0012               	return	
  6308  002018                     __end_of_timer1_int_handler:
  6309                           	opt stack 0
  6310                           pclatu	equ	0xFFB
  6311                           pclath	equ	0xFFA
  6312                           tblptru	equ	0xFF8
  6313                           tblptrh	equ	0xFF7
  6314                           tblptrl	equ	0xFF6
  6315                           tablat	equ	0xFF5
  6316                           prodh	equ	0xFF4
  6317                           prodl	equ	0xFF3
  6318                           intcon	equ	0xFF2
  6319                           postinc0	equ	0xFEE
  6320                           fsr0h	equ	0xFEA
  6321                           fsr0l	equ	0xFE9
  6322                           wreg	equ	0xFE8
  6323                           indf1	equ	0xFE7
  6324                           postdec1	equ	0xFE5
  6325                           fsr1h	equ	0xFE2
  6326                           fsr1l	equ	0xFE1
  6327                           bsr	equ	0xFE0
  6328                           indf2	equ	0xFDF
  6329                           postinc2	equ	0xFDE
  6330                           postdec2	equ	0xFDD
  6331                           fsr2h	equ	0xFDA
  6332                           fsr2l	equ	0xFD9
  6333                           status	equ	0xFD8
  6334                           
  6335 ;; *************** function _WriteTimer1 *****************
  6336 ;; Defined at:
  6337 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  timer1          2    0[COMRAM] unsigned int 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  timer           2    2[COMRAM] struct Timers
  6342 ;; Return value:  Size  Location     Type
  6343 ;;		None               void
  6344 ;; Registers used:
  6345 ;;		None
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6351 ;;      Params:         2       0       0       0       0
  6352 ;;      Locals:         2       0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0
  6354 ;;      Totals:         4       0       0       0       0
  6355 ;;Total ram usage:        4 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:    6
  6358 ;; This function calls:
  6359 ;;		Nothing
  6360 ;; This function is called by:
  6361 ;;		_timer1_int_handler
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text40
  6366  001FD4                     __ptext40:
  6367                           	opt stack 0
  6368  001FD4                     _WriteTimer1:
  6369                           	opt stack 18
  6370                           
  6371                           ;incstack = 0
  6372  001FD4  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6373  001FD8  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6374  001FDC  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6375  001FE0  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6376  001FE4  0012               	return	
  6377  001FE6                     __end_of_WriteTimer1:
  6378                           	opt stack 0
  6379                           pclatu	equ	0xFFB
  6380                           pclath	equ	0xFFA
  6381                           tblptru	equ	0xFF8
  6382                           tblptrh	equ	0xFF7
  6383                           tblptrl	equ	0xFF6
  6384                           tablat	equ	0xFF5
  6385                           prodh	equ	0xFF4
  6386                           prodl	equ	0xFF3
  6387                           intcon	equ	0xFF2
  6388                           postinc0	equ	0xFEE
  6389                           fsr0h	equ	0xFEA
  6390                           fsr0l	equ	0xFE9
  6391                           wreg	equ	0xFE8
  6392                           indf1	equ	0xFE7
  6393                           postdec1	equ	0xFE5
  6394                           fsr1h	equ	0xFE2
  6395                           fsr1l	equ	0xFE1
  6396                           bsr	equ	0xFE0
  6397                           indf2	equ	0xFDF
  6398                           postinc2	equ	0xFDE
  6399                           postdec2	equ	0xFDD
  6400                           fsr2h	equ	0xFDA
  6401                           fsr2l	equ	0xFD9
  6402                           status	equ	0xFD8
  6403                           
  6404 ;; *************** function _adc_int_handler *****************
  6405 ;; Defined at:
  6406 ;;		line 61 in file "../src/user_interrupts.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;		None
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;		None
  6411 ;; Return value:  Size  Location     Type
  6412 ;;		None               void
  6413 ;; Registers used:
  6414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6420 ;;      Params:         0       0       0       0       0
  6421 ;;      Locals:         0       0       0       0       0
  6422 ;;      Temps:          0       0       0       0       0
  6423 ;;      Totals:         0       0       0       0       0
  6424 ;;Total ram usage:        0 bytes
  6425 ;; Hardware stack levels used:    1
  6426 ;; Hardware stack levels required when called:    6
  6427 ;; This function calls:
  6428 ;;		Nothing
  6429 ;; This function is called by:
  6430 ;;		_InterruptHandlerLow
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           	psect	text41
  6435  001F0A                     __ptext41:
  6436                           	opt stack 0
  6437  001F0A                     _adc_int_handler:
  6438                           	opt stack 19
  6439                           
  6440                           ;user_interrupts.c: 63: if(adcbuffer[0] < 27)
  6441                           
  6442                           ;incstack = 0
  6443  001F0A  0E1B               	movlw	27
  6444  001F0C  5C30               	subwf	_adcbuffer,w,c
  6445  001F0E  B0D8               	btfsc	status,0,c
  6446  001F10  D002               	goto	i1l1370
  6447                           
  6448                           ;user_interrupts.c: 64: adcbuffer[0] = adcbuffer[0] + 1;
  6449  001F12  2830               	incf	_adcbuffer,w,c
  6450  001F14  6E30               	movwf	_adcbuffer,c
  6451  001F16                     i1l1370:
  6452                           
  6453                           ;user_interrupts.c: 71: adcbuffer[adcbuffer[0]] = ADRESH;
  6454  001F16  5030               	movf	_adcbuffer,w,c
  6455  001F18  0D01               	mullw	1
  6456  001F1A  0E30               	movlw	low _adcbuffer
  6457  001F1C  24F3               	addwf	prodl,w,c
  6458  001F1E  6ED9               	movwf	fsr2l,c
  6459  001F20  0E00               	movlw	high _adcbuffer
  6460  001F22  20F4               	addwfc	prodh,w,c
  6461  001F24  6EDA               	movwf	fsr2h,c
  6462  001F26  CFC4 FFDF          	movff	4036,indf2	;volatile
  6463  001F2A  0012               	return	
  6464  001F2C                     __end_of_adc_int_handler:
  6465                           	opt stack 0
  6466                           pclatu	equ	0xFFB
  6467                           pclath	equ	0xFFA
  6468                           tblptru	equ	0xFF8
  6469                           tblptrh	equ	0xFF7
  6470                           tblptrl	equ	0xFF6
  6471                           tablat	equ	0xFF5
  6472                           prodh	equ	0xFF4
  6473                           prodl	equ	0xFF3
  6474                           intcon	equ	0xFF2
  6475                           postinc0	equ	0xFEE
  6476                           fsr0h	equ	0xFEA
  6477                           fsr0l	equ	0xFE9
  6478                           wreg	equ	0xFE8
  6479                           indf1	equ	0xFE7
  6480                           postdec1	equ	0xFE5
  6481                           fsr1h	equ	0xFE2
  6482                           fsr1l	equ	0xFE1
  6483                           bsr	equ	0xFE0
  6484                           indf2	equ	0xFDF
  6485                           postinc2	equ	0xFDE
  6486                           postdec2	equ	0xFDD
  6487                           fsr2h	equ	0xFDA
  6488                           fsr2l	equ	0xFD9
  6489                           status	equ	0xFD8
  6490                           
  6491 ;; *************** function _InterruptHandlerHigh *****************
  6492 ;; Defined at:
  6493 ;;		line 84 in file "../src/interrupts.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;		None
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;		None
  6498 ;; Return value:  Size  Location     Type
  6499 ;;		None               void
  6500 ;; Registers used:
  6501 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6507 ;;      Params:         0       0       0       0       0
  6508 ;;      Locals:         0       0       0       0       0
  6509 ;;      Temps:          0      14       0       0       0
  6510 ;;      Totals:         0      14       0       0       0
  6511 ;;Total ram usage:       14 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:    5
  6514 ;; This function calls:
  6515 ;;		_SleepIfOkay
  6516 ;;		_i2c_int_handler
  6517 ;;		_timer0_int_handler
  6518 ;; This function is called by:
  6519 ;;		Interrupt level 2
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	intcode
  6524  000008                     __pintcode:
  6525                           	opt stack 0
  6526  000008                     _InterruptHandlerHigh:
  6527                           	opt stack 16
  6528                           
  6529                           ;incstack = 0
  6530  000008  CFFA F0C0          	movff	pclath,??_InterruptHandlerHigh
  6531  00000C  CFFB F0C1          	movff	pclatu,??_InterruptHandlerHigh+1
  6532  000010  EF7E  F00B         	goto	int_func
  6533                           pclatu	equ	0xFFB
  6534                           pclath	equ	0xFFA
  6535                           tblptru	equ	0xFF8
  6536                           tblptrh	equ	0xFF7
  6537                           tblptrl	equ	0xFF6
  6538                           tablat	equ	0xFF5
  6539                           prodh	equ	0xFF4
  6540                           prodl	equ	0xFF3
  6541                           intcon	equ	0xFF2
  6542                           postinc0	equ	0xFEE
  6543                           fsr0h	equ	0xFEA
  6544                           fsr0l	equ	0xFE9
  6545                           wreg	equ	0xFE8
  6546                           indf1	equ	0xFE7
  6547                           postdec1	equ	0xFE5
  6548                           fsr1h	equ	0xFE2
  6549                           fsr1l	equ	0xFE1
  6550                           bsr	equ	0xFE0
  6551                           indf2	equ	0xFDF
  6552                           postinc2	equ	0xFDE
  6553                           postdec2	equ	0xFDD
  6554                           fsr2h	equ	0xFDA
  6555                           fsr2l	equ	0xFD9
  6556                           status	equ	0xFD8
  6557                           
  6558                           	psect	intcode_body
  6559  0016FC                     __pintcode_body:
  6560                           	opt stack 16
  6561  0016FC                     int_func:
  6562                           	opt stack 16
  6563  0016FC  CFE9 F0C2          	movff	fsr0l,??_InterruptHandlerHigh+2
  6564  001700  CFEA F0C3          	movff	fsr0h,??_InterruptHandlerHigh+3
  6565  001704  CFE1 F0C4          	movff	fsr1l,??_InterruptHandlerHigh+4
  6566  001708  CFE2 F0C5          	movff	fsr1h,??_InterruptHandlerHigh+5
  6567  00170C  CFD9 F0C6          	movff	fsr2l,??_InterruptHandlerHigh+6
  6568  001710  CFDA F0C7          	movff	fsr2h,??_InterruptHandlerHigh+7
  6569  001714  CFF3 F0C8          	movff	prodl,??_InterruptHandlerHigh+8
  6570  001718  CFF4 F0C9          	movff	prodh,??_InterruptHandlerHigh+9
  6571  00171C  CFF6 F0CA          	movff	tblptrl,??_InterruptHandlerHigh+10
  6572  001720  CFF7 F0CB          	movff	tblptrh,??_InterruptHandlerHigh+11
  6573  001724  CFF8 F0CC          	movff	tblptru,??_InterruptHandlerHigh+12
  6574  001728  CFF5 F0CD          	movff	tablat,??_InterruptHandlerHigh+13
  6575                           
  6576                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  6577  00172C  A69E               	btfss	3998,3,c	;volatile
  6578  00172E  D003               	goto	i2l3738
  6579                           
  6580                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  6581  001730  969E               	bcf	3998,3,c	;volatile
  6582                           
  6583                           ;interrupts.c: 94: i2c_int_handler();
  6584  001732  EC1C  F010         	call	_i2c_int_handler	;wreg free
  6585  001736                     i2l3738:
  6586                           
  6587                           ;interrupts.c: 96: }
  6588                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  6589  001736  A4F2               	btfss	intcon,2,c	;volatile
  6590  001738  D003               	goto	i2l3744
  6591                           
  6592                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  6593  00173A  94F2               	bcf	intcon,2,c	;volatile
  6594                           
  6595                           ;interrupts.c: 103: timer0_int_handler();
  6596  00173C  ECF3  F00F         	call	_timer0_int_handler	;wreg free
  6597  001740                     i2l3744:
  6598                           
  6599                           ;interrupts.c: 104: }
  6600                           ;interrupts.c: 113: SleepIfOkay();
  6601  001740  EC76  F00D         	call	_SleepIfOkay	;wreg free
  6602  001744  C0CD  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6603  001748  C0CC  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6604  00174C  C0CB  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6605  001750  C0CA  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6606  001754  C0C9  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6607  001758  C0C8  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6608  00175C  C0C7  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6609  001760  C0C6  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6610  001764  C0C5  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6611  001768  C0C4  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6612  00176C  C0C3  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6613  001770  C0C2  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6614  001774  C0C1  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6615  001778  C0C0  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6616  00177C  0011               	retfie		f
  6617  00177E                     __end_of_InterruptHandlerHigh:
  6618                           	opt stack 0
  6619                           pclatu	equ	0xFFB
  6620                           pclath	equ	0xFFA
  6621                           tblptru	equ	0xFF8
  6622                           tblptrh	equ	0xFF7
  6623                           tblptrl	equ	0xFF6
  6624                           tablat	equ	0xFF5
  6625                           prodh	equ	0xFF4
  6626                           prodl	equ	0xFF3
  6627                           intcon	equ	0xFF2
  6628                           postinc0	equ	0xFEE
  6629                           fsr0h	equ	0xFEA
  6630                           fsr0l	equ	0xFE9
  6631                           wreg	equ	0xFE8
  6632                           indf1	equ	0xFE7
  6633                           postdec1	equ	0xFE5
  6634                           fsr1h	equ	0xFE2
  6635                           fsr1l	equ	0xFE1
  6636                           bsr	equ	0xFE0
  6637                           indf2	equ	0xFDF
  6638                           postinc2	equ	0xFDE
  6639                           postdec2	equ	0xFDD
  6640                           fsr2h	equ	0xFDA
  6641                           fsr2l	equ	0xFD9
  6642                           status	equ	0xFD8
  6643                           
  6644 ;; *************** function _timer0_int_handler *****************
  6645 ;; Defined at:
  6646 ;;		line 16 in file "../src/user_interrupts.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;		None
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;		None
  6651 ;; Return value:  Size  Location     Type
  6652 ;;		None               void
  6653 ;; Registers used:
  6654 ;;		wreg, status,2, status,0, cstack
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6660 ;;      Params:         0       0       0       0       0
  6661 ;;      Locals:         0       0       0       0       0
  6662 ;;      Temps:          0       0       0       0       0
  6663 ;;      Totals:         0       0       0       0       0
  6664 ;;Total ram usage:        0 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:    1
  6667 ;; This function calls:
  6668 ;;		_WriteTimer0
  6669 ;; This function is called by:
  6670 ;;		_InterruptHandlerHigh
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text43
  6675  001FE6                     __ptext43:
  6676                           	opt stack 0
  6677  001FE6                     _timer0_int_handler:
  6678                           	opt stack 19
  6679                           
  6680                           ;user_interrupts.c: 17: WriteTimer0(0);
  6681                           
  6682                           ;incstack = 0
  6683  001FE6  0E00               	movlw	0
  6684  001FE8  6E2E               	movwf	WriteTimer0@timer0+1,c
  6685  001FEA  0E00               	movlw	0
  6686  001FEC  6E2D               	movwf	WriteTimer0@timer0,c
  6687  001FEE  ECFC  F00F         	call	_WriteTimer0	;wreg free
  6688                           
  6689                           ;user_interrupts.c: 33: uartTimeOut++;
  6690  001FF2  4A4C               	infsnz	_uartTimeOut,f,c
  6691  001FF4  2A4D               	incf	_uartTimeOut+1,f,c
  6692  001FF6  0012               	return	
  6693  001FF8                     __end_of_timer0_int_handler:
  6694                           	opt stack 0
  6695                           pclatu	equ	0xFFB
  6696                           pclath	equ	0xFFA
  6697                           tblptru	equ	0xFF8
  6698                           tblptrh	equ	0xFF7
  6699                           tblptrl	equ	0xFF6
  6700                           tablat	equ	0xFF5
  6701                           prodh	equ	0xFF4
  6702                           prodl	equ	0xFF3
  6703                           intcon	equ	0xFF2
  6704                           postinc0	equ	0xFEE
  6705                           fsr0h	equ	0xFEA
  6706                           fsr0l	equ	0xFE9
  6707                           wreg	equ	0xFE8
  6708                           indf1	equ	0xFE7
  6709                           postdec1	equ	0xFE5
  6710                           fsr1h	equ	0xFE2
  6711                           fsr1l	equ	0xFE1
  6712                           bsr	equ	0xFE0
  6713                           indf2	equ	0xFDF
  6714                           postinc2	equ	0xFDE
  6715                           postdec2	equ	0xFDD
  6716                           fsr2h	equ	0xFDA
  6717                           fsr2l	equ	0xFD9
  6718                           status	equ	0xFD8
  6719                           
  6720 ;; *************** function _WriteTimer0 *****************
  6721 ;; Defined at:
  6722 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  timer0          2   44[COMRAM] unsigned int 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  timer           2    0[BANK0 ] struct Timers
  6727 ;; Return value:  Size  Location     Type
  6728 ;;		None               void
  6729 ;; Registers used:
  6730 ;;		None
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6736 ;;      Params:         2       0       0       0       0
  6737 ;;      Locals:         0       2       0       0       0
  6738 ;;      Temps:          0       0       0       0       0
  6739 ;;      Totals:         2       2       0       0       0
  6740 ;;Total ram usage:        4 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; This function calls:
  6743 ;;		Nothing
  6744 ;; This function is called by:
  6745 ;;		_timer0_int_handler
  6746 ;; This function uses a non-reentrant model
  6747 ;;
  6748                           
  6749                           	psect	text44
  6750  001FF8                     __ptext44:
  6751                           	opt stack 0
  6752  001FF8                     _WriteTimer0:
  6753                           	opt stack 19
  6754                           
  6755                           ;incstack = 0
  6756  001FF8  C02D  F080         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6757  001FFC  C02E  F081         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6758  002000  C081  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6759  002004  C080  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6760  002008  0012               	return	
  6761  00200A                     __end_of_WriteTimer0:
  6762                           	opt stack 0
  6763                           pclatu	equ	0xFFB
  6764                           pclath	equ	0xFFA
  6765                           tblptru	equ	0xFF8
  6766                           tblptrh	equ	0xFF7
  6767                           tblptrl	equ	0xFF6
  6768                           tablat	equ	0xFF5
  6769                           prodh	equ	0xFF4
  6770                           prodl	equ	0xFF3
  6771                           intcon	equ	0xFF2
  6772                           postinc0	equ	0xFEE
  6773                           fsr0h	equ	0xFEA
  6774                           fsr0l	equ	0xFE9
  6775                           wreg	equ	0xFE8
  6776                           indf1	equ	0xFE7
  6777                           postdec1	equ	0xFE5
  6778                           fsr1h	equ	0xFE2
  6779                           fsr1l	equ	0xFE1
  6780                           bsr	equ	0xFE0
  6781                           indf2	equ	0xFDF
  6782                           postinc2	equ	0xFDE
  6783                           postdec2	equ	0xFDD
  6784                           fsr2h	equ	0xFDA
  6785                           fsr2l	equ	0xFD9
  6786                           status	equ	0xFD8
  6787                           
  6788 ;; *************** function _i2c_int_handler *****************
  6789 ;; Defined at:
  6790 ;;		line 139 in file "../src/my_i2c.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;		None
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;		None
  6795 ;; Return value:  Size  Location     Type
  6796 ;;		None               void
  6797 ;; Registers used:
  6798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6799 ;; Tracked objects:
  6800 ;;		On entry : 0/0
  6801 ;;		On exit  : 0/0
  6802 ;;		Unchanged: 0/0
  6803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6804 ;;      Params:         0       0       0       0       0
  6805 ;;      Locals:         0       0       0       0       0
  6806 ;;      Temps:          0       0       0       0       0
  6807 ;;      Totals:         0       0       0       0       0
  6808 ;;Total ram usage:        0 bytes
  6809 ;; Hardware stack levels used:    1
  6810 ;; Hardware stack levels required when called:    4
  6811 ;; This function calls:
  6812 ;;		_i2c_slave_int_handler
  6813 ;; This function is called by:
  6814 ;;		_InterruptHandlerHigh
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818                           	psect	text45
  6819  002038                     __ptext45:
  6820                           	opt stack 0
  6821  002038                     _i2c_int_handler:
  6822                           	opt stack 16
  6823                           
  6824                           ;my_i2c.c: 143: i2c_slave_int_handler();
  6825                           
  6826                           ;incstack = 0
  6827  002038  EC65  F000         	call	_i2c_slave_int_handler	;wreg free
  6828  00203C  0012               	return	
  6829  00203E                     __end_of_i2c_int_handler:
  6830                           	opt stack 0
  6831                           pclatu	equ	0xFFB
  6832                           pclath	equ	0xFFA
  6833                           tblptru	equ	0xFF8
  6834                           tblptrh	equ	0xFF7
  6835                           tblptrl	equ	0xFF6
  6836                           tablat	equ	0xFF5
  6837                           prodh	equ	0xFF4
  6838                           prodl	equ	0xFF3
  6839                           intcon	equ	0xFF2
  6840                           postinc0	equ	0xFEE
  6841                           fsr0h	equ	0xFEA
  6842                           fsr0l	equ	0xFE9
  6843                           wreg	equ	0xFE8
  6844                           indf1	equ	0xFE7
  6845                           postdec1	equ	0xFE5
  6846                           fsr1h	equ	0xFE2
  6847                           fsr1l	equ	0xFE1
  6848                           bsr	equ	0xFE0
  6849                           indf2	equ	0xFDF
  6850                           postinc2	equ	0xFDE
  6851                           postdec2	equ	0xFDD
  6852                           fsr2h	equ	0xFDA
  6853                           fsr2l	equ	0xFD9
  6854                           status	equ	0xFD8
  6855                           
  6856 ;; *************** function _i2c_slave_int_handler *****************
  6857 ;; Defined at:
  6858 ;;		line 248 in file "../src/my_i2c.c"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;		None
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;  movecomAck      3   44[BANK0 ] unsigned char [3]
  6863 ;;  sensorData      5   47[BANK0 ] unsigned char [5]
  6864 ;;  noData          5   31[BANK0 ] unsigned char [5]
  6865 ;;  msgtype         2   59[BANK0 ] int 
  6866 ;;  reply           5   36[BANK0 ] unsigned char [5]
  6867 ;;  gatherAck       3   41[BANK0 ] unsigned char [3]
  6868 ;;  length          1   62[BANK0 ] unsigned char 
  6869 ;;  error_buf       3   52[BANK0 ] unsigned char [3]
  6870 ;;  data_read       1   63[BANK0 ] unsigned char 
  6871 ;;  msg_ready       1   61[BANK0 ] unsigned char 
  6872 ;;  msg_to_send     1   58[BANK0 ] unsigned char 
  6873 ;;  i2c_data        1   57[BANK0 ] unsigned char 
  6874 ;;  overrun_erro    1   56[BANK0 ] unsigned char 
  6875 ;;  data_written    1   55[BANK0 ] unsigned char 
  6876 ;; Return value:  Size  Location     Type
  6877 ;;		None               void
  6878 ;; Registers used:
  6879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6885 ;;      Params:         0       0       0       0       0
  6886 ;;      Locals:         0      33       0       0       0
  6887 ;;      Temps:          0       2       0       0       0
  6888 ;;      Totals:         0      35       0       0       0
  6889 ;;Total ram usage:       35 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; Hardware stack levels required when called:    3
  6892 ;; This function calls:
  6893 ;;		_FromMainLow_recvmsg
  6894 ;;		_ToMainHigh_sendmsg
  6895 ;;		_handle_start
  6896 ;;		_start_i2c_slave_reply
  6897 ;; This function is called by:
  6898 ;;		_i2c_int_handler
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902                           	psect	text46
  6903  0000CA                     __ptext46:
  6904                           	opt stack 0
  6905  0000CA                     _i2c_slave_int_handler:
  6906                           	opt stack 16
  6907                           
  6908                           ;my_i2c.c: 249: unsigned char i2c_data;
  6909                           ;my_i2c.c: 250: unsigned char data_read = 0;
  6910                           
  6911                           ;incstack = 0
  6912  0000CA  0100               	movlb	0	; () banked
  6913  0000CC  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  6914  0000CE  0E00               	movlw	0
  6915  0000D0  0100               	movlb	0	; () banked
  6916  0000D2  0100               	movlb	0	; () banked
  6917  0000D4  6FBF               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6918  0000D6  0100               	movlb	0	; () banked
  6919  0000D8  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6920                           
  6921                           ;my_i2c.c: 251: unsigned char data_written = 0;
  6922  0000DA  0100               	movlb	0	; () banked
  6923  0000DC  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  6924  0000DE  0E00               	movlw	0
  6925  0000E0  0100               	movlb	0	; () banked
  6926  0000E2  0100               	movlb	0	; () banked
  6927  0000E4  6FB7               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  6928  0000E6  0100               	movlb	0	; () banked
  6929  0000E8  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6930                           
  6931                           ;my_i2c.c: 252: unsigned char msg_ready = 0;
  6932  0000EA  0100               	movlb	0	; () banked
  6933  0000EC  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  6934  0000EE  0E00               	movlw	0
  6935  0000F0  0100               	movlb	0	; () banked
  6936  0000F2  0100               	movlb	0	; () banked
  6937  0000F4  6FBD               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6938  0000F6  0100               	movlb	0	; () banked
  6939  0000F8  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6940                           
  6941                           ;my_i2c.c: 253: unsigned char msg_to_send = 0;
  6942  0000FA  0100               	movlb	0	; () banked
  6943  0000FC  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  6944  0000FE  0E00               	movlw	0
  6945  000100  0100               	movlb	0	; () banked
  6946  000102  0100               	movlb	0	; () banked
  6947  000104  6FBA               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6948  000106  0100               	movlb	0	; () banked
  6949  000108  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6950                           
  6951                           ;my_i2c.c: 254: unsigned char overrun_error = 0;
  6952  00010A  0100               	movlb	0	; () banked
  6953  00010C  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  6954  00010E  0E00               	movlw	0
  6955  000110  0100               	movlb	0	; () banked
  6956  000112  0100               	movlb	0	; () banked
  6957  000114  6FB8               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  6958  000116  0100               	movlb	0	; () banked
  6959  000118  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6960                           
  6961                           ; BSR set to: 0
  6962                           ;my_i2c.c: 255: unsigned char error_buf[3];
  6963                           ;my_i2c.c: 258: if (SSPCON1bits.SSPOV == 1) {
  6964  00011A  ACC6               	btfss	4038,6,c	;volatile
  6965  00011C  D020               	goto	i2l4186
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;my_i2c.c: 259: SSPCON1bits.SSPOV = 0;
  6969  00011E  9CC6               	bcf	4038,6,c	;volatile
  6970                           
  6971                           ; BSR set to: 0
  6972                           ;my_i2c.c: 263: ic_ptr->status = 0x5;
  6973  000120  EE20 F00D          	lfsr	2,13
  6974  000124  5050               	movf	_ic_ptr,w,c
  6975  000126  26D9               	addwf	fsr2l,f,c
  6976  000128  5051               	movf	_ic_ptr+1,w,c
  6977  00012A  22DA               	addwfc	fsr2h,f,c
  6978  00012C  0E05               	movlw	5
  6979  00012E  6EDF               	movwf	indf2,c
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;my_i2c.c: 264: overrun_error = 1;
  6983  000130  0100               	movlb	0	; () banked
  6984  000132  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  6985  000134  0E01               	movlw	1
  6986  000136  0100               	movlb	0	; () banked
  6987  000138  0100               	movlb	0	; () banked
  6988  00013A  6FB8               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  6989  00013C  0100               	movlb	0	; () banked
  6990  00013E  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6991                           
  6992                           ; BSR set to: 0
  6993                           ;my_i2c.c: 265: ic_ptr->error_count++;
  6994  000140  EE20 F00F          	lfsr	2,15
  6995  000144  5050               	movf	_ic_ptr,w,c
  6996  000146  26D9               	addwf	fsr2l,f,c
  6997  000148  5051               	movf	_ic_ptr+1,w,c
  6998  00014A  22DA               	addwfc	fsr2h,f,c
  6999  00014C  2ADF               	incf	indf2,f,c
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;my_i2c.c: 266: ic_ptr->error_code = 0x4;
  7003  00014E  EE20 F00E          	lfsr	2,14
  7004  000152  5050               	movf	_ic_ptr,w,c
  7005  000154  26D9               	addwf	fsr2l,f,c
  7006  000156  5051               	movf	_ic_ptr+1,w,c
  7007  000158  22DA               	addwfc	fsr2h,f,c
  7008  00015A  0E04               	movlw	4
  7009  00015C  6EDF               	movwf	indf2,c
  7010  00015E                     i2l4186:
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;my_i2c.c: 267: }
  7014                           ;my_i2c.c: 269: if (SSPSTATbits.BF == 1) {
  7015  00015E  A0C7               	btfss	4039,0,c	;volatile
  7016  000160  D00A               	goto	i2l4192
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;my_i2c.c: 270: i2c_data = SSPBUF;
  7020  000162  CFC9 F0B9          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;my_i2c.c: 271: data_read = 1;
  7024  000166  0100               	movlb	0	; () banked
  7025  000168  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7026  00016A  0E01               	movlw	1
  7027  00016C  0100               	movlb	0	; () banked
  7028  00016E  0100               	movlb	0	; () banked
  7029  000170  6FBF               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7030  000172  0100               	movlb	0	; () banked
  7031  000174  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7032  000176                     i2l4192:
  7033                           
  7034                           ; BSR set to: 0
  7035                           ;my_i2c.c: 272: }
  7036                           ;my_i2c.c: 274: if (!overrun_error) {
  7037  000176  0100               	movlb	0	; () banked
  7038  000178  0100               	movlb	0	; () banked
  7039  00017A  67B8               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  7040  00017C  D174               	goto	i2l331
  7041  00017E  D160               	goto	i2l4280
  7042  000180                     i2l333:
  7043                           
  7044                           ; BSR set to: 0
  7045                           ;my_i2c.c: 277: {
  7046                           ;my_i2c.c: 279: if (SSPSTATbits.S == 1) {
  7047  000180  A6C7               	btfss	4039,3,c	;volatile
  7048  000182  D171               	goto	i2l331
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;my_i2c.c: 280: handle_start(data_read);
  7052  000184  0100               	movlb	0	; () banked
  7053  000186  0100               	movlb	0	; () banked
  7054  000188  51BF               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7055  00018A  EC62  F00A         	call	_handle_start
  7056                           
  7057                           ;my_i2c.c: 282: if (ic_ptr->status == 0x8) {
  7058  00018E  EE20 F00D          	lfsr	2,13
  7059  000192  5050               	movf	_ic_ptr,w,c
  7060  000194  26D9               	addwf	fsr2l,f,c
  7061  000196  5051               	movf	_ic_ptr+1,w,c
  7062  000198  22DA               	addwfc	fsr2h,f,c
  7063  00019A  0E08               	movlw	8
  7064  00019C  62DF               	cpfseq	indf2,c
  7065  00019E  D163               	goto	i2l331
  7066                           
  7067                           ;my_i2c.c: 283: data_read = 0;
  7068  0001A0  0100               	movlb	0	; () banked
  7069  0001A2  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7070  0001A4  0E00               	movlw	0
  7071  0001A6  0100               	movlb	0	; () banked
  7072  0001A8  0100               	movlb	0	; () banked
  7073  0001AA  6FBF               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7074  0001AC  0100               	movlb	0	; () banked
  7075  0001AE  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7076                           
  7077                           ;my_i2c.c: 284: msg_to_send = 1;
  7078  0001B0  0100               	movlb	0	; () banked
  7079  0001B2  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7080  0001B4  0E01               	movlw	1
  7081  0001B6  0100               	movlb	0	; () banked
  7082  0001B8  0100               	movlb	0	; () banked
  7083  0001BA  6FBA               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7084  0001BC  D136               	goto	L6
  7085  0001BE                     i2l337:
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;my_i2c.c: 290: {
  7089                           ;my_i2c.c: 292: if (SSPSTATbits.P == 1) {
  7090  0001BE  A8C7               	btfss	4039,4,c	;volatile
  7091  0001C0  D027               	goto	i2l4212
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;my_i2c.c: 295: ic_ptr->event_count++;
  7095  0001C2  EE20 F00C          	lfsr	2,12
  7096  0001C6  5050               	movf	_ic_ptr,w,c
  7097  0001C8  26D9               	addwf	fsr2l,f,c
  7098  0001CA  5051               	movf	_ic_ptr+1,w,c
  7099  0001CC  22DA               	addwfc	fsr2h,f,c
  7100  0001CE  2ADF               	incf	indf2,f,c
  7101                           
  7102                           ; BSR set to: 0
  7103                           ;my_i2c.c: 296: if (data_read) {
  7104  0001D0  0100               	movlb	0	; () banked
  7105  0001D2  0100               	movlb	0	; () banked
  7106  0001D4  51BF               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7107  0001D6  B4D8               	btfsc	status,2,c
  7108  0001D8  D12B               	goto	L8
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;my_i2c.c: 297: if (SSPSTATbits.D_A == 0) {
  7112  0001DA  BAC7               	btfsc	4039,5,c	;volatile
  7113  0001DC  D009               	goto	i2l4210
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;my_i2c.c: 298: msg_ready = 1;
  7117  0001DE  0100               	movlb	0	; () banked
  7118  0001E0  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7119  0001E2  0E01               	movlw	1
  7120  0001E4  0100               	movlb	0	; () banked
  7121  0001E6  0100               	movlb	0	; () banked
  7122  0001E8  6FBD               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7123  0001EA  0100               	movlb	0	; () banked
  7124  0001EC  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7125                           
  7126                           ;my_i2c.c: 299: } else {
  7127  0001EE  D120               	goto	L8
  7128  0001F0                     i2l4210:
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;my_i2c.c: 300: ic_ptr->error_count++;
  7132  0001F0  EE20 F00F          	lfsr	2,15
  7133  0001F4  5050               	movf	_ic_ptr,w,c
  7134  0001F6  26D9               	addwf	fsr2l,f,c
  7135  0001F8  5051               	movf	_ic_ptr+1,w,c
  7136  0001FA  22DA               	addwfc	fsr2h,f,c
  7137  0001FC  2ADF               	incf	indf2,f,c
  7138                           
  7139                           ;my_i2c.c: 301: ic_ptr->error_code = 0x6;
  7140  0001FE  EE20 F00E          	lfsr	2,14
  7141  000202  5050               	movf	_ic_ptr,w,c
  7142  000204  26D9               	addwf	fsr2l,f,c
  7143  000206  5051               	movf	_ic_ptr+1,w,c
  7144  000208  22DA               	addwfc	fsr2h,f,c
  7145  00020A  0E06               	movlw	6
  7146  00020C  6EDF               	movwf	indf2,c
  7147                           
  7148                           ; BSR set to: 0
  7149  00020E  D110               	goto	L8
  7150  000210                     i2l4212:
  7151                           
  7152                           ; BSR set to: 0
  7153  000210  0100               	movlb	0	; () banked
  7154  000212  0100               	movlb	0	; () banked
  7155  000214  51BF               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7156  000216  B4D8               	btfsc	status,2,c
  7157  000218  D126               	goto	i2l331
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;my_i2c.c: 306: ic_ptr->event_count++;
  7161  00021A  EE20 F00C          	lfsr	2,12
  7162  00021E  5050               	movf	_ic_ptr,w,c
  7163  000220  26D9               	addwf	fsr2l,f,c
  7164  000222  5051               	movf	_ic_ptr+1,w,c
  7165  000224  22DA               	addwfc	fsr2h,f,c
  7166  000226  2ADF               	incf	indf2,f,c
  7167                           
  7168                           ; BSR set to: 0
  7169                           ;my_i2c.c: 307: if (SSPSTATbits.D_A == 0) {
  7170  000228  BAC7               	btfsc	4039,5,c	;volatile
  7171  00022A  D013               	goto	i2l4228
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;my_i2c.c: 308: if (SSPSTATbits.R_W == 0) {
  7175  00022C  B4C7               	btfsc	4039,2,c	;volatile
  7176  00022E  D008               	goto	i2l4222
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;my_i2c.c: 309: ic_ptr->status = 0x7;
  7180  000230  EE20 F00D          	lfsr	2,13
  7181  000234  5050               	movf	_ic_ptr,w,c
  7182  000236  26D9               	addwf	fsr2l,f,c
  7183  000238  5051               	movf	_ic_ptr+1,w,c
  7184  00023A  22DA               	addwfc	fsr2h,f,c
  7185  00023C  0E07               	movlw	7
  7186  00023E  D05A               	goto	L5
  7187  000240                     i2l4222:
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;my_i2c.c: 311: ic_ptr->status = 0x8;
  7191  000240  EE20 F00D          	lfsr	2,13
  7192  000244  5050               	movf	_ic_ptr,w,c
  7193  000246  26D9               	addwf	fsr2l,f,c
  7194  000248  5051               	movf	_ic_ptr+1,w,c
  7195  00024A  22DA               	addwfc	fsr2h,f,c
  7196  00024C  0E08               	movlw	8
  7197  00024E  6EDF               	movwf	indf2,c
  7198  000250  D0DE               	goto	L9
  7199  000252                     i2l4228:
  7200                           
  7201                           ; BSR set to: 0
  7202                           ;my_i2c.c: 317: ic_ptr->error_count++;
  7203  000252  EE20 F00F          	lfsr	2,15
  7204  000256  5050               	movf	_ic_ptr,w,c
  7205  000258  26D9               	addwf	fsr2l,f,c
  7206  00025A  5051               	movf	_ic_ptr+1,w,c
  7207  00025C  22DA               	addwfc	fsr2h,f,c
  7208  00025E  2ADF               	incf	indf2,f,c
  7209                           
  7210                           ;my_i2c.c: 318: ic_ptr->status = 0x5;
  7211  000260  EE20 F00D          	lfsr	2,13
  7212  000264  5050               	movf	_ic_ptr,w,c
  7213  000266  26D9               	addwf	fsr2l,f,c
  7214  000268  5051               	movf	_ic_ptr+1,w,c
  7215  00026A  22DA               	addwfc	fsr2h,f,c
  7216  00026C  0E05               	movlw	5
  7217  00026E  6EDF               	movwf	indf2,c
  7218                           
  7219                           ;my_i2c.c: 319: ic_ptr->error_code = 0x6;
  7220  000270  EE20 F00E          	lfsr	2,14
  7221  000274  5050               	movf	_ic_ptr,w,c
  7222  000276  26D9               	addwf	fsr2l,f,c
  7223  000278  5051               	movf	_ic_ptr+1,w,c
  7224  00027A  22DA               	addwfc	fsr2h,f,c
  7225  00027C  0E06               	movlw	6
  7226  00027E  D03A               	goto	L5
  7227  000280                     i2l4230:
  7228                           
  7229                           ; BSR set to: 0
  7230                           ;my_i2c.c: 325: {
  7231                           ;my_i2c.c: 326: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7232  000280  EE20 F01B          	lfsr	2,27
  7233  000284  5050               	movf	_ic_ptr,w,c
  7234  000286  26D9               	addwf	fsr2l,f,c
  7235  000288  5051               	movf	_ic_ptr+1,w,c
  7236  00028A  22DA               	addwfc	fsr2h,f,c
  7237  00028C  50DF               	movf	indf2,w,c
  7238  00028E  0100               	movlb	0	; () banked
  7239  000290  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7240  000292  EE20 F01A          	lfsr	2,26
  7241  000296  5050               	movf	_ic_ptr,w,c
  7242  000298  26D9               	addwf	fsr2l,f,c
  7243  00029A  5051               	movf	_ic_ptr+1,w,c
  7244  00029C  22DA               	addwfc	fsr2h,f,c
  7245  00029E  50DF               	movf	indf2,w,c
  7246  0002A0  0100               	movlb	0	; () banked
  7247  0002A2  5D9D               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  7248  0002A4  B0D8               	btfsc	status,0,c
  7249  0002A6  D0C4               	goto	L8
  7250                           
  7251                           ; BSR set to: 0
  7252                           ;my_i2c.c: 327: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7253  0002A8  EE20 F01B          	lfsr	2,27
  7254  0002AC  5050               	movf	_ic_ptr,w,c
  7255  0002AE  26D9               	addwf	fsr2l,f,c
  7256  0002B0  5051               	movf	_ic_ptr+1,w,c
  7257  0002B2  22DA               	addwfc	fsr2h,f,c
  7258  0002B4  50DF               	movf	indf2,w,c
  7259  0002B6  0100               	movlb	0	; () banked
  7260  0002B8  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7261  0002BA  0100               	movlb	0	; () banked
  7262  0002BC  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7263  0002BE  0D01               	mullw	1
  7264  0002C0  0E10               	movlw	16
  7265  0002C2  26F3               	addwf	prodl,f,c
  7266  0002C4  0E00               	movlw	0
  7267  0002C6  22F4               	addwfc	prodh,f,c
  7268  0002C8  50F3               	movf	prodl,w,c
  7269  0002CA  2450               	addwf	_ic_ptr,w,c
  7270  0002CC  6ED9               	movwf	fsr2l,c
  7271  0002CE  50F4               	movf	prodh,w,c
  7272  0002D0  2051               	addwfc	_ic_ptr+1,w,c
  7273  0002D2  6EDA               	movwf	fsr2h,c
  7274  0002D4  50DF               	movf	indf2,w,c
  7275  0002D6  6EC9               	movwf	4041,c	;volatile
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;my_i2c.c: 328: ic_ptr->outbufind++;
  7279  0002D8  EE20 F01B          	lfsr	2,27
  7280  0002DC  5050               	movf	_ic_ptr,w,c
  7281  0002DE  26D9               	addwf	fsr2l,f,c
  7282  0002E0  5051               	movf	_ic_ptr+1,w,c
  7283  0002E2  22DA               	addwfc	fsr2h,f,c
  7284  0002E4  2ADF               	incf	indf2,f,c
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;my_i2c.c: 329: data_written = 1;
  7288  0002E6  0100               	movlb	0	; () banked
  7289  0002E8  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7290  0002EA  0E01               	movlw	1
  7291  0002EC  0100               	movlb	0	; () banked
  7292  0002EE  0100               	movlb	0	; () banked
  7293  0002F0  6FB7               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7294  0002F2  D09B               	goto	L6
  7295  0002F4                     L5:
  7296  0002F4  6EDF               	movwf	indf2,c
  7297  0002F6  D0B7               	goto	i2l331
  7298  0002F8                     i2l351:
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;my_i2c.c: 337: {
  7302                           ;my_i2c.c: 339: if (SSPSTATbits.P == 1) {
  7303  0002F8  A8C7               	btfss	4039,4,c	;volatile
  7304  0002FA  D04C               	goto	i2l4258
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;my_i2c.c: 341: ic_ptr->event_count++;
  7308  0002FC  EE20 F00C          	lfsr	2,12
  7309  000300  5050               	movf	_ic_ptr,w,c
  7310  000302  26D9               	addwf	fsr2l,f,c
  7311  000304  5051               	movf	_ic_ptr+1,w,c
  7312  000306  22DA               	addwfc	fsr2h,f,c
  7313  000308  2ADF               	incf	indf2,f,c
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;my_i2c.c: 342: if (data_read) {
  7317  00030A  0100               	movlb	0	; () banked
  7318  00030C  0100               	movlb	0	; () banked
  7319  00030E  51BF               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7320  000310  B4D8               	btfsc	status,2,c
  7321  000312  D037               	goto	i2l4254
  7322                           
  7323                           ; BSR set to: 0
  7324                           ;my_i2c.c: 343: if (SSPSTATbits.D_A == 1) {
  7325  000314  AAC7               	btfss	4039,5,c	;volatile
  7326  000316  D01D               	goto	i2l4252
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;my_i2c.c: 344: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7330  000318  EE20 F00A          	lfsr	2,10
  7331  00031C  5050               	movf	_ic_ptr,w,c
  7332  00031E  26D9               	addwf	fsr2l,f,c
  7333  000320  5051               	movf	_ic_ptr+1,w,c
  7334  000322  22DA               	addwfc	fsr2h,f,c
  7335  000324  50DF               	movf	indf2,w,c
  7336  000326  0100               	movlb	0	; () banked
  7337  000328  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7338  00032A  0100               	movlb	0	; () banked
  7339  00032C  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7340  00032E  0D01               	mullw	1
  7341  000330  50F3               	movf	prodl,w,c
  7342  000332  2450               	addwf	_ic_ptr,w,c
  7343  000334  6ED9               	movwf	fsr2l,c
  7344  000336  50F4               	movf	prodh,w,c
  7345  000338  2051               	addwfc	_ic_ptr+1,w,c
  7346  00033A  6EDA               	movwf	fsr2h,c
  7347  00033C  0100               	movlb	0	; () banked
  7348  00033E  C0B9  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7349                           
  7350                           ; BSR set to: 0
  7351                           ;my_i2c.c: 345: ic_ptr->buflen++;
  7352  000342  EE20 F00A          	lfsr	2,10
  7353  000346  5050               	movf	_ic_ptr,w,c
  7354  000348  26D9               	addwf	fsr2l,f,c
  7355  00034A  5051               	movf	_ic_ptr+1,w,c
  7356  00034C  22DA               	addwfc	fsr2h,f,c
  7357  00034E  2ADF               	incf	indf2,f,c
  7358  000350  D018               	goto	i2l4254
  7359  000352                     i2l4252:
  7360                           
  7361                           ; BSR set to: 0
  7362                           ;my_i2c.c: 348: ic_ptr->error_count++;
  7363  000352  EE20 F00F          	lfsr	2,15
  7364  000356  5050               	movf	_ic_ptr,w,c
  7365  000358  26D9               	addwf	fsr2l,f,c
  7366  00035A  5051               	movf	_ic_ptr+1,w,c
  7367  00035C  22DA               	addwfc	fsr2h,f,c
  7368  00035E  2ADF               	incf	indf2,f,c
  7369                           
  7370                           ;my_i2c.c: 349: ic_ptr->error_code = 0x6;
  7371  000360  EE20 F00E          	lfsr	2,14
  7372  000364  5050               	movf	_ic_ptr,w,c
  7373  000366  26D9               	addwf	fsr2l,f,c
  7374  000368  5051               	movf	_ic_ptr+1,w,c
  7375  00036A  22DA               	addwfc	fsr2h,f,c
  7376  00036C  0E06               	movlw	6
  7377  00036E  6EDF               	movwf	indf2,c
  7378                           
  7379                           ;my_i2c.c: 350: ic_ptr->status = 0x5;
  7380  000370  EE20 F00D          	lfsr	2,13
  7381  000374  5050               	movf	_ic_ptr,w,c
  7382  000376  26D9               	addwf	fsr2l,f,c
  7383  000378  5051               	movf	_ic_ptr+1,w,c
  7384  00037A  22DA               	addwfc	fsr2h,f,c
  7385  00037C  0E05               	movlw	5
  7386  00037E  6EDF               	movwf	indf2,c
  7387  000380  D057               	goto	L8
  7388  000382                     i2l4254:
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;my_i2c.c: 353: msg_ready = 1;
  7392  000382  0100               	movlb	0	; () banked
  7393  000384  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7394  000386  0E01               	movlw	1
  7395  000388  0100               	movlb	0	; () banked
  7396  00038A  0100               	movlb	0	; () banked
  7397  00038C  6FBD               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7398  00038E  0100               	movlb	0	; () banked
  7399  000390  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7400                           
  7401                           ; BSR set to: 0
  7402  000392  D04E               	goto	L8
  7403  000394                     i2l4258:
  7404                           
  7405                           ; BSR set to: 0
  7406  000394  0100               	movlb	0	; () banked
  7407  000396  0100               	movlb	0	; () banked
  7408  000398  51BF               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7409  00039A  B4D8               	btfsc	status,2,c
  7410  00039C  D064               	goto	i2l331
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;my_i2c.c: 357: ic_ptr->event_count++;
  7414  00039E  EE20 F00C          	lfsr	2,12
  7415  0003A2  5050               	movf	_ic_ptr,w,c
  7416  0003A4  26D9               	addwf	fsr2l,f,c
  7417  0003A6  5051               	movf	_ic_ptr+1,w,c
  7418  0003A8  22DA               	addwfc	fsr2h,f,c
  7419  0003AA  2ADF               	incf	indf2,f,c
  7420                           
  7421                           ; BSR set to: 0
  7422                           ;my_i2c.c: 358: if (SSPSTATbits.D_A == 1) {
  7423  0003AC  AAC7               	btfss	4039,5,c	;volatile
  7424  0003AE  D01D               	goto	i2l359
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;my_i2c.c: 359: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7428  0003B0  EE20 F00A          	lfsr	2,10
  7429  0003B4  5050               	movf	_ic_ptr,w,c
  7430  0003B6  26D9               	addwf	fsr2l,f,c
  7431  0003B8  5051               	movf	_ic_ptr+1,w,c
  7432  0003BA  22DA               	addwfc	fsr2h,f,c
  7433  0003BC  50DF               	movf	indf2,w,c
  7434  0003BE  0100               	movlb	0	; () banked
  7435  0003C0  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7436  0003C2  0100               	movlb	0	; () banked
  7437  0003C4  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7438  0003C6  0D01               	mullw	1
  7439  0003C8  50F3               	movf	prodl,w,c
  7440  0003CA  2450               	addwf	_ic_ptr,w,c
  7441  0003CC  6ED9               	movwf	fsr2l,c
  7442  0003CE  50F4               	movf	prodh,w,c
  7443  0003D0  2051               	addwfc	_ic_ptr+1,w,c
  7444  0003D2  6EDA               	movwf	fsr2h,c
  7445  0003D4  0100               	movlb	0	; () banked
  7446  0003D6  C0B9  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;my_i2c.c: 360: ic_ptr->buflen++;
  7450  0003DA  EE20 F00A          	lfsr	2,10
  7451  0003DE  5050               	movf	_ic_ptr,w,c
  7452  0003E0  26D9               	addwf	fsr2l,f,c
  7453  0003E2  5051               	movf	_ic_ptr+1,w,c
  7454  0003E4  22DA               	addwfc	fsr2h,f,c
  7455  0003E6  2ADF               	incf	indf2,f,c
  7456                           
  7457                           ;my_i2c.c: 361: } else {
  7458  0003E8  D03E               	goto	i2l331
  7459  0003EA                     i2l359:
  7460                           
  7461                           ; BSR set to: 0
  7462                           ;my_i2c.c: 362: if (SSPSTATbits.R_W == 1) {
  7463  0003EA  A4C7               	btfss	4039,2,c	;volatile
  7464  0003EC  D701               	goto	i2l4210
  7465                           
  7466                           ; BSR set to: 0
  7467                           ;my_i2c.c: 363: ic_ptr->status = 0x8;
  7468  0003EE  EE20 F00D          	lfsr	2,13
  7469  0003F2  5050               	movf	_ic_ptr,w,c
  7470  0003F4  26D9               	addwf	fsr2l,f,c
  7471  0003F6  5051               	movf	_ic_ptr+1,w,c
  7472  0003F8  22DA               	addwfc	fsr2h,f,c
  7473  0003FA  0E08               	movlw	8
  7474  0003FC  6EDF               	movwf	indf2,c
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;my_i2c.c: 364: msg_ready = 1;
  7478  0003FE  0100               	movlb	0	; () banked
  7479  000400  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7480  000402  0E01               	movlw	1
  7481  000404  0100               	movlb	0	; () banked
  7482  000406  0100               	movlb	0	; () banked
  7483  000408  6FBD               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7484  00040A  0100               	movlb	0	; () banked
  7485  00040C  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7486  00040E                     L9:
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;my_i2c.c: 365: msg_to_send = 1;
  7490  00040E  0100               	movlb	0	; () banked
  7491  000410  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7492  000412  0E01               	movlw	1
  7493  000414  0100               	movlb	0	; () banked
  7494  000416  0100               	movlb	0	; () banked
  7495  000418  6FBA               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7496  00041A  0100               	movlb	0	; () banked
  7497  00041C  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7498                           
  7499                           ; BSR set to: 0
  7500                           ;my_i2c.c: 367: data_read = 0;
  7501  00041E  0100               	movlb	0	; () banked
  7502  000420  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7503  000422  0E00               	movlw	0
  7504  000424  0100               	movlb	0	; () banked
  7505  000426  0100               	movlb	0	; () banked
  7506  000428  6FBF               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7507  00042A                     L6:
  7508  00042A  0100               	movlb	0	; () banked
  7509  00042C  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7510                           
  7511                           ;my_i2c.c: 368: } else {
  7512  00042E  D01B               	goto	i2l331
  7513  000430                     L8:
  7514                           
  7515                           ;my_i2c.c: 371: ic_ptr->status = 0x5;
  7516  000430  EE20 F00D          	lfsr	2,13
  7517  000434  5050               	movf	_ic_ptr,w,c
  7518  000436  26D9               	addwf	fsr2l,f,c
  7519  000438  5051               	movf	_ic_ptr+1,w,c
  7520  00043A  22DA               	addwfc	fsr2h,f,c
  7521  00043C  0E05               	movlw	5
  7522  00043E  D75A               	goto	L5
  7523  000440                     i2l4280:
  7524                           
  7525                           ; BSR set to: 0
  7526  000440  EE20 F00D          	lfsr	2,13
  7527  000444  5050               	movf	_ic_ptr,w,c
  7528  000446  26D9               	addwf	fsr2l,f,c
  7529  000448  5051               	movf	_ic_ptr+1,w,c
  7530  00044A  22DA               	addwfc	fsr2h,f,c
  7531  00044C  50DF               	movf	indf2,w,c
  7532                           
  7533                           ; Switch size 1, requested type "space"
  7534                           ; Number of cases is 4, Range of values is 5 to 8
  7535                           ; switch strategies available:
  7536                           ; Name         Instructions Cycles
  7537                           ; simple_byte           13     7 (average)
  7538                           ;	Chosen strategy is simple_byte
  7539  00044E  0A05               	xorlw	5	; case 5
  7540  000450  B4D8               	btfsc	status,2,c
  7541  000452  D696               	goto	i2l333
  7542  000454  0A03               	xorlw	3	; case 6
  7543  000456  B4D8               	btfsc	status,2,c
  7544  000458  D6B2               	goto	i2l337
  7545  00045A  0A01               	xorlw	1	; case 7
  7546  00045C  B4D8               	btfsc	status,2,c
  7547  00045E  D74C               	goto	i2l351
  7548  000460  0A0F               	xorlw	15	; case 8
  7549  000462  B4D8               	btfsc	status,2,c
  7550  000464  D70D               	goto	i2l4230
  7551  000466                     i2l331:
  7552                           
  7553                           ;my_i2c.c: 378: }
  7554                           ;my_i2c.c: 381: if (data_read || data_written) {
  7555  000466  0100               	movlb	0	; () banked
  7556  000468  0100               	movlb	0	; () banked
  7557  00046A  67BF               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  7558  00046C  D005               	goto	i2l365
  7559                           
  7560                           ; BSR set to: 0
  7561  00046E  0100               	movlb	0	; () banked
  7562  000470  0100               	movlb	0	; () banked
  7563  000472  51B7               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  7564  000474  B4D8               	btfsc	status,2,c
  7565  000476  D002               	goto	i2l4286
  7566  000478                     i2l365:
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;my_i2c.c: 383: if (SSPCON1bits.CKP == 0) {
  7570  000478  A8C6               	btfss	4038,4,c	;volatile
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;my_i2c.c: 384: SSPCON1bits.CKP = 1;
  7574  00047A  88C6               	bsf	4038,4,c	;volatile
  7575  00047C                     i2l4286:
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;my_i2c.c: 385: }
  7579                           ;my_i2c.c: 386: }
  7580                           ;my_i2c.c: 389: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7581  00047C  EE20 F00A          	lfsr	2,10
  7582  000480  5050               	movf	_ic_ptr,w,c
  7583  000482  26D9               	addwf	fsr2l,f,c
  7584  000484  5051               	movf	_ic_ptr+1,w,c
  7585  000486  22DA               	addwfc	fsr2h,f,c
  7586  000488  0E08               	movlw	8
  7587  00048A  64DF               	cpfsgt	indf2,c
  7588  00048C  D01B               	goto	i2l4292
  7589                           
  7590                           ; BSR set to: 0
  7591  00048E  0100               	movlb	0	; () banked
  7592  000490  0100               	movlb	0	; () banked
  7593  000492  67BD               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  7594  000494  D017               	goto	i2l4292
  7595                           
  7596                           ; BSR set to: 0
  7597                           ;my_i2c.c: 390: ic_ptr->status = 0x5;
  7598  000496  EE20 F00D          	lfsr	2,13
  7599  00049A  5050               	movf	_ic_ptr,w,c
  7600  00049C  26D9               	addwf	fsr2l,f,c
  7601  00049E  5051               	movf	_ic_ptr+1,w,c
  7602  0004A0  22DA               	addwfc	fsr2h,f,c
  7603  0004A2  0E05               	movlw	5
  7604  0004A4  6EDF               	movwf	indf2,c
  7605                           
  7606                           ;my_i2c.c: 391: ic_ptr->error_count++;
  7607  0004A6  EE20 F00F          	lfsr	2,15
  7608  0004AA  5050               	movf	_ic_ptr,w,c
  7609  0004AC  26D9               	addwf	fsr2l,f,c
  7610  0004AE  5051               	movf	_ic_ptr+1,w,c
  7611  0004B0  22DA               	addwfc	fsr2h,f,c
  7612  0004B2  2ADF               	incf	indf2,f,c
  7613                           
  7614                           ;my_i2c.c: 392: ic_ptr->error_code = 0x7;
  7615  0004B4  EE20 F00E          	lfsr	2,14
  7616  0004B8  5050               	movf	_ic_ptr,w,c
  7617  0004BA  26D9               	addwf	fsr2l,f,c
  7618  0004BC  5051               	movf	_ic_ptr+1,w,c
  7619  0004BE  22DA               	addwfc	fsr2h,f,c
  7620  0004C0  0E07               	movlw	7
  7621  0004C2  6EDF               	movwf	indf2,c
  7622  0004C4                     i2l4292:
  7623                           
  7624                           ; BSR set to: 0
  7625                           ;my_i2c.c: 393: }
  7626                           ;my_i2c.c: 395: if (msg_ready) {
  7627  0004C4  0100               	movlb	0	; () banked
  7628  0004C6  0100               	movlb	0	; () banked
  7629  0004C8  51BD               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  7630  0004CA  B4D8               	btfsc	status,2,c
  7631  0004CC  D038               	goto	i2l4300
  7632                           
  7633                           ; BSR set to: 0
  7634                           ;my_i2c.c: 396: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7635  0004CE  EE20 F00C          	lfsr	2,12
  7636  0004D2  5050               	movf	_ic_ptr,w,c
  7637  0004D4  26D9               	addwf	fsr2l,f,c
  7638  0004D6  5051               	movf	_ic_ptr+1,w,c
  7639  0004D8  22DA               	addwfc	fsr2h,f,c
  7640  0004DA  EE10 F00A          	lfsr	1,10
  7641  0004DE  5050               	movf	_ic_ptr,w,c
  7642  0004E0  26E1               	addwf	fsr1l,f,c
  7643  0004E2  5051               	movf	_ic_ptr+1,w,c
  7644  0004E4  22E2               	addwfc	fsr1h,f,c
  7645  0004E6  50E7               	movf	indf1,w,c
  7646  0004E8  0100               	movlb	0	; () banked
  7647  0004EA  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7648  0004EC  0100               	movlb	0	; () banked
  7649  0004EE  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7650  0004F0  0D01               	mullw	1
  7651  0004F2  50F3               	movf	prodl,w,c
  7652  0004F4  2450               	addwf	_ic_ptr,w,c
  7653  0004F6  6EE1               	movwf	fsr1l,c
  7654  0004F8  50F4               	movf	prodh,w,c
  7655  0004FA  2051               	addwfc	_ic_ptr+1,w,c
  7656  0004FC  6EE2               	movwf	fsr1h,c
  7657  0004FE  CFDF FFE7          	movff	indf2,indf1
  7658                           
  7659                           ; BSR set to: 0
  7660                           ;my_i2c.c: 397: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7661  000502  0100               	movlb	0	; () banked
  7662  000504  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7663  000506  0E28               	movlw	40
  7664  000508  0100               	movlb	0	; () banked
  7665  00050A  0100               	movlb	0	; () banked
  7666  00050C  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7667  00050E  0100               	movlb	0	; () banked
  7668  000510  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7669  000512  0100               	movlb	0	; () banked
  7670  000514  C051  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7671  000518  0100               	movlb	0	; () banked
  7672  00051A  C050  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7673  00051E  EE20 F00A          	lfsr	2,10
  7674  000522  5050               	movf	_ic_ptr,w,c
  7675  000524  26D9               	addwf	fsr2l,f,c
  7676  000526  5051               	movf	_ic_ptr+1,w,c
  7677  000528  22DA               	addwfc	fsr2h,f,c
  7678  00052A  50DF               	movf	indf2,w,c
  7679  00052C  0100               	movlb	0	; () banked
  7680  00052E  6F9E               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  7681  000530  0100               	movlb	0	; () banked
  7682  000532  299E               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  7683  000534  EC1C  F00F         	call	_ToMainHigh_sendmsg
  7684                           
  7685                           ;my_i2c.c: 398: ic_ptr->buflen = 0;
  7686  000538  EE20 F00A          	lfsr	2,10
  7687  00053C  D03E               	goto	L7
  7688  00053E                     i2l4300:
  7689  00053E  EE20 F00F          	lfsr	2,15
  7690  000542  5050               	movf	_ic_ptr,w,c
  7691  000544  26D9               	addwf	fsr2l,f,c
  7692  000546  5051               	movf	_ic_ptr+1,w,c
  7693  000548  22DA               	addwfc	fsr2h,f,c
  7694  00054A  50DF               	movf	indf2,w,c
  7695  00054C  B4D8               	btfsc	status,2,c
  7696  00054E  D03B               	goto	i2l4308
  7697                           
  7698                           ;my_i2c.c: 400: error_buf[0] = ic_ptr->error_count;
  7699  000550  EE20 F00F          	lfsr	2,15
  7700  000554  5050               	movf	_ic_ptr,w,c
  7701  000556  26D9               	addwf	fsr2l,f,c
  7702  000558  5051               	movf	_ic_ptr+1,w,c
  7703  00055A  22DA               	addwfc	fsr2h,f,c
  7704  00055C  50DF               	movf	indf2,w,c
  7705  00055E  0100               	movlb	0	; () banked
  7706  000560  0100               	movlb	0	; () banked
  7707  000562  6FB4               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  7708                           
  7709                           ;my_i2c.c: 401: error_buf[1] = ic_ptr->error_code;
  7710  000564  EE20 F00E          	lfsr	2,14
  7711  000568  5050               	movf	_ic_ptr,w,c
  7712  00056A  26D9               	addwf	fsr2l,f,c
  7713  00056C  5051               	movf	_ic_ptr+1,w,c
  7714  00056E  22DA               	addwfc	fsr2h,f,c
  7715  000570  50DF               	movf	indf2,w,c
  7716  000572  0100               	movlb	0	; () banked
  7717  000574  0100               	movlb	0	; () banked
  7718  000576  6FB5               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  7719                           
  7720                           ;my_i2c.c: 402: error_buf[2] = ic_ptr->event_count;
  7721  000578  EE20 F00C          	lfsr	2,12
  7722  00057C  5050               	movf	_ic_ptr,w,c
  7723  00057E  26D9               	addwf	fsr2l,f,c
  7724  000580  5051               	movf	_ic_ptr+1,w,c
  7725  000582  22DA               	addwfc	fsr2h,f,c
  7726  000584  50DF               	movf	indf2,w,c
  7727  000586  0100               	movlb	0	; () banked
  7728  000588  0100               	movlb	0	; () banked
  7729  00058A  6FB6               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  7730                           
  7731                           ; BSR set to: 0
  7732                           ;my_i2c.c: 403: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7733  00058C  0100               	movlb	0	; () banked
  7734  00058E  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7735  000590  0E29               	movlw	41
  7736  000592  0100               	movlb	0	; () banked
  7737  000594  0100               	movlb	0	; () banked
  7738  000596  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7739  000598  0100               	movlb	0	; () banked
  7740  00059A  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7741  00059C  0100               	movlb	0	; () banked
  7742  00059E  0E00               	movlw	high i2c_slave_int_handler@error_buf
  7743  0005A0  0100               	movlb	0	; () banked
  7744  0005A2  0100               	movlb	0	; () banked
  7745  0005A4  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7746  0005A6  0100               	movlb	0	; () banked
  7747  0005A8  0EB4               	movlw	low i2c_slave_int_handler@error_buf
  7748  0005AA  0100               	movlb	0	; () banked
  7749  0005AC  0100               	movlb	0	; () banked
  7750  0005AE  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7751  0005B0  0E03               	movlw	3
  7752  0005B2  EC1C  F00F         	call	_ToMainHigh_sendmsg
  7753                           
  7754                           ;my_i2c.c: 404: ic_ptr->error_count = 0;
  7755  0005B6  EE20 F00F          	lfsr	2,15
  7756  0005BA                     L7:
  7757  0005BA  5050               	movf	_ic_ptr,w,c
  7758  0005BC  26D9               	addwf	fsr2l,f,c
  7759  0005BE  5051               	movf	_ic_ptr+1,w,c
  7760  0005C0  22DA               	addwfc	fsr2h,f,c
  7761  0005C2  0E00               	movlw	0
  7762  0005C4  6EDF               	movwf	indf2,c
  7763  0005C6                     i2l4308:
  7764                           
  7765                           ;my_i2c.c: 405: }
  7766                           ;my_i2c.c: 406: if (msg_to_send) {
  7767  0005C6  0100               	movlb	0	; () banked
  7768  0005C8  0100               	movlb	0	; () banked
  7769  0005CA  51BA               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  7770  0005CC  B4D8               	btfsc	status,2,c
  7771  0005CE  0012               	return	
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;my_i2c.c: 407: unsigned char length = 0;
  7775  0005D0  0100               	movlb	0	; () banked
  7776  0005D2  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7777  0005D4  0E00               	movlw	0
  7778  0005D6  0100               	movlb	0	; () banked
  7779  0005D8  0100               	movlb	0	; () banked
  7780  0005DA  6FBE               	movwf	i2c_slave_int_handler@length& (0+255),b
  7781  0005DC  0100               	movlb	0	; () banked
  7782  0005DE  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7783                           
  7784                           ; BSR set to: 0
  7785                           ;my_i2c.c: 411: if(ic_ptr->buffer[0] == 0xAA){
  7786  0005E0  0EAA               	movlw	170
  7787  0005E2  C050  FFD9         	movff	_ic_ptr,fsr2l
  7788  0005E6  C051  FFDA         	movff	_ic_ptr+1,fsr2h
  7789  0005EA  62DF               	cpfseq	indf2,c
  7790  0005EC  D038               	goto	i2l4324
  7791                           
  7792                           ; BSR set to: 0
  7793                           ;my_i2c.c: 412: length = 3;
  7794  0005EE  0100               	movlb	0	; () banked
  7795  0005F0  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7796  0005F2  0E03               	movlw	3
  7797  0005F4  0100               	movlb	0	; () banked
  7798  0005F6  0100               	movlb	0	; () banked
  7799  0005F8  6FBE               	movwf	i2c_slave_int_handler@length& (0+255),b
  7800  0005FA  0100               	movlb	0	; () banked
  7801  0005FC  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;my_i2c.c: 413: unsigned char gatherAck[3] = {0x00, 0x01, 0x01};
  7805  0005FE  C0D3  F0A9         	movff	i2c_slave_int_handler@F5128,i2c_slave_int_handler@gatherAck
  7806  000602  C0D4  F0AA         	movff	i2c_slave_int_handler@F5128+1,i2c_slave_int_handler@gatherAck+1
  7807  000606  C0D5  F0AB         	movff	i2c_slave_int_handler@F5128+2,i2c_slave_int_handler@gatherAck+2
  7808                           
  7809                           ; BSR set to: 0
  7810                           ;my_i2c.c: 414: start_i2c_slave_reply(length, gatherAck);
  7811  00060A  0100               	movlb	0	; () banked
  7812  00060C  0E00               	movlw	high i2c_slave_int_handler@gatherAck
  7813  00060E  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  7814  000610  0100               	movlb	0	; () banked
  7815  000612  0EA9               	movlw	low i2c_slave_int_handler@gatherAck
  7816  000614  6E2D               	movwf	start_i2c_slave_reply@msg,c
  7817  000616  0100               	movlb	0	; () banked
  7818  000618  0100               	movlb	0	; () banked
  7819  00061A  51BE               	movf	i2c_slave_int_handler@length& (0+255),w,b
  7820  00061C  EC96  F008         	call	_start_i2c_slave_reply
  7821                           
  7822                           ;my_i2c.c: 415: unsigned char reply[5] = {0xAA, 0x00, 0x00, 0x00, 0x00};
  7823  000620  EE20  F0CE         	lfsr	2,i2c_slave_int_handler@F5130
  7824  000624  EE10  F0A4         	lfsr	1,i2c_slave_int_handler@reply
  7825  000628  0E05               	movlw	5
  7826  00062A                     i2u344_41:
  7827  00062A  CFDE FFE6          	movff	postinc2,postinc1
  7828  00062E  2EE8               	decfsz	wreg,f,c
  7829  000630  D7FC               	goto	i2u344_41
  7830                           
  7831                           ;my_i2c.c: 416: ToMainHigh_sendmsg(5, 32, reply);
  7832  000632  0100               	movlb	0	; () banked
  7833  000634  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7834  000636  0E20               	movlw	32
  7835  000638  0100               	movlb	0	; () banked
  7836  00063A  0100               	movlb	0	; () banked
  7837  00063C  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7838  00063E  0100               	movlb	0	; () banked
  7839  000640  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7840  000642  0100               	movlb	0	; () banked
  7841  000644  0E00               	movlw	high i2c_slave_int_handler@reply
  7842  000646  0100               	movlb	0	; () banked
  7843  000648  0100               	movlb	0	; () banked
  7844  00064A  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7845  00064C  0100               	movlb	0	; () banked
  7846  00064E  0EA4               	movlw	low i2c_slave_int_handler@reply
  7847  000650  0100               	movlb	0	; () banked
  7848  000652  0100               	movlb	0	; () banked
  7849  000654  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7850  000656  0E05               	movlw	5
  7851  000658  EC1C  F00F         	call	_ToMainHigh_sendmsg
  7852                           
  7853                           ;my_i2c.c: 417: } else if(ic_ptr->buffer[0] == 0xAB){
  7854  00065C  D07E               	goto	i2l377
  7855  00065E                     i2l4324:
  7856  00065E  0EAB               	movlw	171
  7857  000660  C050  FFD9         	movff	_ic_ptr,fsr2l
  7858  000664  C051  FFDA         	movff	_ic_ptr+1,fsr2h
  7859  000668  62DF               	cpfseq	indf2,c
  7860  00066A  D046               	goto	i2l4338
  7861                           
  7862                           ;my_i2c.c: 418: int msgtype;
  7863                           ;my_i2c.c: 419: unsigned char sensorData[5];
  7864                           ;my_i2c.c: 420: unsigned char noData[5] = {0x00,0x00,0x00,0x00,0x00};
  7865  00066C  EE20  F0D9         	lfsr	2,i2c_slave_int_handler@F5134
  7866  000670  EE10  F09F         	lfsr	1,i2c_slave_int_handler@noData
  7867  000674  0E05               	movlw	5
  7868  000676                     i2u346_41:
  7869  000676  CFDE FFE6          	movff	postinc2,postinc1
  7870  00067A  2EE8               	decfsz	wreg,f,c
  7871  00067C  D7FC               	goto	i2u346_41
  7872                           
  7873                           ;my_i2c.c: 421: length = FromMainLow_recvmsg(5, (unsigned char *)&msgtype, sensorData);
  7874  00067E  0100               	movlb	0	; () banked
  7875  000680  0E00               	movlw	high i2c_slave_int_handler@msgtype
  7876  000682  0100               	movlb	0	; () banked
  7877  000684  0100               	movlb	0	; () banked
  7878  000686  6F99               	movwf	(FromMainLow_recvmsg@msgtype+1)& (0+255),b
  7879  000688  0100               	movlb	0	; () banked
  7880  00068A  0EBB               	movlw	low i2c_slave_int_handler@msgtype
  7881  00068C  0100               	movlb	0	; () banked
  7882  00068E  0100               	movlb	0	; () banked
  7883  000690  6F98               	movwf	FromMainLow_recvmsg@msgtype& (0+255),b
  7884  000692  0100               	movlb	0	; () banked
  7885  000694  0E00               	movlw	high i2c_slave_int_handler@sensorData
  7886  000696  0100               	movlb	0	; () banked
  7887  000698  0100               	movlb	0	; () banked
  7888  00069A  6F9B               	movwf	(FromMainLow_recvmsg@data+1)& (0+255),b
  7889  00069C  0100               	movlb	0	; () banked
  7890  00069E  0EAF               	movlw	low i2c_slave_int_handler@sensorData
  7891  0006A0  0100               	movlb	0	; () banked
  7892  0006A2  0100               	movlb	0	; () banked
  7893  0006A4  6F9A               	movwf	FromMainLow_recvmsg@data& (0+255),b
  7894  0006A6  0E05               	movlw	5
  7895  0006A8  EC4E  F00E         	call	_FromMainLow_recvmsg
  7896  0006AC  0100               	movlb	0	; () banked
  7897  0006AE  0100               	movlb	0	; () banked
  7898  0006B0  6FBE               	movwf	i2c_slave_int_handler@length& (0+255),b
  7899                           
  7900                           ; BSR set to: 0
  7901                           ;my_i2c.c: 422: if(length == 5 && msgtype == 31)
  7902  0006B2  0100               	movlb	0	; () banked
  7903  0006B4  0100               	movlb	0	; () banked
  7904  0006B6  51BE               	movf	i2c_slave_int_handler@length& (0+255),w,b
  7905  0006B8  0A05               	xorlw	5
  7906  0006BA  A4D8               	btfss	status,2,c
  7907  0006BC  D013               	goto	i2l4336
  7908                           
  7909                           ; BSR set to: 0
  7910  0006BE  0100               	movlb	0	; () banked
  7911  0006C0  0100               	movlb	0	; () banked
  7912  0006C2  51BB               	movf	i2c_slave_int_handler@msgtype& (0+255),w,b
  7913  0006C4  0A1F               	xorlw	31
  7914  0006C6  11BC               	iorwf	(i2c_slave_int_handler@msgtype+1)& (0+255),w,b
  7915  0006C8  A4D8               	btfss	status,2,c
  7916  0006CA  D00C               	goto	i2l4336
  7917                           
  7918                           ; BSR set to: 0
  7919                           ;my_i2c.c: 423: start_i2c_slave_reply(length, sensorData);
  7920  0006CC  0100               	movlb	0	; () banked
  7921  0006CE  0E00               	movlw	high i2c_slave_int_handler@sensorData
  7922  0006D0  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  7923  0006D2  0100               	movlb	0	; () banked
  7924  0006D4  0EAF               	movlw	low i2c_slave_int_handler@sensorData
  7925  0006D6  6E2D               	movwf	start_i2c_slave_reply@msg,c
  7926  0006D8  0100               	movlb	0	; () banked
  7927  0006DA  0100               	movlb	0	; () banked
  7928  0006DC  51BE               	movf	i2c_slave_int_handler@length& (0+255),w,b
  7929  0006DE  EC96  F008         	call	_start_i2c_slave_reply
  7930  0006E2  D03B               	goto	i2l377
  7931  0006E4                     i2l4336:
  7932                           
  7933                           ;my_i2c.c: 424: else
  7934                           ;my_i2c.c: 425: start_i2c_slave_reply(5, noData);
  7935  0006E4  0100               	movlb	0	; () banked
  7936  0006E6  0E00               	movlw	high i2c_slave_int_handler@noData
  7937  0006E8  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  7938  0006EA  0100               	movlb	0	; () banked
  7939  0006EC  0E9F               	movlw	low i2c_slave_int_handler@noData
  7940  0006EE  6E2D               	movwf	start_i2c_slave_reply@msg,c
  7941  0006F0  0E05               	movlw	5
  7942  0006F2  EC96  F008         	call	_start_i2c_slave_reply
  7943  0006F6  D031               	goto	i2l377
  7944  0006F8                     i2l4338:
  7945  0006F8  0EBA               	movlw	186
  7946  0006FA  C050  FFD9         	movff	_ic_ptr,fsr2l
  7947  0006FE  C051  FFDA         	movff	_ic_ptr+1,fsr2h
  7948  000702  62DF               	cpfseq	indf2,c
  7949  000704  D02A               	goto	i2l377
  7950                           
  7951                           ;my_i2c.c: 427: length = 5;
  7952  000706  0100               	movlb	0	; () banked
  7953  000708  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7954  00070A  0E05               	movlw	5
  7955  00070C  0100               	movlb	0	; () banked
  7956  00070E  0100               	movlb	0	; () banked
  7957  000710  6FBE               	movwf	i2c_slave_int_handler@length& (0+255),b
  7958  000712  0100               	movlb	0	; () banked
  7959  000714  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7960                           
  7961                           ; BSR set to: 0
  7962                           ;my_i2c.c: 428: unsigned char movecomAck[3] = {0x02, 0x01, 0x01};
  7963  000716  C0D6  F0AC         	movff	i2c_slave_int_handler@F5137,i2c_slave_int_handler@movecomAck
  7964  00071A  C0D7  F0AD         	movff	i2c_slave_int_handler@F5137+1,i2c_slave_int_handler@movecomAck+1
  7965  00071E  C0D8  F0AE         	movff	i2c_slave_int_handler@F5137+2,i2c_slave_int_handler@movecomAck+2
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;my_i2c.c: 429: start_i2c_slave_reply(length, movecomAck);
  7969  000722  0100               	movlb	0	; () banked
  7970  000724  0E00               	movlw	high i2c_slave_int_handler@movecomAck
  7971  000726  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  7972  000728  0100               	movlb	0	; () banked
  7973  00072A  0EAC               	movlw	low i2c_slave_int_handler@movecomAck
  7974  00072C  6E2D               	movwf	start_i2c_slave_reply@msg,c
  7975  00072E  0100               	movlb	0	; () banked
  7976  000730  0100               	movlb	0	; () banked
  7977  000732  51BE               	movf	i2c_slave_int_handler@length& (0+255),w,b
  7978  000734  EC96  F008         	call	_start_i2c_slave_reply
  7979                           
  7980                           ;my_i2c.c: 430: ToMainHigh_sendmsg(5, 32, ic_ptr->buffer);
  7981  000738  0100               	movlb	0	; () banked
  7982  00073A  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7983  00073C  0E20               	movlw	32
  7984  00073E  0100               	movlb	0	; () banked
  7985  000740  0100               	movlb	0	; () banked
  7986  000742  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7987  000744  0100               	movlb	0	; () banked
  7988  000746  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7989  000748  0100               	movlb	0	; () banked
  7990  00074A  C051  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7991  00074E  0100               	movlb	0	; () banked
  7992  000750  C050  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7993  000754  0E05               	movlw	5
  7994  000756  EC1C  F00F         	call	_ToMainHigh_sendmsg
  7995  00075A                     i2l377:
  7996                           
  7997                           ;my_i2c.c: 431: }
  7998                           ;my_i2c.c: 432: msg_to_send = 0;
  7999  00075A  0100               	movlb	0	; () banked
  8000  00075C  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  8001  00075E  0E00               	movlw	0
  8002  000760  0100               	movlb	0	; () banked
  8003  000762  0100               	movlb	0	; () banked
  8004  000764  6FBA               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  8005  000766  0100               	movlb	0	; () banked
  8006  000768  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8007  00076A  0012               	return	
  8008  00076C                     __end_of_i2c_slave_int_handler:
  8009                           	opt stack 0
  8010                           pclatu	equ	0xFFB
  8011                           pclath	equ	0xFFA
  8012                           tblptru	equ	0xFF8
  8013                           tblptrh	equ	0xFF7
  8014                           tblptrl	equ	0xFF6
  8015                           tablat	equ	0xFF5
  8016                           prodh	equ	0xFF4
  8017                           prodl	equ	0xFF3
  8018                           intcon	equ	0xFF2
  8019                           postinc0	equ	0xFEE
  8020                           fsr0h	equ	0xFEA
  8021                           fsr0l	equ	0xFE9
  8022                           wreg	equ	0xFE8
  8023                           indf1	equ	0xFE7
  8024                           postinc1	equ	0xFE6
  8025                           postdec1	equ	0xFE5
  8026                           fsr1h	equ	0xFE2
  8027                           fsr1l	equ	0xFE1
  8028                           bsr	equ	0xFE0
  8029                           indf2	equ	0xFDF
  8030                           postinc2	equ	0xFDE
  8031                           postdec2	equ	0xFDD
  8032                           fsr2h	equ	0xFDA
  8033                           fsr2l	equ	0xFD9
  8034                           status	equ	0xFD8
  8035                           
  8036 ;; *************** function _start_i2c_slave_reply *****************
  8037 ;; Defined at:
  8038 ;;		line 92 in file "../src/my_i2c.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;  length          1    wreg     unsigned char 
  8041 ;;  msg             2   44[COMRAM] PTR unsigned char 
  8042 ;;		 -> i2c_slave_int_handler@movecomAck(3), i2c_slave_int_handler@sensorData(5), i2c_slave_int_handler@noData(5), i2c_s
      +lave_int_handler@gatherAck(3), 
  8043 ;; Auto vars:     Size  Location     Type
  8044 ;;  length          1   46[COMRAM] unsigned char 
  8045 ;; Return value:  Size  Location     Type
  8046 ;;		None               void
  8047 ;; Registers used:
  8048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8054 ;;      Params:         2       0       0       0       0
  8055 ;;      Locals:         1       0       0       0       0
  8056 ;;      Temps:          0       2       0       0       0
  8057 ;;      Totals:         3       2       0       0       0
  8058 ;;Total ram usage:        5 bytes
  8059 ;; Hardware stack levels used:    1
  8060 ;; This function calls:
  8061 ;;		Nothing
  8062 ;; This function is called by:
  8063 ;;		_i2c_slave_int_handler
  8064 ;; This function uses a non-reentrant model
  8065 ;;
  8066                           
  8067                           	psect	text47
  8068  00112C                     __ptext47:
  8069                           	opt stack 0
  8070  00112C                     _start_i2c_slave_reply:
  8071                           	opt stack 18
  8072                           
  8073                           ; BSR set to: 0
  8074                           ;incstack = 0
  8075                           ;start_i2c_slave_reply@length stored from wreg
  8076  00112C  CFE8 F02F          	movff	wreg,start_i2c_slave_reply@length
  8077                           
  8078                           ;my_i2c.c: 94: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  8079  001130  EE20 F01A          	lfsr	2,26
  8080  001134  5050               	movf	_ic_ptr,w,c
  8081  001136  26D9               	addwf	fsr2l,f,c
  8082  001138  5051               	movf	_ic_ptr+1,w,c
  8083  00113A  22DA               	addwfc	fsr2h,f,c
  8084  00113C  0E00               	movlw	0
  8085  00113E  6EDF               	movwf	indf2,c
  8086  001140  D031               	goto	i2l4166
  8087  001142                     i2l4162:
  8088                           
  8089                           ;my_i2c.c: 95: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  8090  001142  EE20 F01A          	lfsr	2,26
  8091  001146  5050               	movf	_ic_ptr,w,c
  8092  001148  26D9               	addwf	fsr2l,f,c
  8093  00114A  5051               	movf	_ic_ptr+1,w,c
  8094  00114C  22DA               	addwfc	fsr2h,f,c
  8095  00114E  50DF               	movf	indf2,w,c
  8096  001150  0100               	movlb	0	; () banked
  8097  001152  6F80               	movwf	??_start_i2c_slave_reply& (0+255),b
  8098  001154  0100               	movlb	0	; () banked
  8099  001156  5180               	movf	??_start_i2c_slave_reply& (0+255),w,b
  8100  001158  0D01               	mullw	1
  8101  00115A  50F3               	movf	prodl,w,c
  8102  00115C  242D               	addwf	start_i2c_slave_reply@msg,w,c
  8103  00115E  6ED9               	movwf	fsr2l,c
  8104  001160  50F4               	movf	prodh,w,c
  8105  001162  202E               	addwfc	start_i2c_slave_reply@msg+1,w,c
  8106  001164  6EDA               	movwf	fsr2h,c
  8107  001166  EE10 F01A          	lfsr	1,26
  8108  00116A  5050               	movf	_ic_ptr,w,c
  8109  00116C  26E1               	addwf	fsr1l,f,c
  8110  00116E  5051               	movf	_ic_ptr+1,w,c
  8111  001170  22E2               	addwfc	fsr1h,f,c
  8112  001172  50E7               	movf	indf1,w,c
  8113  001174  0100               	movlb	0	; () banked
  8114  001176  6F81               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  8115  001178  0100               	movlb	0	; () banked
  8116  00117A  5181               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  8117  00117C  0D01               	mullw	1
  8118  00117E  0E10               	movlw	16
  8119  001180  26F3               	addwf	prodl,f,c
  8120  001182  0E00               	movlw	0
  8121  001184  22F4               	addwfc	prodh,f,c
  8122  001186  50F3               	movf	prodl,w,c
  8123  001188  2450               	addwf	_ic_ptr,w,c
  8124  00118A  6EE1               	movwf	fsr1l,c
  8125  00118C  50F4               	movf	prodh,w,c
  8126  00118E  2051               	addwfc	_ic_ptr+1,w,c
  8127  001190  6EE2               	movwf	fsr1h,c
  8128  001192  CFDF FFE7          	movff	indf2,indf1
  8129                           
  8130                           ; BSR set to: 0
  8131  001196  EE20 F01A          	lfsr	2,26
  8132  00119A  5050               	movf	_ic_ptr,w,c
  8133  00119C  26D9               	addwf	fsr2l,f,c
  8134  00119E  5051               	movf	_ic_ptr+1,w,c
  8135  0011A0  22DA               	addwfc	fsr2h,f,c
  8136  0011A2  2ADF               	incf	indf2,f,c
  8137  0011A4                     i2l4166:
  8138  0011A4  EE20 F01A          	lfsr	2,26
  8139  0011A8  5050               	movf	_ic_ptr,w,c
  8140  0011AA  26D9               	addwf	fsr2l,f,c
  8141  0011AC  5051               	movf	_ic_ptr+1,w,c
  8142  0011AE  22DA               	addwfc	fsr2h,f,c
  8143  0011B0  50DF               	movf	indf2,w,c
  8144  0011B2  0100               	movlb	0	; () banked
  8145  0011B4  6F80               	movwf	??_start_i2c_slave_reply& (0+255),b
  8146  0011B6  502F               	movf	start_i2c_slave_reply@length,w,c
  8147  0011B8  0100               	movlb	0	; () banked
  8148  0011BA  5D80               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  8149  0011BC  A0D8               	btfss	status,0,c
  8150  0011BE  D7C1               	goto	i2l4162
  8151                           
  8152                           ; BSR set to: 0
  8153                           ;my_i2c.c: 96: }
  8154                           ;my_i2c.c: 97: ic_ptr->outbuflen = length;
  8155                           
  8156                           ; BSR set to: 0
  8157  0011C0  EE20 F01A          	lfsr	2,26
  8158  0011C4  5050               	movf	_ic_ptr,w,c
  8159  0011C6  26D9               	addwf	fsr2l,f,c
  8160  0011C8  5051               	movf	_ic_ptr+1,w,c
  8161  0011CA  22DA               	addwfc	fsr2h,f,c
  8162  0011CC  C02F  FFDF         	movff	start_i2c_slave_reply@length,indf2
  8163                           
  8164                           ;my_i2c.c: 98: ic_ptr->outbufind = 1;
  8165  0011D0  EE20 F01B          	lfsr	2,27
  8166  0011D4  5050               	movf	_ic_ptr,w,c
  8167  0011D6  26D9               	addwf	fsr2l,f,c
  8168  0011D8  5051               	movf	_ic_ptr+1,w,c
  8169  0011DA  22DA               	addwfc	fsr2h,f,c
  8170  0011DC  0E01               	movlw	1
  8171  0011DE  6EDF               	movwf	indf2,c
  8172                           
  8173                           ;my_i2c.c: 101: SSPBUF = ic_ptr->outbuffer[0];
  8174  0011E0  EE20 F010          	lfsr	2,16
  8175  0011E4  5050               	movf	_ic_ptr,w,c
  8176  0011E6  26D9               	addwf	fsr2l,f,c
  8177  0011E8  5051               	movf	_ic_ptr+1,w,c
  8178  0011EA  22DA               	addwfc	fsr2h,f,c
  8179  0011EC  50DF               	movf	indf2,w,c
  8180  0011EE  6EC9               	movwf	4041,c	;volatile
  8181                           
  8182                           ; BSR set to: 0
  8183                           ;my_i2c.c: 104: SSPCON1bits.CKP = 1;
  8184  0011F0  88C6               	bsf	4038,4,c	;volatile
  8185                           
  8186                           ; BSR set to: 0
  8187  0011F2  0012               	return	
  8188  0011F4                     __end_of_start_i2c_slave_reply:
  8189                           	opt stack 0
  8190                           pclatu	equ	0xFFB
  8191                           pclath	equ	0xFFA
  8192                           tblptru	equ	0xFF8
  8193                           tblptrh	equ	0xFF7
  8194                           tblptrl	equ	0xFF6
  8195                           tablat	equ	0xFF5
  8196                           prodh	equ	0xFF4
  8197                           prodl	equ	0xFF3
  8198                           intcon	equ	0xFF2
  8199                           postinc0	equ	0xFEE
  8200                           fsr0h	equ	0xFEA
  8201                           fsr0l	equ	0xFE9
  8202                           wreg	equ	0xFE8
  8203                           indf1	equ	0xFE7
  8204                           postinc1	equ	0xFE6
  8205                           postdec1	equ	0xFE5
  8206                           fsr1h	equ	0xFE2
  8207                           fsr1l	equ	0xFE1
  8208                           bsr	equ	0xFE0
  8209                           indf2	equ	0xFDF
  8210                           postinc2	equ	0xFDE
  8211                           postdec2	equ	0xFDD
  8212                           fsr2h	equ	0xFDA
  8213                           fsr2l	equ	0xFD9
  8214                           status	equ	0xFD8
  8215                           
  8216 ;; *************** function _handle_start *****************
  8217 ;; Defined at:
  8218 ;;		line 110 in file "../src/my_i2c.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;  data_read       1    wreg     unsigned char 
  8221 ;; Auto vars:     Size  Location     Type
  8222 ;;  data_read       1   44[COMRAM] unsigned char 
  8223 ;; Return value:  Size  Location     Type
  8224 ;;		None               void
  8225 ;; Registers used:
  8226 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8227 ;; Tracked objects:
  8228 ;;		On entry : 0/0
  8229 ;;		On exit  : 0/0
  8230 ;;		Unchanged: 0/0
  8231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8232 ;;      Params:         0       0       0       0       0
  8233 ;;      Locals:         1       0       0       0       0
  8234 ;;      Temps:          0       0       0       0       0
  8235 ;;      Totals:         1       0       0       0       0
  8236 ;;Total ram usage:        1 bytes
  8237 ;; Hardware stack levels used:    1
  8238 ;; This function calls:
  8239 ;;		Nothing
  8240 ;; This function is called by:
  8241 ;;		_i2c_slave_int_handler
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           	psect	text48
  8246  0014C4                     __ptext48:
  8247                           	opt stack 0
  8248  0014C4                     _handle_start:
  8249                           	opt stack 18
  8250                           
  8251                           ; BSR set to: 0
  8252                           ;incstack = 0
  8253                           ;handle_start@data_read stored from wreg
  8254  0014C4  CFE8 F02D          	movff	wreg,handle_start@data_read
  8255                           
  8256                           ;my_i2c.c: 111: ic_ptr->event_count = 1;
  8257  0014C8  EE20 F00C          	lfsr	2,12
  8258  0014CC  5050               	movf	_ic_ptr,w,c
  8259  0014CE  26D9               	addwf	fsr2l,f,c
  8260  0014D0  5051               	movf	_ic_ptr+1,w,c
  8261  0014D2  22DA               	addwfc	fsr2h,f,c
  8262  0014D4  0E01               	movlw	1
  8263  0014D6  6EDF               	movwf	indf2,c
  8264                           
  8265                           ;my_i2c.c: 112: ic_ptr->buflen = 0;
  8266  0014D8  EE20 F00A          	lfsr	2,10
  8267  0014DC  5050               	movf	_ic_ptr,w,c
  8268  0014DE  26D9               	addwf	fsr2l,f,c
  8269  0014E0  5051               	movf	_ic_ptr+1,w,c
  8270  0014E2  22DA               	addwfc	fsr2h,f,c
  8271  0014E4  0E00               	movlw	0
  8272  0014E6  6EDF               	movwf	indf2,c
  8273                           
  8274                           ;my_i2c.c: 114: if (data_read) {
  8275  0014E8  502D               	movf	handle_start@data_read,w,c
  8276  0014EA  B4D8               	btfsc	status,2,c
  8277  0014EC  D02E               	goto	i2l3120
  8278                           
  8279                           ;my_i2c.c: 115: if (SSPSTATbits.D_A == 1) {
  8280  0014EE  AAC7               	btfss	4039,5,c	;volatile
  8281  0014F0  D018               	goto	i2l294
  8282                           
  8283                           ;my_i2c.c: 118: ic_ptr->status = 0x5;
  8284  0014F2  EE20 F00D          	lfsr	2,13
  8285  0014F6  5050               	movf	_ic_ptr,w,c
  8286  0014F8  26D9               	addwf	fsr2l,f,c
  8287  0014FA  5051               	movf	_ic_ptr+1,w,c
  8288  0014FC  22DA               	addwfc	fsr2h,f,c
  8289  0014FE  0E05               	movlw	5
  8290  001500  6EDF               	movwf	indf2,c
  8291                           
  8292                           ;my_i2c.c: 119: ic_ptr->error_count++;
  8293  001502  EE20 F00F          	lfsr	2,15
  8294  001506  5050               	movf	_ic_ptr,w,c
  8295  001508  26D9               	addwf	fsr2l,f,c
  8296  00150A  5051               	movf	_ic_ptr+1,w,c
  8297  00150C  22DA               	addwfc	fsr2h,f,c
  8298  00150E  2ADF               	incf	indf2,f,c
  8299                           
  8300                           ;my_i2c.c: 120: ic_ptr->error_code = 0x5;
  8301  001510  EE20 F00E          	lfsr	2,14
  8302  001514  5050               	movf	_ic_ptr,w,c
  8303  001516  26D9               	addwf	fsr2l,f,c
  8304  001518  5051               	movf	_ic_ptr+1,w,c
  8305  00151A  22DA               	addwfc	fsr2h,f,c
  8306  00151C  0E05               	movlw	5
  8307  00151E  6EDF               	movwf	indf2,c
  8308                           
  8309                           ;my_i2c.c: 121: } else {
  8310  001520  0012               	return	
  8311  001522                     i2l294:
  8312                           
  8313                           ;my_i2c.c: 122: if (SSPSTATbits.R_W == 1) {
  8314  001522  A4C7               	btfss	4039,2,c	;volatile
  8315  001524  D009               	goto	i2l3118
  8316                           
  8317                           ;my_i2c.c: 123: ic_ptr->status = 0x8;
  8318  001526  EE20 F00D          	lfsr	2,13
  8319  00152A  5050               	movf	_ic_ptr,w,c
  8320  00152C  26D9               	addwf	fsr2l,f,c
  8321  00152E  5051               	movf	_ic_ptr+1,w,c
  8322  001530  22DA               	addwfc	fsr2h,f,c
  8323  001532  0E08               	movlw	8
  8324  001534  6EDF               	movwf	indf2,c
  8325                           
  8326                           ;my_i2c.c: 124: } else {
  8327  001536  0012               	return	
  8328  001538                     i2l3118:
  8329                           
  8330                           ;my_i2c.c: 125: ic_ptr->status = 0x7;
  8331  001538  EE20 F00D          	lfsr	2,13
  8332  00153C  5050               	movf	_ic_ptr,w,c
  8333  00153E  26D9               	addwf	fsr2l,f,c
  8334  001540  5051               	movf	_ic_ptr+1,w,c
  8335  001542  22DA               	addwfc	fsr2h,f,c
  8336  001544  0E07               	movlw	7
  8337  001546  6EDF               	movwf	indf2,c
  8338  001548  0012               	return	
  8339  00154A                     i2l3120:
  8340                           
  8341                           ;my_i2c.c: 129: ic_ptr->status = 0x6;
  8342  00154A  EE20 F00D          	lfsr	2,13
  8343  00154E  5050               	movf	_ic_ptr,w,c
  8344  001550  26D9               	addwf	fsr2l,f,c
  8345  001552  5051               	movf	_ic_ptr+1,w,c
  8346  001554  22DA               	addwfc	fsr2h,f,c
  8347  001556  0E06               	movlw	6
  8348  001558  6EDF               	movwf	indf2,c
  8349  00155A  0012               	return	
  8350  00155C                     __end_of_handle_start:
  8351                           	opt stack 0
  8352                           pclatu	equ	0xFFB
  8353                           pclath	equ	0xFFA
  8354                           tblptru	equ	0xFF8
  8355                           tblptrh	equ	0xFF7
  8356                           tblptrl	equ	0xFF6
  8357                           tablat	equ	0xFF5
  8358                           prodh	equ	0xFF4
  8359                           prodl	equ	0xFF3
  8360                           intcon	equ	0xFF2
  8361                           postinc0	equ	0xFEE
  8362                           fsr0h	equ	0xFEA
  8363                           fsr0l	equ	0xFE9
  8364                           wreg	equ	0xFE8
  8365                           indf1	equ	0xFE7
  8366                           postinc1	equ	0xFE6
  8367                           postdec1	equ	0xFE5
  8368                           fsr1h	equ	0xFE2
  8369                           fsr1l	equ	0xFE1
  8370                           bsr	equ	0xFE0
  8371                           indf2	equ	0xFDF
  8372                           postinc2	equ	0xFDE
  8373                           postdec2	equ	0xFDD
  8374                           fsr2h	equ	0xFDA
  8375                           fsr2l	equ	0xFD9
  8376                           status	equ	0xFD8
  8377                           
  8378 ;; *************** function _ToMainHigh_sendmsg *****************
  8379 ;; Defined at:
  8380 ;;		line 126 in file "../src/messages.c"
  8381 ;; Parameters:    Size  Location     Type
  8382 ;;  length          1    wreg     unsigned char 
  8383 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8384 ;;  data            2   23[BANK0 ] PTR void 
  8385 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), main@ic(29), 
  8386 ;; Auto vars:     Size  Location     Type
  8387 ;;  length          1   25[BANK0 ] unsigned char 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  1    wreg      char 
  8390 ;; Registers used:
  8391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8397 ;;      Params:         0       3       0       0       0
  8398 ;;      Locals:         0       1       0       0       0
  8399 ;;      Temps:          0       0       0       0       0
  8400 ;;      Totals:         0       4       0       0       0
  8401 ;;Total ram usage:        4 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:    2
  8404 ;; This function calls:
  8405 ;;		i2_send_msg
  8406 ;; This function is called by:
  8407 ;;		_i2c_slave_int_handler
  8408 ;;		_i2c_master_int_handler
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           	psect	text49
  8413  001E38                     __ptext49:
  8414                           	opt stack 0
  8415  001E38                     _ToMainHigh_sendmsg:
  8416                           	opt stack 16
  8417                           
  8418                           ;incstack = 0
  8419                           ;ToMainHigh_sendmsg@length stored from wreg
  8420  001E38  CFE8 F099          	movff	wreg,ToMainHigh_sendmsg@length
  8421                           
  8422                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8423                           ;	Return value of _ToMainHigh_sendmsg is never used
  8424  001E3C  0101               	movlb	1	; () banked
  8425  001E3E  0E01               	movlw	high _ToMainHigh_MQ
  8426  001E40  0100               	movlb	0	; () banked
  8427  001E42  0100               	movlb	0	; () banked
  8428  001E44  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8429  001E46  0101               	movlb	1	; () banked
  8430  001E48  0E00               	movlw	low _ToMainHigh_MQ
  8431  001E4A  0100               	movlb	0	; () banked
  8432  001E4C  0100               	movlb	0	; () banked
  8433  001E4E  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  8434  001E50  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8435  001E54  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8436  001E58  0100               	movlb	0	; () banked
  8437  001E5A  0100               	movlb	0	; () banked
  8438  001E5C  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8439  001E60  0100               	movlb	0	; () banked
  8440  001E62  0100               	movlb	0	; () banked
  8441  001E64  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8442  001E68  EC04  F007         	call	i2_send_msg	;wreg free
  8443  001E6C  0012               	return	
  8444  001E6E                     __end_of_ToMainHigh_sendmsg:
  8445                           	opt stack 0
  8446                           pclatu	equ	0xFFB
  8447                           pclath	equ	0xFFA
  8448                           tblptru	equ	0xFF8
  8449                           tblptrh	equ	0xFF7
  8450                           tblptrl	equ	0xFF6
  8451                           tablat	equ	0xFF5
  8452                           prodh	equ	0xFF4
  8453                           prodl	equ	0xFF3
  8454                           intcon	equ	0xFF2
  8455                           postinc0	equ	0xFEE
  8456                           fsr0h	equ	0xFEA
  8457                           fsr0l	equ	0xFE9
  8458                           wreg	equ	0xFE8
  8459                           indf1	equ	0xFE7
  8460                           postinc1	equ	0xFE6
  8461                           postdec1	equ	0xFE5
  8462                           fsr1h	equ	0xFE2
  8463                           fsr1l	equ	0xFE1
  8464                           bsr	equ	0xFE0
  8465                           indf2	equ	0xFDF
  8466                           postinc2	equ	0xFDE
  8467                           postdec2	equ	0xFDD
  8468                           fsr2h	equ	0xFDA
  8469                           fsr2l	equ	0xFD9
  8470                           status	equ	0xFD8
  8471                           
  8472 ;; *************** function i2_send_msg *****************
  8473 ;; Defined at:
  8474 ;;		line 24 in file "../src/messages.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8477 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8478 ;;  length          1   12[BANK0 ] unsigned char 
  8479 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8480 ;;  data            2   14[BANK0 ] PTR void 
  8481 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), 
  8482 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8485 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8486 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8487 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8488 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  1    wreg      char 
  8491 ;; Registers used:
  8492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8493 ;; Tracked objects:
  8494 ;;		On entry : 0/0
  8495 ;;		On exit  : 0/0
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8498 ;;      Params:         0       6       0       0       0
  8499 ;;      Locals:         0       5       0       0       0
  8500 ;;      Temps:          0       1       0       0       0
  8501 ;;      Totals:         0      12       0       0       0
  8502 ;;Total ram usage:       12 bytes
  8503 ;; Hardware stack levels used:    1
  8504 ;; Hardware stack levels required when called:    1
  8505 ;; This function calls:
  8506 ;;		i2___awmod
  8507 ;;		i2_memcpy
  8508 ;; This function is called by:
  8509 ;;		_ToMainHigh_sendmsg
  8510 ;; This function uses a non-reentrant model
  8511 ;;
  8512                           
  8513                           	psect	text50
  8514  000E08                     __ptext50:
  8515                           	opt stack 0
  8516  000E08                     i2_send_msg:
  8517                           	opt stack 16
  8518                           
  8519                           ;messages.c: 25: unsigned char slot;
  8520                           ;messages.c: 27: msg *qmsg;
  8521                           ;messages.c: 28: size_t tlength = length;
  8522                           
  8523                           ;incstack = 0
  8524  000E08  0100               	movlb	0	; () banked
  8525  000E0A  0100               	movlb	0	; () banked
  8526  000E0C  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  8527  000E10  0100               	movlb	0	; () banked
  8528  000E12  0100               	movlb	0	; () banked
  8529  000E14  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8533  000E16  0100               	movlb	0	; () banked
  8534  000E18  EE20 F041          	lfsr	2,65
  8535  000E1C  0100               	movlb	0	; () banked
  8536  000E1E  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8537  000E20  26D9               	addwf	fsr2l,f,c
  8538  000E22  0100               	movlb	0	; () banked
  8539  000E24  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8540  000E26  22DA               	addwfc	fsr2h,f,c
  8541  000E28  50DF               	movf	indf2,w,c
  8542  000E2A  0100               	movlb	0	; () banked
  8543  000E2C  0100               	movlb	0	; () banked
  8544  000E2E  6F93               	movwf	i2send_msg@slot& (0+255),b
  8545                           
  8546                           ; BSR set to: 0
  8547                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8548  000E30  0100               	movlb	0	; () banked
  8549  000E32  0100               	movlb	0	; () banked
  8550  000E34  5193               	movf	i2send_msg@slot& (0+255),w,b
  8551  000E36  0D0D               	mullw	13
  8552  000E38  50F3               	movf	prodl,w,c
  8553  000E3A  0100               	movlb	0	; () banked
  8554  000E3C  0100               	movlb	0	; () banked
  8555  000E3E  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  8556  000E40  0100               	movlb	0	; () banked
  8557  000E42  0100               	movlb	0	; () banked
  8558  000E44  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  8559  000E46  50F4               	movf	prodh,w,c
  8560  000E48  0100               	movlb	0	; () banked
  8561  000E4A  0100               	movlb	0	; () banked
  8562  000E4C  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8563  000E4E  0100               	movlb	0	; () banked
  8564  000E50  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8565                           
  8566                           ; BSR set to: 0
  8567                           ;messages.c: 41: if (qmsg->full != 0) {
  8568  000E52  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8569  000E56  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8570  000E5A  50DF               	movf	indf2,w,c
  8571  000E5C  B4D8               	btfsc	status,2,c
  8572  000E5E  D002               	goto	i2l4498
  8573                           
  8574                           ; BSR set to: 0
  8575                           ;messages.c: 42: return (-1);
  8576  000E60  0EFF               	movlw	255
  8577  000E62  0012               	return	
  8578  000E64                     i2l4498:
  8579                           
  8580                           ; BSR set to: 0
  8581                           ;messages.c: 43: }
  8582                           ;messages.c: 46: qmsg->length = length;
  8583  000E64  0100               	movlb	0	; () banked
  8584  000E66  EE20 F001          	lfsr	2,1
  8585  000E6A  0100               	movlb	0	; () banked
  8586  000E6C  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8587  000E6E  26D9               	addwf	fsr2l,f,c
  8588  000E70  0100               	movlb	0	; () banked
  8589  000E72  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8590  000E74  22DA               	addwfc	fsr2h,f,c
  8591  000E76  0100               	movlb	0	; () banked
  8592  000E78  C08C  FFDF         	movff	i2send_msg@length,indf2
  8593                           
  8594                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8595  000E7C  0100               	movlb	0	; () banked
  8596  000E7E  EE20 F002          	lfsr	2,2
  8597  000E82  0100               	movlb	0	; () banked
  8598  000E84  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8599  000E86  26D9               	addwf	fsr2l,f,c
  8600  000E88  0100               	movlb	0	; () banked
  8601  000E8A  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8602  000E8C  22DA               	addwfc	fsr2h,f,c
  8603  000E8E  0100               	movlb	0	; () banked
  8604  000E90  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  8605                           
  8606                           ; BSR set to: 0
  8607                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8608  000E94  0E03               	movlw	3
  8609  000E96  0100               	movlb	0	; () banked
  8610  000E98  0100               	movlb	0	; () banked
  8611  000E9A  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  8612  000E9C  0100               	movlb	0	; () banked
  8613  000E9E  0100               	movlb	0	; () banked
  8614  000EA0  6F80               	movwf	i2memcpy@d1& (0+255),b
  8615  000EA2  0E00               	movlw	0
  8616  000EA4  0100               	movlb	0	; () banked
  8617  000EA6  0100               	movlb	0	; () banked
  8618  000EA8  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8619  000EAA  0100               	movlb	0	; () banked
  8620  000EAC  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  8621  000EAE  0100               	movlb	0	; () banked
  8622  000EB0  0100               	movlb	0	; () banked
  8623  000EB2  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8624  000EB6  0100               	movlb	0	; () banked
  8625  000EB8  0100               	movlb	0	; () banked
  8626  000EBA  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  8627  000EBE  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  8628  000EC2  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8629  000EC6  EC47  F00D         	call	i2_memcpy	;wreg free
  8630                           
  8631                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  8632  000ECA  0100               	movlb	0	; () banked
  8633  000ECC  EE20 F041          	lfsr	2,65
  8634  000ED0  0100               	movlb	0	; () banked
  8635  000ED2  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8636  000ED4  26D9               	addwf	fsr2l,f,c
  8637  000ED6  0100               	movlb	0	; () banked
  8638  000ED8  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8639  000EDA  22DA               	addwfc	fsr2h,f,c
  8640  000EDC  0100               	movlb	0	; () banked
  8641  000EDE  EE10 F041          	lfsr	1,65
  8642  000EE2  0100               	movlb	0	; () banked
  8643  000EE4  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8644  000EE6  26E1               	addwf	fsr1l,f,c
  8645  000EE8  0100               	movlb	0	; () banked
  8646  000EEA  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8647  000EEC  22E2               	addwfc	fsr1h,f,c
  8648  000EEE  50E7               	movf	indf1,w,c
  8649  000EF0  0100               	movlb	0	; () banked
  8650  000EF2  6F90               	movwf	??i2_send_msg& (0+255),b
  8651  000EF4  0E01               	movlw	1
  8652  000EF6  0100               	movlb	0	; () banked
  8653  000EF8  2590               	addwf	??i2_send_msg& (0+255),w,b
  8654  000EFA  0100               	movlb	0	; () banked
  8655  000EFC  0100               	movlb	0	; () banked
  8656  000EFE  6F80               	movwf	i2___awmod@dividend& (0+255),b
  8657  000F00  0100               	movlb	0	; () banked
  8658  000F02  0100               	movlb	0	; () banked
  8659  000F04  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  8660  000F06  0E00               	movlw	0
  8661  000F08  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  8662  000F0A  0E00               	movlw	0
  8663  000F0C  0100               	movlb	0	; () banked
  8664  000F0E  0100               	movlb	0	; () banked
  8665  000F10  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  8666  000F12  0E05               	movlw	5
  8667  000F14  0100               	movlb	0	; () banked
  8668  000F16  6F82               	movwf	i2___awmod@divisor& (0+255),b
  8669  000F18  EC21  F008         	call	i2___awmod	;wreg free
  8670  000F1C  0100               	movlb	0	; () banked
  8671  000F1E  0100               	movlb	0	; () banked
  8672  000F20  5180               	movf	?i2___awmod& (0+255),w,b
  8673  000F22  6EDF               	movwf	indf2,c
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;messages.c: 59: qmsg->full = 1;
  8677  000F24  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8678  000F28  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8679  000F2C  0E01               	movlw	1
  8680  000F2E  6EDF               	movwf	indf2,c
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;messages.c: 60: return (1);
  8684  000F30  0E01               	movlw	1
  8685  000F32  0012               	return	
  8686  000F34                     __end_ofi2_send_msg:
  8687                           	opt stack 0
  8688                           pclatu	equ	0xFFB
  8689                           pclath	equ	0xFFA
  8690                           tblptru	equ	0xFF8
  8691                           tblptrh	equ	0xFF7
  8692                           tblptrl	equ	0xFF6
  8693                           tablat	equ	0xFF5
  8694                           prodh	equ	0xFF4
  8695                           prodl	equ	0xFF3
  8696                           intcon	equ	0xFF2
  8697                           postinc0	equ	0xFEE
  8698                           fsr0h	equ	0xFEA
  8699                           fsr0l	equ	0xFE9
  8700                           wreg	equ	0xFE8
  8701                           indf1	equ	0xFE7
  8702                           postinc1	equ	0xFE6
  8703                           postdec1	equ	0xFE5
  8704                           fsr1h	equ	0xFE2
  8705                           fsr1l	equ	0xFE1
  8706                           bsr	equ	0xFE0
  8707                           indf2	equ	0xFDF
  8708                           postinc2	equ	0xFDE
  8709                           postdec2	equ	0xFDD
  8710                           fsr2h	equ	0xFDA
  8711                           fsr2l	equ	0xFD9
  8712                           status	equ	0xFD8
  8713                           
  8714 ;; *************** function _FromMainLow_recvmsg *****************
  8715 ;; Defined at:
  8716 ;;		line 159 in file "../src/messages.c"
  8717 ;; Parameters:    Size  Location     Type
  8718 ;;  maxlength       1    wreg     unsigned char 
  8719 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  8720 ;;		 -> i2c_slave_int_handler@msgtype(2), 
  8721 ;;  data            2   26[BANK0 ] PTR void 
  8722 ;;		 -> i2c_slave_int_handler@sensorData(5), 
  8723 ;; Auto vars:     Size  Location     Type
  8724 ;;  maxlength       1   28[BANK0 ] unsigned char 
  8725 ;; Return value:  Size  Location     Type
  8726 ;;                  1    wreg      char 
  8727 ;; Registers used:
  8728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8729 ;; Tracked objects:
  8730 ;;		On entry : 0/0
  8731 ;;		On exit  : 0/0
  8732 ;;		Unchanged: 0/0
  8733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8734 ;;      Params:         0       4       0       0       0
  8735 ;;      Locals:         0       1       0       0       0
  8736 ;;      Temps:          0       0       0       0       0
  8737 ;;      Totals:         0       5       0       0       0
  8738 ;;Total ram usage:        5 bytes
  8739 ;; Hardware stack levels used:    1
  8740 ;; Hardware stack levels required when called:    2
  8741 ;; This function calls:
  8742 ;;		i2_recv_msg
  8743 ;; This function is called by:
  8744 ;;		_i2c_slave_int_handler
  8745 ;; This function uses a non-reentrant model
  8746 ;;
  8747                           
  8748                           	psect	text51
  8749  001C9C                     __ptext51:
  8750                           	opt stack 0
  8751  001C9C                     _FromMainLow_recvmsg:
  8752                           	opt stack 16
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;incstack = 0
  8756                           ;FromMainLow_recvmsg@maxlength stored from wreg
  8757  001C9C  CFE8 F09C          	movff	wreg,FromMainLow_recvmsg@maxlength
  8758                           
  8759                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  8760  001CA0  0102               	movlb	2	; () banked
  8761  001CA2  0E02               	movlw	high _FromMainLow_MQ
  8762  001CA4  0100               	movlb	0	; () banked
  8763  001CA6  0100               	movlb	0	; () banked
  8764  001CA8  6F8B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8765  001CAA  0102               	movlb	2	; () banked
  8766  001CAC  0E43               	movlw	low _FromMainLow_MQ
  8767  001CAE  0100               	movlb	0	; () banked
  8768  001CB0  0100               	movlb	0	; () banked
  8769  001CB2  6F8A               	movwf	i2recv_msg@qptr& (0+255),b
  8770  001CB4  C09C  F08C         	movff	FromMainLow_recvmsg@maxlength,i2recv_msg@maxlength
  8771  001CB8  0100               	movlb	0	; () banked
  8772  001CBA  0100               	movlb	0	; () banked
  8773  001CBC  C099  F08E         	movff	FromMainLow_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8774  001CC0  0100               	movlb	0	; () banked
  8775  001CC2  0100               	movlb	0	; () banked
  8776  001CC4  C098  F08D         	movff	FromMainLow_recvmsg@msgtype,i2recv_msg@msgtype
  8777  001CC8  0100               	movlb	0	; () banked
  8778  001CCA  0100               	movlb	0	; () banked
  8779  001CCC  C09B  F090         	movff	FromMainLow_recvmsg@data+1,i2recv_msg@data+1
  8780  001CD0  0100               	movlb	0	; () banked
  8781  001CD2  0100               	movlb	0	; () banked
  8782  001CD4  C09A  F08F         	movff	FromMainLow_recvmsg@data,i2recv_msg@data
  8783  001CD8  ECBF  F005         	call	i2_recv_msg	;wreg free
  8784  001CDC  0012               	return	
  8785  001CDE                     __end_of_FromMainLow_recvmsg:
  8786                           	opt stack 0
  8787                           pclatu	equ	0xFFB
  8788                           pclath	equ	0xFFA
  8789                           tblptru	equ	0xFF8
  8790                           tblptrh	equ	0xFF7
  8791                           tblptrl	equ	0xFF6
  8792                           tablat	equ	0xFF5
  8793                           prodh	equ	0xFF4
  8794                           prodl	equ	0xFF3
  8795                           intcon	equ	0xFF2
  8796                           postinc0	equ	0xFEE
  8797                           fsr0h	equ	0xFEA
  8798                           fsr0l	equ	0xFE9
  8799                           wreg	equ	0xFE8
  8800                           indf1	equ	0xFE7
  8801                           postinc1	equ	0xFE6
  8802                           postdec1	equ	0xFE5
  8803                           fsr1h	equ	0xFE2
  8804                           fsr1l	equ	0xFE1
  8805                           bsr	equ	0xFE0
  8806                           indf2	equ	0xFDF
  8807                           postinc2	equ	0xFDE
  8808                           postdec2	equ	0xFDD
  8809                           fsr2h	equ	0xFDA
  8810                           fsr2l	equ	0xFD9
  8811                           status	equ	0xFD8
  8812                           
  8813 ;; *************** function i2_recv_msg *****************
  8814 ;; Defined at:
  8815 ;;		line 63 in file "../src/messages.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8818 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8819 ;;  maxlength       1   12[BANK0 ] unsigned char 
  8820 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  8821 ;;		 -> i2c_slave_int_handler@msgtype(2), main@msgtype(1), 
  8822 ;;  data            2   15[BANK0 ] PTR void 
  8823 ;;		 -> i2c_slave_int_handler@sensorData(5), main@msgbuffer(11), 
  8824 ;; Auto vars:     Size  Location     Type
  8825 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  8826 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8827 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8828 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  8829 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  1    wreg      char 
  8832 ;; Registers used:
  8833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8839 ;;      Params:         0       7       0       0       0
  8840 ;;      Locals:         0       5       0       0       0
  8841 ;;      Temps:          0       2       0       0       0
  8842 ;;      Totals:         0      14       0       0       0
  8843 ;;Total ram usage:       14 bytes
  8844 ;; Hardware stack levels used:    1
  8845 ;; Hardware stack levels required when called:    1
  8846 ;; This function calls:
  8847 ;;		i2___awmod
  8848 ;;		i2_memcpy
  8849 ;; This function is called by:
  8850 ;;		_FromMainLow_recvmsg
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           	psect	text52
  8855  000B7E                     __ptext52:
  8856                           	opt stack 0
  8857  000B7E                     i2_recv_msg:
  8858                           	opt stack 16
  8859                           
  8860                           ;messages.c: 64: unsigned char slot;
  8861                           ;messages.c: 68: msg *qmsg;
  8862                           ;messages.c: 69: size_t tlength;
  8863                           ;messages.c: 72: slot = qptr->cur_read_ind;
  8864                           
  8865                           ;incstack = 0
  8866  000B7E  0100               	movlb	0	; () banked
  8867  000B80  EE20 F042          	lfsr	2,66
  8868  000B84  0100               	movlb	0	; () banked
  8869  000B86  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  8870  000B88  26D9               	addwf	fsr2l,f,c
  8871  000B8A  0100               	movlb	0	; () banked
  8872  000B8C  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8873  000B8E  22DA               	addwfc	fsr2h,f,c
  8874  000B90  50DF               	movf	indf2,w,c
  8875  000B92  0100               	movlb	0	; () banked
  8876  000B94  0100               	movlb	0	; () banked
  8877  000B96  6F93               	movwf	i2recv_msg@slot& (0+255),b
  8878                           
  8879                           ; BSR set to: 0
  8880                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  8881  000B98  0100               	movlb	0	; () banked
  8882  000B9A  0100               	movlb	0	; () banked
  8883  000B9C  5193               	movf	i2recv_msg@slot& (0+255),w,b
  8884  000B9E  0D0D               	mullw	13
  8885  000BA0  50F3               	movf	prodl,w,c
  8886  000BA2  0100               	movlb	0	; () banked
  8887  000BA4  0100               	movlb	0	; () banked
  8888  000BA6  258A               	addwf	i2recv_msg@qptr& (0+255),w,b
  8889  000BA8  0100               	movlb	0	; () banked
  8890  000BAA  0100               	movlb	0	; () banked
  8891  000BAC  6F96               	movwf	i2recv_msg@qmsg& (0+255),b
  8892  000BAE  50F4               	movf	prodh,w,c
  8893  000BB0  0100               	movlb	0	; () banked
  8894  000BB2  0100               	movlb	0	; () banked
  8895  000BB4  218B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  8896  000BB6  0100               	movlb	0	; () banked
  8897  000BB8  6F97               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  8898                           
  8899                           ; BSR set to: 0
  8900                           ;messages.c: 74: if (qmsg->full == 1) {
  8901  000BBA  0E01               	movlw	1
  8902  000BBC  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8903  000BC0  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8904  000BC4  62DF               	cpfseq	indf2,c
  8905  000BC6  D088               	goto	i2l4538
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;messages.c: 76: if (qmsg->length > maxlength) {
  8909  000BC8  0100               	movlb	0	; () banked
  8910  000BCA  EE20 F001          	lfsr	2,1
  8911  000BCE  0100               	movlb	0	; () banked
  8912  000BD0  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  8913  000BD2  26D9               	addwf	fsr2l,f,c
  8914  000BD4  0100               	movlb	0	; () banked
  8915  000BD6  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8916  000BD8  22DA               	addwfc	fsr2h,f,c
  8917  000BDA  50DF               	movf	indf2,w,c
  8918  000BDC  0100               	movlb	0	; () banked
  8919  000BDE  0100               	movlb	0	; () banked
  8920  000BE0  5D8C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  8921  000BE2  B0D8               	btfsc	status,0,c
  8922  000BE4  D002               	goto	i2l4522
  8923                           
  8924                           ; BSR set to: 0
  8925                           ;messages.c: 77: return (-3);
  8926  000BE6  0EFD               	movlw	253
  8927  000BE8  0012               	return	
  8928  000BEA                     i2l4522:
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;messages.c: 78: }
  8932                           ;messages.c: 80: tlength = qmsg->length;
  8933  000BEA  0100               	movlb	0	; () banked
  8934  000BEC  EE20 F001          	lfsr	2,1
  8935  000BF0  0100               	movlb	0	; () banked
  8936  000BF2  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  8937  000BF4  26D9               	addwf	fsr2l,f,c
  8938  000BF6  0100               	movlb	0	; () banked
  8939  000BF8  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8940  000BFA  22DA               	addwfc	fsr2h,f,c
  8941  000BFC  50DF               	movf	indf2,w,c
  8942  000BFE  0100               	movlb	0	; () banked
  8943  000C00  6F91               	movwf	??i2_recv_msg& (0+255),b
  8944  000C02  0100               	movlb	0	; () banked
  8945  000C04  5191               	movf	??i2_recv_msg& (0+255),w,b
  8946  000C06  0100               	movlb	0	; () banked
  8947  000C08  0100               	movlb	0	; () banked
  8948  000C0A  6F94               	movwf	i2recv_msg@tlength& (0+255),b
  8949  000C0C  0100               	movlb	0	; () banked
  8950  000C0E  6B95               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  8954  000C10  0100               	movlb	0	; () banked
  8955  000C12  0100               	movlb	0	; () banked
  8956  000C14  C090  F081         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  8957  000C18  0100               	movlb	0	; () banked
  8958  000C1A  0100               	movlb	0	; () banked
  8959  000C1C  C08F  F080         	movff	i2recv_msg@data,i2memcpy@d1
  8960  000C20  0E03               	movlw	3
  8961  000C22  0100               	movlb	0	; () banked
  8962  000C24  0100               	movlb	0	; () banked
  8963  000C26  2596               	addwf	i2recv_msg@qmsg& (0+255),w,b
  8964  000C28  0100               	movlb	0	; () banked
  8965  000C2A  6F91               	movwf	??i2_recv_msg& (0+255),b
  8966  000C2C  0E00               	movlw	0
  8967  000C2E  0100               	movlb	0	; () banked
  8968  000C30  0100               	movlb	0	; () banked
  8969  000C32  2197               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  8970  000C34  0100               	movlb	0	; () banked
  8971  000C36  6F92               	movwf	(??i2_recv_msg+1)& (0+255),b
  8972  000C38  C091  F082         	movff	??i2_recv_msg,i2memcpy@s1
  8973  000C3C  C092  F083         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  8974  000C40  C094  F084         	movff	i2recv_msg@tlength,i2memcpy@n
  8975  000C44  C095  F085         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  8976  000C48  EC47  F00D         	call	i2_memcpy	;wreg free
  8977                           
  8978                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  8979  000C4C  0100               	movlb	0	; () banked
  8980  000C4E  EE20 F042          	lfsr	2,66
  8981  000C52  0100               	movlb	0	; () banked
  8982  000C54  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  8983  000C56  26D9               	addwf	fsr2l,f,c
  8984  000C58  0100               	movlb	0	; () banked
  8985  000C5A  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8986  000C5C  22DA               	addwfc	fsr2h,f,c
  8987  000C5E  0100               	movlb	0	; () banked
  8988  000C60  EE10 F042          	lfsr	1,66
  8989  000C64  0100               	movlb	0	; () banked
  8990  000C66  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  8991  000C68  26E1               	addwf	fsr1l,f,c
  8992  000C6A  0100               	movlb	0	; () banked
  8993  000C6C  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8994  000C6E  22E2               	addwfc	fsr1h,f,c
  8995  000C70  50E7               	movf	indf1,w,c
  8996  000C72  0100               	movlb	0	; () banked
  8997  000C74  6F91               	movwf	??i2_recv_msg& (0+255),b
  8998  000C76  0E01               	movlw	1
  8999  000C78  0100               	movlb	0	; () banked
  9000  000C7A  2591               	addwf	??i2_recv_msg& (0+255),w,b
  9001  000C7C  0100               	movlb	0	; () banked
  9002  000C7E  0100               	movlb	0	; () banked
  9003  000C80  6F80               	movwf	i2___awmod@dividend& (0+255),b
  9004  000C82  0100               	movlb	0	; () banked
  9005  000C84  0100               	movlb	0	; () banked
  9006  000C86  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  9007  000C88  0E00               	movlw	0
  9008  000C8A  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  9009  000C8C  0E00               	movlw	0
  9010  000C8E  0100               	movlb	0	; () banked
  9011  000C90  0100               	movlb	0	; () banked
  9012  000C92  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  9013  000C94  0E05               	movlw	5
  9014  000C96  0100               	movlb	0	; () banked
  9015  000C98  6F82               	movwf	i2___awmod@divisor& (0+255),b
  9016  000C9A  EC21  F008         	call	i2___awmod	;wreg free
  9017  000C9E  0100               	movlb	0	; () banked
  9018  000CA0  0100               	movlb	0	; () banked
  9019  000CA2  5180               	movf	?i2___awmod& (0+255),w,b
  9020  000CA4  6EDF               	movwf	indf2,c
  9021                           
  9022                           ; BSR set to: 0
  9023                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  9024  000CA6  0100               	movlb	0	; () banked
  9025  000CA8  EE20 F002          	lfsr	2,2
  9026  000CAC  0100               	movlb	0	; () banked
  9027  000CAE  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  9028  000CB0  26D9               	addwf	fsr2l,f,c
  9029  000CB2  0100               	movlb	0	; () banked
  9030  000CB4  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9031  000CB6  22DA               	addwfc	fsr2h,f,c
  9032  000CB8  C08D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  9033  000CBC  C08E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  9034  000CC0  CFDF FFE7          	movff	indf2,indf1
  9035                           
  9036                           ; BSR set to: 0
  9037                           ;messages.c: 91: qmsg->full = 0;
  9038  000CC4  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  9039  000CC8  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  9040  000CCC  0E00               	movlw	0
  9041  000CCE  6EDF               	movwf	indf2,c
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;messages.c: 92: return (tlength);
  9045  000CD0  0100               	movlb	0	; () banked
  9046  000CD2  0100               	movlb	0	; () banked
  9047  000CD4  5194               	movf	i2recv_msg@tlength& (0+255),w,b
  9048  000CD6  0012               	return	
  9049  000CD8                     i2l4538:
  9050                           
  9051                           ; BSR set to: 0
  9052                           ;messages.c: 94: return (-4);
  9053  000CD8  0EFC               	movlw	252
  9054  000CDA  0012               	return	
  9055  000CDC                     __end_ofi2_recv_msg:
  9056                           	opt stack 0
  9057                           pclatu	equ	0xFFB
  9058                           pclath	equ	0xFFA
  9059                           tblptru	equ	0xFF8
  9060                           tblptrh	equ	0xFF7
  9061                           tblptrl	equ	0xFF6
  9062                           tablat	equ	0xFF5
  9063                           prodh	equ	0xFF4
  9064                           prodl	equ	0xFF3
  9065                           intcon	equ	0xFF2
  9066                           postinc0	equ	0xFEE
  9067                           fsr0h	equ	0xFEA
  9068                           fsr0l	equ	0xFE9
  9069                           wreg	equ	0xFE8
  9070                           indf1	equ	0xFE7
  9071                           postinc1	equ	0xFE6
  9072                           postdec1	equ	0xFE5
  9073                           fsr1h	equ	0xFE2
  9074                           fsr1l	equ	0xFE1
  9075                           bsr	equ	0xFE0
  9076                           indf2	equ	0xFDF
  9077                           postinc2	equ	0xFDE
  9078                           postdec2	equ	0xFDD
  9079                           fsr2h	equ	0xFDA
  9080                           fsr2l	equ	0xFD9
  9081                           status	equ	0xFD8
  9082                           
  9083 ;; *************** function i2_memcpy *****************
  9084 ;; Defined at:
  9085 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  9086 ;; Parameters:    Size  Location     Type
  9087 ;;  d1              2    0[BANK0 ] PTR void 
  9088 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  9089 ;;		 -> i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), 
  9090 ;;		 -> ToMainLow_MQ(67), main@msgbuffer(11), 
  9091 ;;  s1              2    2[BANK0 ] PTR const void 
  9092 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9093 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9094 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  9095 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  9096 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  9097 ;;  n               2    4[BANK0 ] unsigned int 
  9098 ;; Auto vars:     Size  Location     Type
  9099 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9100 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9101 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9102 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  9103 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  9104 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  9105 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9106 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  9107 ;;		 -> i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), 
  9108 ;;		 -> ToMainLow_MQ(67), main@msgbuffer(11), 
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  2    0[BANK0 ] PTR void 
  9111 ;; Registers used:
  9112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9118 ;;      Params:         0       6       0       0       0
  9119 ;;      Locals:         0       4       0       0       0
  9120 ;;      Temps:          0       0       0       0       0
  9121 ;;      Totals:         0      10       0       0       0
  9122 ;;Total ram usage:       10 bytes
  9123 ;; Hardware stack levels used:    1
  9124 ;; This function calls:
  9125 ;;		Nothing
  9126 ;; This function is called by:
  9127 ;;		i2_send_msg
  9128 ;;		i2_recv_msg
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text53
  9133  001A8E                     __ptext53:
  9134                           	opt stack 0
  9135  001A8E                     i2_memcpy:
  9136                           	opt stack 16
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;incstack = 0
  9140  001A8E  0100               	movlb	0	; () banked
  9141  001A90  0100               	movlb	0	; () banked
  9142  001A92  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9143  001A96  0100               	movlb	0	; () banked
  9144  001A98  0100               	movlb	0	; () banked
  9145  001A9A  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  9146  001A9E  0100               	movlb	0	; () banked
  9147  001AA0  0100               	movlb	0	; () banked
  9148  001AA2  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9149  001AA6  0100               	movlb	0	; () banked
  9150  001AA8  0100               	movlb	0	; () banked
  9151  001AAA  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  9152  001AAE  D012               	goto	i2l4550
  9153  001AB0                     i2l4544:
  9154                           
  9155                           ; BSR set to: 0
  9156  001AB0  C088  FFD9         	movff	i2memcpy@s,fsr2l
  9157  001AB4  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  9158  001AB8  C086  FFE1         	movff	i2memcpy@d,fsr1l
  9159  001ABC  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  9160  001AC0  CFDF FFE7          	movff	indf2,indf1
  9161                           
  9162                           ; BSR set to: 0
  9163  001AC4  0100               	movlb	0	; () banked
  9164  001AC6  0100               	movlb	0	; () banked
  9165  001AC8  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  9166  001ACA  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  9167                           
  9168                           ; BSR set to: 0
  9169  001ACC  0100               	movlb	0	; () banked
  9170  001ACE  0100               	movlb	0	; () banked
  9171  001AD0  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  9172  001AD2  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  9173  001AD4                     i2l4550:
  9174                           
  9175                           ; BSR set to: 0
  9176  001AD4  0100               	movlb	0	; () banked
  9177  001AD6  0100               	movlb	0	; () banked
  9178  001AD8  0784               	decf	i2memcpy@n& (0+255),f,b
  9179  001ADA  A0D8               	btfss	status,0,c
  9180  001ADC  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  9181  001ADE  0100               	movlb	0	; () banked
  9182  001AE0  2984               	incf	i2memcpy@n& (0+255),w,b
  9183  001AE2  B4D8               	btfsc	status,2,c
  9184  001AE4  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  9185  001AE6  B4D8               	btfsc	status,2,c
  9186                           
  9187                           ; BSR set to: 0
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;	Return value of i2_memcpy is never used
  9191  001AE8  0012               	return	
  9192  001AEA  D7E2               	goto	i2l4544
  9193  001AEC                     __end_ofi2_memcpy:
  9194                           	opt stack 0
  9195                           pclatu	equ	0xFFB
  9196                           pclath	equ	0xFFA
  9197                           tblptru	equ	0xFF8
  9198                           tblptrh	equ	0xFF7
  9199                           tblptrl	equ	0xFF6
  9200                           tablat	equ	0xFF5
  9201                           prodh	equ	0xFF4
  9202                           prodl	equ	0xFF3
  9203                           intcon	equ	0xFF2
  9204                           postinc0	equ	0xFEE
  9205                           fsr0h	equ	0xFEA
  9206                           fsr0l	equ	0xFE9
  9207                           wreg	equ	0xFE8
  9208                           indf1	equ	0xFE7
  9209                           postinc1	equ	0xFE6
  9210                           postdec1	equ	0xFE5
  9211                           fsr1h	equ	0xFE2
  9212                           fsr1l	equ	0xFE1
  9213                           bsr	equ	0xFE0
  9214                           indf2	equ	0xFDF
  9215                           postinc2	equ	0xFDE
  9216                           postdec2	equ	0xFDD
  9217                           fsr2h	equ	0xFDA
  9218                           fsr2l	equ	0xFD9
  9219                           status	equ	0xFD8
  9220                           
  9221 ;; *************** function i2___awmod *****************
  9222 ;; Defined at:
  9223 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;  dividend        2    0[BANK0 ] int 
  9226 ;;  divisor         2    2[BANK0 ] int 
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;  __awmod         1   46[COMRAM] unsigned char 
  9229 ;;  __awmod         1   45[COMRAM] unsigned char 
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  2    0[BANK0 ] int 
  9232 ;; Registers used:
  9233 ;;		wreg, status,2, status,0, prodl
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9239 ;;      Params:         0       4       0       0       0
  9240 ;;      Locals:         2       0       0       0       0
  9241 ;;      Temps:          1       0       0       0       0
  9242 ;;      Totals:         3       4       0       0       0
  9243 ;;Total ram usage:        7 bytes
  9244 ;; Hardware stack levels used:    1
  9245 ;; This function calls:
  9246 ;;		Nothing
  9247 ;; This function is called by:
  9248 ;;		i2_send_msg
  9249 ;;		i2_recv_msg
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253                           	psect	text54
  9254  001042                     __ptext54:
  9255                           	opt stack 0
  9256  001042                     i2___awmod:
  9257                           	opt stack 16
  9258                           
  9259                           ; BSR set to: 0
  9260                           ;incstack = 0
  9261  001042  6E2D               	movwf	??i2___awmod& (0+255),c
  9262  001044  0E00               	movlw	0
  9263  001046  6E2F               	movwf	i2___awmod@sign,c
  9264  001048  502D               	movf	??i2___awmod& (0+255),w,c
  9265  00104A  0100               	movlb	0	; () banked
  9266  00104C  0100               	movlb	0	; () banked
  9267  00104E  5181               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  9268  001050  0A80               	xorlw	128
  9269  001052  6EF3               	movwf	prodl,c
  9270  001054  0E80               	movlw	128
  9271  001056  5CF3               	subwf	prodl,w,c
  9272  001058  0E00               	movlw	0
  9273  00105A  B4D8               	btfsc	status,2,c
  9274  00105C  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9275  00105E  B0D8               	btfsc	status,0,c
  9276  001060  D00B               	goto	i2l4560
  9277                           
  9278                           ; BSR set to: 0
  9279  001062  0100               	movlb	0	; () banked
  9280  001064  0100               	movlb	0	; () banked
  9281  001066  6D80               	negf	i2___awmod@dividend& (0+255),b
  9282  001068  0100               	movlb	0	; () banked
  9283  00106A  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9284  00106C  B0D8               	btfsc	status,0,c
  9285  00106E  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9286                           
  9287                           ; BSR set to: 0
  9288  001070  6E2D               	movwf	??i2___awmod& (0+255),c
  9289  001072  0E01               	movlw	1
  9290  001074  6E2F               	movwf	i2___awmod@sign,c
  9291  001076  502D               	movf	??i2___awmod& (0+255),w,c
  9292  001078                     i2l4560:
  9293                           
  9294                           ; BSR set to: 0
  9295  001078  0100               	movlb	0	; () banked
  9296  00107A  0100               	movlb	0	; () banked
  9297  00107C  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9298  00107E  0A80               	xorlw	128
  9299  001080  6EF3               	movwf	prodl,c
  9300  001082  0E80               	movlw	128
  9301  001084  5CF3               	subwf	prodl,w,c
  9302  001086  0E00               	movlw	0
  9303  001088  B4D8               	btfsc	status,2,c
  9304  00108A  5D82               	subwf	i2___awmod@divisor& (0+255),w,b
  9305  00108C  B0D8               	btfsc	status,0,c
  9306  00108E  D007               	goto	i2l4564
  9307                           
  9308                           ; BSR set to: 0
  9309  001090  0100               	movlb	0	; () banked
  9310  001092  0100               	movlb	0	; () banked
  9311  001094  6D82               	negf	i2___awmod@divisor& (0+255),b
  9312  001096  0100               	movlb	0	; () banked
  9313  001098  1F83               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  9314  00109A  B0D8               	btfsc	status,0,c
  9315  00109C  2B83               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  9316  00109E                     i2l4564:
  9317                           
  9318                           ; BSR set to: 0
  9319  00109E  0100               	movlb	0	; () banked
  9320  0010A0  0100               	movlb	0	; () banked
  9321  0010A2  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9322  0010A4  1182               	iorwf	i2___awmod@divisor& (0+255),w,b
  9323  0010A6  B4D8               	btfsc	status,2,c
  9324  0010A8  D032               	goto	i2l4580
  9325                           
  9326                           ; BSR set to: 0
  9327  0010AA  6E2D               	movwf	??i2___awmod& (0+255),c
  9328  0010AC  0E01               	movlw	1
  9329  0010AE  6E2E               	movwf	i2___awmod@counter,c
  9330  0010B0  502D               	movf	??i2___awmod& (0+255),w,c
  9331  0010B2  D007               	goto	i2l4570
  9332  0010B4                     i2l4568:
  9333                           
  9334                           ; BSR set to: 0
  9335  0010B4  0100               	movlb	0	; () banked
  9336  0010B6  0100               	movlb	0	; () banked
  9337  0010B8  0100               	movlb	0	; () banked
  9338  0010BA  90D8               	bcf	status,0,c
  9339  0010BC  3782               	rlcf	i2___awmod@divisor& (0+255),f,b
  9340  0010BE  3783               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  9341  0010C0  2A2E               	incf	i2___awmod@counter,f,c
  9342  0010C2                     i2l4570:
  9343                           
  9344                           ; BSR set to: 0
  9345  0010C2  0100               	movlb	0	; () banked
  9346  0010C4  0100               	movlb	0	; () banked
  9347  0010C6  AF83               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  9348  0010C8  D7F5               	goto	i2l4568
  9349  0010CA                     i2l4572:
  9350                           
  9351                           ; BSR set to: 0
  9352  0010CA  0100               	movlb	0	; () banked
  9353  0010CC  0100               	movlb	0	; () banked
  9354  0010CE  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9355  0010D0  0100               	movlb	0	; () banked
  9356  0010D2  0100               	movlb	0	; () banked
  9357  0010D4  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9358  0010D6  0100               	movlb	0	; () banked
  9359  0010D8  0100               	movlb	0	; () banked
  9360  0010DA  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9361  0010DC  0100               	movlb	0	; () banked
  9362  0010DE  0100               	movlb	0	; () banked
  9363  0010E0  5981               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  9364  0010E2  A0D8               	btfss	status,0,c
  9365  0010E4  D00C               	goto	i2l4576
  9366                           
  9367                           ; BSR set to: 0
  9368  0010E6  0100               	movlb	0	; () banked
  9369  0010E8  0100               	movlb	0	; () banked
  9370  0010EA  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9371  0010EC  0100               	movlb	0	; () banked
  9372  0010EE  0100               	movlb	0	; () banked
  9373  0010F0  5F80               	subwf	i2___awmod@dividend& (0+255),f,b
  9374  0010F2  0100               	movlb	0	; () banked
  9375  0010F4  0100               	movlb	0	; () banked
  9376  0010F6  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9377  0010F8  0100               	movlb	0	; () banked
  9378  0010FA  0100               	movlb	0	; () banked
  9379  0010FC  5B81               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  9380  0010FE                     i2l4576:
  9381                           
  9382                           ; BSR set to: 0
  9383  0010FE  0100               	movlb	0	; () banked
  9384  001100  0100               	movlb	0	; () banked
  9385  001102  0100               	movlb	0	; () banked
  9386  001104  90D8               	bcf	status,0,c
  9387  001106  3383               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  9388  001108  3382               	rrcf	i2___awmod@divisor& (0+255),f,b
  9389                           
  9390                           ; BSR set to: 0
  9391  00110A  2E2E               	decfsz	i2___awmod@counter,f,c
  9392  00110C  D7DE               	goto	i2l4572
  9393  00110E                     i2l4580:
  9394                           
  9395                           ; BSR set to: 0
  9396  00110E  502F               	movf	i2___awmod@sign,w,c
  9397  001110  B4D8               	btfsc	status,2,c
  9398  001112  D007               	goto	i2l4584
  9399                           
  9400                           ; BSR set to: 0
  9401  001114  0100               	movlb	0	; () banked
  9402  001116  0100               	movlb	0	; () banked
  9403  001118  6D80               	negf	i2___awmod@dividend& (0+255),b
  9404  00111A  0100               	movlb	0	; () banked
  9405  00111C  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9406  00111E  B0D8               	btfsc	status,0,c
  9407  001120  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9408  001122                     i2l4584:
  9409                           
  9410                           ; BSR set to: 0
  9411  001122  C080  F080         	movff	i2___awmod@dividend,?i2___awmod
  9412  001126  C081  F081         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9413  00112A  0012               	return	
  9414  00112C                     __end_ofi2___awmod:
  9415                           	opt stack 0
  9416                           pclatu	equ	0xFFB
  9417                           pclath	equ	0xFFA
  9418                           tblptru	equ	0xFF8
  9419                           tblptrh	equ	0xFF7
  9420                           tblptrl	equ	0xFF6
  9421                           tablat	equ	0xFF5
  9422                           prodh	equ	0xFF4
  9423                           prodl	equ	0xFF3
  9424                           intcon	equ	0xFF2
  9425                           postinc0	equ	0xFEE
  9426                           fsr0h	equ	0xFEA
  9427                           fsr0l	equ	0xFE9
  9428                           wreg	equ	0xFE8
  9429                           indf1	equ	0xFE7
  9430                           postinc1	equ	0xFE6
  9431                           postdec1	equ	0xFE5
  9432                           fsr1h	equ	0xFE2
  9433                           fsr1l	equ	0xFE1
  9434                           bsr	equ	0xFE0
  9435                           indf2	equ	0xFDF
  9436                           postinc2	equ	0xFDE
  9437                           postdec2	equ	0xFDD
  9438                           fsr2h	equ	0xFDA
  9439                           fsr2l	equ	0xFD9
  9440                           status	equ	0xFD8
  9441                           
  9442 ;; *************** function _SleepIfOkay *****************
  9443 ;; Defined at:
  9444 ;;		line 228 in file "../src/messages.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;		None
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;		None
  9449 ;; Return value:  Size  Location     Type
  9450 ;;		None               void
  9451 ;; Registers used:
  9452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9458 ;;      Params:         0       0       0       0       0
  9459 ;;      Locals:         0       0       0       0       0
  9460 ;;      Temps:          0       0       0       0       0
  9461 ;;      Totals:         0       0       0       0       0
  9462 ;;Total ram usage:        0 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:    2
  9465 ;; This function calls:
  9466 ;;		_enter_sleep_mode
  9467 ;;		i2_check_msg
  9468 ;;		i2_in_high_int
  9469 ;;		i2_in_low_int
  9470 ;; This function is called by:
  9471 ;;		_InterruptHandlerHigh
  9472 ;; This function uses a non-reentrant model
  9473 ;;
  9474                           
  9475                           	psect	text55
  9476  001AEC                     __ptext55:
  9477                           	opt stack 0
  9478  001AEC                     _SleepIfOkay:
  9479                           	opt stack 18
  9480                           
  9481                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  9482                           
  9483                           ; BSR set to: 0
  9484                           ;incstack = 0
  9485  001AEC  664E               	tstfsz	_MQ_Main_Willing_to_block,c
  9486  001AEE  D001               	goto	i2l3756
  9487  001AF0  0012               	return	
  9488  001AF2                     i2l3756:
  9489                           
  9490                           ;messages.c: 232: }
  9491                           ;messages.c: 235: if (in_low_int()) {
  9492  001AF2  EC8F  F00E         	call	i2_in_low_int	;wreg free
  9493  001AF6  0100               	movlb	0	; () banked
  9494  001AF8  0100               	movlb	0	; () banked
  9495  001AFA  5181               	movf	(?i2_in_low_int+1)& (0+255),w,b
  9496  001AFC  0100               	movlb	0	; () banked
  9497  001AFE  1180               	iorwf	?i2_in_low_int& (0+255),w,b
  9498  001B00  A4D8               	btfss	status,2,c
  9499  001B02  0012               	return	
  9500                           
  9501                           ; BSR set to: 0
  9502                           ;messages.c: 237: }
  9503                           ;messages.c: 240: if (!in_high_int()) {
  9504                           
  9505                           ; BSR set to: 0
  9506                           
  9507                           ; BSR set to: 0
  9508                           ;messages.c: 236: return;
  9509  001B04  EC0C  F010         	call	i2_in_high_int	;wreg free
  9510  001B08  502E               	movf	?i2_in_high_int+1,w,c
  9511  001B0A  102D               	iorwf	?i2_in_high_int,w,c
  9512  001B0C  B4D8               	btfsc	status,2,c
  9513  001B0E  0012               	return	
  9514                           
  9515                           ;messages.c: 242: }
  9516                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  9517                           
  9518                           ;messages.c: 241: return;
  9519  001B10  0101               	movlb	1	; () banked
  9520  001B12  0E01               	movlw	high _ToMainHigh_MQ
  9521  001B14  6E2E               	movwf	i2check_msg@qptr+1,c
  9522  001B16  0101               	movlb	1	; () banked
  9523  001B18  0E00               	movlw	low _ToMainHigh_MQ
  9524  001B1A  6E2D               	movwf	i2check_msg@qptr,c
  9525  001B1C  EC73  F00F         	call	i2_check_msg	;wreg free
  9526  001B20  0900               	iorlw	0
  9527  001B22  A4D8               	btfss	status,2,c
  9528  001B24  0012               	return	
  9529                           
  9530                           ;messages.c: 249: }
  9531                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  9532                           
  9533                           ;messages.c: 248: return;
  9534  001B26  0101               	movlb	1	; () banked
  9535  001B28  0E01               	movlw	high _ToMainLow_MQ
  9536  001B2A  6E2E               	movwf	i2check_msg@qptr+1,c
  9537  001B2C  0101               	movlb	1	; () banked
  9538  001B2E  0E43               	movlw	low _ToMainLow_MQ
  9539  001B30  6E2D               	movwf	i2check_msg@qptr,c
  9540  001B32  EC73  F00F         	call	i2_check_msg	;wreg free
  9541  001B36  0900               	iorlw	0
  9542  001B38  B4D8               	btfsc	status,2,c
  9543                           
  9544                           ;messages.c: 252: }
  9545                           ;messages.c: 253: enter_sleep_mode();
  9546                           
  9547                           ;messages.c: 251: return;
  9548  001B3A  EC1F  F010         	call	_enter_sleep_mode	;wreg free
  9549  001B3E  0012               	return	
  9550  001B40                     __end_of_SleepIfOkay:
  9551                           	opt stack 0
  9552                           pclatu	equ	0xFFB
  9553                           pclath	equ	0xFFA
  9554                           tblptru	equ	0xFF8
  9555                           tblptrh	equ	0xFF7
  9556                           tblptrl	equ	0xFF6
  9557                           tablat	equ	0xFF5
  9558                           prodh	equ	0xFF4
  9559                           prodl	equ	0xFF3
  9560                           intcon	equ	0xFF2
  9561                           postinc0	equ	0xFEE
  9562                           fsr0h	equ	0xFEA
  9563                           fsr0l	equ	0xFE9
  9564                           wreg	equ	0xFE8
  9565                           indf1	equ	0xFE7
  9566                           postinc1	equ	0xFE6
  9567                           postdec1	equ	0xFE5
  9568                           fsr1h	equ	0xFE2
  9569                           fsr1l	equ	0xFE1
  9570                           bsr	equ	0xFE0
  9571                           indf2	equ	0xFDF
  9572                           postinc2	equ	0xFDE
  9573                           postdec2	equ	0xFDD
  9574                           fsr2h	equ	0xFDA
  9575                           fsr2l	equ	0xFD9
  9576                           status	equ	0xFD8
  9577                           
  9578 ;; *************** function i2_in_low_int *****************
  9579 ;; Defined at:
  9580 ;;		line 31 in file "../src/interrupts.c"
  9581 ;; Parameters:    Size  Location     Type
  9582 ;;		None
  9583 ;; Auto vars:     Size  Location     Type
  9584 ;;		None
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  2    0[BANK0 ] int 
  9587 ;; Registers used:
  9588 ;;		wreg, status,2, status,0, cstack
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 0/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9594 ;;      Params:         0       2       0       0       0
  9595 ;;      Locals:         0       0       0       0       0
  9596 ;;      Temps:          0       0       0       0       0
  9597 ;;      Totals:         0       2       0       0       0
  9598 ;;Total ram usage:        2 bytes
  9599 ;; Hardware stack levels used:    1
  9600 ;; Hardware stack levels required when called:    1
  9601 ;; This function calls:
  9602 ;;		i2_in_high_int
  9603 ;; This function is called by:
  9604 ;;		_SleepIfOkay
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608                           	psect	text56
  9609  001D1E                     __ptext56:
  9610                           	opt stack 0
  9611  001D1E                     i2_in_low_int:
  9612                           	opt stack 18
  9613                           
  9614                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  9615                           
  9616                           ;incstack = 0
  9617  001D1E  ACF2               	btfss	intcon,6,c	;volatile
  9618  001D20  D008               	goto	i2l4474
  9619                           
  9620                           ;interrupts.c: 33: return (0);
  9621  001D22  0E00               	movlw	0
  9622  001D24  0100               	movlb	0	; () banked
  9623  001D26  0100               	movlb	0	; () banked
  9624  001D28  6F81               	movwf	(?i2_in_low_int+1)& (0+255),b
  9625  001D2A  0E00               	movlw	0
  9626  001D2C  0100               	movlb	0	; () banked
  9627  001D2E  6F80               	movwf	?i2_in_low_int& (0+255),b
  9628  001D30  0012               	return	
  9629  001D32                     i2l4474:
  9630  001D32  EC0C  F010         	call	i2_in_high_int	;wreg free
  9631  001D36  502E               	movf	?i2_in_high_int+1,w,c
  9632  001D38  102D               	iorwf	?i2_in_high_int,w,c
  9633  001D3A  B4D8               	btfsc	status,2,c
  9634  001D3C  D008               	goto	i2l4482
  9635                           
  9636                           ;interrupts.c: 35: return (0);
  9637  001D3E  0E00               	movlw	0
  9638  001D40  0100               	movlb	0	; () banked
  9639  001D42  0100               	movlb	0	; () banked
  9640  001D44  6F81               	movwf	(?i2_in_low_int+1)& (0+255),b
  9641  001D46  0E00               	movlw	0
  9642  001D48  0100               	movlb	0	; () banked
  9643  001D4A  6F80               	movwf	?i2_in_low_int& (0+255),b
  9644  001D4C  0012               	return	
  9645  001D4E                     i2l4482:
  9646                           
  9647                           ;interrupts.c: 37: return (1);
  9648  001D4E  0E00               	movlw	0
  9649  001D50  0100               	movlb	0	; () banked
  9650  001D52  0100               	movlb	0	; () banked
  9651  001D54  6F81               	movwf	(?i2_in_low_int+1)& (0+255),b
  9652  001D56  0E01               	movlw	1
  9653  001D58  0100               	movlb	0	; () banked
  9654  001D5A  6F80               	movwf	?i2_in_low_int& (0+255),b
  9655  001D5C  0012               	return	
  9656  001D5E                     __end_ofi2_in_low_int:
  9657                           	opt stack 0
  9658                           pclatu	equ	0xFFB
  9659                           pclath	equ	0xFFA
  9660                           tblptru	equ	0xFF8
  9661                           tblptrh	equ	0xFF7
  9662                           tblptrl	equ	0xFF6
  9663                           tablat	equ	0xFF5
  9664                           prodh	equ	0xFF4
  9665                           prodl	equ	0xFF3
  9666                           intcon	equ	0xFF2
  9667                           postinc0	equ	0xFEE
  9668                           fsr0h	equ	0xFEA
  9669                           fsr0l	equ	0xFE9
  9670                           wreg	equ	0xFE8
  9671                           indf1	equ	0xFE7
  9672                           postinc1	equ	0xFE6
  9673                           postdec1	equ	0xFE5
  9674                           fsr1h	equ	0xFE2
  9675                           fsr1l	equ	0xFE1
  9676                           bsr	equ	0xFE0
  9677                           indf2	equ	0xFDF
  9678                           postinc2	equ	0xFDE
  9679                           postdec2	equ	0xFDD
  9680                           fsr2h	equ	0xFDA
  9681                           fsr2l	equ	0xFD9
  9682                           status	equ	0xFD8
  9683                           
  9684 ;; *************** function i2_in_high_int *****************
  9685 ;; Defined at:
  9686 ;;		line 23 in file "../src/interrupts.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;		None
  9689 ;; Auto vars:     Size  Location     Type
  9690 ;;		None
  9691 ;; Return value:  Size  Location     Type
  9692 ;;                  2   44[COMRAM] int 
  9693 ;; Registers used:
  9694 ;;		wreg, status,2
  9695 ;; Tracked objects:
  9696 ;;		On entry : 0/0
  9697 ;;		On exit  : 0/0
  9698 ;;		Unchanged: 0/0
  9699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9700 ;;      Params:         2       0       0       0       0
  9701 ;;      Locals:         0       0       0       0       0
  9702 ;;      Temps:          0       0       0       0       0
  9703 ;;      Totals:         2       0       0       0       0
  9704 ;;Total ram usage:        2 bytes
  9705 ;; Hardware stack levels used:    1
  9706 ;; This function calls:
  9707 ;;		Nothing
  9708 ;; This function is called by:
  9709 ;;		_SleepIfOkay
  9710 ;;		i2_in_low_int
  9711 ;; This function uses a non-reentrant model
  9712 ;;
  9713                           
  9714                           	psect	text57
  9715  002018                     __ptext57:
  9716                           	opt stack 0
  9717  002018                     i2_in_high_int:
  9718                           	opt stack 18
  9719                           
  9720                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  9721                           
  9722                           ; BSR set to: 0
  9723                           ;incstack = 0
  9724  002018  0E00               	movlw	0
  9725  00201A  AEF2               	btfss	intcon,7,c	;volatile
  9726  00201C  0E01               	movlw	1
  9727  00201E  6E2D               	movwf	?i2_in_high_int,c
  9728  002020  6A2E               	clrf	?i2_in_high_int+1,c
  9729  002022  0012               	return	
  9730  002024                     __end_ofi2_in_high_int:
  9731                           	opt stack 0
  9732                           pclatu	equ	0xFFB
  9733                           pclath	equ	0xFFA
  9734                           tblptru	equ	0xFF8
  9735                           tblptrh	equ	0xFF7
  9736                           tblptrl	equ	0xFF6
  9737                           tablat	equ	0xFF5
  9738                           prodh	equ	0xFF4
  9739                           prodl	equ	0xFF3
  9740                           intcon	equ	0xFF2
  9741                           postinc0	equ	0xFEE
  9742                           fsr0h	equ	0xFEA
  9743                           fsr0l	equ	0xFE9
  9744                           wreg	equ	0xFE8
  9745                           indf1	equ	0xFE7
  9746                           postinc1	equ	0xFE6
  9747                           postdec1	equ	0xFE5
  9748                           fsr1h	equ	0xFE2
  9749                           fsr1l	equ	0xFE1
  9750                           bsr	equ	0xFE0
  9751                           indf2	equ	0xFDF
  9752                           postinc2	equ	0xFDE
  9753                           postdec2	equ	0xFDD
  9754                           fsr2h	equ	0xFDA
  9755                           fsr2l	equ	0xFD9
  9756                           status	equ	0xFD8
  9757                           
  9758 ;; *************** function i2_check_msg *****************
  9759 ;; Defined at:
  9760 ;;		line 222 in file "../src/messages.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;  qptr            2   44[COMRAM] PTR struct __msg_queue
  9763 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;		None
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  1    wreg      unsigned char 
  9768 ;; Registers used:
  9769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9775 ;;      Params:         2       0       0       0       0
  9776 ;;      Locals:         0       0       0       0       0
  9777 ;;      Temps:          1       0       0       0       0
  9778 ;;      Totals:         3       0       0       0       0
  9779 ;;Total ram usage:        3 bytes
  9780 ;; Hardware stack levels used:    1
  9781 ;; This function calls:
  9782 ;;		Nothing
  9783 ;; This function is called by:
  9784 ;;		_SleepIfOkay
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text58
  9789  001EE6                     __ptext58:
  9790                           	opt stack 0
  9791  001EE6                     i2_check_msg:
  9792                           	opt stack 19
  9793                           
  9794                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9795                           
  9796                           ;incstack = 0
  9797  001EE6  EE20 F042          	lfsr	2,66
  9798  001EEA  502D               	movf	i2check_msg@qptr,w,c
  9799  001EEC  26D9               	addwf	fsr2l,f,c
  9800  001EEE  502E               	movf	i2check_msg@qptr+1,w,c
  9801  001EF0  22DA               	addwfc	fsr2h,f,c
  9802  001EF2  50DF               	movf	indf2,w,c
  9803  001EF4  6E2F               	movwf	??i2_check_msg& (0+255),c
  9804  001EF6  502F               	movf	??i2_check_msg,w,c
  9805  001EF8  0D0D               	mullw	13
  9806  001EFA  50F3               	movf	prodl,w,c
  9807  001EFC  242D               	addwf	i2check_msg@qptr,w,c
  9808  001EFE  6ED9               	movwf	fsr2l,c
  9809  001F00  50F4               	movf	prodh,w,c
  9810  001F02  202E               	addwfc	i2check_msg@qptr+1,w,c
  9811  001F04  6EDA               	movwf	fsr2h,c
  9812  001F06  50DF               	movf	indf2,w,c
  9813  001F08  0012               	return	
  9814  001F0A                     __end_ofi2_check_msg:
  9815                           	opt stack 0
  9816                           pclatu	equ	0xFFB
  9817                           pclath	equ	0xFFA
  9818                           tblptru	equ	0xFF8
  9819                           tblptrh	equ	0xFF7
  9820                           tblptrl	equ	0xFF6
  9821                           tablat	equ	0xFF5
  9822                           prodh	equ	0xFF4
  9823                           prodl	equ	0xFF3
  9824                           intcon	equ	0xFF2
  9825                           postinc0	equ	0xFEE
  9826                           fsr0h	equ	0xFEA
  9827                           fsr0l	equ	0xFE9
  9828                           wreg	equ	0xFE8
  9829                           indf1	equ	0xFE7
  9830                           postinc1	equ	0xFE6
  9831                           postdec1	equ	0xFE5
  9832                           fsr1h	equ	0xFE2
  9833                           fsr1l	equ	0xFE1
  9834                           bsr	equ	0xFE0
  9835                           indf2	equ	0xFDF
  9836                           postinc2	equ	0xFDE
  9837                           postdec2	equ	0xFDD
  9838                           fsr2h	equ	0xFDA
  9839                           fsr2l	equ	0xFD9
  9840                           status	equ	0xFD8
  9841                           
  9842 ;; *************** function _enter_sleep_mode *****************
  9843 ;; Defined at:
  9844 ;;		line 202 in file "../src/messages.c"
  9845 ;; Parameters:    Size  Location     Type
  9846 ;;		None
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;		None
  9849 ;; Return value:  Size  Location     Type
  9850 ;;		None               void
  9851 ;; Registers used:
  9852 ;;		None
  9853 ;; Tracked objects:
  9854 ;;		On entry : 0/0
  9855 ;;		On exit  : 0/0
  9856 ;;		Unchanged: 0/0
  9857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9858 ;;      Params:         0       0       0       0       0
  9859 ;;      Locals:         0       0       0       0       0
  9860 ;;      Temps:          0       0       0       0       0
  9861 ;;      Totals:         0       0       0       0       0
  9862 ;;Total ram usage:        0 bytes
  9863 ;; Hardware stack levels used:    1
  9864 ;; This function calls:
  9865 ;;		Nothing
  9866 ;; This function is called by:
  9867 ;;		_SleepIfOkay
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           
  9871                           	psect	text59
  9872  00203E                     __ptext59:
  9873                           	opt stack 0
  9874  00203E                     _enter_sleep_mode:
  9875                           	opt stack 19
  9876                           
  9877                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9878                           
  9879                           ;incstack = 0
  9880  00203E  8ED3               	bsf	4051,7,c	;volatile
  9881  002040  0003               	sleep		;# 
  9882  002042  0012               	return	
  9883  002044                     __end_of_enter_sleep_mode:
  9884                           	opt stack 0
  9885  0000                     pclatu	equ	0xFFB
  9886                           pclath	equ	0xFFA
  9887                           tblptru	equ	0xFF8
  9888                           tblptrh	equ	0xFF7
  9889                           tblptrl	equ	0xFF6
  9890                           tablat	equ	0xFF5
  9891                           prodh	equ	0xFF4
  9892                           prodl	equ	0xFF3
  9893                           intcon	equ	0xFF2
  9894                           postinc0	equ	0xFEE
  9895                           fsr0h	equ	0xFEA
  9896                           fsr0l	equ	0xFE9
  9897                           wreg	equ	0xFE8
  9898                           indf1	equ	0xFE7
  9899                           postinc1	equ	0xFE6
  9900                           postdec1	equ	0xFE5
  9901                           fsr1h	equ	0xFE2
  9902                           fsr1l	equ	0xFE1
  9903                           bsr	equ	0xFE0
  9904                           indf2	equ	0xFDF
  9905                           postinc2	equ	0xFDE
  9906                           postdec2	equ	0xFDD
  9907                           fsr2h	equ	0xFDA
  9908                           fsr2l	equ	0xFD9
  9909                           status	equ	0xFD8
  9910                           pclatu	equ	0xFFB
  9911                           pclath	equ	0xFFA
  9912                           tblptru	equ	0xFF8
  9913                           tblptrh	equ	0xFF7
  9914                           tblptrl	equ	0xFF6
  9915                           tablat	equ	0xFF5
  9916                           prodh	equ	0xFF4
  9917                           prodl	equ	0xFF3
  9918                           intcon	equ	0xFF2
  9919                           postinc0	equ	0xFEE
  9920                           fsr0h	equ	0xFEA
  9921                           fsr0l	equ	0xFE9
  9922                           wreg	equ	0xFE8
  9923                           indf1	equ	0xFE7
  9924                           postinc1	equ	0xFE6
  9925                           postdec1	equ	0xFE5
  9926                           fsr1h	equ	0xFE2
  9927                           fsr1l	equ	0xFE1
  9928                           bsr	equ	0xFE0
  9929                           indf2	equ	0xFDF
  9930                           postinc2	equ	0xFDE
  9931                           postdec2	equ	0xFDD
  9932                           fsr2h	equ	0xFDA
  9933                           fsr2l	equ	0xFD9
  9934                           status	equ	0xFD8
  9935                           
  9936                           	psect	rparam
  9937  0000                     pclatu	equ	0xFFB
  9938                           pclath	equ	0xFFA
  9939                           tblptru	equ	0xFF8
  9940                           tblptrh	equ	0xFF7
  9941                           tblptrl	equ	0xFF6
  9942                           tablat	equ	0xFF5
  9943                           prodh	equ	0xFF4
  9944                           prodl	equ	0xFF3
  9945                           intcon	equ	0xFF2
  9946                           postinc0	equ	0xFEE
  9947                           fsr0h	equ	0xFEA
  9948                           fsr0l	equ	0xFE9
  9949                           wreg	equ	0xFE8
  9950                           indf1	equ	0xFE7
  9951                           postinc1	equ	0xFE6
  9952                           postdec1	equ	0xFE5
  9953                           fsr1h	equ	0xFE2
  9954                           fsr1l	equ	0xFE1
  9955                           bsr	equ	0xFE0
  9956                           indf2	equ	0xFDF
  9957                           postinc2	equ	0xFDE
  9958                           postdec2	equ	0xFDD
  9959                           fsr2h	equ	0xFDA
  9960                           fsr2l	equ	0xFD9
  9961                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         305
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     47      83
    BANK0           128     78      94
    BANK1           256    100     236
    BANK2           256      0     134
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> i2c_slave_int_handler@sensorData(BANK0[5]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), 
		 -> ToMainLow_MQ(BANK1[67]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> i2c_slave_int_handler@sensorData(BANK0[5]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), 
		 -> ToMainLow_MQ(BANK1[67]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@reply(BANK0[5]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), 
		 -> FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@msgbuffer(BANK1[11]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), main@uc(BANK1[13]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@reply(BANK0[5]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), 
		 -> FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@msgbuffer(BANK1[11]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), main@uc(BANK1[13]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_trans@data	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 13
		 -> main@uc(BANK1[13]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK1[29]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 5
		 -> i2c_slave_int_handler@movecomAck(BANK0[3]), i2c_slave_int_handler@sensorData(BANK0[5]), i2c_slave_int_handler@noData(BANK0[5]), i2c_slave_int_handler@gatherAck(BANK0[3]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK1[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 5
		 -> i2c_slave_int_handler@sensorData(BANK0[5]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> i2c_slave_int_handler@msgtype(BANK0[2]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@reply(BANK0[5]), i2c_slave_int_handler@error_buf(BANK0[3]), main@ic(BANK1[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> i2c_slave_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> i2c_slave_int_handler@sensorData(BANK0[5]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> i2c_slave_int_handler@sensorData(BANK0[5]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), 
		 -> ToMainLow_MQ(BANK1[67]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@reply(BANK0[5]), i2c_slave_int_handler@error_buf(BANK0[3]), main@msgbuffer(BANK1[11]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), main@uc(BANK1[13]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_WriteTimer0
    _i2c_slave_int_handler->_start_i2c_slave_reply
    i2_send_msg->i2___awmod
    i2_recv_msg->i2___awmod
    _SleepIfOkay->i2_check_msg
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _timer0_int_handler->_WriteTimer0
    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->_FromMainLow_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainLow_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0   15915
                                             36 BANK1     64    64      0
                _FromMainLow_sendmsg
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                         _uart_trans
 ---------------------------------------------------------------------------------
 (1) _uart_trans                                           5     3      2     192
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3379
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2690
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2861
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2861
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2638
                                             10 BANK1     14     7      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     347
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _FromMainLow_sendmsg                                  4     1      3    2690
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2467
                                             10 BANK1     12     6      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     669
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    3486
                                             27 COMRAM    17    17      0
                    _adc_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3398
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    3375
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    3022
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     809
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   0     0      0      88
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0   10653
                                             64 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  0     0      0     121
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     121
                                             44 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0   10296
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_slave_int_handler                              35    35      0   10296
                                             29 BANK0     35    35      0
                _FromMainLow_recvmsg
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     3      2     353
                                             44 COMRAM     3     1      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    4718
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    3845
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) _FromMainLow_recvmsg                                 5     1      4    4156
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7    3933
                                             10 BANK0     14     7      7
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6    1108
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           7     3      4    1186
                                             44 COMRAM     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              0 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             44 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FromMainLow_sendmsg
     _send_msg
       ___awmod
       _memcpy
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
   _uart_trans

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
   _timer1_int_handler
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_trans_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_slave_int_handler
       _FromMainLow_recvmsg
         i2_recv_msg
           i2___awmod
           i2_memcpy
       _ToMainHigh_sendmsg
         i2_send_msg
           i2___awmod
           i2_memcpy
       _handle_start
       _start_i2c_slave_reply
   _timer0_int_handler
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      86       8       52.3%
BITBANK1           100      0       0       5        0.0%
BANK1              100     64      EC       6       92.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80     4E      5E       4       73.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2F      53       1       65.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     223      11        0.0%
DATA                 0      0     223      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Mar 04 16:40:28 2014

          _MQ_Main_Willing_to_block 004E                         _SSPSTATbits 000FC7  
         __end_of_ToMainLow_recvmsg 1C5A                                  bsr 000FE0  
         __end_of_ToMainLow_sendmsg 1EE6                        __CFG_CP0$OFF 000000  
                 i2recv_msg@msgtype 008D                   i2recv_msg@tlength 0094  
              ?_FromMainLow_recvmsg 0098                                 l132 08D6  
                               l144 09D2                                 l512 1E92  
                               l513 1E94                                 l536 1D78  
                               l538 1D90                                 l539 1D92  
                               l580 15C2                                 l493 16F8  
                               l573 1590                                 l806 1F8C  
                               l577 15B0                                 l578 15B2  
                               l579 15C0                ?_FromMainLow_sendmsg 019C  
   __size_of_uart_trans_int_handler 0068                __size_of_WriteTimer0 0012  
              __size_of_WriteTimer1 0012                        ___awmod@sign 018C  
                    _FromMainLow_MQ 0243                                 prod 000FF3  
                               wreg 000FE8                        __CFG_IESO$ON 000000  
                      ?_in_high_int 0186                    ??_init_uart_recv 0188  
      i2c_slave_int_handler@msgtype 00BB          i2c_slave_int_handler@F5130 00CE  
        i2c_slave_int_handler@F5134 00D9          i2c_slave_int_handler@F5128 00D3  
        i2c_slave_int_handler@F5137 00D6                 i2recv_msg@maxlength 008C  
                              l1118 166E                                l4020 17F4  
                              l4102 1A76                                l4014 17C8  
                              l4030 138A                                l4008 179C  
                              l4034 13F4                                l4116 0A8C  
                              l4132 0B7A                                l4064 1844  
                              l4082 0D38                                l4430 0FBE  
                              l4422 0F7A                                l4432 0FD0  
                              l4096 1A52                                l4434 0FD8  
                              l4442 1020                                l4426 0FA0  
                              l3714 1BC4                                l3706 1BA2  
                              l4446 1038                                l4438 100C  
                              l4462 165A                                l4454 160C  
                              l3830 0842                                l3728 1C08  
                              l4456 161E                                l3840 08DC  
                              l4458 1626                                l3842 08FC  
                              l3908 1D7A                                l3854 0980  
                              l3862 0A06                                l3838 0884  
                              l3846 091C                                l3848 0942  
                              l3956 1592                                l3948 157C  
                              _LATA 000F89                                _LATB 000F8A  
                              i1l57 0080                                u3887 1F8E  
                   _FromMainHigh_MQ 0200                       __CFG_FCMEN$ON 000000  
            ?_block_on_To_msgqueues 0001                                _main 076C  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr0l 000FE9                                fsr2h 000FDA  
                              indf1 000FE7                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                       main@msgtype 01BE                          i1_send_msg 12B4  
                              pclat 000FFA                         i2_check_msg 1EE6  
                              prodh 000FF4                                prodl 000FF3  
             handle_start@data_read 002D                                start 00C6  
                        i2_recv_msg 0B7E                       __CFG_FOSC2$ON 000000  
                  ?_adc_int_handler 0001                          i2_send_msg 0E08  
        i2c_slave_int_handler@reply 00A4           ToMainHigh_recvmsg@msgtype 019E  
                    send_msg@length 0192                     __end_of_OpenADC 16FC  
       __size_of_timer0_int_handler 0012             ??_i2c_slave_int_handler 009D  
                       _Delay1KTCYx 1F88               ??_FromMainLow_recvmsg 0030  
             ??_FromMainLow_sendmsg 019F                               ?_main 0001  
                   __end_of___awmod 1042                               _T0CON 000FD5  
                             _T1CON 000FCD                               i1l433 1A2C  
                   __end_of___lwmod 1678                          i1memcpy@d1 0001  
                             i2l331 0466                               i2l333 0180  
                             i2l351 02F8                               i1l591 1F78  
                             i2l337 01BE                               i2l365 0478  
                             i2l294 1522                               i2l359 03EA  
                             i2l377 075A                          i1memcpy@s1 0003  
                             _RCREG 000FAE                               _RCSTA 000FAB  
                             _TMR0H 000FD7                               _TMR1H 000FCF  
                             _TMR0L 000FD6                               _TMR1L 000FCE  
                             _SPBRG 000FAF                               _PORTA 000F80  
                             _TRISA 000F92                               _TRISB 000F93  
                             _TRISC 000F94                               _TXREG 000FAD  
                             _TXSTA 000FAC                          i2memcpy@d1 0080  
                        i2memcpy@s1 0082                        ?_init_queues 0001  
         __size_of_enter_sleep_mode 0006                      i1___awmod@sign 0007  
                   __end_of_in_main 1C18          ToMainLow_recvmsg@maxlength 01A2  
           timer0_lthread@msgbuffer 018C             i2c_configure_slave@addr 0186  
                             tablat 000FF5                               status 000FD8  
            _uart_trans_int_handler 19C8                    __end_ofi1_memcpy 1D1E  
                __size_ofi1___awmod 009C                    __end_ofi2_memcpy 1AEC  
                __size_ofi2___awmod 00EA                     __initialization 1876  
                      __end_of_main 0A20         __size_of_timer1_int_handler 000E  
        __size_of_ToMainLow_recvmsg 0042          __size_of_ToMainLow_sendmsg 0026  
             __size_ofi2_in_low_int 0040       __size_of_FromMainHigh_sendmsg 0036  
                            ??_main 01AA                     send_msg@msgtype 0193  
                     __activetblptr 000002                     send_msg@tlength 0197  
        FromMainLow_sendmsg@msgtype 019C                          _SetChanADC 1F2C  
              __end_of_handle_start 155C                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADCON2 000FC0  
                            _ADRESH 000FC4             ??_uart_recv_int_handler 001B  
                            i1l1370 1F16                              i1l3522 1D0C  
                            i1l3516 1CF0                              i1l3550 1482  
                            i1l3542 1454                              i1l3552 148A  
                            i1l4600 12EC                              i1l3554 148E  
                            i1l3562 14AC                              i1l3546 1470  
                            i1l3566 14BA                              i1l3558 14A2  
                            i2l3120 154A                              i1l4634 1294  
                            i1l4628 1250                              i1l4652 0070  
                            i2l3118 1538                              i1l4646 0066  
                        _OpenTimer0 1E6E                              i2l4210 01F0  
                        _OpenTimer1 1D5E                              i2l4300 053E  
                            i2l4212 0210                              i2l4230 0280  
                            i2l4222 0240                      __CFG_WDTEN$OFF 000000  
                            i2l4162 1142                              i2l4324 065E  
                            i2l4308 05C6                              i2l4252 0352  
                            i2l4228 0252                              i2l4166 11A4  
                            i2l4254 0382                              i2l4336 06E4  
                            i2l4280 0440                              i2l4192 0176  
                            i2l4522 0BEA                              i2l4338 06F8  
                            i2l4258 0394                              i2l4186 015E  
                            i2l4292 04C4                              i2l4550 1AD4  
                            i2l4286 047C                              i2l4560 1078  
                            i2l4544 1AB0                              i2l3744 1740  
                            i2l4482 1D4E                              i2l4474 1D32  
                            i2l4570 10C2                              i2l4538 0CD8  
                            i2l3738 1736                              i2l3756 1AF2  
                            i2l4572 10CA                              i2l4580 110E  
                            i2l4564 109E                              i2l4584 1122  
                            i2l4576 10FE                              i2l4568 10B4  
                            i2l4498 0E64         __end_of_i2c_configure_slave 1EC0  
                     ??_SleepIfOkay 0030                  __size_of_ReadUSART 001E  
                            _OSCCON 000FD3                              _SPBRGH 000FB0  
                            _SSPADD 000FC8                              _SSPBUF 000FC9  
    __size_of_start_i2c_slave_reply 00C8                         ?i1_send_msg 000B  
     __end_of_start_i2c_slave_reply 11F4                  timer0_lthread@tptr 0186  
           FromMainLow_recvmsg@data 009A                         ?i2_recv_msg 008A  
                         ??_OpenADC 0188                        i2_in_low_int 1D1E  
                       ?i2_send_msg 008A                      __CFG_XINST$OFF 000000  
                __size_of_OpenUSART 0092                     _i2c_int_handler 2038  
                         ??___awmod 018A   i2c_slave_int_handler@data_written 00B7  
                  OpenTimer0@config 0186                              _ic_ptr 0050  
                         ??___lwmod 018A                       main@msgbuffer 01AF  
                  __end_of_init_i2c 1B8E                    OpenTimer1@config 0186  
                            _memcpy 1A30                              clear_0 187C  
                            clear_1 1888                              clear_2 18A0  
                   ___awmod@divisor 0188                              _uc_ptr 0052  
                   ___awmod@counter 018B                              main@ic 01CD  
                            main@uc 01C0                    __end_of_recv_msg 0B7E  
       start_i2c_slave_reply@length 002F                           ??_in_main 018C  
                 __end_ofi1___awmod 14C4                    __end_of_send_msg 0E08  
                 __end_ofi2___awmod 112C                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                       init_queue@i 0189                      i2___awmod@sign 002F  
          ToMainLow_recvmsg@msgtype 019E                __size_of_in_high_int 0012  
           FromMainLow_sendmsg@data 019D                     __CFG_FOSC$HSPLL 000000  
                        __accesstop 0080             __end_of__initialization 18DE  
        __end_of_ToMainHigh_recvmsg 1C9C          __end_of_ToMainHigh_sendmsg 1E6E  
       __end_of_init_timer1_lthread 1FC2                 __end_of_SleepIfOkay 1B40  
                    __pcstackCOMRAM 0001                        __pidataBANK0 2024  
                      __pidataBANK1 2044              __size_ofi2_in_high_int 000C  
                __size_of_check_msg 0036                   __end_of_ReadUSART 1F88  
                       ?_SetChanADC 0001                 __size_ofi1_send_msg 00C0  
                         ?i1_memcpy 0001       __size_of_InterruptHandlerHigh 1776  
       __end_of_InterruptHandlerLow 00C6                           ?i2_memcpy 0080  
                     _ToMainHigh_MQ 0100                 __size_ofi2_recv_msg 015E  
                  _enter_sleep_mode 203E                 __size_ofi2_send_msg 012C  
              timer1_lthread@length 01A4                       ReadUSART@data 0001  
                 __end_of_OpenUSART 15EE                       check_msg@qptr 0186  
              timer1_lthread@retval 01A9             ??_block_on_To_msgqueues 018C  
              __size_of_init_queues 006E                          __pbssBANK0 00D9  
                        __pbssBANK1 0100                          __pbssBANK2 0200  
                       ?_OpenTimer0 0001                         ?_OpenTimer1 0001  
                        __pnvCOMRAM 0050             __end_of_i2c_int_handler 203E  
                      ?i2_check_msg 002D                  timer1_lthread@tptr 01A0  
                 recv_msg@maxlength 0192                     recv_msg@msgtype 0193  
                   recv_msg@tlength 019A               __size_of_handle_start 0098  
                      ?_Delay1KTCYx 0001                    WriteTimer0@timer 0080  
                           ?_memcpy 0186                    WriteTimer1@timer 0003  
                     ??_WriteTimer0 002F                       ??_WriteTimer1 0003  
    __size_of_i2c_slave_int_handler 06A2             __size_of_timer0_lthread 0012  
     __end_of_i2c_slave_int_handler 076C             __size_of_timer1_lthread 0072  
                        ??i1_memcpy 0007                          ??i2_memcpy 002D  
                  i1send_msg@length 000D                       i2_in_high_int 2018  
                           _SSPCON1 000FC6                             _SSPCON2 000FC5  
                           _SSPSTAT 000FC7             ?_uart_trans_int_handler 0001  
                 __end_of_check_msg 1E02                           ?_init_i2c 0186  
                       _SleepIfOkay 1AEC                           ?_recv_msg 0190  
                           _OpenADC 1678                          _in_low_int 1B8E  
                      _handle_start 14C4                             __Hparam 0000  
               __size_of_SetChanADC 0020                           ?_send_msg 0190  
                           __Lparam 0000          __end_of_timer0_int_handler 1FF8  
       __end_of_FromMainLow_recvmsg 1CDE         __end_of_FromMainLow_sendmsg 1E38  
                  init_uart_recv@uc 0186                             ___awmod 0F34  
                           ___lwmod 15EE                     __CFG_STVREN$OFF 000000  
i2c_slave_int_handler@overrun_error 00B8                             __pcinit 1876  
                   __size_of_memcpy 005E            __size_of_adc_int_handler 0022  
                        _init_queue 17FC                             __ramtop 0400  
               __size_of_OpenTimer0 002A                 __size_of_OpenTimer1 0038  
                           __ptext0 076C                             __ptext1 1374  
                           __ptext2 18E8                             __ptext3 15EE  
                           __ptext4 1D96                             __ptext5 1F9E  
                           __ptext6 1F4C                             __ptext7 1FB0  
                           __ptext8 195A                             __ptext9 17FC  
                         _T0CONbits 000FD5                             _in_main 1BD4  
                         _T1CONbits 000FCD                    ___awmod@dividend 0186  
               __end_of_WriteTimer0 200A                 __end_of_WriteTimer1 1FE6  
                    ?i2_in_high_int 002D      __end_of_uart_trans_int_handler 1A30  
                    OpenADC@config2 0186                             main@msg 01AC  
   i2c_slave_int_handler@movecomAck 00AC                      __pintcode_body 16FC  
              end_of_initialization 18DE             timer1_lthread@msgbuffer 01A6  
      __end_of_FromMainHigh_sendmsg 1DCC      __size_of_uart_recv_int_handler 00C0  
        FromMainHigh_sendmsg@length 019F                             memcpy@d 018C  
                           memcpy@n 018A                             memcpy@s 018E  
     __end_of_uart_recv_int_handler 12B4                          ??_init_i2c 0188  
   i2c_slave_int_handler@sensorData 00AF                       __Lmediumconst 0000  
                           int_func 16FC                        ??i1_send_msg 0011  
           __size_of_init_uart_recv 001E                    ?_i2c_int_handler 0001  
                      ??i2_recv_msg 0091                          ??_recv_msg 0197  
                      ??i2_send_msg 0090                          ??_send_msg 0196  
        __end_of_timer1_int_handler 2018                           _RCSTAbits 000FAB  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 0096  
                        _uart_trans 1374                  __end_ofi1_send_msg 1374  
       FromMainHigh_sendmsg@msgtype 019C                           _TRISCbits 000F94  
                __end_ofi2_recv_msg 0CDC                           i1___awmod 1428  
                __end_ofi2_send_msg 0F34                           i2___awmod 1042  
                         _TXSTAbits 000FAC                          main@length 01BF  
                       ?_in_low_int 0188               timer0_lthread@msgtype 0188  
             _start_i2c_slave_reply 112C        __size_of_i2c_configure_slave 0028  
              __size_ofi2_check_msg 0024            __end_of_enter_sleep_mode 2044  
                _ToMainHigh_recvmsg 1C5A                           i1memcpy@d 0007  
                _ToMainHigh_sendmsg 1E38                           i1memcpy@n 0005  
                         i1memcpy@s 0009                      _timer0_lthread 1F9E  
                       ?_init_queue 0186                           i2memcpy@d 0086  
                       _WriteTimer0 1FF8                         _WriteTimer1 1FD4  
                         i2memcpy@n 0084                           i2memcpy@s 0088  
                    _timer1_lthread 18E8                      __end_of_memcpy 1A8E  
                 _enable_interrupts 2030                __size_of_Delay1KTCYx 0016  
                      ??_SetChanADC 0186                 ?_ToMainHigh_recvmsg 019E  
                   ??i2_in_high_int 002F                 ?_ToMainHigh_sendmsg 0096  
                ?_enable_interrupts 0001                 start_initialization 1876  
                     ??_in_high_int 0188                           _ReadUSART 1F6A  
                 ??_adc_int_handler 0001                          ?i1___awmod 0001  
                 __size_ofi1_memcpy 0040                   __size_ofi2_memcpy 005E  
                        ?i2___awmod 0080           FromMainLow_sendmsg@length 019F  
               ??_enable_interrupts 0186                        ??_OpenTimer0 0186  
                      ??_OpenTimer1 0186      __size_of_block_on_To_msgqueues 007E  
     __end_of_block_on_To_msgqueues 17FC                           _OpenUSART 155C  
      __end_of_InterruptHandlerHigh 177E                          init_i2c@ic 0186  
              ??_ToMainHigh_recvmsg 01A2                ??_ToMainHigh_sendmsg 0030  
                __end_of_SetChanADC 1F4C              __end_of_timer0_lthread 1FB0  
                       __pdataBANK0 00CE                         __pdataBANK1 01EA  
            __end_of_timer1_lthread 195A                  i1___awmod@dividend 0001  
         __end_of_enable_interrupts 2038                            ??_memcpy 018C  
             timer1_lthread@msgtype 01A2                         ?_uart_trans 0186  
              _FromMainHigh_sendmsg 1D96        __size_of_init_timer1_lthread 0012  
                __end_of_OpenTimer0 1E98                  __end_of_OpenTimer1 1D96  
                       __pbssCOMRAM 0030                          ?_ReadUSART 0001  
                     ??_init_queues 018A                       __pcstackBANK0 0080  
                     __pcstackBANK1 0186                 __size_of_in_low_int 0046  
          start_i2c_slave_reply@msg 002D                           _adcbuffer 0030  
               __CFG_CCP2MX$DEFAULT 000000                     Delay1KTCYx@unit 0186  
          ToMainLow_sendmsg@msgtype 0017        __size_of_InterruptHandlerLow 00AE  
    i2c_slave_int_handler@data_read 00BF                 __end_of_in_high_int 1FD4  
                        ?_OpenUSART 0186                        ?_SleepIfOkay 0001  
             ToMainLow_recvmsg@data 01A0                        _ToMainLow_MQ 0143  
               __size_of_init_queue 007A                      _init_uart_recv 1F4C  
                         _check_msg 1DCC              ?_start_i2c_slave_reply 002D  
                 __size_of_init_i2c 004E                   OpenADC@portconfig 0187  
                          ?_OpenADC 0186      i2c_slave_int_handler@gatherAck 00A9  
                      recv_msg@data 0195                        recv_msg@qmsg 019C  
                      recv_msg@slot 0199                        recv_msg@qptr 0190  
                 __size_of_recv_msg 015E                           __pintcode 0008  
                 __size_of_send_msg 012C                            ?___awmod 0186  
                   ?_timer0_lthread 0186                            ?___lwmod 0186  
                   ?_timer1_lthread 01A0               ?_FromMainHigh_sendmsg 019C  
                       __pintcodelo 0018              ToMainHigh_recvmsg@data 01A0  
                          ?_in_main 018A                   WriteTimer0@timer0 002D  
                _timer0_int_handler 1FE6                   WriteTimer1@timer1 0001  
             _i2c_slave_int_handler 00CA      i2c_slave_int_handler@error_buf 00B4  
                       ??i1___awmod 0005               ToMainLow_sendmsg@data 0018  
                       ??i2___awmod 002D                 ?_timer0_int_handler 0001  
    i2c_slave_int_handler@msg_ready 00BD              __end_of_init_uart_recv 1F6A  
       i2c_slave_int_handler@noData 009F                 __end_of_init_queues 19C8  
       i2c_slave_int_handler@length 00BE                 __size_of_uart_trans 00B4  
                     OpenADC@config 018A                            _LATBbits 000F8A  
                   i2check_msg@qptr 002D                          ?_check_msg 0186  
                          _IPR1bits 000F9F                            _PIE1bits 000F9D  
                     ?i2_in_low_int 0080                            i2u344_41 062A  
                          _PIR1bits 000F9E                            i2u346_41 0676  
            ToMainHigh_sendmsg@data 0097                            _RCONbits 000FD0  
                  __CFG_WDTPS$32768 000000                           main@F5212 01EA  
              ??_timer0_int_handler 002F        FromMainLow_recvmsg@maxlength 009C  
        __size_of_enable_interrupts 0008                   i1send_msg@msgtype 000E  
                 i1send_msg@tlength 0012          FromMainLow_recvmsg@msgtype 0098  
                        _ADCON0bits 000FC2        __size_of_FromMainLow_recvmsg 0042  
      __size_of_FromMainLow_sendmsg 0036                timer0_lthread@length 018A  
                _timer1_int_handler 200A                            i1_memcpy 1CDE  
              _InterruptHandlerHigh 0008                         ??_ReadUSART 0001  
                          i2_memcpy 1A8E                timer0_lthread@msgval 018E  
                       _in_high_int 1FC2                        send_msg@data 0194  
               _i2c_configure_slave 1E98                        send_msg@qmsg 019A  
                      send_msg@slot 0199                        send_msg@qptr 0190  
                         copy_data0 18D2                 ?_timer1_int_handler 0001  
                i2___awmod@dividend 0080                     ?_init_uart_recv 0186  
                       ??_OpenUSART 0188                     OpenUSART@config 018B  
                    ??i2_in_low_int 002F               _uart_recv_int_handler 11F4  
                      ??_in_low_int 018A                            __Hrparam 0000  
                  __size_of_OpenADC 0084                ?_i2c_configure_slave 0001  
                          __Lrparam 0000                   ?_enter_sleep_mode 0001  
            ??_FromMainHigh_sendmsg 019F                   i1___awmod@divisor 0003  
              ??_timer1_int_handler 0005                   i1___awmod@counter 0006  
                   _adc_int_handler 1F0A            __size_of_i2c_int_handler 0006  
                  __size_of___awmod 010E                  ??_enter_sleep_mode 002D  
                  __size_of___lwmod 008A                        ??_init_queue 0188  
                      ?_WriteTimer0 002D                        ?_WriteTimer1 0001  
          FromMainHigh_sendmsg@data 019D             ToMainLow_sendmsg@length 001A  
            ?_i2c_slave_int_handler 0001                   main@t0thread_data 01BA  
             ?_InterruptHandlerHigh 0001                    __size_of_in_main 0044  
                 i2send_msg@msgtype 008D         ToMainHigh_recvmsg@maxlength 01A2  
                 i2send_msg@tlength 0091             init_timer1_lthread@tptr 0186  
                       _init_queues 195A                  __end_of_in_low_int 1BD4  
                          __ptext10 1B40                            __ptext11 1E98  
                          __ptext20 1C5A                            __ptext12 2030  
                          __ptext21 0A20                            __ptext13 177E  
                          __ptext30 0F34                            __ptext22 1F2C  
                          __ptext14 1BD4                            __ptext23 155C  
                          __ptext15 1B8E                            __ptext40 1FD4  
                          __ptext32 19C8                            __ptext24 1D5E  
                          __ptext16 1FC2                            __ptext41 1F0A  
                          __ptext33 11F4                            __ptext25 1E6E  
                          __ptext17 1DCC                            __ptext50 0E08  
                          __ptext34 1EC0                            __ptext26 1678  
                          __ptext18 1F88                            __ptext51 1C9C  
                          __ptext43 1FE6                            __ptext35 12B4  
                          __ptext27 1E02                            __ptext19 1C18  
                          __ptext52 0B7E                            __ptext44 1FF8  
                          __ptext36 1CDE                            __ptext28 0CDC  
                          __ptext53 1A8E                            __ptext45 2038  
                          __ptext37 1428                            __ptext29 1A30  
                          __ptext54 1042                            __ptext46 00CA  
                          __ptext38 1F6A                            __ptext55 1AEC  
                          __ptext47 112C                            __ptext39 200A  
                          __ptext56 1D1E                            __ptext48 14C4  
                          __ptext57 2018                            __ptext49 1E38  
                          __ptext58 1EE6                            __ptext59 203E  
                    i1send_msg@data 000F                      i1send_msg@qmsg 0015  
                    i1send_msg@slot 0014                      i1send_msg@qptr 000B  
                          _init_i2c 1B40                 _init_timer1_lthread 1FB0  
                     __size_of_main 02B4                       ??i2_check_msg 002F  
                 main@t1thread_data 01BC                         ??_check_msg 0188  
                __end_of_init_queue 1876                __size_of_SleepIfOkay 0054  
                          _recv_msg 0A20    i2c_slave_int_handler@msg_to_send 00BA  
             ??_i2c_configure_slave 0186                            _send_msg 0CDC  
                    init_queue@qptr 0186                      i2recv_msg@data 008F  
                    i2recv_msg@qmsg 0096                       ??_Delay1KTCYx 0186  
                    i2recv_msg@slot 0093                      i2recv_msg@qptr 008A  
                  uart_trans@length 018A                        ??_uart_trans 0188  
               _InterruptHandlerLow 0018                ?_init_timer1_lthread 0186  
          ??_uart_trans_int_handler 0001                   i2___awmod@divisor 0082  
                 i2___awmod@counter 002E                         _OSCTUNEbits 000F9B  
                        _INTCONbits 000FF2                      OpenUSART@spbrg 0186  
                          memcpy@d1 0186                            memcpy@s1 0188  
             __end_ofi2_in_high_int 2024                    i2send_msg@length 008C  
                          intlevel1 0000                            intlevel2 0000  
              ?_InterruptHandlerLow 0001             ??_start_i2c_slave_reply 0080  
                  ___lwmod@dividend 0186              ?_uart_recv_int_handler 0001  
                __end_of_uart_trans 1428                   SetChanADC@channel 0187  
             _block_on_To_msgqueues 177E                       ?_handle_start 0001  
                  ??_timer0_lthread 018E         __size_of_ToMainHigh_recvmsg 0042  
           __end_of_adc_int_handler 1F2C         __size_of_ToMainHigh_sendmsg 0036  
                        _OSCCONbits 000FD3                    ??_timer1_lthread 01A8  
          ToMainHigh_sendmsg@length 0099                 __end_ofi2_check_msg 1F0A  
                       _uartTimeOut 004C               ??_init_timer1_lthread 0188  
            ??_InterruptHandlerHigh 00C0                   _ToMainLow_recvmsg 1C18  
                 _ToMainLow_sendmsg 1EC0                  main@last_reg_recvd 01AE  
                   ___lwmod@divisor 0188                __end_ofi2_in_low_int 1D5E  
                ?_ToMainLow_recvmsg 019E                 __end_of_Delay1KTCYx 1F9E  
                 ??_i2c_int_handler 0030                     ___lwmod@counter 018B  
                ?_ToMainLow_sendmsg 0017                      uart_trans@data 0186  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
                    i2send_msg@data 008E               ??_InterruptHandlerLow 001C  
               ??_ToMainLow_recvmsg 01A2                      i2send_msg@qmsg 0094  
                    i2send_msg@slot 0093                      i2send_msg@qptr 008A  
               ??_ToMainLow_sendmsg 001A       i2c_slave_int_handler@i2c_data 00B9  
               _FromMainLow_recvmsg 1C9C                      ??_handle_start 002D  
               _FromMainLow_sendmsg 1E02                        _USART_Status 004F  
