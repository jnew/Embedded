

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Mar 04 01:07:13 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           	psect	idataBANK0
    84  001F14                     __pidataBANK0:
    85                           	opt stack 0
    86                           
    87                           ;initializer for i2c_slave_int_handler@F5129
    88  001F14  AA                 	db	170
    89  001F15  00                 	db	0
    90  001F16  00                 	db	0
    91  001F17  00                 	db	0
    92  001F18  00                 	db	0
    93                           
    94                           ;initializer for i2c_slave_int_handler@F5127
    95  001F19  00                 	db	0
    96  001F1A  01                 	db	1
    97  001F1B  01                 	db	1
    98                           
    99                           	psect	idataBANK1
   100  001F34                     __pidataBANK1:
   101                           	opt stack 0
   102                           
   103                           ;initializer for main@F5211
   104  001F34  01                 	db	1
   105  001F35  02                 	db	2
   106  0000                     _ADCON0	set	4034
   107  0000                     _ADCON0bits	set	4034
   108  0000                     _ADCON1	set	4033
   109  0000                     _ADCON2	set	4032
   110  0000                     _ADRESH	set	4036
   111  0000                     _INTCONbits	set	4082
   112  0000                     _IPR1bits	set	3999
   113  0000                     _LATA	set	3977
   114  0000                     _LATB	set	3978
   115  0000                     _LATBbits	set	3978
   116  0000                     _OSCCON	set	4051
   117  0000                     _OSCCONbits	set	4051
   118  0000                     _OSCTUNEbits	set	3995
   119  0000                     _PIE1bits	set	3997
   120  0000                     _PIR1bits	set	3998
   121  0000                     _PORTA	set	3968
   122  0000                     _RCONbits	set	4048
   123  0000                     _RCREG	set	4014
   124  0000                     _RCSTA	set	4011
   125  0000                     _RCSTAbits	set	4011
   126  0000                     _SPBRG	set	4015
   127  0000                     _SPBRGH	set	4016
   128  0000                     _SSPADD	set	4040
   129  0000                     _SSPBUF	set	4041
   130  0000                     _SSPCON1	set	4038
   131  0000                     _SSPCON1bits	set	4038
   132  0000                     _SSPCON2	set	4037
   133  0000                     _SSPCON2bits	set	4037
   134  0000                     _SSPSTAT	set	4039
   135  0000                     _SSPSTATbits	set	4039
   136  0000                     _T0CON	set	4053
   137  0000                     _T0CONbits	set	4053
   138  0000                     _T1CON	set	4045
   139  0000                     _T1CONbits	set	4045
   140  0000                     _TMR0H	set	4055
   141  0000                     _TMR0L	set	4054
   142  0000                     _TMR1H	set	4047
   143  0000                     _TMR1L	set	4046
   144  0000                     _TRISA	set	3986
   145  0000                     _TRISB	set	3987
   146  0000                     _TRISC	set	3988
   147  0000                     _TRISCbits	set	3988
   148  0000                     _TXREG	set	4013
   149  0000                     _TXSTA	set	4012
   150  0000                     _TXSTAbits	set	4012
   151                           
   152                           	psect	nvCOMRAM
   153  000050                     __pnvCOMRAM:
   154                           	opt stack 0
   155  000050                     _ic_ptr:
   156                           	opt stack 0
   157  000050                     	ds	2
   158  000052                     _uc_ptr:
   159                           	opt stack 0
   160  000052                     	ds	2
   161                           
   162                           ; #config settings
   163  0000                     
   164                           	psect	cinit
   165  00178E                     __pcinit:
   166                           	opt stack 0
   167  00178E                     start_initialization:
   168                           	opt stack 0
   169  00178E                     __initialization:
   170                           	opt stack 0
   171                           
   172                           ; Clear objects allocated to BANK2 (134 bytes)
   173  00178E  EE02  F000         	lfsr	0,__pbssBANK2
   174  001792  0E86               	movlw	134
   175  001794                     clear_0:
   176  001794  6AEE               	clrf	postinc0,c
   177  001796  06E8               	decf	wreg,f,c
   178  001798  E1FD               	bnz	clear_0
   179                           
   180                           ; Clear objects allocated to BANK1 (134 bytes)
   181  00179A  EE01  F000         	lfsr	0,__pbssBANK1
   182  00179E  0E86               	movlw	134
   183  0017A0                     clear_1:
   184  0017A0  6AEE               	clrf	postinc0,c
   185  0017A2  06E8               	decf	wreg,f,c
   186  0017A4  E1FD               	bnz	clear_1
   187                           
   188                           ; Clear objects allocated to BANK0 (5 bytes)
   189  0017A6  0100               	movlb	0
   190  0017A8  6BD3               	clrf	(__pbssBANK0+4)& (0+255),b
   191  0017AA  6BD2               	clrf	(__pbssBANK0+3)& (0+255),b
   192  0017AC  6BD1               	clrf	(__pbssBANK0+2)& (0+255),b
   193  0017AE  6BD0               	clrf	(__pbssBANK0+1)& (0+255),b
   194  0017B0  6BCF               	clrf	__pbssBANK0& (0+255),b
   195                           
   196                           ; Clear objects allocated to COMRAM (30 bytes)
   197  0017B2  EE00  F032         	lfsr	0,__pbssCOMRAM
   198  0017B6  0E1E               	movlw	30
   199  0017B8                     clear_2:
   200  0017B8  6AEE               	clrf	postinc0,c
   201  0017BA  06E8               	decf	wreg,f,c
   202  0017BC  E1FD               	bnz	clear_2
   203                           
   204                           ; Initialize objects allocated to BANK1 (2 bytes)
   205                           ; load TBLPTR registers with __pidataBANK1
   206  0017BE  0E34               	movlw	low __pidataBANK1
   207  0017C0  6EF6               	movwf	tblptrl,c
   208  0017C2  0E1F               	movlw	high __pidataBANK1
   209  0017C4  6EF7               	movwf	tblptrh,c
   210  0017C6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   211  0017C8  6EF8               	movwf	tblptru,c
   212  0017CA  0009               	tblrd		*+	;fetch initializer
   213  0017CC  CFF5 F1EA          	movff	tablat,__pdataBANK1
   214  0017D0  0009               	tblrd		*+	;fetch initializer
   215  0017D2  CFF5 F1EB          	movff	tablat,__pdataBANK1+1
   216                           
   217                           ; Initialize objects allocated to BANK0 (8 bytes)
   218                           ; load TBLPTR registers with __pidataBANK0
   219  0017D6  0E14               	movlw	low __pidataBANK0
   220  0017D8  6EF6               	movwf	tblptrl,c
   221  0017DA  0E1F               	movlw	high __pidataBANK0
   222  0017DC  6EF7               	movwf	tblptrh,c
   223  0017DE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   224  0017E0  6EF8               	movwf	tblptru,c
   225  0017E2  EE00  F0C7         	lfsr	0,__pdataBANK0
   226  0017E6  EE10 F008          	lfsr	1,8
   227  0017EA                     copy_data0:
   228  0017EA  0009               	tblrd		*+
   229  0017EC  CFF5 FFEE          	movff	tablat,postinc0
   230  0017F0  50E5               	movf	postdec1,w,c
   231  0017F2  50E1               	movf	fsr1l,w,c
   232  0017F4  E1FA               	bnz	copy_data0
   233  0017F6                     end_of_initialization:
   234                           	opt stack 0
   235  0017F6                     __end_of__initialization:
   236                           	opt stack 0
   237  0017F6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   238  0017F8  6EF8               	movwf	tblptru,c
   239  0017FA  0100               	movlb	0
   240  0017FC  EF83  F003         	goto	_main	;jump to C main() function
   241                           tblptru	equ	0xFF8
   242                           tblptrh	equ	0xFF7
   243                           tblptrl	equ	0xFF6
   244                           tablat	equ	0xFF5
   245                           postinc0	equ	0xFEE
   246                           wreg	equ	0xFE8
   247                           postdec1	equ	0xFE5
   248                           fsr1l	equ	0xFE1
   249                           
   250                           	psect	bssCOMRAM
   251  000032                     __pbssCOMRAM:
   252                           	opt stack 0
   253  000032                     _adcbuffer:
   254                           	opt stack 0
   255  000032                     	ds	28
   256  00004E                     _MQ_Main_Willing_to_block:
   257                           	opt stack 0
   258  00004E                     	ds	1
   259  00004F                     _USART_Status:
   260                           	opt stack 0
   261  00004F                     	ds	1
   262                           tblptru	equ	0xFF8
   263                           tblptrh	equ	0xFF7
   264                           tblptrl	equ	0xFF6
   265                           tablat	equ	0xFF5
   266                           postinc0	equ	0xFEE
   267                           wreg	equ	0xFE8
   268                           postdec1	equ	0xFE5
   269                           fsr1l	equ	0xFE1
   270                           
   271                           	psect	bssBANK0
   272  0000CF                     __pbssBANK0:
   273                           	opt stack 0
   274  0000CF                     i2c_slave_int_handler@F5133:
   275                           	opt stack 0
   276  0000CF                     	ds	5
   277                           tblptru	equ	0xFF8
   278                           tblptrh	equ	0xFF7
   279                           tblptrl	equ	0xFF6
   280                           tablat	equ	0xFF5
   281                           postinc0	equ	0xFEE
   282                           wreg	equ	0xFE8
   283                           postdec1	equ	0xFE5
   284                           fsr1l	equ	0xFE1
   285                           
   286                           	psect	dataBANK0
   287  0000C7                     __pdataBANK0:
   288                           	opt stack 0
   289  0000C7                     i2c_slave_int_handler@F5129:
   290                           	opt stack 0
   291  0000C7                     	ds	5
   292  0000CC                     i2c_slave_int_handler@F5127:
   293                           	opt stack 0
   294  0000CC                     	ds	3
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           postdec1	equ	0xFE5
   302                           fsr1l	equ	0xFE1
   303                           
   304                           	psect	bssBANK1
   305  000100                     __pbssBANK1:
   306                           	opt stack 0
   307  000100                     _ToMainHigh_MQ:
   308                           	opt stack 0
   309  000100                     	ds	67
   310  000143                     _ToMainLow_MQ:
   311                           	opt stack 0
   312  000143                     	ds	67
   313                           tblptru	equ	0xFF8
   314                           tblptrh	equ	0xFF7
   315                           tblptrl	equ	0xFF6
   316                           tablat	equ	0xFF5
   317                           postinc0	equ	0xFEE
   318                           wreg	equ	0xFE8
   319                           postdec1	equ	0xFE5
   320                           fsr1l	equ	0xFE1
   321                           
   322                           	psect	dataBANK1
   323  0001EA                     __pdataBANK1:
   324                           	opt stack 0
   325  0001EA                     main@F5211:
   326                           	opt stack 0
   327  0001EA                     	ds	2
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           postdec1	equ	0xFE5
   335                           fsr1l	equ	0xFE1
   336                           
   337                           	psect	bssBANK2
   338  000200                     __pbssBANK2:
   339                           	opt stack 0
   340  000200                     _FromMainHigh_MQ:
   341                           	opt stack 0
   342  000200                     	ds	67
   343  000243                     _FromMainLow_MQ:
   344                           	opt stack 0
   345  000243                     	ds	67
   346                           tblptru	equ	0xFF8
   347                           tblptrh	equ	0xFF7
   348                           tblptrl	equ	0xFF6
   349                           tablat	equ	0xFF5
   350                           postinc0	equ	0xFEE
   351                           wreg	equ	0xFE8
   352                           postdec1	equ	0xFE5
   353                           fsr1l	equ	0xFE1
   354                           
   355                           	psect	cstackBANK1
   356  000186                     __pcstackBANK1:
   357                           	opt stack 0
   358  000186                     ??_SetChanADC:
   359  000186                     ?_in_high_int:
   360                           	opt stack 0
   361  000186                     ?___awmod:
   362                           	opt stack 0
   363  000186                     ?___lwmod:
   364                           	opt stack 0
   365  000186                     i2c_configure_slave@addr:
   366                           	opt stack 0
   367  000186                     OpenADC@config2:
   368                           	opt stack 0
   369  000186                     OpenTimer0@config:
   370                           	opt stack 0
   371  000186                     OpenTimer1@config:
   372                           	opt stack 0
   373  000186                     Delay1KTCYx@unit:
   374                           	opt stack 0
   375  000186                     init_queue@qptr:
   376                           	opt stack 0
   377  000186                     check_msg@qptr:
   378                           	opt stack 0
   379  000186                     init_i2c@ic:
   380                           	opt stack 0
   381  000186                     init_uart_recv@uc:
   382                           	opt stack 0
   383  000186                     uart_trans@data:
   384                           	opt stack 0
   385  000186                     timer0_lthread@tptr:
   386                           	opt stack 0
   387  000186                     init_timer1_lthread@tptr:
   388                           	opt stack 0
   389  000186                     OpenUSART@spbrg:
   390                           	opt stack 0
   391  000186                     ___awmod@dividend:
   392                           	opt stack 0
   393  000186                     ___lwmod@dividend:
   394                           	opt stack 0
   395  000186                     memcpy@d1:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x0
   399  000186                     	ds	1
   400  000187                     OpenADC@portconfig:
   401                           	opt stack 0
   402  000187                     SetChanADC@channel:
   403                           	opt stack 0
   404                           
   405                           ; 1 bytes @ 0x1
   406  000187                     	ds	1
   407  000188                     ??_OpenUSART:
   408  000188                     ??_OpenADC:
   409  000188                     ??_uart_trans:
   410  000188                     ??_init_queue:
   411  000188                     ??_check_msg:
   412  000188                     ?_in_low_int:
   413                           	opt stack 0
   414  000188                     timer0_lthread@msgtype:
   415                           	opt stack 0
   416  000188                     ___awmod@divisor:
   417                           	opt stack 0
   418  000188                     ___lwmod@divisor:
   419                           	opt stack 0
   420  000188                     memcpy@s1:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x2
   424  000188                     	ds	1
   425  000189                     init_queue@i:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x3
   429  000189                     	ds	1
   430  00018A                     ??_init_queues:
   431  00018A                     ??___awmod:
   432  00018A                     ??___lwmod:
   433  00018A                     ?_in_main:
   434                           	opt stack 0
   435  00018A                     uart_trans@length:
   436                           	opt stack 0
   437  00018A                     OpenADC@config:
   438                           	opt stack 0
   439  00018A                     timer0_lthread@length:
   440                           	opt stack 0
   441  00018A                     memcpy@n:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x4
   445  00018A                     	ds	1
   446  00018B                     OpenUSART@config:
   447                           	opt stack 0
   448  00018B                     ___awmod@counter:
   449                           	opt stack 0
   450  00018B                     ___lwmod@counter:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x5
   454  00018B                     	ds	1
   455  00018C                     ??_block_on_To_msgqueues:
   456  00018C                     ___awmod@sign:
   457                           	opt stack 0
   458  00018C                     timer0_lthread@msgbuffer:
   459                           	opt stack 0
   460  00018C                     memcpy@d:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x6
   464  00018C                     	ds	2
   465  00018E                     timer0_lthread@msgval:
   466                           	opt stack 0
   467  00018E                     memcpy@s:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x8
   471  00018E                     	ds	2
   472  000190                     send_msg@qptr:
   473                           	opt stack 0
   474  000190                     recv_msg@qptr:
   475                           	opt stack 0
   476                           
   477                           ; 2 bytes @ 0xA
   478  000190                     	ds	2
   479  000192                     send_msg@length:
   480                           	opt stack 0
   481  000192                     recv_msg@maxlength:
   482                           	opt stack 0
   483                           
   484                           ; 1 bytes @ 0xC
   485  000192                     	ds	1
   486  000193                     send_msg@msgtype:
   487                           	opt stack 0
   488  000193                     recv_msg@msgtype:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0xD
   492  000193                     	ds	1
   493  000194                     send_msg@data:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0xE
   497  000194                     	ds	1
   498  000195                     recv_msg@data:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0xF
   502  000195                     	ds	1
   503  000196                     ??_send_msg:
   504                           
   505                           ; 0 bytes @ 0x10
   506  000196                     	ds	1
   507  000197                     ??_recv_msg:
   508  000197                     send_msg@tlength:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x11
   512  000197                     	ds	2
   513  000199                     send_msg@slot:
   514                           	opt stack 0
   515  000199                     recv_msg@slot:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x13
   519  000199                     	ds	1
   520  00019A                     send_msg@qmsg:
   521                           	opt stack 0
   522  00019A                     recv_msg@tlength:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x14
   526  00019A                     	ds	2
   527  00019C                     FromMainLow_sendmsg@msgtype:
   528                           	opt stack 0
   529  00019C                     FromMainHigh_sendmsg@msgtype:
   530                           	opt stack 0
   531  00019C                     recv_msg@qmsg:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x16
   535  00019C                     	ds	1
   536  00019D                     FromMainLow_sendmsg@data:
   537                           	opt stack 0
   538  00019D                     FromMainHigh_sendmsg@data:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x17
   542  00019D                     	ds	1
   543  00019E                     ToMainLow_recvmsg@msgtype:
   544                           	opt stack 0
   545  00019E                     ToMainHigh_recvmsg@msgtype:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x18
   549  00019E                     	ds	1
   550  00019F                     FromMainLow_sendmsg@length:
   551                           	opt stack 0
   552  00019F                     FromMainHigh_sendmsg@length:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x19
   556  00019F                     	ds	1
   557  0001A0                     ToMainLow_recvmsg@data:
   558                           	opt stack 0
   559  0001A0                     ToMainHigh_recvmsg@data:
   560                           	opt stack 0
   561  0001A0                     timer1_lthread@tptr:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x1A
   565  0001A0                     	ds	2
   566  0001A2                     ToMainLow_recvmsg@maxlength:
   567                           	opt stack 0
   568  0001A2                     ToMainHigh_recvmsg@maxlength:
   569                           	opt stack 0
   570  0001A2                     timer1_lthread@msgtype:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x1C
   574  0001A2                     	ds	2
   575  0001A4                     timer1_lthread@length:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x1E
   579  0001A4                     	ds	2
   580  0001A6                     timer1_lthread@msgbuffer:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x20
   584  0001A6                     	ds	2
   585  0001A8                     ??_timer1_lthread:
   586                           
   587                           ; 0 bytes @ 0x22
   588  0001A8                     	ds	1
   589  0001A9                     timer1_lthread@retval:
   590                           	opt stack 0
   591                           
   592                           ; 1 bytes @ 0x23
   593  0001A9                     	ds	1
   594  0001AA                     ??_main:
   595                           
   596                           ; 0 bytes @ 0x24
   597  0001AA                     	ds	2
   598  0001AC                     main@msg:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x26
   602  0001AC                     	ds	2
   603  0001AE                     main@last_reg_recvd:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x28
   607  0001AE                     	ds	1
   608  0001AF                     main@msgbuffer:
   609                           	opt stack 0
   610                           
   611                           ; 11 bytes @ 0x29
   612  0001AF                     	ds	11
   613  0001BA                     main@t0thread_data:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x34
   617  0001BA                     	ds	2
   618  0001BC                     main@t1thread_data:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x36
   622  0001BC                     	ds	2
   623  0001BE                     main@msgtype:
   624                           	opt stack 0
   625                           
   626                           ; 1 bytes @ 0x38
   627  0001BE                     	ds	1
   628  0001BF                     main@uc:
   629                           	opt stack 0
   630                           
   631                           ; 13 bytes @ 0x39
   632  0001BF                     	ds	13
   633  0001CC                     main@length:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0x46
   637  0001CC                     	ds	1
   638  0001CD                     main@ic:
   639                           	opt stack 0
   640                           
   641                           ; 29 bytes @ 0x47
   642  0001CD                     	ds	29
   643                           tblptru	equ	0xFF8
   644                           tblptrh	equ	0xFF7
   645                           tblptrl	equ	0xFF6
   646                           tablat	equ	0xFF5
   647                           postinc0	equ	0xFEE
   648                           wreg	equ	0xFE8
   649                           postdec1	equ	0xFE5
   650                           fsr1l	equ	0xFE1
   651                           
   652                           	psect	cstackBANK0
   653  000080                     __pcstackBANK0:
   654                           	opt stack 0
   655  000080                     i2___awmod@counter:
   656                           	opt stack 0
   657  000080                     i2memcpy@d1:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0x0
   661  000080                     	ds	1
   662  000081                     i2___awmod@sign:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x1
   666  000081                     	ds	1
   667  000082                     i2memcpy@s1:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x2
   671  000082                     	ds	2
   672  000084                     i2memcpy@n:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x4
   676  000084                     	ds	2
   677  000086                     i2send_msg@qptr:
   678                           	opt stack 0
   679  000086                     i2recv_msg@qptr:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x6
   683  000086                     	ds	2
   684  000088                     i2send_msg@length:
   685                           	opt stack 0
   686  000088                     i2recv_msg@maxlength:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x8
   690  000088                     	ds	1
   691  000089                     i2send_msg@msgtype:
   692                           	opt stack 0
   693  000089                     i2recv_msg@msgtype:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x9
   697  000089                     	ds	1
   698  00008A                     i2send_msg@data:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0xA
   702  00008A                     	ds	1
   703  00008B                     i2recv_msg@data:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0xB
   707  00008B                     	ds	1
   708  00008C                     ??i2_send_msg:
   709                           
   710                           ; 0 bytes @ 0xC
   711  00008C                     	ds	1
   712  00008D                     ??i2_recv_msg:
   713  00008D                     i2send_msg@tlength:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0xD
   717  00008D                     	ds	2
   718  00008F                     i2send_msg@slot:
   719                           	opt stack 0
   720  00008F                     i2recv_msg@slot:
   721                           	opt stack 0
   722                           
   723                           ; 1 bytes @ 0xF
   724  00008F                     	ds	1
   725  000090                     i2send_msg@qmsg:
   726                           	opt stack 0
   727  000090                     i2recv_msg@tlength:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x10
   731  000090                     	ds	2
   732  000092                     ToMainHigh_sendmsg@msgtype:
   733                           	opt stack 0
   734  000092                     i2recv_msg@qmsg:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x12
   738  000092                     	ds	1
   739  000093                     ToMainHigh_sendmsg@data:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x13
   743  000093                     	ds	1
   744  000094                     FromMainLow_recvmsg@msgtype:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x14
   748  000094                     	ds	1
   749  000095                     ToMainHigh_sendmsg@length:
   750                           	opt stack 0
   751                           
   752                           ; 1 bytes @ 0x15
   753  000095                     	ds	1
   754  000096                     FromMainLow_recvmsg@data:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x16
   758  000096                     	ds	2
   759  000098                     FromMainLow_recvmsg@maxlength:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0x18
   763  000098                     	ds	1
   764  000099                     ??_i2c_slave_int_handler:
   765                           
   766                           ; 0 bytes @ 0x19
   767  000099                     	ds	2
   768  00009B                     i2c_slave_int_handler@noData:
   769                           	opt stack 0
   770                           
   771                           ; 5 bytes @ 0x1B
   772  00009B                     	ds	5
   773  0000A0                     i2c_slave_int_handler@reply:
   774                           	opt stack 0
   775                           
   776                           ; 5 bytes @ 0x20
   777  0000A0                     	ds	5
   778  0000A5                     i2c_slave_int_handler@gatherAck:
   779                           	opt stack 0
   780                           
   781                           ; 3 bytes @ 0x25
   782  0000A5                     	ds	3
   783  0000A8                     i2c_slave_int_handler@sensorData:
   784                           	opt stack 0
   785                           
   786                           ; 5 bytes @ 0x28
   787  0000A8                     	ds	5
   788  0000AD                     i2c_slave_int_handler@error_buf:
   789                           	opt stack 0
   790                           
   791                           ; 3 bytes @ 0x2D
   792  0000AD                     	ds	3
   793  0000B0                     i2c_slave_int_handler@data_written:
   794                           	opt stack 0
   795                           
   796                           ; 1 bytes @ 0x30
   797  0000B0                     	ds	1
   798  0000B1                     i2c_slave_int_handler@overrun_error:
   799                           	opt stack 0
   800                           
   801                           ; 1 bytes @ 0x31
   802  0000B1                     	ds	1
   803  0000B2                     i2c_slave_int_handler@i2c_data:
   804                           	opt stack 0
   805                           
   806                           ; 1 bytes @ 0x32
   807  0000B2                     	ds	1
   808  0000B3                     i2c_slave_int_handler@msg_to_send:
   809                           	opt stack 0
   810                           
   811                           ; 1 bytes @ 0x33
   812  0000B3                     	ds	1
   813  0000B4                     i2c_slave_int_handler@msgtype:
   814                           	opt stack 0
   815                           
   816                           ; 2 bytes @ 0x34
   817  0000B4                     	ds	2
   818  0000B6                     i2c_slave_int_handler@msg_ready:
   819                           	opt stack 0
   820                           
   821                           ; 1 bytes @ 0x36
   822  0000B6                     	ds	1
   823  0000B7                     i2c_slave_int_handler@length:
   824                           	opt stack 0
   825                           
   826                           ; 1 bytes @ 0x37
   827  0000B7                     	ds	1
   828  0000B8                     i2c_slave_int_handler@data_read:
   829                           	opt stack 0
   830                           
   831                           ; 1 bytes @ 0x38
   832  0000B8                     	ds	1
   833  0000B9                     ??_InterruptHandlerHigh:
   834                           
   835                           ; 0 bytes @ 0x39
   836  0000B9                     	ds	14
   837                           tblptru	equ	0xFF8
   838                           tblptrh	equ	0xFF7
   839                           tblptrl	equ	0xFF6
   840                           tablat	equ	0xFF5
   841                           postinc0	equ	0xFEE
   842                           wreg	equ	0xFE8
   843                           postdec1	equ	0xFE5
   844                           fsr1l	equ	0xFE1
   845                           
   846                           	psect	cstackCOMRAM
   847  000001                     __pcstackCOMRAM:
   848                           	opt stack 0
   849  000001                     ??_uart_trans_int_handler:
   850  000001                     ?i1___awmod:
   851                           	opt stack 0
   852  000001                     ReadUSART@data:
   853                           	opt stack 0
   854  000001                     WriteTimer1@timer1:
   855                           	opt stack 0
   856  000001                     i1memcpy@d1:
   857                           	opt stack 0
   858  000001                     i1___awmod@dividend:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x0
   862  000001                     	ds	2
   863  000003                     WriteTimer1@timer:
   864                           	opt stack 0
   865  000003                     i1memcpy@s1:
   866                           	opt stack 0
   867  000003                     i1___awmod@divisor:
   868                           	opt stack 0
   869                           
   870                           ; 2 bytes @ 0x2
   871  000003                     	ds	2
   872  000005                     ??i1___awmod:
   873  000005                     i1memcpy@n:
   874                           	opt stack 0
   875                           
   876                           ; 2 bytes @ 0x4
   877  000005                     	ds	1
   878  000006                     i1___awmod@counter:
   879                           	opt stack 0
   880                           
   881                           ; 1 bytes @ 0x5
   882  000006                     	ds	1
   883  000007                     i1___awmod@sign:
   884                           	opt stack 0
   885  000007                     i1memcpy@d:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0x6
   889  000007                     	ds	2
   890  000009                     i1memcpy@s:
   891                           	opt stack 0
   892                           
   893                           ; 2 bytes @ 0x8
   894  000009                     	ds	2
   895  00000B                     i1send_msg@qptr:
   896                           	opt stack 0
   897                           
   898                           ; 2 bytes @ 0xA
   899  00000B                     	ds	2
   900  00000D                     i1send_msg@length:
   901                           	opt stack 0
   902                           
   903                           ; 1 bytes @ 0xC
   904  00000D                     	ds	1
   905  00000E                     i1send_msg@msgtype:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0xD
   909  00000E                     	ds	1
   910  00000F                     i1send_msg@data:
   911                           	opt stack 0
   912                           
   913                           ; 2 bytes @ 0xE
   914  00000F                     	ds	2
   915  000011                     ??i1_send_msg:
   916                           
   917                           ; 0 bytes @ 0x10
   918  000011                     	ds	1
   919  000012                     i1send_msg@tlength:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x11
   923  000012                     	ds	2
   924  000014                     i1send_msg@slot:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x13
   928  000014                     	ds	1
   929  000015                     i1send_msg@qmsg:
   930                           	opt stack 0
   931                           
   932                           ; 2 bytes @ 0x14
   933  000015                     	ds	2
   934  000017                     ToMainLow_sendmsg@msgtype:
   935                           	opt stack 0
   936                           
   937                           ; 1 bytes @ 0x16
   938  000017                     	ds	1
   939  000018                     ToMainLow_sendmsg@data:
   940                           	opt stack 0
   941                           
   942                           ; 2 bytes @ 0x17
   943  000018                     	ds	2
   944  00001A                     ToMainLow_sendmsg@length:
   945                           	opt stack 0
   946                           
   947                           ; 1 bytes @ 0x19
   948  00001A                     	ds	1
   949  00001B                     ??_uart_recv_int_handler:
   950                           
   951                           ; 0 bytes @ 0x1A
   952  00001B                     	ds	1
   953  00001C                     ??_InterruptHandlerLow:
   954                           
   955                           ; 0 bytes @ 0x1B
   956  00001C                     	ds	17
   957  00002D                     ?i2_in_high_int:
   958                           	opt stack 0
   959  00002D                     ?i2___awmod:
   960                           	opt stack 0
   961  00002D                     handle_start@data_read:
   962                           	opt stack 0
   963  00002D                     start_i2c_slave_reply@msg:
   964                           	opt stack 0
   965  00002D                     WriteTimer0@timer0:
   966                           	opt stack 0
   967  00002D                     i2check_msg@qptr:
   968                           	opt stack 0
   969  00002D                     i2memcpy@d:
   970                           	opt stack 0
   971  00002D                     i2___awmod@dividend:
   972                           	opt stack 0
   973                           
   974                           ; 2 bytes @ 0x2C
   975  00002D                     	ds	2
   976  00002F                     ??_start_i2c_slave_reply:
   977  00002F                     ??i2_check_msg:
   978  00002F                     ?i2_in_low_int:
   979                           	opt stack 0
   980  00002F                     WriteTimer0@timer:
   981                           	opt stack 0
   982  00002F                     i2memcpy@s:
   983                           	opt stack 0
   984  00002F                     i2___awmod@divisor:
   985                           	opt stack 0
   986                           
   987                           ; 2 bytes @ 0x2E
   988  00002F                     	ds	2
   989  000031                     ??i2___awmod:
   990  000031                     start_i2c_slave_reply@length:
   991                           	opt stack 0
   992                           
   993                           ; 1 bytes @ 0x30
   994  000031                     	ds	1
   995  000032                     tblptru	equ	0xFF8
   996                           tblptrh	equ	0xFF7
   997                           tblptrl	equ	0xFF6
   998                           tablat	equ	0xFF5
   999                           postinc0	equ	0xFEE
  1000                           wreg	equ	0xFE8
  1001                           postdec1	equ	0xFE5
  1002                           fsr1l	equ	0xFE1
  1003                           
  1004                           ; 0 bytes @ 0x31
  1005 ;;
  1006 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1007 ;;
  1008 ;; *************** function _main *****************
  1009 ;; Defined at:
  1010 ;;		line 186 in file "../src/main.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;		None
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  ic             29   71[BANK1 ] struct __i2c_comm
  1015 ;;  uc             13   57[BANK1 ] struct __uart_comm
  1016 ;;  msgbuffer      11   41[BANK1 ] unsigned char [11]
  1017 ;;  t1thread_dat    2   54[BANK1 ] struct __timer1_thread_s
  1018 ;;  t0thread_dat    2   52[BANK1 ] struct __timer0_thread_s
  1019 ;;  msg             2   38[BANK1 ] unsigned char [2]
  1020 ;;  uthread_data    2    0        struct __uart_thread_str
  1021 ;;  length          1   70[BANK1 ] char 
  1022 ;;  msgtype         1   56[BANK1 ] unsigned char 
  1023 ;;  last_reg_rec    1   40[BANK1 ] unsigned char 
  1024 ;;  i               1    0        unsigned char 
  1025 ;;  c               1    0        unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;		None               void
  1028 ;; Registers used:
  1029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1035 ;;      Params:         0       0       0       0       0
  1036 ;;      Locals:         0       0      62       0       0
  1037 ;;      Temps:          0       0       2       0       0
  1038 ;;      Totals:         0       0      64       0       0
  1039 ;;Total ram usage:       64 bytes
  1040 ;; Hardware stack levels required when called:   15
  1041 ;; This function calls:
  1042 ;;		_FromMainLow_sendmsg
  1043 ;;		_OpenADC
  1044 ;;		_OpenTimer0
  1045 ;;		_OpenTimer1
  1046 ;;		_OpenUSART
  1047 ;;		_SetChanADC
  1048 ;;		_ToMainHigh_recvmsg
  1049 ;;		_ToMainLow_recvmsg
  1050 ;;		_block_on_To_msgqueues
  1051 ;;		_enable_interrupts
  1052 ;;		_i2c_configure_slave
  1053 ;;		_init_i2c
  1054 ;;		_init_queues
  1055 ;;		_init_timer1_lthread
  1056 ;;		_init_uart_recv
  1057 ;;		_timer0_lthread
  1058 ;;		_timer1_lthread
  1059 ;;		_uart_trans
  1060 ;; This function is called by:
  1061 ;;		Startup code after reset
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text0
  1066  000706                     __ptext0:
  1067                           	opt stack 0
  1068  000706                     _main:
  1069                           	opt stack 16
  1070                           
  1071                           ;main.c: 187: char c;
  1072                           ;main.c: 188: signed char length;
  1073                           ;main.c: 189: unsigned char msgtype;
  1074                           ;main.c: 190: unsigned char last_reg_recvd;
  1075                           ;main.c: 191: uart_comm uc;
  1076                           ;main.c: 192: i2c_comm ic;
  1077                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
  1078                           ;main.c: 194: unsigned char i;
  1079                           ;main.c: 195: uart_thread_struct uthread_data;
  1080                           ;main.c: 196: timer1_thread_struct t1thread_data;
  1081                           ;main.c: 197: timer0_thread_struct t0thread_data;
  1082                           ;main.c: 205: OSCCON = 0x82;
  1083                           
  1084                           ;incstack = 0
  1085  000706  0E82               	movlw	130
  1086  000708  6ED3               	movwf	4051,c	;volatile
  1087                           
  1088                           ;main.c: 206: OSCTUNEbits.PLLEN = 0;
  1089  00070A  9C9B               	bcf	3995,6,c	;volatile
  1090                           
  1091                           ;main.c: 224: init_uart_recv(&uc);
  1092  00070C  0101               	movlb	1	; () banked
  1093  00070E  0E01               	movlw	high main@uc
  1094  000710  0101               	movlb	1	; () banked
  1095  000712  0101               	movlb	1	; () banked
  1096  000714  6F87               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1097  000716  0101               	movlb	1	; () banked
  1098  000718  0EBF               	movlw	low main@uc
  1099  00071A  0101               	movlb	1	; () banked
  1100  00071C  0101               	movlb	1	; () banked
  1101  00071E  6F86               	movwf	init_uart_recv@uc& (0+255),b
  1102  000720  EC1E  F00F         	call	_init_uart_recv	;wreg free
  1103                           
  1104                           ;main.c: 227: init_i2c(&ic);
  1105  000724  0101               	movlb	1	; () banked
  1106  000726  0E01               	movlw	high main@ic
  1107  000728  0101               	movlb	1	; () banked
  1108  00072A  0101               	movlb	1	; () banked
  1109  00072C  6F87               	movwf	(init_i2c@ic+1)& (0+255),b
  1110  00072E  0101               	movlb	1	; () banked
  1111  000730  0ECD               	movlw	low main@ic
  1112  000732  0101               	movlb	1	; () banked
  1113  000734  0101               	movlb	1	; () banked
  1114  000736  6F86               	movwf	init_i2c@ic& (0+255),b
  1115  000738  ECD3  F00C         	call	_init_i2c	;wreg free
  1116                           
  1117                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1118  00073C  0101               	movlb	1	; () banked
  1119  00073E  0E01               	movlw	high main@t1thread_data
  1120  000740  0101               	movlb	1	; () banked
  1121  000742  0101               	movlb	1	; () banked
  1122  000744  6F87               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1123  000746  0101               	movlb	1	; () banked
  1124  000748  0EBC               	movlw	low main@t1thread_data
  1125  00074A  0101               	movlb	1	; () banked
  1126  00074C  0101               	movlb	1	; () banked
  1127  00074E  6F86               	movwf	init_timer1_lthread@tptr& (0+255),b
  1128  000750  EC50  F00F         	call	_init_timer1_lthread	;wreg free
  1129                           
  1130                           ;main.c: 233: init_queues();
  1131  000754  EC39  F00C         	call	_init_queues	;wreg free
  1132                           
  1133                           ;main.c: 237: TRISB = 0x0;
  1134  000758  0E00               	movlw	0
  1135  00075A  6E93               	movwf	3987,c	;volatile
  1136                           
  1137                           ;main.c: 238: LATB = 0x0;
  1138  00075C  0E00               	movlw	0
  1139  00075E  6E8A               	movwf	3978,c	;volatile
  1140                           
  1141                           ;main.c: 240: PORTA = 0x0;
  1142  000760  0E00               	movlw	0
  1143  000762  6E80               	movwf	3968,c	;volatile
  1144                           
  1145                           ;main.c: 241: LATA = 0x0;
  1146  000764  0E00               	movlw	0
  1147  000766  6E89               	movwf	3977,c	;volatile
  1148                           
  1149                           ;main.c: 242: TRISA = 0x0F;
  1150  000768  0E0F               	movlw	15
  1151  00076A  6E92               	movwf	3986,c	;volatile
  1152                           
  1153                           ;main.c: 255: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110101);
  1154  00076C  0ED5               	movlw	213
  1155  00076E  ECAF  F00E         	call	_OpenTimer0
  1156                           
  1157                           ;main.c: 264: OpenTimer1(0b11111111 & 0b10111111 & 0b11001111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1158  000772  0E85               	movlw	133
  1159  000774  EC10  F00E         	call	_OpenTimer1
  1160                           
  1161                           ;main.c: 272: IPR1bits.ADIP = 0;
  1162  000778  9C9F               	bcf	3999,6,c	;volatile
  1163                           
  1164                           ;main.c: 273: PIE1bits.ADIE = 1;
  1165  00077A  8C9D               	bsf	3997,6,c	;volatile
  1166                           
  1167                           ;main.c: 275: IPR1bits.TMR1IP = 0;
  1168  00077C  909F               	bcf	3999,0,c	;volatile
  1169                           
  1170                           ;main.c: 277: IPR1bits.RCIP = 0;
  1171  00077E  9A9F               	bcf	3999,5,c	;volatile
  1172                           
  1173                           ;main.c: 279: IPR1bits.TXIP = 0;
  1174  000780  989F               	bcf	3999,4,c	;volatile
  1175                           
  1176                           ;main.c: 281: IPR1bits.SSPIP = 1;
  1177  000782  869F               	bsf	3999,3,c	;volatile
  1178                           
  1179                           ;main.c: 301: i2c_configure_slave(0x9E);
  1180  000784  0E9E               	movlw	158
  1181  000786  ECC4  F00E         	call	_i2c_configure_slave
  1182                           
  1183                           ;main.c: 320: PIE1bits.SSPIE = 1;
  1184  00078A  869D               	bsf	3997,3,c	;volatile
  1185                           
  1186                           ;main.c: 331: OpenUSART(0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1187                           ;main.c: 332: 0b11111111 & 0b11111111, 38);
  1188  00078C  0E00               	movlw	0
  1189  00078E  0101               	movlb	1	; () banked
  1190  000790  0101               	movlb	1	; () banked
  1191  000792  6F87               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1192  000794  0E26               	movlw	38
  1193  000796  0101               	movlb	1	; () banked
  1194  000798  6F86               	movwf	OpenUSART@spbrg& (0+255),b
  1195  00079A  0EFC               	movlw	252
  1196  00079C  EC3A  F00A         	call	_OpenUSART
  1197                           
  1198                           ;main.c: 333: RCSTAbits.SPEN = 1;
  1199  0007A0  8EAB               	bsf	4011,7,c	;volatile
  1200                           
  1201                           ;main.c: 334: TRISC = 0xFF;
  1202  0007A2  6894               	setf	3988,c	;volatile
  1203                           
  1204                           ;main.c: 341: enable_interrupts();
  1205  0007A4  EC8E  F00F         	call	_enable_interrupts	;wreg free
  1206                           
  1207                           ;main.c: 355: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1208                           ;main.c: 356: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1209                           ;main.c: 357: 0b1011);
  1210  0007A8  0101               	movlb	1	; () banked
  1211  0007AA  6FAA               	movwf	??_main& (0+255),b
  1212  0007AC  0E0C               	movlw	12
  1213  0007AE  0101               	movlb	1	; () banked
  1214  0007B0  0101               	movlb	1	; () banked
  1215  0007B2  6F86               	movwf	OpenADC@config2& (0+255),b
  1216  0007B4  0101               	movlb	1	; () banked
  1217  0007B6  51AA               	movf	??_main& (0+255),w,b
  1218  0007B8  0101               	movlb	1	; () banked
  1219  0007BA  6FAB               	movwf	(??_main+1)& (0+255),b
  1220  0007BC  0E0B               	movlw	11
  1221  0007BE  0101               	movlb	1	; () banked
  1222  0007C0  0101               	movlb	1	; () banked
  1223  0007C2  6F87               	movwf	OpenADC@portconfig& (0+255),b
  1224  0007C4  0101               	movlb	1	; () banked
  1225  0007C6  51AB               	movf	(??_main+1)& (0+255),w,b
  1226  0007C8  0E53               	movlw	83
  1227  0007CA  ECC8  F00A         	call	_OpenADC
  1228                           
  1229                           ;main.c: 358: SetChanADC(0b10001111);
  1230  0007CE  0E8F               	movlw	143
  1231  0007D0  EC0E  F00F         	call	_SetChanADC
  1232                           
  1233                           ;main.c: 369: unsigned char msg[2] = {0x01, 0x02};
  1234  0007D4  C1EA  F1AC         	movff	main@F5211,main@msg
  1235  0007D8  C1EB  F1AD         	movff	main@F5211+1,main@msg+1
  1236  0007DC                     l3766:
  1237                           
  1238                           ;main.c: 381: block_on_To_msgqueues();
  1239  0007DC  EC4B  F00B         	call	_block_on_To_msgqueues	;wreg free
  1240                           
  1241                           ;main.c: 388: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1242  0007E0  0101               	movlb	1	; () banked
  1243  0007E2  0E01               	movlw	high main@msgtype
  1244  0007E4  0101               	movlb	1	; () banked
  1245  0007E6  0101               	movlb	1	; () banked
  1246  0007E8  6F9F               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1247  0007EA  0101               	movlb	1	; () banked
  1248  0007EC  0EBE               	movlw	low main@msgtype
  1249  0007EE  0101               	movlb	1	; () banked
  1250  0007F0  0101               	movlb	1	; () banked
  1251  0007F2  6F9E               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1252  0007F4  0101               	movlb	1	; () banked
  1253  0007F6  0E01               	movlw	high main@msgbuffer
  1254  0007F8  0101               	movlb	1	; () banked
  1255  0007FA  0101               	movlb	1	; () banked
  1256  0007FC  6FA1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1257  0007FE  0101               	movlb	1	; () banked
  1258  000800  0EAF               	movlw	low main@msgbuffer
  1259  000802  0101               	movlb	1	; () banked
  1260  000804  0101               	movlb	1	; () banked
  1261  000806  6FA0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1262  000808  0E0A               	movlw	10
  1263  00080A  ECAE  F00D         	call	_ToMainHigh_recvmsg
  1264  00080E  0101               	movlb	1	; () banked
  1265  000810  0101               	movlb	1	; () banked
  1266  000812  6FCC               	movwf	main@length& (0+255),b
  1267                           
  1268                           ; BSR set to: 1
  1269                           ;main.c: 389: if (length < 0) {
  1270  000814  0101               	movlb	1	; () banked
  1271  000816  0101               	movlb	1	; () banked
  1272  000818  BFCC               	btfsc	main@length& (0+255),7,b
  1273  00081A  D060               	goto	l3784
  1274  00081C  D04C               	goto	l3782
  1275  00081E                     l3774:
  1276                           
  1277                           ; BSR set to: 1
  1278                           ;main.c: 397: {
  1279                           ;main.c: 398: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1280  00081E  0101               	movlb	1	; () banked
  1281  000820  0E01               	movlw	high main@t0thread_data
  1282  000822  0101               	movlb	1	; () banked
  1283  000824  0101               	movlb	1	; () banked
  1284  000826  6F87               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1285  000828  0101               	movlb	1	; () banked
  1286  00082A  0EBA               	movlw	low main@t0thread_data
  1287  00082C  0101               	movlb	1	; () banked
  1288  00082E  0101               	movlb	1	; () banked
  1289  000830  6F86               	movwf	timer0_lthread@tptr& (0+255),b
  1290  000832  0101               	movlb	1	; () banked
  1291  000834  0101               	movlb	1	; () banked
  1292  000836  C1BE  F188         	movff	main@msgtype,timer0_lthread@msgtype
  1293  00083A  0101               	movlb	1	; () banked
  1294  00083C  0101               	movlb	1	; () banked
  1295  00083E  6B89               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1296  000840  0101               	movlb	1	; () banked
  1297  000842  0101               	movlb	1	; () banked
  1298  000844  51CC               	movf	main@length& (0+255),w,b
  1299  000846  0101               	movlb	1	; () banked
  1300  000848  0101               	movlb	1	; () banked
  1301  00084A  6F8A               	movwf	timer0_lthread@length& (0+255),b
  1302  00084C  0101               	movlb	1	; () banked
  1303  00084E  6B8B               	clrf	(timer0_lthread@length+1)& (0+255),b
  1304  000850  0101               	movlb	1	; () banked
  1305  000852  BF8A               	btfsc	timer0_lthread@length& (0+255),7,b
  1306  000854  078B               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1307  000856  0101               	movlb	1	; () banked
  1308  000858  0E01               	movlw	high main@msgbuffer
  1309  00085A  0101               	movlb	1	; () banked
  1310  00085C  0101               	movlb	1	; () banked
  1311  00085E  6F8D               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1312  000860  0101               	movlb	1	; () banked
  1313  000862  0EAF               	movlw	low main@msgbuffer
  1314  000864  0101               	movlb	1	; () banked
  1315  000866  0101               	movlb	1	; () banked
  1316  000868  6F8C               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1317  00086A  EC47  F00F         	call	_timer0_lthread	;wreg free
  1318                           
  1319                           ;main.c: 399: break;
  1320  00086E  D036               	goto	l3784
  1321  000870                     l128:
  1322                           
  1323                           ;main.c: 402: case 41:
  1324                           ;main.c: 403: {
  1325                           ;main.c: 406: last_reg_recvd = msgbuffer[0];
  1326  000870  C1AF  F1AE         	movff	main@msgbuffer,main@last_reg_recvd
  1327                           
  1328                           ;main.c: 407: break;
  1329  000874  D033               	goto	l3784
  1330  000876                     l3776:
  1331                           
  1332                           ;main.c: 410: {
  1333                           ;main.c: 413: uart_trans(length, msgbuffer);
  1334  000876  0101               	movlb	1	; () banked
  1335  000878  0E01               	movlw	high main@msgbuffer
  1336  00087A  0101               	movlb	1	; () banked
  1337  00087C  0101               	movlb	1	; () banked
  1338  00087E  6F87               	movwf	(uart_trans@data+1)& (0+255),b
  1339  000880  0101               	movlb	1	; () banked
  1340  000882  0EAF               	movlw	low main@msgbuffer
  1341  000884  0101               	movlb	1	; () banked
  1342  000886  0101               	movlb	1	; () banked
  1343  000888  6F86               	movwf	uart_trans@data& (0+255),b
  1344  00088A  0101               	movlb	1	; () banked
  1345  00088C  0101               	movlb	1	; () banked
  1346  00088E  51CC               	movf	main@length& (0+255),w,b
  1347  000890  EC9E  F008         	call	_uart_trans
  1348                           
  1349                           ;main.c: 416: break;
  1350  000894  D023               	goto	l3784
  1351  000896                     l3778:
  1352                           
  1353                           ;main.c: 426: {
  1354                           ;main.c: 427: uart_trans(length, msgbuffer);
  1355  000896  0101               	movlb	1	; () banked
  1356  000898  0E01               	movlw	high main@msgbuffer
  1357  00089A  0101               	movlb	1	; () banked
  1358  00089C  0101               	movlb	1	; () banked
  1359  00089E  6F87               	movwf	(uart_trans@data+1)& (0+255),b
  1360  0008A0  0101               	movlb	1	; () banked
  1361  0008A2  0EAF               	movlw	low main@msgbuffer
  1362  0008A4  0101               	movlb	1	; () banked
  1363  0008A6  0101               	movlb	1	; () banked
  1364  0008A8  6F86               	movwf	uart_trans@data& (0+255),b
  1365  0008AA  0101               	movlb	1	; () banked
  1366  0008AC  0101               	movlb	1	; () banked
  1367  0008AE  51CC               	movf	main@length& (0+255),w,b
  1368  0008B0  EC9E  F008         	call	_uart_trans
  1369                           
  1370                           ;main.c: 428: break;
  1371  0008B4  D013               	goto	l3784
  1372  0008B6                     l3782:
  1373  0008B6  0101               	movlb	1	; () banked
  1374  0008B8  0101               	movlb	1	; () banked
  1375  0008BA  51BE               	movf	main@msgtype& (0+255),w,b
  1376                           
  1377                           ; Switch size 1, requested type "space"
  1378                           ; Number of cases is 6, Range of values is 10 to 46
  1379                           ; switch strategies available:
  1380                           ; Name         Instructions Cycles
  1381                           ; simple_byte           19    10 (average)
  1382                           ;	Chosen strategy is simple_byte
  1383  0008BC  0A0A               	xorlw	10	; case 10
  1384  0008BE  B4D8               	btfsc	status,2,c
  1385  0008C0  D7AE               	goto	l3774
  1386  0008C2  0A2A               	xorlw	42	; case 32
  1387  0008C4  B4D8               	btfsc	status,2,c
  1388  0008C6  D7E7               	goto	l3778
  1389  0008C8  0A08               	xorlw	8	; case 40
  1390  0008CA  B4D8               	btfsc	status,2,c
  1391  0008CC  D7D1               	goto	l128
  1392  0008CE  0A01               	xorlw	1	; case 41
  1393  0008D0  B4D8               	btfsc	status,2,c
  1394  0008D2  D7CE               	goto	l128
  1395  0008D4  0A04               	xorlw	4	; case 45
  1396  0008D6  B4D8               	btfsc	status,2,c
  1397  0008D8  D7CE               	goto	l3776
  1398  0008DA  0A03               	xorlw	3	; case 46
  1399  0008DC                     l3784:
  1400                           
  1401                           ;main.c: 436: }
  1402                           ;main.c: 439: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1403  0008DC  0101               	movlb	1	; () banked
  1404  0008DE  0E01               	movlw	high main@msgtype
  1405  0008E0  0101               	movlb	1	; () banked
  1406  0008E2  0101               	movlb	1	; () banked
  1407  0008E4  6F9F               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1408  0008E6  0101               	movlb	1	; () banked
  1409  0008E8  0EBE               	movlw	low main@msgtype
  1410  0008EA  0101               	movlb	1	; () banked
  1411  0008EC  0101               	movlb	1	; () banked
  1412  0008EE  6F9E               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1413  0008F0  0101               	movlb	1	; () banked
  1414  0008F2  0E01               	movlw	high main@msgbuffer
  1415  0008F4  0101               	movlb	1	; () banked
  1416  0008F6  0101               	movlb	1	; () banked
  1417  0008F8  6FA1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1418  0008FA  0101               	movlb	1	; () banked
  1419  0008FC  0EAF               	movlw	low main@msgbuffer
  1420  0008FE  0101               	movlb	1	; () banked
  1421  000900  0101               	movlb	1	; () banked
  1422  000902  6FA0               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1423  000904  0E0A               	movlw	10
  1424  000906  EC8D  F00D         	call	_ToMainLow_recvmsg
  1425  00090A  0101               	movlb	1	; () banked
  1426  00090C  0101               	movlb	1	; () banked
  1427  00090E  6FCC               	movwf	main@length& (0+255),b
  1428                           
  1429                           ; BSR set to: 1
  1430                           ;main.c: 440: if (length < 0) {
  1431  000910  0101               	movlb	1	; () banked
  1432  000912  0101               	movlb	1	; () banked
  1433  000914  BFCC               	btfsc	main@length& (0+255),7,b
  1434  000916  D762               	goto	l3766
  1435  000918  D047               	goto	l3800
  1436  00091A                     l3790:
  1437                           
  1438                           ; BSR set to: 1
  1439                           ;main.c: 448: {
  1440                           ;main.c: 449: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1441  00091A  0101               	movlb	1	; () banked
  1442  00091C  0E01               	movlw	high main@t1thread_data
  1443  00091E  0101               	movlb	1	; () banked
  1444  000920  0101               	movlb	1	; () banked
  1445  000922  6FA1               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1446  000924  0101               	movlb	1	; () banked
  1447  000926  0EBC               	movlw	low main@t1thread_data
  1448  000928  0101               	movlb	1	; () banked
  1449  00092A  0101               	movlb	1	; () banked
  1450  00092C  6FA0               	movwf	timer1_lthread@tptr& (0+255),b
  1451  00092E  0101               	movlb	1	; () banked
  1452  000930  0101               	movlb	1	; () banked
  1453  000932  C1BE  F1A2         	movff	main@msgtype,timer1_lthread@msgtype
  1454  000936  0101               	movlb	1	; () banked
  1455  000938  0101               	movlb	1	; () banked
  1456  00093A  6BA3               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1457  00093C  0101               	movlb	1	; () banked
  1458  00093E  0101               	movlb	1	; () banked
  1459  000940  51CC               	movf	main@length& (0+255),w,b
  1460  000942  0101               	movlb	1	; () banked
  1461  000944  0101               	movlb	1	; () banked
  1462  000946  6FA4               	movwf	timer1_lthread@length& (0+255),b
  1463  000948  0101               	movlb	1	; () banked
  1464  00094A  6BA5               	clrf	(timer1_lthread@length+1)& (0+255),b
  1465  00094C  0101               	movlb	1	; () banked
  1466  00094E  BFA4               	btfsc	timer1_lthread@length& (0+255),7,b
  1467  000950  07A5               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1468  000952  0101               	movlb	1	; () banked
  1469  000954  0E01               	movlw	high main@msgbuffer
  1470  000956  0101               	movlb	1	; () banked
  1471  000958  0101               	movlb	1	; () banked
  1472  00095A  6FA7               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1473  00095C  0101               	movlb	1	; () banked
  1474  00095E  0EAF               	movlw	low main@msgbuffer
  1475  000960  0101               	movlb	1	; () banked
  1476  000962  0101               	movlb	1	; () banked
  1477  000964  6FA6               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1478  000966  EC00  F00C         	call	_timer1_lthread	;wreg free
  1479                           
  1480                           ;main.c: 450: break;
  1481  00096A  D738               	goto	l3766
  1482  00096C                     l3792:
  1483                           
  1484                           ;main.c: 453: case 31:
  1485                           ;main.c: 454: {
  1486                           ;main.c: 455: if(msgbuffer[0] == 0x01){
  1487  00096C  0101               	movlb	1	; () banked
  1488  00096E  0101               	movlb	1	; () banked
  1489  000970  05AF               	decf	main@msgbuffer& (0+255),w,b
  1490  000972  A4D8               	btfss	status,2,c
  1491  000974  D017               	goto	l3796
  1492                           
  1493                           ; BSR set to: 1
  1494                           ;main.c: 457: FromMainLow_sendmsg(length, 31, msgbuffer);
  1495  000976  0101               	movlb	1	; () banked
  1496  000978  6FAA               	movwf	??_main& (0+255),b
  1497  00097A  0E1F               	movlw	31
  1498  00097C  0101               	movlb	1	; () banked
  1499  00097E  0101               	movlb	1	; () banked
  1500  000980  6F9C               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  1501  000982  0101               	movlb	1	; () banked
  1502  000984  51AA               	movf	??_main& (0+255),w,b
  1503  000986  0101               	movlb	1	; () banked
  1504  000988  0E01               	movlw	high main@msgbuffer
  1505  00098A  0101               	movlb	1	; () banked
  1506  00098C  0101               	movlb	1	; () banked
  1507  00098E  6F9E               	movwf	(FromMainLow_sendmsg@data+1)& (0+255),b
  1508  000990  0101               	movlb	1	; () banked
  1509  000992  0EAF               	movlw	low main@msgbuffer
  1510  000994  0101               	movlb	1	; () banked
  1511  000996  0101               	movlb	1	; () banked
  1512  000998  6F9D               	movwf	FromMainLow_sendmsg@data& (0+255),b
  1513  00099A  0101               	movlb	1	; () banked
  1514  00099C  0101               	movlb	1	; () banked
  1515  00099E  51CC               	movf	main@length& (0+255),w,b
  1516  0009A0  EC62  F00E         	call	_FromMainLow_sendmsg
  1517  0009A4                     l3796:
  1518                           
  1519                           ;main.c: 458: }
  1520                           ;main.c: 460: LATBbits.LATB2 = 0;
  1521  0009A4  948A               	bcf	3978,2,c	;volatile
  1522                           
  1523                           ;main.c: 462: break;
  1524  0009A6  D71A               	goto	l3766
  1525  0009A8                     l3800:
  1526  0009A8  0101               	movlb	1	; () banked
  1527  0009AA  0101               	movlb	1	; () banked
  1528  0009AC  51BE               	movf	main@msgtype& (0+255),w,b
  1529                           
  1530                           ; Switch size 1, requested type "space"
  1531                           ; Number of cases is 3, Range of values is 11 to 31
  1532                           ; switch strategies available:
  1533                           ; Name         Instructions Cycles
  1534                           ; simple_byte           10     6 (average)
  1535                           ;	Chosen strategy is simple_byte
  1536  0009AE  0A0B               	xorlw	11	; case 11
  1537  0009B0  B4D8               	btfsc	status,2,c
  1538  0009B2  D7B3               	goto	l3790
  1539  0009B4  0A15               	xorlw	21	; case 30
  1540  0009B6  B4D8               	btfsc	status,2,c
  1541  0009B8  D7D9               	goto	l3792
  1542  0009BA  0A01               	xorlw	1	; case 31
  1543  0009BC  B4D8               	btfsc	status,2,c
  1544  0009BE  D7D6               	goto	l3792
  1545  0009C0  D70D               	goto	l3766
  1546  0009C2                     __end_of_main:
  1547                           	opt stack 0
  1548                           tblptru	equ	0xFF8
  1549                           tblptrh	equ	0xFF7
  1550                           tblptrl	equ	0xFF6
  1551                           tablat	equ	0xFF5
  1552                           postinc0	equ	0xFEE
  1553                           wreg	equ	0xFE8
  1554                           postdec1	equ	0xFE5
  1555                           fsr1l	equ	0xFE1
  1556                           status	equ	0xFD8
  1557                           
  1558 ;; *************** function _uart_trans *****************
  1559 ;; Defined at:
  1560 ;;		line 56 in file "../src/my_uart.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  length          1    wreg     unsigned char 
  1563 ;;  data            2    0[BANK1 ] PTR unsigned char 
  1564 ;;		 -> main@msgbuffer(11), 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  length          1    4[BANK1 ] unsigned char 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;		None               void
  1569 ;; Registers used:
  1570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1576 ;;      Params:         0       0       2       0       0
  1577 ;;      Locals:         0       0       1       0       0
  1578 ;;      Temps:          0       0       2       0       0
  1579 ;;      Totals:         0       0       5       0       0
  1580 ;;Total ram usage:        5 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:   11
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_main
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text1
  1591  00113C                     __ptext1:
  1592                           	opt stack 0
  1593  00113C                     _uart_trans:
  1594                           	opt stack 19
  1595                           
  1596                           ; BSR set to: 1
  1597                           ;incstack = 0
  1598                           ;uart_trans@length stored from wreg
  1599  00113C  CFE8 F18A          	movff	wreg,uart_trans@length
  1600                           
  1601                           ;my_uart.c: 58: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  1602  001140  EE20 F00B          	lfsr	2,11
  1603  001144  5052               	movf	_uc_ptr,w,c
  1604  001146  26D9               	addwf	fsr2l,f,c
  1605  001148  5053               	movf	_uc_ptr+1,w,c
  1606  00114A  22DA               	addwfc	fsr2h,f,c
  1607  00114C  0E00               	movlw	0
  1608  00114E  6EDF               	movwf	indf2,c
  1609  001150  D035               	goto	l3972
  1610  001152                     l3968:
  1611                           
  1612                           ;my_uart.c: 60: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  1613  001152  EE20 F00B          	lfsr	2,11
  1614  001156  5052               	movf	_uc_ptr,w,c
  1615  001158  26D9               	addwf	fsr2l,f,c
  1616  00115A  5053               	movf	_uc_ptr+1,w,c
  1617  00115C  22DA               	addwfc	fsr2h,f,c
  1618  00115E  50DF               	movf	indf2,w,c
  1619  001160  0101               	movlb	1	; () banked
  1620  001162  6F88               	movwf	??_uart_trans& (0+255),b
  1621  001164  0101               	movlb	1	; () banked
  1622  001166  5188               	movf	??_uart_trans& (0+255),w,b
  1623  001168  0D01               	mullw	1
  1624  00116A  50F3               	movf	prodl,w,c
  1625  00116C  0101               	movlb	1	; () banked
  1626  00116E  0101               	movlb	1	; () banked
  1627  001170  2586               	addwf	uart_trans@data& (0+255),w,b
  1628  001172  6ED9               	movwf	fsr2l,c
  1629  001174  50F4               	movf	prodh,w,c
  1630  001176  0101               	movlb	1	; () banked
  1631  001178  0101               	movlb	1	; () banked
  1632  00117A  2187               	addwfc	(uart_trans@data+1)& (0+255),w,b
  1633  00117C  6EDA               	movwf	fsr2h,c
  1634  00117E  EE10 F00B          	lfsr	1,11
  1635  001182  5052               	movf	_uc_ptr,w,c
  1636  001184  26E1               	addwf	fsr1l,f,c
  1637  001186  5053               	movf	_uc_ptr+1,w,c
  1638  001188  22E2               	addwfc	fsr1h,f,c
  1639  00118A  50E7               	movf	indf1,w,c
  1640  00118C  0101               	movlb	1	; () banked
  1641  00118E  6F89               	movwf	(??_uart_trans+1)& (0+255),b
  1642  001190  0101               	movlb	1	; () banked
  1643  001192  5189               	movf	(??_uart_trans+1)& (0+255),w,b
  1644  001194  0D01               	mullw	1
  1645  001196  0E06               	movlw	6
  1646  001198  26F3               	addwf	prodl,f,c
  1647  00119A  0E00               	movlw	0
  1648  00119C  22F4               	addwfc	prodh,f,c
  1649  00119E  50F3               	movf	prodl,w,c
  1650  0011A0  2452               	addwf	_uc_ptr,w,c
  1651  0011A2  6EE1               	movwf	fsr1l,c
  1652  0011A4  50F4               	movf	prodh,w,c
  1653  0011A6  2053               	addwfc	_uc_ptr+1,w,c
  1654  0011A8  6EE2               	movwf	fsr1h,c
  1655  0011AA  CFDF FFE7          	movff	indf2,indf1
  1656                           
  1657                           ; BSR set to: 1
  1658  0011AE  EE20 F00B          	lfsr	2,11
  1659  0011B2  5052               	movf	_uc_ptr,w,c
  1660  0011B4  26D9               	addwf	fsr2l,f,c
  1661  0011B6  5053               	movf	_uc_ptr+1,w,c
  1662  0011B8  22DA               	addwfc	fsr2h,f,c
  1663  0011BA  2ADF               	incf	indf2,f,c
  1664  0011BC                     l3972:
  1665  0011BC  EE20 F00B          	lfsr	2,11
  1666  0011C0  5052               	movf	_uc_ptr,w,c
  1667  0011C2  26D9               	addwf	fsr2l,f,c
  1668  0011C4  5053               	movf	_uc_ptr+1,w,c
  1669  0011C6  22DA               	addwfc	fsr2h,f,c
  1670  0011C8  50DF               	movf	indf2,w,c
  1671  0011CA  0101               	movlb	1	; () banked
  1672  0011CC  6F88               	movwf	??_uart_trans& (0+255),b
  1673  0011CE  0101               	movlb	1	; () banked
  1674  0011D0  0101               	movlb	1	; () banked
  1675  0011D2  518A               	movf	uart_trans@length& (0+255),w,b
  1676  0011D4  0101               	movlb	1	; () banked
  1677  0011D6  5D88               	subwf	??_uart_trans& (0+255),w,b
  1678  0011D8  A0D8               	btfss	status,0,c
  1679  0011DA  D7BB               	goto	l3968
  1680                           
  1681                           ; BSR set to: 1
  1682                           ;my_uart.c: 62: }
  1683                           ;my_uart.c: 63: uc_ptr->txBufind = 0;
  1684                           
  1685                           ; BSR set to: 1
  1686  0011DC  EE20 F00C          	lfsr	2,12
  1687  0011E0  5052               	movf	_uc_ptr,w,c
  1688  0011E2  26D9               	addwf	fsr2l,f,c
  1689  0011E4  5053               	movf	_uc_ptr+1,w,c
  1690  0011E6  22DA               	addwfc	fsr2h,f,c
  1691  0011E8  0E00               	movlw	0
  1692  0011EA  6EDF               	movwf	indf2,c
  1693                           
  1694                           ; BSR set to: 1
  1695                           ;my_uart.c: 64: PIE1bits.TX1IE = 1;
  1696  0011EC  889D               	bsf	3997,4,c	;volatile
  1697                           
  1698                           ; BSR set to: 1
  1699  0011EE  0012               	return	
  1700  0011F0                     __end_of_uart_trans:
  1701                           	opt stack 0
  1702                           tblptru	equ	0xFF8
  1703                           tblptrh	equ	0xFF7
  1704                           tblptrl	equ	0xFF6
  1705                           tablat	equ	0xFF5
  1706                           prodh	equ	0xFF4
  1707                           prodl	equ	0xFF3
  1708                           postinc0	equ	0xFEE
  1709                           wreg	equ	0xFE8
  1710                           indf1	equ	0xFE7
  1711                           postdec1	equ	0xFE5
  1712                           fsr1h	equ	0xFE2
  1713                           fsr1l	equ	0xFE1
  1714                           indf2	equ	0xFDF
  1715                           fsr2h	equ	0xFDA
  1716                           fsr2l	equ	0xFD9
  1717                           status	equ	0xFD8
  1718                           
  1719 ;; *************** function _timer1_lthread *****************
  1720 ;; Defined at:
  1721 ;;		line 14 in file "../src/timer1_thread.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  1724 ;;		 -> main@t1thread_data(2), 
  1725 ;;  msgtype         2   28[BANK1 ] int 
  1726 ;;  length          2   30[BANK1 ] int 
  1727 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1728 ;;		 -> main@msgbuffer(11), 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  retval          1   35[BANK1 ] char 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  2   26[BANK1 ] int 
  1733 ;; Registers used:
  1734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1740 ;;      Params:         0       0       8       0       0
  1741 ;;      Locals:         0       0       1       0       0
  1742 ;;      Temps:          0       0       1       0       0
  1743 ;;      Totals:         0       0      10       0       0
  1744 ;;Total ram usage:       10 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:   14
  1747 ;; This function calls:
  1748 ;;		_FromMainHigh_sendmsg
  1749 ;;		___lwmod
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text2
  1756  001800                     __ptext2:
  1757                           	opt stack 0
  1758  001800                     _timer1_lthread:
  1759                           	opt stack 16
  1760                           
  1761                           ;timer1_thread.c: 15: signed char retval;
  1762                           ;timer1_thread.c: 17: tptr->msgcount++;
  1763                           
  1764                           ; BSR set to: 1
  1765                           ;incstack = 0
  1766  001800  C1A0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1767  001804  C1A1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1768  001808  2ADE               	incf	postinc2,f,c
  1769  00180A  0E00               	movlw	0
  1770  00180C  22DD               	addwfc	postdec2,f,c
  1771                           
  1772                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1773  00180E  C1A0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1774  001812  C1A1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1775  001816  0101               	movlb	1	; () banked
  1776  001818  CFDE F186          	movff	postinc2,___lwmod@dividend
  1777  00181C  0101               	movlb	1	; () banked
  1778  00181E  CFDD F187          	movff	postdec2,___lwmod@dividend+1
  1779  001822  0E00               	movlw	0
  1780  001824  0101               	movlb	1	; () banked
  1781  001826  0101               	movlb	1	; () banked
  1782  001828  6F89               	movwf	(___lwmod@divisor+1)& (0+255),b
  1783  00182A  0E0A               	movlw	10
  1784  00182C  0101               	movlb	1	; () banked
  1785  00182E  6F88               	movwf	___lwmod@divisor& (0+255),b
  1786  001830  EC83  F00A         	call	___lwmod	;wreg free
  1787  001834  0101               	movlb	1	; () banked
  1788  001836  0101               	movlb	1	; () banked
  1789  001838  5186               	movf	?___lwmod& (0+255),w,b
  1790  00183A  0A09               	xorlw	9
  1791  00183C  0101               	movlb	1	; () banked
  1792  00183E  1187               	iorwf	(?___lwmod+1)& (0+255),w,b
  1793  001840  A4D8               	btfss	status,2,c
  1794  001842  0012               	return	
  1795                           
  1796                           ; BSR set to: 1
  1797                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1798  001844  0101               	movlb	1	; () banked
  1799  001846  6FA8               	movwf	??_timer1_lthread& (0+255),b
  1800  001848  0E14               	movlw	20
  1801  00184A  0101               	movlb	1	; () banked
  1802  00184C  0101               	movlb	1	; () banked
  1803  00184E  6F9C               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1804  001850  0101               	movlb	1	; () banked
  1805  001852  51A8               	movf	??_timer1_lthread& (0+255),w,b
  1806  001854  0101               	movlb	1	; () banked
  1807  001856  0101               	movlb	1	; () banked
  1808  001858  C1A1  F19E         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1809  00185C  0101               	movlb	1	; () banked
  1810  00185E  0101               	movlb	1	; () banked
  1811  001860  C1A0  F19D         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1812  001864  0E02               	movlw	2
  1813  001866  EC2C  F00E         	call	_FromMainHigh_sendmsg
  1814  00186A  0101               	movlb	1	; () banked
  1815  00186C  0101               	movlb	1	; () banked
  1816  00186E  6FA9               	movwf	timer1_lthread@retval& (0+255),b
  1817  001870  0012               	return	
  1818  001872                     __end_of_timer1_lthread:
  1819                           	opt stack 0
  1820                           tblptru	equ	0xFF8
  1821                           tblptrh	equ	0xFF7
  1822                           tblptrl	equ	0xFF6
  1823                           tablat	equ	0xFF5
  1824                           prodh	equ	0xFF4
  1825                           prodl	equ	0xFF3
  1826                           postinc0	equ	0xFEE
  1827                           wreg	equ	0xFE8
  1828                           indf1	equ	0xFE7
  1829                           postdec1	equ	0xFE5
  1830                           fsr1h	equ	0xFE2
  1831                           fsr1l	equ	0xFE1
  1832                           indf2	equ	0xFDF
  1833                           postinc2	equ	0xFDE
  1834                           postdec2	equ	0xFDD
  1835                           fsr2h	equ	0xFDA
  1836                           fsr2l	equ	0xFD9
  1837                           status	equ	0xFD8
  1838                           
  1839 ;; *************** function ___lwmod *****************
  1840 ;; Defined at:
  1841 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  dividend        2    0[BANK1 ] unsigned int 
  1844 ;;  divisor         2    2[BANK1 ] unsigned int 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  counter         1    5[BANK1 ] unsigned char 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  2    0[BANK1 ] unsigned int 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1856 ;;      Params:         0       0       4       0       0
  1857 ;;      Locals:         0       0       1       0       0
  1858 ;;      Temps:          0       0       1       0       0
  1859 ;;      Totals:         0       0       6       0       0
  1860 ;;Total ram usage:        6 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:   11
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_timer1_lthread
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text3
  1871  001506                     __ptext3:
  1872                           	opt stack 0
  1873  001506                     ___lwmod:
  1874                           	opt stack 18
  1875                           
  1876                           ; BSR set to: 1
  1877                           ;incstack = 0
  1878  001506  0101               	movlb	1	; () banked
  1879  001508  0101               	movlb	1	; () banked
  1880  00150A  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1881  00150C  1188               	iorwf	___lwmod@divisor& (0+255),w,b
  1882  00150E  B4D8               	btfsc	status,2,c
  1883  001510  D03A               	goto	l1106
  1884                           
  1885                           ; BSR set to: 1
  1886  001512  0101               	movlb	1	; () banked
  1887  001514  6F8A               	movwf	??___lwmod& (0+255),b
  1888  001516  0E01               	movlw	1
  1889  001518  0101               	movlb	1	; () banked
  1890  00151A  0101               	movlb	1	; () banked
  1891  00151C  6F8B               	movwf	___lwmod@counter& (0+255),b
  1892  00151E  0101               	movlb	1	; () banked
  1893  001520  518A               	movf	??___lwmod& (0+255),w,b
  1894  001522  D009               	goto	l4372
  1895  001524                     l4370:
  1896                           
  1897                           ; BSR set to: 1
  1898  001524  0101               	movlb	1	; () banked
  1899  001526  0101               	movlb	1	; () banked
  1900  001528  0101               	movlb	1	; () banked
  1901  00152A  90D8               	bcf	status,0,c
  1902  00152C  3788               	rlcf	___lwmod@divisor& (0+255),f,b
  1903  00152E  3789               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1904  001530  0101               	movlb	1	; () banked
  1905  001532  0101               	movlb	1	; () banked
  1906  001534  2B8B               	incf	___lwmod@counter& (0+255),f,b
  1907  001536                     l4372:
  1908                           
  1909                           ; BSR set to: 1
  1910  001536  0101               	movlb	1	; () banked
  1911  001538  0101               	movlb	1	; () banked
  1912  00153A  AF89               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1913  00153C  D7F3               	goto	l4370
  1914  00153E                     l4374:
  1915                           
  1916                           ; BSR set to: 1
  1917  00153E  0101               	movlb	1	; () banked
  1918  001540  0101               	movlb	1	; () banked
  1919  001542  5188               	movf	___lwmod@divisor& (0+255),w,b
  1920  001544  0101               	movlb	1	; () banked
  1921  001546  0101               	movlb	1	; () banked
  1922  001548  5D86               	subwf	___lwmod@dividend& (0+255),w,b
  1923  00154A  0101               	movlb	1	; () banked
  1924  00154C  0101               	movlb	1	; () banked
  1925  00154E  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1926  001550  0101               	movlb	1	; () banked
  1927  001552  0101               	movlb	1	; () banked
  1928  001554  5987               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1929  001556  A0D8               	btfss	status,0,c
  1930  001558  D00C               	goto	l4378
  1931                           
  1932                           ; BSR set to: 1
  1933  00155A  0101               	movlb	1	; () banked
  1934  00155C  0101               	movlb	1	; () banked
  1935  00155E  5188               	movf	___lwmod@divisor& (0+255),w,b
  1936  001560  0101               	movlb	1	; () banked
  1937  001562  0101               	movlb	1	; () banked
  1938  001564  5F86               	subwf	___lwmod@dividend& (0+255),f,b
  1939  001566  0101               	movlb	1	; () banked
  1940  001568  0101               	movlb	1	; () banked
  1941  00156A  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1942  00156C  0101               	movlb	1	; () banked
  1943  00156E  0101               	movlb	1	; () banked
  1944  001570  5B87               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1945  001572                     l4378:
  1946                           
  1947                           ; BSR set to: 1
  1948  001572  0101               	movlb	1	; () banked
  1949  001574  0101               	movlb	1	; () banked
  1950  001576  0101               	movlb	1	; () banked
  1951  001578  90D8               	bcf	status,0,c
  1952  00157A  3389               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1953  00157C  3388               	rrcf	___lwmod@divisor& (0+255),f,b
  1954                           
  1955                           ; BSR set to: 1
  1956  00157E  0101               	movlb	1	; () banked
  1957  001580  0101               	movlb	1	; () banked
  1958  001582  2F8B               	decfsz	___lwmod@counter& (0+255),f,b
  1959  001584  D7DC               	goto	l4374
  1960  001586                     l1106:
  1961                           
  1962                           ; BSR set to: 1
  1963  001586  C186  F186         	movff	___lwmod@dividend,?___lwmod
  1964  00158A  C187  F187         	movff	___lwmod@dividend+1,?___lwmod+1
  1965                           
  1966                           ; BSR set to: 1
  1967  00158E  0012               	return	
  1968  001590                     __end_of___lwmod:
  1969                           	opt stack 0
  1970                           tblptru	equ	0xFF8
  1971                           tblptrh	equ	0xFF7
  1972                           tblptrl	equ	0xFF6
  1973                           tablat	equ	0xFF5
  1974                           prodh	equ	0xFF4
  1975                           prodl	equ	0xFF3
  1976                           postinc0	equ	0xFEE
  1977                           wreg	equ	0xFE8
  1978                           indf1	equ	0xFE7
  1979                           postdec1	equ	0xFE5
  1980                           fsr1h	equ	0xFE2
  1981                           fsr1l	equ	0xFE1
  1982                           indf2	equ	0xFDF
  1983                           postinc2	equ	0xFDE
  1984                           postdec2	equ	0xFDD
  1985                           fsr2h	equ	0xFDA
  1986                           fsr2l	equ	0xFD9
  1987                           status	equ	0xFD8
  1988                           
  1989 ;; *************** function _FromMainHigh_sendmsg *****************
  1990 ;; Defined at:
  1991 ;;		line 174 in file "../src/messages.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  length          1    wreg     unsigned char 
  1994 ;;  msgtype         1   22[BANK1 ] unsigned char 
  1995 ;;  data            2   23[BANK1 ] PTR void 
  1996 ;;		 -> main@t1thread_data(2), 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  length          1   25[BANK1 ] unsigned char 
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      char 
  2001 ;; Registers used:
  2002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2008 ;;      Params:         0       0       3       0       0
  2009 ;;      Locals:         0       0       1       0       0
  2010 ;;      Temps:          0       0       0       0       0
  2011 ;;      Totals:         0       0       4       0       0
  2012 ;;Total ram usage:        4 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:   13
  2015 ;; This function calls:
  2016 ;;		_send_msg
  2017 ;; This function is called by:
  2018 ;;		_timer1_lthread
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text4
  2023  001C58                     __ptext4:
  2024                           	opt stack 0
  2025  001C58                     _FromMainHigh_sendmsg:
  2026                           	opt stack 16
  2027                           
  2028                           ; BSR set to: 1
  2029                           ;incstack = 0
  2030                           ;FromMainHigh_sendmsg@length stored from wreg
  2031  001C58  CFE8 F19F          	movff	wreg,FromMainHigh_sendmsg@length
  2032                           
  2033                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2034  001C5C  0102               	movlb	2	; () banked
  2035  001C5E  0E02               	movlw	high _FromMainHigh_MQ
  2036  001C60  0101               	movlb	1	; () banked
  2037  001C62  0101               	movlb	1	; () banked
  2038  001C64  6F91               	movwf	(send_msg@qptr+1)& (0+255),b
  2039  001C66  0102               	movlb	2	; () banked
  2040  001C68  0E00               	movlw	low _FromMainHigh_MQ
  2041  001C6A  0101               	movlb	1	; () banked
  2042  001C6C  0101               	movlb	1	; () banked
  2043  001C6E  6F90               	movwf	send_msg@qptr& (0+255),b
  2044  001C70  C19F  F192         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2045  001C74  C19C  F193         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2046  001C78  0101               	movlb	1	; () banked
  2047  001C7A  0101               	movlb	1	; () banked
  2048  001C7C  C19E  F195         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2049  001C80  0101               	movlb	1	; () banked
  2050  001C82  0101               	movlb	1	; () banked
  2051  001C84  C19D  F194         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2052  001C88  EC36  F006         	call	_send_msg	;wreg free
  2053  001C8C  0012               	return	
  2054  001C8E                     __end_of_FromMainHigh_sendmsg:
  2055                           	opt stack 0
  2056                           tblptru	equ	0xFF8
  2057                           tblptrh	equ	0xFF7
  2058                           tblptrl	equ	0xFF6
  2059                           tablat	equ	0xFF5
  2060                           prodh	equ	0xFF4
  2061                           prodl	equ	0xFF3
  2062                           postinc0	equ	0xFEE
  2063                           wreg	equ	0xFE8
  2064                           indf1	equ	0xFE7
  2065                           postdec1	equ	0xFE5
  2066                           fsr1h	equ	0xFE2
  2067                           fsr1l	equ	0xFE1
  2068                           indf2	equ	0xFDF
  2069                           postinc2	equ	0xFDE
  2070                           postdec2	equ	0xFDD
  2071                           fsr2h	equ	0xFDA
  2072                           fsr2l	equ	0xFD9
  2073                           status	equ	0xFD8
  2074                           
  2075 ;; *************** function _timer0_lthread *****************
  2076 ;; Defined at:
  2077 ;;		line 9 in file "../src/timer0_thread.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2080 ;;		 -> main@t0thread_data(2), 
  2081 ;;  msgtype         2    2[BANK1 ] int 
  2082 ;;  length          2    4[BANK1 ] int 
  2083 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2084 ;;		 -> main@msgbuffer(11), 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2087 ;;		 -> main@msgbuffer(11), 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  2    0[BANK1 ] int 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2097 ;;      Params:         0       0       8       0       0
  2098 ;;      Locals:         0       0       2       0       0
  2099 ;;      Temps:          0       0       0       0       0
  2100 ;;      Totals:         0       0      10       0       0
  2101 ;;Total ram usage:       10 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:   11
  2104 ;; This function calls:
  2105 ;;		Nothing
  2106 ;; This function is called by:
  2107 ;;		_main
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text5
  2112  001E8E                     __ptext5:
  2113                           	opt stack 0
  2114  001E8E                     _timer0_lthread:
  2115                           	opt stack 19
  2116                           
  2117                           ;timer0_thread.c: 10: unsigned int *msgval;
  2118                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2119                           
  2120                           ;incstack = 0
  2121  001E8E  0101               	movlb	1	; () banked
  2122  001E90  0101               	movlb	1	; () banked
  2123  001E92  C18D  F18F         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2124  001E96  0101               	movlb	1	; () banked
  2125  001E98  0101               	movlb	1	; () banked
  2126  001E9A  C18C  F18E         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2127                           
  2128                           ; BSR set to: 1
  2129  001E9E  0012               	return	
  2130  001EA0                     __end_of_timer0_lthread:
  2131                           	opt stack 0
  2132                           tblptru	equ	0xFF8
  2133                           tblptrh	equ	0xFF7
  2134                           tblptrl	equ	0xFF6
  2135                           tablat	equ	0xFF5
  2136                           prodh	equ	0xFF4
  2137                           prodl	equ	0xFF3
  2138                           postinc0	equ	0xFEE
  2139                           wreg	equ	0xFE8
  2140                           indf1	equ	0xFE7
  2141                           postdec1	equ	0xFE5
  2142                           fsr1h	equ	0xFE2
  2143                           fsr1l	equ	0xFE1
  2144                           indf2	equ	0xFDF
  2145                           postinc2	equ	0xFDE
  2146                           postdec2	equ	0xFDD
  2147                           fsr2h	equ	0xFDA
  2148                           fsr2l	equ	0xFD9
  2149                           status	equ	0xFD8
  2150                           
  2151 ;; *************** function _init_uart_recv *****************
  2152 ;; Defined at:
  2153 ;;		line 49 in file "../src/my_uart.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2156 ;;		 -> main@uc(13), 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;		None
  2159 ;; Return value:  Size  Location     Type
  2160 ;;		None               void
  2161 ;; Registers used:
  2162 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2168 ;;      Params:         0       0       2       0       0
  2169 ;;      Locals:         0       0       0       0       0
  2170 ;;      Temps:          0       0       0       0       0
  2171 ;;      Totals:         0       0       2       0       0
  2172 ;;Total ram usage:        2 bytes
  2173 ;; Hardware stack levels used:    1
  2174 ;; Hardware stack levels required when called:   11
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_main
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text6
  2183  001E3C                     __ptext6:
  2184                           	opt stack 0
  2185  001E3C                     _init_uart_recv:
  2186                           	opt stack 19
  2187                           
  2188                           ;my_uart.c: 52: uc_ptr = uc;
  2189                           
  2190                           ; BSR set to: 1
  2191                           ;incstack = 0
  2192  001E3C  0101               	movlb	1	; () banked
  2193  001E3E  C187  F053         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2194  001E42  0101               	movlb	1	; () banked
  2195  001E44  C186  F052         	movff	init_uart_recv@uc,_uc_ptr
  2196                           
  2197                           ; BSR set to: 1
  2198                           ;my_uart.c: 53: uc_ptr->buflen = 0;
  2199  001E48  EE20 F005          	lfsr	2,5
  2200  001E4C  5052               	movf	_uc_ptr,w,c
  2201  001E4E  26D9               	addwf	fsr2l,f,c
  2202  001E50  5053               	movf	_uc_ptr+1,w,c
  2203  001E52  22DA               	addwfc	fsr2h,f,c
  2204  001E54  0E00               	movlw	0
  2205  001E56  6EDF               	movwf	indf2,c
  2206                           
  2207                           ; BSR set to: 1
  2208  001E58  0012               	return	
  2209  001E5A                     __end_of_init_uart_recv:
  2210                           	opt stack 0
  2211                           tblptru	equ	0xFF8
  2212                           tblptrh	equ	0xFF7
  2213                           tblptrl	equ	0xFF6
  2214                           tablat	equ	0xFF5
  2215                           prodh	equ	0xFF4
  2216                           prodl	equ	0xFF3
  2217                           postinc0	equ	0xFEE
  2218                           wreg	equ	0xFE8
  2219                           indf1	equ	0xFE7
  2220                           postdec1	equ	0xFE5
  2221                           fsr1h	equ	0xFE2
  2222                           fsr1l	equ	0xFE1
  2223                           indf2	equ	0xFDF
  2224                           postinc2	equ	0xFDE
  2225                           postdec2	equ	0xFDD
  2226                           fsr2h	equ	0xFDA
  2227                           fsr2l	equ	0xFD9
  2228                           status	equ	0xFD8
  2229                           
  2230 ;; *************** function _init_timer1_lthread *****************
  2231 ;; Defined at:
  2232 ;;		line 6 in file "../src/timer1_thread.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2235 ;;		 -> main@t1thread_data(2), 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;		None               void
  2240 ;; Registers used:
  2241 ;;		wreg, fsr2l, fsr2h
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2247 ;;      Params:         0       0       2       0       0
  2248 ;;      Locals:         0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0
  2250 ;;      Totals:         0       0       2       0       0
  2251 ;;Total ram usage:        2 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:   11
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_main
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text7
  2262  001EA0                     __ptext7:
  2263                           	opt stack 0
  2264  001EA0                     _init_timer1_lthread:
  2265                           	opt stack 19
  2266                           
  2267                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2268                           
  2269                           ; BSR set to: 1
  2270                           ;incstack = 0
  2271  001EA0  C186  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2272  001EA4  C187  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2273  001EA8  0E00               	movlw	0
  2274  001EAA  6EDE               	movwf	postinc2,c
  2275  001EAC  0E00               	movlw	0
  2276  001EAE  6EDD               	movwf	postdec2,c
  2277  001EB0  0012               	return	
  2278  001EB2                     __end_of_init_timer1_lthread:
  2279                           	opt stack 0
  2280                           tblptru	equ	0xFF8
  2281                           tblptrh	equ	0xFF7
  2282                           tblptrl	equ	0xFF6
  2283                           tablat	equ	0xFF5
  2284                           prodh	equ	0xFF4
  2285                           prodl	equ	0xFF3
  2286                           postinc0	equ	0xFEE
  2287                           wreg	equ	0xFE8
  2288                           indf1	equ	0xFE7
  2289                           postdec1	equ	0xFE5
  2290                           fsr1h	equ	0xFE2
  2291                           fsr1l	equ	0xFE1
  2292                           indf2	equ	0xFDF
  2293                           postinc2	equ	0xFDE
  2294                           postdec2	equ	0xFDD
  2295                           fsr2h	equ	0xFDA
  2296                           fsr2l	equ	0xFD9
  2297                           status	equ	0xFD8
  2298                           
  2299 ;; *************** function _init_queues *****************
  2300 ;; Defined at:
  2301 ;;		line 194 in file "../src/messages.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;		None               void
  2308 ;; Registers used:
  2309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2315 ;;      Params:         0       0       0       0       0
  2316 ;;      Locals:         0       0       0       0       0
  2317 ;;      Temps:          0       0       1       0       0
  2318 ;;      Totals:         0       0       1       0       0
  2319 ;;Total ram usage:        1 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:   12
  2322 ;; This function calls:
  2323 ;;		_init_queue
  2324 ;; This function is called by:
  2325 ;;		_main
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           	psect	text8
  2330  001872                     __ptext8:
  2331                           	opt stack 0
  2332  001872                     _init_queues:
  2333                           	opt stack 18
  2334                           
  2335                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2336                           
  2337                           ;incstack = 0
  2338  001872  0101               	movlb	1	; () banked
  2339  001874  6F8A               	movwf	??_init_queues& (0+255),b
  2340  001876  0E00               	movlw	0
  2341  001878  6E4E               	movwf	_MQ_Main_Willing_to_block,c
  2342  00187A  0101               	movlb	1	; () banked
  2343  00187C  518A               	movf	??_init_queues& (0+255),w,b
  2344                           
  2345                           ; BSR set to: 1
  2346                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2347  00187E  0101               	movlb	1	; () banked
  2348  001880  0E01               	movlw	high _ToMainLow_MQ
  2349  001882  0101               	movlb	1	; () banked
  2350  001884  0101               	movlb	1	; () banked
  2351  001886  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2352  001888  0101               	movlb	1	; () banked
  2353  00188A  0E43               	movlw	low _ToMainLow_MQ
  2354  00188C  0101               	movlb	1	; () banked
  2355  00188E  0101               	movlb	1	; () banked
  2356  001890  6F86               	movwf	init_queue@qptr& (0+255),b
  2357  001892  EC8A  F00B         	call	_init_queue	;wreg free
  2358                           
  2359                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2360  001896  0101               	movlb	1	; () banked
  2361  001898  0E01               	movlw	high _ToMainHigh_MQ
  2362  00189A  0101               	movlb	1	; () banked
  2363  00189C  0101               	movlb	1	; () banked
  2364  00189E  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2365  0018A0  0101               	movlb	1	; () banked
  2366  0018A2  0E00               	movlw	low _ToMainHigh_MQ
  2367  0018A4  0101               	movlb	1	; () banked
  2368  0018A6  0101               	movlb	1	; () banked
  2369  0018A8  6F86               	movwf	init_queue@qptr& (0+255),b
  2370  0018AA  EC8A  F00B         	call	_init_queue	;wreg free
  2371                           
  2372                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2373  0018AE  0102               	movlb	2	; () banked
  2374  0018B0  0E02               	movlw	high _FromMainLow_MQ
  2375  0018B2  0101               	movlb	1	; () banked
  2376  0018B4  0101               	movlb	1	; () banked
  2377  0018B6  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2378  0018B8  0102               	movlb	2	; () banked
  2379  0018BA  0E43               	movlw	low _FromMainLow_MQ
  2380  0018BC  0101               	movlb	1	; () banked
  2381  0018BE  0101               	movlb	1	; () banked
  2382  0018C0  6F86               	movwf	init_queue@qptr& (0+255),b
  2383  0018C2  EC8A  F00B         	call	_init_queue	;wreg free
  2384                           
  2385                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2386  0018C6  0102               	movlb	2	; () banked
  2387  0018C8  0E02               	movlw	high _FromMainHigh_MQ
  2388  0018CA  0101               	movlb	1	; () banked
  2389  0018CC  0101               	movlb	1	; () banked
  2390  0018CE  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2391  0018D0  0102               	movlb	2	; () banked
  2392  0018D2  0E00               	movlw	low _FromMainHigh_MQ
  2393  0018D4  0101               	movlb	1	; () banked
  2394  0018D6  0101               	movlb	1	; () banked
  2395  0018D8  6F86               	movwf	init_queue@qptr& (0+255),b
  2396  0018DA  EC8A  F00B         	call	_init_queue	;wreg free
  2397  0018DE  0012               	return	
  2398  0018E0                     __end_of_init_queues:
  2399                           	opt stack 0
  2400                           tblptru	equ	0xFF8
  2401                           tblptrh	equ	0xFF7
  2402                           tblptrl	equ	0xFF6
  2403                           tablat	equ	0xFF5
  2404                           prodh	equ	0xFF4
  2405                           prodl	equ	0xFF3
  2406                           postinc0	equ	0xFEE
  2407                           wreg	equ	0xFE8
  2408                           indf1	equ	0xFE7
  2409                           postdec1	equ	0xFE5
  2410                           fsr1h	equ	0xFE2
  2411                           fsr1l	equ	0xFE1
  2412                           indf2	equ	0xFDF
  2413                           postinc2	equ	0xFDE
  2414                           postdec2	equ	0xFDD
  2415                           fsr2h	equ	0xFDA
  2416                           fsr2l	equ	0xFD9
  2417                           status	equ	0xFD8
  2418                           
  2419 ;; *************** function _init_queue *****************
  2420 ;; Defined at:
  2421 ;;		line 14 in file "../src/messages.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2424 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  i               1    3[BANK1 ] unsigned char 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;		None               void
  2429 ;; Registers used:
  2430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2436 ;;      Params:         0       0       2       0       0
  2437 ;;      Locals:         0       0       1       0       0
  2438 ;;      Temps:          0       0       1       0       0
  2439 ;;      Totals:         0       0       4       0       0
  2440 ;;Total ram usage:        4 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:   11
  2443 ;; This function calls:
  2444 ;;		Nothing
  2445 ;; This function is called by:
  2446 ;;		_init_queues
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text9
  2451  001714                     __ptext9:
  2452                           	opt stack 0
  2453  001714                     _init_queue:
  2454                           	opt stack 18
  2455                           
  2456                           ;messages.c: 15: unsigned char i;
  2457                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2458                           
  2459                           ;incstack = 0
  2460  001714  0101               	movlb	1	; () banked
  2461  001716  EE20 F041          	lfsr	2,65
  2462  00171A  0101               	movlb	1	; () banked
  2463  00171C  5186               	movf	init_queue@qptr& (0+255),w,b
  2464  00171E  26D9               	addwf	fsr2l,f,c
  2465  001720  0101               	movlb	1	; () banked
  2466  001722  5187               	movf	(init_queue@qptr+1)& (0+255),w,b
  2467  001724  22DA               	addwfc	fsr2h,f,c
  2468  001726  0E00               	movlw	0
  2469  001728  6EDF               	movwf	indf2,c
  2470                           
  2471                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2472  00172A  0101               	movlb	1	; () banked
  2473  00172C  EE20 F042          	lfsr	2,66
  2474  001730  0101               	movlb	1	; () banked
  2475  001732  5186               	movf	init_queue@qptr& (0+255),w,b
  2476  001734  26D9               	addwf	fsr2l,f,c
  2477  001736  0101               	movlb	1	; () banked
  2478  001738  5187               	movf	(init_queue@qptr+1)& (0+255),w,b
  2479  00173A  22DA               	addwfc	fsr2h,f,c
  2480  00173C  0E00               	movlw	0
  2481  00173E  6EDF               	movwf	indf2,c
  2482                           
  2483                           ; BSR set to: 1
  2484                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2485  001740  0101               	movlb	1	; () banked
  2486  001742  6F88               	movwf	??_init_queue& (0+255),b
  2487  001744  0E00               	movlw	0
  2488  001746  0101               	movlb	1	; () banked
  2489  001748  0101               	movlb	1	; () banked
  2490  00174A  6F89               	movwf	init_queue@i& (0+255),b
  2491  00174C  0101               	movlb	1	; () banked
  2492  00174E  5188               	movf	??_init_queue& (0+255),w,b
  2493                           
  2494                           ; BSR set to: 1
  2495  001750  0E04               	movlw	4
  2496  001752  0101               	movlb	1	; () banked
  2497  001754  0101               	movlb	1	; () banked
  2498  001756  6589               	cpfsgt	init_queue@i& (0+255),b
  2499  001758  D001               	goto	l4002
  2500  00175A  0012               	return	
  2501  00175C                     l4002:
  2502                           
  2503                           ; BSR set to: 1
  2504                           ;messages.c: 20: qptr->queue[i].full = 0;
  2505  00175C  0101               	movlb	1	; () banked
  2506  00175E  0101               	movlb	1	; () banked
  2507  001760  5189               	movf	init_queue@i& (0+255),w,b
  2508  001762  0D0D               	mullw	13
  2509  001764  50F3               	movf	prodl,w,c
  2510  001766  0101               	movlb	1	; () banked
  2511  001768  0101               	movlb	1	; () banked
  2512  00176A  2586               	addwf	init_queue@qptr& (0+255),w,b
  2513  00176C  6ED9               	movwf	fsr2l,c
  2514  00176E  50F4               	movf	prodh,w,c
  2515  001770  0101               	movlb	1	; () banked
  2516  001772  0101               	movlb	1	; () banked
  2517  001774  2187               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2518  001776  6EDA               	movwf	fsr2h,c
  2519  001778  0E00               	movlw	0
  2520  00177A  6EDF               	movwf	indf2,c
  2521                           
  2522                           ; BSR set to: 1
  2523  00177C  0101               	movlb	1	; () banked
  2524  00177E  0101               	movlb	1	; () banked
  2525  001780  2B89               	incf	init_queue@i& (0+255),f,b
  2526                           
  2527                           ; BSR set to: 1
  2528  001782  0E04               	movlw	4
  2529  001784  0101               	movlb	1	; () banked
  2530  001786  0101               	movlb	1	; () banked
  2531  001788  6589               	cpfsgt	init_queue@i& (0+255),b
  2532  00178A  D7E8               	goto	l4002
  2533  00178C  0012               	return	
  2534  00178E                     __end_of_init_queue:
  2535                           	opt stack 0
  2536                           tblptru	equ	0xFF8
  2537                           tblptrh	equ	0xFF7
  2538                           tblptrl	equ	0xFF6
  2539                           tablat	equ	0xFF5
  2540                           prodh	equ	0xFF4
  2541                           prodl	equ	0xFF3
  2542                           postinc0	equ	0xFEE
  2543                           wreg	equ	0xFE8
  2544                           indf1	equ	0xFE7
  2545                           postdec1	equ	0xFE5
  2546                           fsr1h	equ	0xFE2
  2547                           fsr1l	equ	0xFE1
  2548                           indf2	equ	0xFDF
  2549                           postinc2	equ	0xFDE
  2550                           postdec2	equ	0xFDD
  2551                           fsr2h	equ	0xFDA
  2552                           fsr2l	equ	0xFD9
  2553                           status	equ	0xFD8
  2554                           
  2555 ;; *************** function _init_i2c *****************
  2556 ;; Defined at:
  2557 ;;		line 434 in file "../src/my_i2c.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  2560 ;;		 -> main@ic(29), 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;		None               void
  2565 ;; Registers used:
  2566 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2572 ;;      Params:         0       0       2       0       0
  2573 ;;      Locals:         0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0
  2575 ;;      Totals:         0       0       2       0       0
  2576 ;;Total ram usage:        2 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:   11
  2579 ;; This function calls:
  2580 ;;		Nothing
  2581 ;; This function is called by:
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text10
  2587  0019A6                     __ptext10:
  2588                           	opt stack 0
  2589  0019A6                     _init_i2c:
  2590                           	opt stack 19
  2591                           
  2592                           ;my_i2c.c: 435: ic_ptr = ic;
  2593                           
  2594                           ; BSR set to: 1
  2595                           ;incstack = 0
  2596  0019A6  0101               	movlb	1	; () banked
  2597  0019A8  C187  F051         	movff	init_i2c@ic+1,_ic_ptr+1
  2598  0019AC  0101               	movlb	1	; () banked
  2599  0019AE  C186  F050         	movff	init_i2c@ic,_ic_ptr
  2600                           
  2601                           ; BSR set to: 1
  2602                           ;my_i2c.c: 436: ic_ptr->buflen = 0;
  2603  0019B2  EE20 F00A          	lfsr	2,10
  2604  0019B6  5050               	movf	_ic_ptr,w,c
  2605  0019B8  26D9               	addwf	fsr2l,f,c
  2606  0019BA  5051               	movf	_ic_ptr+1,w,c
  2607  0019BC  22DA               	addwfc	fsr2h,f,c
  2608  0019BE  0E00               	movlw	0
  2609  0019C0  6EDF               	movwf	indf2,c
  2610                           
  2611                           ; BSR set to: 1
  2612                           ;my_i2c.c: 437: ic_ptr->event_count = 0;
  2613  0019C2  EE20 F00C          	lfsr	2,12
  2614  0019C6  5050               	movf	_ic_ptr,w,c
  2615  0019C8  26D9               	addwf	fsr2l,f,c
  2616  0019CA  5051               	movf	_ic_ptr+1,w,c
  2617  0019CC  22DA               	addwfc	fsr2h,f,c
  2618  0019CE  0E00               	movlw	0
  2619  0019D0  6EDF               	movwf	indf2,c
  2620                           
  2621                           ; BSR set to: 1
  2622                           ;my_i2c.c: 438: ic_ptr->status = 0x5;
  2623  0019D2  EE20 F00D          	lfsr	2,13
  2624  0019D6  5050               	movf	_ic_ptr,w,c
  2625  0019D8  26D9               	addwf	fsr2l,f,c
  2626  0019DA  5051               	movf	_ic_ptr+1,w,c
  2627  0019DC  22DA               	addwfc	fsr2h,f,c
  2628  0019DE  0E05               	movlw	5
  2629  0019E0  6EDF               	movwf	indf2,c
  2630                           
  2631                           ; BSR set to: 1
  2632                           ;my_i2c.c: 439: ic_ptr->error_count = 0;
  2633  0019E2  EE20 F00F          	lfsr	2,15
  2634  0019E6  5050               	movf	_ic_ptr,w,c
  2635  0019E8  26D9               	addwf	fsr2l,f,c
  2636  0019EA  5051               	movf	_ic_ptr+1,w,c
  2637  0019EC  22DA               	addwfc	fsr2h,f,c
  2638  0019EE  0E00               	movlw	0
  2639  0019F0  6EDF               	movwf	indf2,c
  2640                           
  2641                           ; BSR set to: 1
  2642  0019F2  0012               	return	
  2643  0019F4                     __end_of_init_i2c:
  2644                           	opt stack 0
  2645                           tblptru	equ	0xFF8
  2646                           tblptrh	equ	0xFF7
  2647                           tblptrl	equ	0xFF6
  2648                           tablat	equ	0xFF5
  2649                           prodh	equ	0xFF4
  2650                           prodl	equ	0xFF3
  2651                           postinc0	equ	0xFEE
  2652                           wreg	equ	0xFE8
  2653                           indf1	equ	0xFE7
  2654                           postdec1	equ	0xFE5
  2655                           fsr1h	equ	0xFE2
  2656                           fsr1l	equ	0xFE1
  2657                           indf2	equ	0xFDF
  2658                           postinc2	equ	0xFDE
  2659                           postdec2	equ	0xFDD
  2660                           fsr2h	equ	0xFDA
  2661                           fsr2l	equ	0xFD9
  2662                           status	equ	0xFD8
  2663                           
  2664 ;; *************** function _i2c_configure_slave *****************
  2665 ;; Defined at:
  2666 ;;		line 445 in file "../src/my_i2c.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  addr            1    wreg     unsigned char 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  addr            1    0[BANK1 ] unsigned char 
  2671 ;; Return value:  Size  Location     Type
  2672 ;;		None               void
  2673 ;; Registers used:
  2674 ;;		wreg, status,2, status,0
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2680 ;;      Params:         0       0       0       0       0
  2681 ;;      Locals:         0       0       1       0       0
  2682 ;;      Temps:          0       0       0       0       0
  2683 ;;      Totals:         0       0       1       0       0
  2684 ;;Total ram usage:        1 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:   11
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_main
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text11
  2695  001D88                     __ptext11:
  2696                           	opt stack 0
  2697  001D88                     _i2c_configure_slave:
  2698                           	opt stack 19
  2699                           
  2700                           ; BSR set to: 1
  2701                           ;incstack = 0
  2702                           ;i2c_configure_slave@addr stored from wreg
  2703  001D88  CFE8 F186          	movff	wreg,i2c_configure_slave@addr
  2704                           
  2705                           ;my_i2c.c: 457: TRISCbits.TRISC3 = 1;
  2706  001D8C  8694               	bsf	3988,3,c	;volatile
  2707                           
  2708                           ;my_i2c.c: 458: TRISCbits.TRISC4 = 1;
  2709  001D8E  8894               	bsf	3988,4,c	;volatile
  2710                           
  2711                           ;my_i2c.c: 463: SSPADD = addr;
  2712  001D90  C186  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2713                           
  2714                           ;my_i2c.c: 465: SSPSTAT = 0x0;
  2715  001D94  0E00               	movlw	0
  2716  001D96  6EC7               	movwf	4039,c	;volatile
  2717                           
  2718                           ;my_i2c.c: 466: SSPCON1 = 0x0;
  2719  001D98  0E00               	movlw	0
  2720  001D9A  6EC6               	movwf	4038,c	;volatile
  2721                           
  2722                           ;my_i2c.c: 467: SSPCON2 = 0x0;
  2723  001D9C  0E00               	movlw	0
  2724  001D9E  6EC5               	movwf	4037,c	;volatile
  2725                           
  2726                           ;my_i2c.c: 468: SSPCON1 |= 0x0E;
  2727  001DA0  0E0E               	movlw	14
  2728  001DA2  12C6               	iorwf	4038,f,c	;volatile
  2729                           
  2730                           ;my_i2c.c: 469: SSPSTAT |= 0b10000000;
  2731  001DA4  8EC7               	bsf	4039,7,c	;volatile
  2732                           
  2733                           ;my_i2c.c: 472: TRISCbits.TRISC3 = 1;
  2734  001DA6  8694               	bsf	3988,3,c	;volatile
  2735                           
  2736                           ;my_i2c.c: 473: TRISCbits.TRISC4 = 1;
  2737  001DA8  8894               	bsf	3988,4,c	;volatile
  2738                           
  2739                           ;my_i2c.c: 494: SSPCON2bits.SEN = 1;
  2740  001DAA  80C5               	bsf	4037,0,c	;volatile
  2741                           
  2742                           ;my_i2c.c: 495: SSPCON1 |= 0b00100000;
  2743  001DAC  8AC6               	bsf	4038,5,c	;volatile
  2744  001DAE  0012               	return	
  2745  001DB0                     __end_of_i2c_configure_slave:
  2746                           	opt stack 0
  2747                           tblptru	equ	0xFF8
  2748                           tblptrh	equ	0xFF7
  2749                           tblptrl	equ	0xFF6
  2750                           tablat	equ	0xFF5
  2751                           prodh	equ	0xFF4
  2752                           prodl	equ	0xFF3
  2753                           postinc0	equ	0xFEE
  2754                           wreg	equ	0xFE8
  2755                           indf1	equ	0xFE7
  2756                           postdec1	equ	0xFE5
  2757                           fsr1h	equ	0xFE2
  2758                           fsr1l	equ	0xFE1
  2759                           indf2	equ	0xFDF
  2760                           postinc2	equ	0xFDE
  2761                           postdec2	equ	0xFDD
  2762                           fsr2h	equ	0xFDA
  2763                           fsr2l	equ	0xFD9
  2764                           status	equ	0xFD8
  2765                           
  2766 ;; *************** function _enable_interrupts *****************
  2767 ;; Defined at:
  2768 ;;		line 15 in file "../src/interrupts.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;		None               void
  2775 ;; Registers used:
  2776 ;;		None
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2782 ;;      Params:         0       0       0       0       0
  2783 ;;      Locals:         0       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0
  2785 ;;      Totals:         0       0       0       0       0
  2786 ;;Total ram usage:        0 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:   11
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_main
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text12
  2797  001F1C                     __ptext12:
  2798                           	opt stack 0
  2799  001F1C                     _enable_interrupts:
  2800                           	opt stack 19
  2801                           
  2802                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  2803                           
  2804                           ;incstack = 0
  2805  001F1C  8ED0               	bsf	4048,7,c	;volatile
  2806                           
  2807                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  2808  001F1E  8EF2               	bsf	intcon,7,c	;volatile
  2809                           
  2810                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  2811  001F20  8CF2               	bsf	intcon,6,c	;volatile
  2812  001F22  0012               	return	
  2813  001F24                     __end_of_enable_interrupts:
  2814                           	opt stack 0
  2815                           tblptru	equ	0xFF8
  2816                           tblptrh	equ	0xFF7
  2817                           tblptrl	equ	0xFF6
  2818                           tablat	equ	0xFF5
  2819                           prodh	equ	0xFF4
  2820                           prodl	equ	0xFF3
  2821                           intcon	equ	0xFF2
  2822                           postinc0	equ	0xFEE
  2823                           wreg	equ	0xFE8
  2824                           indf1	equ	0xFE7
  2825                           postdec1	equ	0xFE5
  2826                           fsr1h	equ	0xFE2
  2827                           fsr1l	equ	0xFE1
  2828                           indf2	equ	0xFDF
  2829                           postinc2	equ	0xFDE
  2830                           postdec2	equ	0xFDD
  2831                           fsr2h	equ	0xFDA
  2832                           fsr2l	equ	0xFD9
  2833                           status	equ	0xFD8
  2834                           
  2835 ;; *************** function _block_on_To_msgqueues *****************
  2836 ;; Defined at:
  2837 ;;		line 258 in file "../src/messages.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;		None               void
  2844 ;; Registers used:
  2845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2851 ;;      Params:         0       0       0       0       0
  2852 ;;      Locals:         0       0       0       0       0
  2853 ;;      Temps:          0       0       1       0       0
  2854 ;;      Totals:         0       0       1       0       0
  2855 ;;Total ram usage:        1 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:   14
  2858 ;; This function calls:
  2859 ;;		_Delay1KTCYx
  2860 ;;		_check_msg
  2861 ;;		_in_main
  2862 ;; This function is called by:
  2863 ;;		_main
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text13
  2868  001696                     __ptext13:
  2869                           	opt stack 0
  2870  001696                     _block_on_To_msgqueues:
  2871                           	opt stack 16
  2872                           
  2873                           ;messages.c: 259: if (!in_main()) {
  2874                           
  2875                           ;incstack = 0
  2876  001696  EC6B  F00D         	call	_in_main	;wreg free
  2877  00169A  0101               	movlb	1	; () banked
  2878  00169C  0101               	movlb	1	; () banked
  2879  00169E  518B               	movf	(?_in_main+1)& (0+255),w,b
  2880  0016A0  0101               	movlb	1	; () banked
  2881  0016A2  118A               	iorwf	?_in_main& (0+255),w,b
  2882  0016A4  B4D8               	btfsc	status,2,c
  2883  0016A6  0012               	return	
  2884                           
  2885                           ; BSR set to: 1
  2886                           ;messages.c: 261: }
  2887                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  2888                           
  2889                           ; BSR set to: 1
  2890                           
  2891                           ; BSR set to: 1
  2892                           ;messages.c: 260: return;
  2893  0016A8  0101               	movlb	1	; () banked
  2894  0016AA  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  2895  0016AC  0E01               	movlw	1
  2896  0016AE  6E4E               	movwf	_MQ_Main_Willing_to_block,c
  2897  0016B0  0101               	movlb	1	; () banked
  2898  0016B2  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2899  0016B4                     l3946:
  2900                           
  2901                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  2902  0016B4  0101               	movlb	1	; () banked
  2903  0016B6  0E01               	movlw	high _ToMainHigh_MQ
  2904  0016B8  0101               	movlb	1	; () banked
  2905  0016BA  0101               	movlb	1	; () banked
  2906  0016BC  6F87               	movwf	(check_msg@qptr+1)& (0+255),b
  2907  0016BE  0101               	movlb	1	; () banked
  2908  0016C0  0E00               	movlw	low _ToMainHigh_MQ
  2909  0016C2  0101               	movlb	1	; () banked
  2910  0016C4  0101               	movlb	1	; () banked
  2911  0016C6  6F86               	movwf	check_msg@qptr& (0+255),b
  2912  0016C8  EC47  F00E         	call	_check_msg	;wreg free
  2913  0016CC  0900               	iorlw	0
  2914  0016CE  B4D8               	btfsc	status,2,c
  2915  0016D0  D007               	goto	l3952
  2916                           
  2917                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  2918  0016D2  0101               	movlb	1	; () banked
  2919  0016D4  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  2920  0016D6  0E00               	movlw	0
  2921  0016D8  6E4E               	movwf	_MQ_Main_Willing_to_block,c
  2922  0016DA  0101               	movlb	1	; () banked
  2923  0016DC  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2924  0016DE  0012               	return	
  2925  0016E0                     l3952:
  2926                           
  2927                           ;messages.c: 271: }
  2928                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  2929  0016E0  0101               	movlb	1	; () banked
  2930  0016E2  0E01               	movlw	high _ToMainLow_MQ
  2931  0016E4  0101               	movlb	1	; () banked
  2932  0016E6  0101               	movlb	1	; () banked
  2933  0016E8  6F87               	movwf	(check_msg@qptr+1)& (0+255),b
  2934  0016EA  0101               	movlb	1	; () banked
  2935  0016EC  0E43               	movlw	low _ToMainLow_MQ
  2936  0016EE  0101               	movlb	1	; () banked
  2937  0016F0  0101               	movlb	1	; () banked
  2938  0016F2  6F86               	movwf	check_msg@qptr& (0+255),b
  2939  0016F4  EC47  F00E         	call	_check_msg	;wreg free
  2940  0016F8  0900               	iorlw	0
  2941  0016FA  B4D8               	btfsc	status,2,c
  2942  0016FC  D007               	goto	l3958
  2943                           
  2944                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  2945  0016FE  0101               	movlb	1	; () banked
  2946  001700  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  2947  001702  0E00               	movlw	0
  2948  001704  6E4E               	movwf	_MQ_Main_Willing_to_block,c
  2949  001706  0101               	movlb	1	; () banked
  2950  001708  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2951  00170A  0012               	return	
  2952  00170C                     l3958:
  2953                           
  2954                           ;messages.c: 278: }
  2955                           ;messages.c: 279: Delay1KTCYx(10);
  2956  00170C  0E0A               	movlw	10
  2957  00170E  EC3C  F00F         	call	_Delay1KTCYx
  2958  001712  D7D0               	goto	l3946
  2959  001714                     __end_of_block_on_To_msgqueues:
  2960                           	opt stack 0
  2961                           tblptru	equ	0xFF8
  2962                           tblptrh	equ	0xFF7
  2963                           tblptrl	equ	0xFF6
  2964                           tablat	equ	0xFF5
  2965                           prodh	equ	0xFF4
  2966                           prodl	equ	0xFF3
  2967                           intcon	equ	0xFF2
  2968                           postinc0	equ	0xFEE
  2969                           wreg	equ	0xFE8
  2970                           indf1	equ	0xFE7
  2971                           postdec1	equ	0xFE5
  2972                           fsr1h	equ	0xFE2
  2973                           fsr1l	equ	0xFE1
  2974                           indf2	equ	0xFDF
  2975                           postinc2	equ	0xFDE
  2976                           postdec2	equ	0xFDD
  2977                           fsr2h	equ	0xFDA
  2978                           fsr2l	equ	0xFD9
  2979                           status	equ	0xFD8
  2980                           
  2981 ;; *************** function _in_main *****************
  2982 ;; Defined at:
  2983 ;;		line 41 in file "../src/interrupts.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;		None
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  2    4[BANK1 ] int 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2997 ;;      Params:         0       0       2       0       0
  2998 ;;      Locals:         0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0
  3000 ;;      Totals:         0       0       2       0       0
  3001 ;;Total ram usage:        2 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:   13
  3004 ;; This function calls:
  3005 ;;		_in_high_int
  3006 ;;		_in_low_int
  3007 ;; This function is called by:
  3008 ;;		_block_on_To_msgqueues
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text14
  3013  001AD6                     __ptext14:
  3014                           	opt stack 0
  3015  001AD6                     _in_main:
  3016                           	opt stack 16
  3017                           
  3018                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3019                           
  3020                           ;incstack = 0
  3021  001AD6  EC48  F00D         	call	_in_low_int	;wreg free
  3022  001ADA  0101               	movlb	1	; () banked
  3023  001ADC  0101               	movlb	1	; () banked
  3024  001ADE  5189               	movf	(?_in_low_int+1)& (0+255),w,b
  3025  001AE0  0101               	movlb	1	; () banked
  3026  001AE2  1188               	iorwf	?_in_low_int& (0+255),w,b
  3027  001AE4  A4D8               	btfss	status,2,c
  3028  001AE6  D011               	goto	l3690
  3029                           
  3030                           ; BSR set to: 1
  3031  001AE8  EC59  F00F         	call	_in_high_int	;wreg free
  3032  001AEC  0101               	movlb	1	; () banked
  3033  001AEE  0101               	movlb	1	; () banked
  3034  001AF0  5187               	movf	(?_in_high_int+1)& (0+255),w,b
  3035  001AF2  0101               	movlb	1	; () banked
  3036  001AF4  1186               	iorwf	?_in_high_int& (0+255),w,b
  3037  001AF6  A4D8               	btfss	status,2,c
  3038  001AF8  D008               	goto	l3690
  3039                           
  3040                           ; BSR set to: 1
  3041                           ;interrupts.c: 43: return (1);
  3042  001AFA  0E00               	movlw	0
  3043  001AFC  0101               	movlb	1	; () banked
  3044  001AFE  0101               	movlb	1	; () banked
  3045  001B00  6F8B               	movwf	(?_in_main+1)& (0+255),b
  3046  001B02  0E01               	movlw	1
  3047  001B04  0101               	movlb	1	; () banked
  3048  001B06  6F8A               	movwf	?_in_main& (0+255),b
  3049  001B08  0012               	return	
  3050  001B0A                     l3690:
  3051                           
  3052                           ; BSR set to: 1
  3053                           ;interrupts.c: 45: return (0);
  3054  001B0A  0E00               	movlw	0
  3055  001B0C  0101               	movlb	1	; () banked
  3056  001B0E  0101               	movlb	1	; () banked
  3057  001B10  6F8B               	movwf	(?_in_main+1)& (0+255),b
  3058  001B12  0E00               	movlw	0
  3059  001B14  0101               	movlb	1	; () banked
  3060  001B16  6F8A               	movwf	?_in_main& (0+255),b
  3061  001B18  0012               	return	
  3062  001B1A                     __end_of_in_main:
  3063                           	opt stack 0
  3064                           tblptru	equ	0xFF8
  3065                           tblptrh	equ	0xFF7
  3066                           tblptrl	equ	0xFF6
  3067                           tablat	equ	0xFF5
  3068                           prodh	equ	0xFF4
  3069                           prodl	equ	0xFF3
  3070                           intcon	equ	0xFF2
  3071                           postinc0	equ	0xFEE
  3072                           wreg	equ	0xFE8
  3073                           indf1	equ	0xFE7
  3074                           postdec1	equ	0xFE5
  3075                           fsr1h	equ	0xFE2
  3076                           fsr1l	equ	0xFE1
  3077                           indf2	equ	0xFDF
  3078                           postinc2	equ	0xFDE
  3079                           postdec2	equ	0xFDD
  3080                           fsr2h	equ	0xFDA
  3081                           fsr2l	equ	0xFD9
  3082                           status	equ	0xFD8
  3083                           
  3084 ;; *************** function _in_low_int *****************
  3085 ;; Defined at:
  3086 ;;		line 31 in file "../src/interrupts.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  2    2[BANK1 ] int 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2, status,0, cstack
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3100 ;;      Params:         0       0       2       0       0
  3101 ;;      Locals:         0       0       0       0       0
  3102 ;;      Temps:          0       0       0       0       0
  3103 ;;      Totals:         0       0       2       0       0
  3104 ;;Total ram usage:        2 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:   12
  3107 ;; This function calls:
  3108 ;;		_in_high_int
  3109 ;; This function is called by:
  3110 ;;		_in_main
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text15
  3115  001A90                     __ptext15:
  3116                           	opt stack 0
  3117  001A90                     _in_low_int:
  3118                           	opt stack 16
  3119                           
  3120                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3121                           
  3122                           ; BSR set to: 1
  3123                           ;incstack = 0
  3124  001A90  ACF2               	btfss	intcon,6,c	;volatile
  3125  001A92  D008               	goto	l3668
  3126                           
  3127                           ;interrupts.c: 33: return (0);
  3128  001A94  0E00               	movlw	0
  3129  001A96  0101               	movlb	1	; () banked
  3130  001A98  0101               	movlb	1	; () banked
  3131  001A9A  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3132  001A9C  0E00               	movlw	0
  3133  001A9E  0101               	movlb	1	; () banked
  3134  001AA0  6F88               	movwf	?_in_low_int& (0+255),b
  3135  001AA2  0012               	return	
  3136  001AA4                     l3668:
  3137  001AA4  EC59  F00F         	call	_in_high_int	;wreg free
  3138  001AA8  0101               	movlb	1	; () banked
  3139  001AAA  0101               	movlb	1	; () banked
  3140  001AAC  5187               	movf	(?_in_high_int+1)& (0+255),w,b
  3141  001AAE  0101               	movlb	1	; () banked
  3142  001AB0  1186               	iorwf	?_in_high_int& (0+255),w,b
  3143  001AB2  B4D8               	btfsc	status,2,c
  3144  001AB4  D008               	goto	l3676
  3145                           
  3146                           ; BSR set to: 1
  3147                           ;interrupts.c: 35: return (0);
  3148  001AB6  0E00               	movlw	0
  3149  001AB8  0101               	movlb	1	; () banked
  3150  001ABA  0101               	movlb	1	; () banked
  3151  001ABC  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3152  001ABE  0E00               	movlw	0
  3153  001AC0  0101               	movlb	1	; () banked
  3154  001AC2  6F88               	movwf	?_in_low_int& (0+255),b
  3155  001AC4  0012               	return	
  3156  001AC6                     l3676:
  3157                           
  3158                           ; BSR set to: 1
  3159                           ;interrupts.c: 37: return (1);
  3160  001AC6  0E00               	movlw	0
  3161  001AC8  0101               	movlb	1	; () banked
  3162  001ACA  0101               	movlb	1	; () banked
  3163  001ACC  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3164  001ACE  0E01               	movlw	1
  3165  001AD0  0101               	movlb	1	; () banked
  3166  001AD2  6F88               	movwf	?_in_low_int& (0+255),b
  3167  001AD4  0012               	return	
  3168  001AD6                     __end_of_in_low_int:
  3169                           	opt stack 0
  3170                           tblptru	equ	0xFF8
  3171                           tblptrh	equ	0xFF7
  3172                           tblptrl	equ	0xFF6
  3173                           tablat	equ	0xFF5
  3174                           prodh	equ	0xFF4
  3175                           prodl	equ	0xFF3
  3176                           intcon	equ	0xFF2
  3177                           postinc0	equ	0xFEE
  3178                           wreg	equ	0xFE8
  3179                           indf1	equ	0xFE7
  3180                           postdec1	equ	0xFE5
  3181                           fsr1h	equ	0xFE2
  3182                           fsr1l	equ	0xFE1
  3183                           indf2	equ	0xFDF
  3184                           postinc2	equ	0xFDE
  3185                           postdec2	equ	0xFDD
  3186                           fsr2h	equ	0xFDA
  3187                           fsr2l	equ	0xFD9
  3188                           status	equ	0xFD8
  3189                           
  3190 ;; *************** function _in_high_int *****************
  3191 ;; Defined at:
  3192 ;;		line 23 in file "../src/interrupts.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  2    0[BANK1 ] int 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3206 ;;      Params:         0       0       2       0       0
  3207 ;;      Locals:         0       0       0       0       0
  3208 ;;      Temps:          0       0       0       0       0
  3209 ;;      Totals:         0       0       2       0       0
  3210 ;;Total ram usage:        2 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:   11
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_in_low_int
  3217 ;;		_in_main
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text16
  3222  001EB2                     __ptext16:
  3223                           	opt stack 0
  3224  001EB2                     _in_high_int:
  3225                           	opt stack 16
  3226                           
  3227                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  3228                           
  3229                           ; BSR set to: 1
  3230                           ;incstack = 0
  3231  001EB2  0E00               	movlw	0
  3232  001EB4  AEF2               	btfss	intcon,7,c	;volatile
  3233  001EB6  0E01               	movlw	1
  3234  001EB8  0101               	movlb	1	; () banked
  3235  001EBA  0101               	movlb	1	; () banked
  3236  001EBC  6F86               	movwf	?_in_high_int& (0+255),b
  3237  001EBE  0101               	movlb	1	; () banked
  3238  001EC0  6B87               	clrf	(?_in_high_int+1)& (0+255),b
  3239  001EC2  0012               	return	
  3240  001EC4                     __end_of_in_high_int:
  3241                           	opt stack 0
  3242                           tblptru	equ	0xFF8
  3243                           tblptrh	equ	0xFF7
  3244                           tblptrl	equ	0xFF6
  3245                           tablat	equ	0xFF5
  3246                           prodh	equ	0xFF4
  3247                           prodl	equ	0xFF3
  3248                           intcon	equ	0xFF2
  3249                           postinc0	equ	0xFEE
  3250                           wreg	equ	0xFE8
  3251                           indf1	equ	0xFE7
  3252                           postdec1	equ	0xFE5
  3253                           fsr1h	equ	0xFE2
  3254                           fsr1l	equ	0xFE1
  3255                           indf2	equ	0xFDF
  3256                           postinc2	equ	0xFDE
  3257                           postdec2	equ	0xFDD
  3258                           fsr2h	equ	0xFDA
  3259                           fsr2l	equ	0xFD9
  3260                           status	equ	0xFD8
  3261                           
  3262 ;; *************** function _check_msg *****************
  3263 ;; Defined at:
  3264 ;;		line 222 in file "../src/messages.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3267 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      unsigned char 
  3272 ;; Registers used:
  3273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3279 ;;      Params:         0       0       2       0       0
  3280 ;;      Locals:         0       0       0       0       0
  3281 ;;      Temps:          0       0       1       0       0
  3282 ;;      Totals:         0       0       3       0       0
  3283 ;;Total ram usage:        3 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:   11
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_block_on_To_msgqueues
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text17
  3294  001C8E                     __ptext17:
  3295                           	opt stack 0
  3296  001C8E                     _check_msg:
  3297                           	opt stack 18
  3298                           
  3299                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3300                           
  3301                           ; BSR set to: 1
  3302                           ;incstack = 0
  3303  001C8E  0101               	movlb	1	; () banked
  3304  001C90  EE20 F042          	lfsr	2,66
  3305  001C94  0101               	movlb	1	; () banked
  3306  001C96  5186               	movf	check_msg@qptr& (0+255),w,b
  3307  001C98  26D9               	addwf	fsr2l,f,c
  3308  001C9A  0101               	movlb	1	; () banked
  3309  001C9C  5187               	movf	(check_msg@qptr+1)& (0+255),w,b
  3310  001C9E  22DA               	addwfc	fsr2h,f,c
  3311  001CA0  50DF               	movf	indf2,w,c
  3312  001CA2  0101               	movlb	1	; () banked
  3313  001CA4  6F88               	movwf	??_check_msg& (0+255),b
  3314  001CA6  0101               	movlb	1	; () banked
  3315  001CA8  5188               	movf	??_check_msg& (0+255),w,b
  3316  001CAA  0D0D               	mullw	13
  3317  001CAC  50F3               	movf	prodl,w,c
  3318  001CAE  0101               	movlb	1	; () banked
  3319  001CB0  0101               	movlb	1	; () banked
  3320  001CB2  2586               	addwf	check_msg@qptr& (0+255),w,b
  3321  001CB4  6ED9               	movwf	fsr2l,c
  3322  001CB6  50F4               	movf	prodh,w,c
  3323  001CB8  0101               	movlb	1	; () banked
  3324  001CBA  0101               	movlb	1	; () banked
  3325  001CBC  2187               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3326  001CBE  6EDA               	movwf	fsr2h,c
  3327  001CC0  50DF               	movf	indf2,w,c
  3328  001CC2  0012               	return	
  3329  001CC4                     __end_of_check_msg:
  3330                           	opt stack 0
  3331                           tblptru	equ	0xFF8
  3332                           tblptrh	equ	0xFF7
  3333                           tblptrl	equ	0xFF6
  3334                           tablat	equ	0xFF5
  3335                           prodh	equ	0xFF4
  3336                           prodl	equ	0xFF3
  3337                           intcon	equ	0xFF2
  3338                           postinc0	equ	0xFEE
  3339                           wreg	equ	0xFE8
  3340                           indf1	equ	0xFE7
  3341                           postdec1	equ	0xFE5
  3342                           fsr1h	equ	0xFE2
  3343                           fsr1l	equ	0xFE1
  3344                           indf2	equ	0xFDF
  3345                           postinc2	equ	0xFDE
  3346                           postdec2	equ	0xFDD
  3347                           fsr2h	equ	0xFDA
  3348                           fsr2l	equ	0xFD9
  3349                           status	equ	0xFD8
  3350                           
  3351 ;; *************** function _Delay1KTCYx *****************
  3352 ;; Defined at:
  3353 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  unit            1    wreg     unsigned char 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  unit            1    0[BANK1 ] unsigned char 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;		None               void
  3360 ;; Registers used:
  3361 ;;		wreg
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3367 ;;      Params:         0       0       0       0       0
  3368 ;;      Locals:         0       0       1       0       0
  3369 ;;      Temps:          0       0       0       0       0
  3370 ;;      Totals:         0       0       1       0       0
  3371 ;;Total ram usage:        1 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:   11
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_block_on_To_msgqueues
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text18
  3382  001E78                     __ptext18:
  3383                           	opt stack 0
  3384  001E78                     _Delay1KTCYx:
  3385                           	opt stack 18
  3386                           
  3387                           ; BSR set to: 1
  3388                           ;incstack = 0
  3389                           ;Delay1KTCYx@unit stored from wreg
  3390  001E78  CFE8 F186          	movff	wreg,Delay1KTCYx@unit
  3391  001E7C                     l794:
  3392  001E7C  0EFA               	movlw	250
  3393  001E7E                     u3777:
  3394  001E7E  F000               	nop	
  3395  001E80  2EE8               	decfsz	wreg,f,c
  3396  001E82  D7FD               	goto	u3777
  3397  001E84  0101               	movlb	1	; () banked
  3398  001E86  0101               	movlb	1	; () banked
  3399  001E88  2F86               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3400  001E8A  D7F8               	goto	l794
  3401  001E8C  0012               	return	
  3402  001E8E                     __end_of_Delay1KTCYx:
  3403                           	opt stack 0
  3404                           tblptru	equ	0xFF8
  3405                           tblptrh	equ	0xFF7
  3406                           tblptrl	equ	0xFF6
  3407                           tablat	equ	0xFF5
  3408                           prodh	equ	0xFF4
  3409                           prodl	equ	0xFF3
  3410                           intcon	equ	0xFF2
  3411                           postinc0	equ	0xFEE
  3412                           wreg	equ	0xFE8
  3413                           indf1	equ	0xFE7
  3414                           postdec1	equ	0xFE5
  3415                           fsr1h	equ	0xFE2
  3416                           fsr1l	equ	0xFE1
  3417                           indf2	equ	0xFDF
  3418                           postinc2	equ	0xFDE
  3419                           postdec2	equ	0xFDD
  3420                           fsr2h	equ	0xFDA
  3421                           fsr2l	equ	0xFD9
  3422                           status	equ	0xFD8
  3423                           
  3424 ;; *************** function _ToMainLow_recvmsg *****************
  3425 ;; Defined at:
  3426 ;;		line 112 in file "../src/messages.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;  maxlength       1    wreg     unsigned char 
  3429 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3430 ;;		 -> main@msgtype(1), 
  3431 ;;  data            2   26[BANK1 ] PTR void 
  3432 ;;		 -> main@msgbuffer(11), 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      char 
  3437 ;; Registers used:
  3438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3444 ;;      Params:         0       0       4       0       0
  3445 ;;      Locals:         0       0       1       0       0
  3446 ;;      Temps:          0       0       0       0       0
  3447 ;;      Totals:         0       0       5       0       0
  3448 ;;Total ram usage:        5 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:   13
  3451 ;; This function calls:
  3452 ;;		_recv_msg
  3453 ;; This function is called by:
  3454 ;;		_main
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text19
  3459  001B1A                     __ptext19:
  3460                           	opt stack 0
  3461  001B1A                     _ToMainLow_recvmsg:
  3462                           	opt stack 17
  3463                           
  3464                           ; BSR set to: 1
  3465                           ;incstack = 0
  3466                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3467  001B1A  CFE8 F1A2          	movff	wreg,ToMainLow_recvmsg@maxlength
  3468                           
  3469                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3470  001B1E  0101               	movlb	1	; () banked
  3471  001B20  0E01               	movlw	high _ToMainLow_MQ
  3472  001B22  0101               	movlb	1	; () banked
  3473  001B24  0101               	movlb	1	; () banked
  3474  001B26  6F91               	movwf	(recv_msg@qptr+1)& (0+255),b
  3475  001B28  0101               	movlb	1	; () banked
  3476  001B2A  0E43               	movlw	low _ToMainLow_MQ
  3477  001B2C  0101               	movlb	1	; () banked
  3478  001B2E  0101               	movlb	1	; () banked
  3479  001B30  6F90               	movwf	recv_msg@qptr& (0+255),b
  3480  001B32  C1A2  F192         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3481  001B36  0101               	movlb	1	; () banked
  3482  001B38  0101               	movlb	1	; () banked
  3483  001B3A  C19F  F194         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3484  001B3E  0101               	movlb	1	; () banked
  3485  001B40  0101               	movlb	1	; () banked
  3486  001B42  C19E  F193         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3487  001B46  0101               	movlb	1	; () banked
  3488  001B48  0101               	movlb	1	; () banked
  3489  001B4A  C1A1  F196         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3490  001B4E  0101               	movlb	1	; () banked
  3491  001B50  0101               	movlb	1	; () banked
  3492  001B52  C1A0  F195         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3493  001B56  ECE1  F004         	call	_recv_msg	;wreg free
  3494  001B5A  0012               	return	
  3495  001B5C                     __end_of_ToMainLow_recvmsg:
  3496                           	opt stack 0
  3497                           tblptru	equ	0xFF8
  3498                           tblptrh	equ	0xFF7
  3499                           tblptrl	equ	0xFF6
  3500                           tablat	equ	0xFF5
  3501                           prodh	equ	0xFF4
  3502                           prodl	equ	0xFF3
  3503                           intcon	equ	0xFF2
  3504                           postinc0	equ	0xFEE
  3505                           wreg	equ	0xFE8
  3506                           indf1	equ	0xFE7
  3507                           postdec1	equ	0xFE5
  3508                           fsr1h	equ	0xFE2
  3509                           fsr1l	equ	0xFE1
  3510                           indf2	equ	0xFDF
  3511                           postinc2	equ	0xFDE
  3512                           postdec2	equ	0xFDD
  3513                           fsr2h	equ	0xFDA
  3514                           fsr2l	equ	0xFD9
  3515                           status	equ	0xFD8
  3516                           
  3517 ;; *************** function _ToMainHigh_recvmsg *****************
  3518 ;; Defined at:
  3519 ;;		line 135 in file "../src/messages.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  maxlength       1    wreg     unsigned char 
  3522 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3523 ;;		 -> main@msgtype(1), 
  3524 ;;  data            2   26[BANK1 ] PTR void 
  3525 ;;		 -> main@msgbuffer(11), 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      char 
  3530 ;; Registers used:
  3531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3537 ;;      Params:         0       0       4       0       0
  3538 ;;      Locals:         0       0       1       0       0
  3539 ;;      Temps:          0       0       0       0       0
  3540 ;;      Totals:         0       0       5       0       0
  3541 ;;Total ram usage:        5 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:   13
  3544 ;; This function calls:
  3545 ;;		_recv_msg
  3546 ;; This function is called by:
  3547 ;;		_main
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           	psect	text20
  3552  001B5C                     __ptext20:
  3553                           	opt stack 0
  3554  001B5C                     _ToMainHigh_recvmsg:
  3555                           	opt stack 17
  3556                           
  3557                           ;incstack = 0
  3558                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3559  001B5C  CFE8 F1A2          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3560                           
  3561                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3562  001B60  0101               	movlb	1	; () banked
  3563  001B62  0E01               	movlw	high _ToMainHigh_MQ
  3564  001B64  0101               	movlb	1	; () banked
  3565  001B66  0101               	movlb	1	; () banked
  3566  001B68  6F91               	movwf	(recv_msg@qptr+1)& (0+255),b
  3567  001B6A  0101               	movlb	1	; () banked
  3568  001B6C  0E00               	movlw	low _ToMainHigh_MQ
  3569  001B6E  0101               	movlb	1	; () banked
  3570  001B70  0101               	movlb	1	; () banked
  3571  001B72  6F90               	movwf	recv_msg@qptr& (0+255),b
  3572  001B74  C1A2  F192         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3573  001B78  0101               	movlb	1	; () banked
  3574  001B7A  0101               	movlb	1	; () banked
  3575  001B7C  C19F  F194         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3576  001B80  0101               	movlb	1	; () banked
  3577  001B82  0101               	movlb	1	; () banked
  3578  001B84  C19E  F193         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3579  001B88  0101               	movlb	1	; () banked
  3580  001B8A  0101               	movlb	1	; () banked
  3581  001B8C  C1A1  F196         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3582  001B90  0101               	movlb	1	; () banked
  3583  001B92  0101               	movlb	1	; () banked
  3584  001B94  C1A0  F195         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3585  001B98  ECE1  F004         	call	_recv_msg	;wreg free
  3586  001B9C  0012               	return	
  3587  001B9E                     __end_of_ToMainHigh_recvmsg:
  3588                           	opt stack 0
  3589                           tblptru	equ	0xFF8
  3590                           tblptrh	equ	0xFF7
  3591                           tblptrl	equ	0xFF6
  3592                           tablat	equ	0xFF5
  3593                           prodh	equ	0xFF4
  3594                           prodl	equ	0xFF3
  3595                           intcon	equ	0xFF2
  3596                           postinc0	equ	0xFEE
  3597                           wreg	equ	0xFE8
  3598                           indf1	equ	0xFE7
  3599                           postdec1	equ	0xFE5
  3600                           fsr1h	equ	0xFE2
  3601                           fsr1l	equ	0xFE1
  3602                           indf2	equ	0xFDF
  3603                           postinc2	equ	0xFDE
  3604                           postdec2	equ	0xFDD
  3605                           fsr2h	equ	0xFDA
  3606                           fsr2l	equ	0xFD9
  3607                           status	equ	0xFD8
  3608                           
  3609 ;; *************** function _recv_msg *****************
  3610 ;; Defined at:
  3611 ;;		line 63 in file "../src/messages.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  3614 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3615 ;;  maxlength       1   12[BANK1 ] unsigned char 
  3616 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  3617 ;;		 -> i2c_slave_int_handler@msgtype(2), main@msgtype(1), 
  3618 ;;  data            2   15[BANK1 ] PTR void 
  3619 ;;		 -> i2c_slave_int_handler@sensorData(5), main@msgbuffer(11), 
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  3622 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  3623 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3624 ;;  tlength         2   20[BANK1 ] unsigned int 
  3625 ;;  slot            1   19[BANK1 ] unsigned char 
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      char 
  3628 ;; Registers used:
  3629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3635 ;;      Params:         0       0       7       0       0
  3636 ;;      Locals:         0       0       5       0       0
  3637 ;;      Temps:          0       0       2       0       0
  3638 ;;      Totals:         0       0      14       0       0
  3639 ;;Total ram usage:       14 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:   12
  3642 ;; This function calls:
  3643 ;;		___awmod
  3644 ;;		_memcpy
  3645 ;; This function is called by:
  3646 ;;		_ToMainLow_recvmsg
  3647 ;;		_ToMainHigh_recvmsg
  3648 ;;		_FromMainHigh_recvmsg
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text21
  3653  0009C2                     __ptext21:
  3654                           	opt stack 0
  3655  0009C2                     _recv_msg:
  3656                           	opt stack 17
  3657                           
  3658                           ;messages.c: 64: unsigned char slot;
  3659                           ;messages.c: 68: msg *qmsg;
  3660                           ;messages.c: 69: size_t tlength;
  3661                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3662                           
  3663                           ;incstack = 0
  3664  0009C2  0101               	movlb	1	; () banked
  3665  0009C4  EE20 F042          	lfsr	2,66
  3666  0009C8  0101               	movlb	1	; () banked
  3667  0009CA  5190               	movf	recv_msg@qptr& (0+255),w,b
  3668  0009CC  26D9               	addwf	fsr2l,f,c
  3669  0009CE  0101               	movlb	1	; () banked
  3670  0009D0  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3671  0009D2  22DA               	addwfc	fsr2h,f,c
  3672  0009D4  50DF               	movf	indf2,w,c
  3673  0009D6  0101               	movlb	1	; () banked
  3674  0009D8  0101               	movlb	1	; () banked
  3675  0009DA  6F99               	movwf	recv_msg@slot& (0+255),b
  3676                           
  3677                           ; BSR set to: 1
  3678                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3679  0009DC  0101               	movlb	1	; () banked
  3680  0009DE  0101               	movlb	1	; () banked
  3681  0009E0  5199               	movf	recv_msg@slot& (0+255),w,b
  3682  0009E2  0D0D               	mullw	13
  3683  0009E4  50F3               	movf	prodl,w,c
  3684  0009E6  0101               	movlb	1	; () banked
  3685  0009E8  0101               	movlb	1	; () banked
  3686  0009EA  2590               	addwf	recv_msg@qptr& (0+255),w,b
  3687  0009EC  0101               	movlb	1	; () banked
  3688  0009EE  0101               	movlb	1	; () banked
  3689  0009F0  6F9C               	movwf	recv_msg@qmsg& (0+255),b
  3690  0009F2  50F4               	movf	prodh,w,c
  3691  0009F4  0101               	movlb	1	; () banked
  3692  0009F6  0101               	movlb	1	; () banked
  3693  0009F8  2191               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3694  0009FA  0101               	movlb	1	; () banked
  3695  0009FC  6F9D               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3696                           
  3697                           ; BSR set to: 1
  3698                           ;messages.c: 74: if (qmsg->full == 1) {
  3699  0009FE  0E01               	movlw	1
  3700  000A00  C19C  FFD9         	movff	recv_msg@qmsg,fsr2l
  3701  000A04  C19D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3702  000A08  62DF               	cpfseq	indf2,c
  3703  000A0A  D088               	goto	l4070
  3704                           
  3705                           ; BSR set to: 1
  3706                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3707  000A0C  0101               	movlb	1	; () banked
  3708  000A0E  EE20 F001          	lfsr	2,1
  3709  000A12  0101               	movlb	1	; () banked
  3710  000A14  519C               	movf	recv_msg@qmsg& (0+255),w,b
  3711  000A16  26D9               	addwf	fsr2l,f,c
  3712  000A18  0101               	movlb	1	; () banked
  3713  000A1A  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3714  000A1C  22DA               	addwfc	fsr2h,f,c
  3715  000A1E  50DF               	movf	indf2,w,c
  3716  000A20  0101               	movlb	1	; () banked
  3717  000A22  0101               	movlb	1	; () banked
  3718  000A24  5D92               	subwf	recv_msg@maxlength& (0+255),w,b
  3719  000A26  B0D8               	btfsc	status,0,c
  3720  000A28  D002               	goto	l4054
  3721                           
  3722                           ; BSR set to: 1
  3723                           ;messages.c: 77: return (-3);
  3724  000A2A  0EFD               	movlw	253
  3725  000A2C  0012               	return	
  3726  000A2E                     l4054:
  3727                           
  3728                           ; BSR set to: 1
  3729                           ;messages.c: 78: }
  3730                           ;messages.c: 80: tlength = qmsg->length;
  3731  000A2E  0101               	movlb	1	; () banked
  3732  000A30  EE20 F001          	lfsr	2,1
  3733  000A34  0101               	movlb	1	; () banked
  3734  000A36  519C               	movf	recv_msg@qmsg& (0+255),w,b
  3735  000A38  26D9               	addwf	fsr2l,f,c
  3736  000A3A  0101               	movlb	1	; () banked
  3737  000A3C  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3738  000A3E  22DA               	addwfc	fsr2h,f,c
  3739  000A40  50DF               	movf	indf2,w,c
  3740  000A42  0101               	movlb	1	; () banked
  3741  000A44  6F97               	movwf	??_recv_msg& (0+255),b
  3742  000A46  0101               	movlb	1	; () banked
  3743  000A48  5197               	movf	??_recv_msg& (0+255),w,b
  3744  000A4A  0101               	movlb	1	; () banked
  3745  000A4C  0101               	movlb	1	; () banked
  3746  000A4E  6F9A               	movwf	recv_msg@tlength& (0+255),b
  3747  000A50  0101               	movlb	1	; () banked
  3748  000A52  6B9B               	clrf	(recv_msg@tlength+1)& (0+255),b
  3749                           
  3750                           ; BSR set to: 1
  3751                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3752  000A54  0101               	movlb	1	; () banked
  3753  000A56  0101               	movlb	1	; () banked
  3754  000A58  C196  F187         	movff	recv_msg@data+1,memcpy@d1+1
  3755  000A5C  0101               	movlb	1	; () banked
  3756  000A5E  0101               	movlb	1	; () banked
  3757  000A60  C195  F186         	movff	recv_msg@data,memcpy@d1
  3758  000A64  0E03               	movlw	3
  3759  000A66  0101               	movlb	1	; () banked
  3760  000A68  0101               	movlb	1	; () banked
  3761  000A6A  259C               	addwf	recv_msg@qmsg& (0+255),w,b
  3762  000A6C  0101               	movlb	1	; () banked
  3763  000A6E  6F97               	movwf	??_recv_msg& (0+255),b
  3764  000A70  0E00               	movlw	0
  3765  000A72  0101               	movlb	1	; () banked
  3766  000A74  0101               	movlb	1	; () banked
  3767  000A76  219D               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3768  000A78  0101               	movlb	1	; () banked
  3769  000A7A  6F98               	movwf	(??_recv_msg+1)& (0+255),b
  3770  000A7C  C197  F188         	movff	??_recv_msg,memcpy@s1
  3771  000A80  C198  F189         	movff	??_recv_msg+1,memcpy@s1+1
  3772  000A84  C19A  F18A         	movff	recv_msg@tlength,memcpy@n
  3773  000A88  C19B  F18B         	movff	recv_msg@tlength+1,memcpy@n+1
  3774  000A8C  ECA4  F00C         	call	_memcpy	;wreg free
  3775                           
  3776                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  3777  000A90  0101               	movlb	1	; () banked
  3778  000A92  EE20 F042          	lfsr	2,66
  3779  000A96  0101               	movlb	1	; () banked
  3780  000A98  5190               	movf	recv_msg@qptr& (0+255),w,b
  3781  000A9A  26D9               	addwf	fsr2l,f,c
  3782  000A9C  0101               	movlb	1	; () banked
  3783  000A9E  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3784  000AA0  22DA               	addwfc	fsr2h,f,c
  3785  000AA2  0101               	movlb	1	; () banked
  3786  000AA4  EE10 F042          	lfsr	1,66
  3787  000AA8  0101               	movlb	1	; () banked
  3788  000AAA  5190               	movf	recv_msg@qptr& (0+255),w,b
  3789  000AAC  26E1               	addwf	fsr1l,f,c
  3790  000AAE  0101               	movlb	1	; () banked
  3791  000AB0  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3792  000AB2  22E2               	addwfc	fsr1h,f,c
  3793  000AB4  50E7               	movf	indf1,w,c
  3794  000AB6  0101               	movlb	1	; () banked
  3795  000AB8  6F97               	movwf	??_recv_msg& (0+255),b
  3796  000ABA  0E01               	movlw	1
  3797  000ABC  0101               	movlb	1	; () banked
  3798  000ABE  2597               	addwf	??_recv_msg& (0+255),w,b
  3799  000AC0  0101               	movlb	1	; () banked
  3800  000AC2  0101               	movlb	1	; () banked
  3801  000AC4  6F86               	movwf	___awmod@dividend& (0+255),b
  3802  000AC6  0101               	movlb	1	; () banked
  3803  000AC8  0101               	movlb	1	; () banked
  3804  000ACA  6B87               	clrf	(___awmod@dividend+1)& (0+255),b
  3805  000ACC  0E00               	movlw	0
  3806  000ACE  2387               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3807  000AD0  0E00               	movlw	0
  3808  000AD2  0101               	movlb	1	; () banked
  3809  000AD4  0101               	movlb	1	; () banked
  3810  000AD6  6F89               	movwf	(___awmod@divisor+1)& (0+255),b
  3811  000AD8  0E05               	movlw	5
  3812  000ADA  0101               	movlb	1	; () banked
  3813  000ADC  6F88               	movwf	___awmod@divisor& (0+255),b
  3814  000ADE  EC59  F007         	call	___awmod	;wreg free
  3815  000AE2  0101               	movlb	1	; () banked
  3816  000AE4  0101               	movlb	1	; () banked
  3817  000AE6  5186               	movf	?___awmod& (0+255),w,b
  3818  000AE8  6EDF               	movwf	indf2,c
  3819                           
  3820                           ; BSR set to: 1
  3821                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3822  000AEA  0101               	movlb	1	; () banked
  3823  000AEC  EE20 F002          	lfsr	2,2
  3824  000AF0  0101               	movlb	1	; () banked
  3825  000AF2  519C               	movf	recv_msg@qmsg& (0+255),w,b
  3826  000AF4  26D9               	addwf	fsr2l,f,c
  3827  000AF6  0101               	movlb	1	; () banked
  3828  000AF8  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3829  000AFA  22DA               	addwfc	fsr2h,f,c
  3830  000AFC  C193  FFE1         	movff	recv_msg@msgtype,fsr1l
  3831  000B00  C194  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3832  000B04  CFDF FFE7          	movff	indf2,indf1
  3833                           
  3834                           ; BSR set to: 1
  3835                           ;messages.c: 91: qmsg->full = 0;
  3836  000B08  C19C  FFD9         	movff	recv_msg@qmsg,fsr2l
  3837  000B0C  C19D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3838  000B10  0E00               	movlw	0
  3839  000B12  6EDF               	movwf	indf2,c
  3840                           
  3841                           ; BSR set to: 1
  3842                           ;messages.c: 92: return (tlength);
  3843  000B14  0101               	movlb	1	; () banked
  3844  000B16  0101               	movlb	1	; () banked
  3845  000B18  519A               	movf	recv_msg@tlength& (0+255),w,b
  3846  000B1A  0012               	return	
  3847  000B1C                     l4070:
  3848                           
  3849                           ; BSR set to: 1
  3850                           ;messages.c: 94: return (-4);
  3851  000B1C  0EFC               	movlw	252
  3852  000B1E  0012               	return	
  3853  000B20                     __end_of_recv_msg:
  3854                           	opt stack 0
  3855                           tblptru	equ	0xFF8
  3856                           tblptrh	equ	0xFF7
  3857                           tblptrl	equ	0xFF6
  3858                           tablat	equ	0xFF5
  3859                           prodh	equ	0xFF4
  3860                           prodl	equ	0xFF3
  3861                           intcon	equ	0xFF2
  3862                           postinc0	equ	0xFEE
  3863                           wreg	equ	0xFE8
  3864                           indf1	equ	0xFE7
  3865                           postdec1	equ	0xFE5
  3866                           fsr1h	equ	0xFE2
  3867                           fsr1l	equ	0xFE1
  3868                           indf2	equ	0xFDF
  3869                           postinc2	equ	0xFDE
  3870                           postdec2	equ	0xFDD
  3871                           fsr2h	equ	0xFDA
  3872                           fsr2l	equ	0xFD9
  3873                           status	equ	0xFD8
  3874                           
  3875 ;; *************** function _SetChanADC *****************
  3876 ;; Defined at:
  3877 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  channel         1    wreg     unsigned char 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;  channel         1    1[BANK1 ] unsigned char 
  3882 ;; Return value:  Size  Location     Type
  3883 ;;		None               void
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3891 ;;      Params:         0       0       0       0       0
  3892 ;;      Locals:         0       0       1       0       0
  3893 ;;      Temps:          0       0       1       0       0
  3894 ;;      Totals:         0       0       2       0       0
  3895 ;;Total ram usage:        2 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:   11
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_main
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text22
  3906  001E1C                     __ptext22:
  3907                           	opt stack 0
  3908  001E1C                     _SetChanADC:
  3909                           	opt stack 19
  3910                           
  3911                           ; BSR set to: 1
  3912                           ;incstack = 0
  3913                           ;SetChanADC@channel stored from wreg
  3914  001E1C  CFE8 F187          	movff	wreg,SetChanADC@channel
  3915  001E20  CFC2 F186          	movff	4034,??_SetChanADC	;volatile
  3916  001E24  0EC3               	movlw	195
  3917  001E26  0101               	movlb	1	; () banked
  3918  001E28  1786               	andwf	??_SetChanADC& (0+255),f,b
  3919  001E2A  0101               	movlb	1	; () banked
  3920  001E2C  0101               	movlb	1	; () banked
  3921  001E2E  90D8               	bcf	status,0,c
  3922  001E30  3187               	rrcf	SetChanADC@channel& (0+255),w,b
  3923  001E32  0B3C               	andlw	60
  3924  001E34  0101               	movlb	1	; () banked
  3925  001E36  1186               	iorwf	??_SetChanADC& (0+255),w,b
  3926  001E38  6EC2               	movwf	4034,c	;volatile
  3927                           
  3928                           ; BSR set to: 1
  3929  001E3A  0012               	return	
  3930  001E3C                     __end_of_SetChanADC:
  3931                           	opt stack 0
  3932                           tblptru	equ	0xFF8
  3933                           tblptrh	equ	0xFF7
  3934                           tblptrl	equ	0xFF6
  3935                           tablat	equ	0xFF5
  3936                           prodh	equ	0xFF4
  3937                           prodl	equ	0xFF3
  3938                           intcon	equ	0xFF2
  3939                           postinc0	equ	0xFEE
  3940                           wreg	equ	0xFE8
  3941                           indf1	equ	0xFE7
  3942                           postdec1	equ	0xFE5
  3943                           fsr1h	equ	0xFE2
  3944                           fsr1l	equ	0xFE1
  3945                           indf2	equ	0xFDF
  3946                           postinc2	equ	0xFDE
  3947                           postdec2	equ	0xFDD
  3948                           fsr2h	equ	0xFDA
  3949                           fsr2l	equ	0xFD9
  3950                           status	equ	0xFD8
  3951                           
  3952 ;; *************** function _OpenUSART *****************
  3953 ;; Defined at:
  3954 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  config          1    wreg     unsigned char 
  3957 ;;  spbrg           2    0[BANK1 ] unsigned int 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  config          1    5[BANK1 ] unsigned char 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;		None               void
  3962 ;; Registers used:
  3963 ;;		wreg, status,2
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3969 ;;      Params:         0       0       2       0       0
  3970 ;;      Locals:         0       0       1       0       0
  3971 ;;      Temps:          0       0       3       0       0
  3972 ;;      Totals:         0       0       6       0       0
  3973 ;;Total ram usage:        6 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:   11
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_main
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           	psect	text23
  3984  001474                     __ptext23:
  3985                           	opt stack 0
  3986  001474                     _OpenUSART:
  3987                           	opt stack 19
  3988                           
  3989                           ; BSR set to: 1
  3990                           ;incstack = 0
  3991                           ;OpenUSART@config stored from wreg
  3992  001474  CFE8 F18B          	movff	wreg,OpenUSART@config
  3993  001478  0E00               	movlw	0
  3994  00147A  6EAC               	movwf	4012,c	;volatile
  3995  00147C  0E00               	movlw	0
  3996  00147E  6EAB               	movwf	4011,c	;volatile
  3997  001480  0101               	movlb	1	; () banked
  3998  001482  0101               	movlb	1	; () banked
  3999  001484  B18B               	btfsc	OpenUSART@config& (0+255),0,b
  4000                           
  4001                           ; BSR set to: 1
  4002  001486  88AC               	bsf	4012,4,c	;volatile
  4003                           
  4004                           ; BSR set to: 1
  4005                           
  4006                           ; BSR set to: 1
  4007  001488  0101               	movlb	1	; () banked
  4008  00148A  0101               	movlb	1	; () banked
  4009  00148C  A38B               	btfss	OpenUSART@config& (0+255),1,b
  4010  00148E  D002               	goto	l3886
  4011                           
  4012                           ; BSR set to: 1
  4013  001490  8CAC               	bsf	4012,6,c	;volatile
  4014  001492  8CAB               	bsf	4011,6,c	;volatile
  4015  001494                     l3886:
  4016                           
  4017                           ; BSR set to: 1
  4018  001494  0101               	movlb	1	; () banked
  4019  001496  0101               	movlb	1	; () banked
  4020  001498  B58B               	btfsc	OpenUSART@config& (0+255),2,b
  4021                           
  4022                           ; BSR set to: 1
  4023  00149A  8EAC               	bsf	4012,7,c	;volatile
  4024                           
  4025                           ; BSR set to: 1
  4026                           
  4027                           ; BSR set to: 1
  4028  00149C  0101               	movlb	1	; () banked
  4029  00149E  0101               	movlb	1	; () banked
  4030  0014A0  A78B               	btfss	OpenUSART@config& (0+255),3,b
  4031  0014A2  D002               	goto	l561
  4032                           
  4033                           ; BSR set to: 1
  4034  0014A4  88AB               	bsf	4011,4,c	;volatile
  4035  0014A6  D001               	goto	l3894
  4036  0014A8                     l561:
  4037                           
  4038                           ; BSR set to: 1
  4039  0014A8  8AAB               	bsf	4011,5,c	;volatile
  4040  0014AA                     l3894:
  4041                           
  4042                           ; BSR set to: 1
  4043  0014AA  0101               	movlb	1	; () banked
  4044  0014AC  0101               	movlb	1	; () banked
  4045  0014AE  B98B               	btfsc	OpenUSART@config& (0+255),4,b
  4046                           
  4047                           ; BSR set to: 1
  4048  0014B0  84AC               	bsf	4012,2,c	;volatile
  4049                           
  4050                           ; BSR set to: 1
  4051  0014B2  989E               	bcf	3998,4,c	;volatile
  4052                           
  4053                           ; BSR set to: 1
  4054  0014B4  0101               	movlb	1	; () banked
  4055  0014B6  0101               	movlb	1	; () banked
  4056  0014B8  BB8B               	btfsc	OpenUSART@config& (0+255),5,b
  4057                           
  4058                           ; BSR set to: 1
  4059  0014BA  86AB               	bsf	4011,3,c	;volatile
  4060                           
  4061                           ; BSR set to: 1
  4062                           
  4063                           ; BSR set to: 1
  4064  0014BC  0101               	movlb	1	; () banked
  4065  0014BE  0101               	movlb	1	; () banked
  4066  0014C0  AD8B               	btfss	OpenUSART@config& (0+255),6,b
  4067  0014C2  D002               	goto	l565
  4068                           
  4069                           ; BSR set to: 1
  4070  0014C4  8A9D               	bsf	3997,5,c	;volatile
  4071  0014C6  D001               	goto	l566
  4072  0014C8                     l565:
  4073                           
  4074                           ; BSR set to: 1
  4075  0014C8  9A9D               	bcf	3997,5,c	;volatile
  4076  0014CA                     l566:
  4077                           
  4078                           ; BSR set to: 1
  4079  0014CA  9A9E               	bcf	3998,5,c	;volatile
  4080                           
  4081                           ; BSR set to: 1
  4082  0014CC  0101               	movlb	1	; () banked
  4083  0014CE  0101               	movlb	1	; () banked
  4084  0014D0  AF8B               	btfss	OpenUSART@config& (0+255),7,b
  4085  0014D2  D002               	goto	l567
  4086                           
  4087                           ; BSR set to: 1
  4088  0014D4  889D               	bsf	3997,4,c	;volatile
  4089  0014D6  D001               	goto	l568
  4090  0014D8                     l567:
  4091                           
  4092                           ; BSR set to: 1
  4093  0014D8  989D               	bcf	3997,4,c	;volatile
  4094  0014DA                     l568:
  4095                           
  4096                           ; BSR set to: 1
  4097  0014DA  C186  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4098                           
  4099                           ; BSR set to: 1
  4100  0014DE  0101               	movlb	1	; () banked
  4101  0014E0  C187  F188         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4102  0014E4  C188  F189         	movff	??_OpenUSART,??_OpenUSART+1
  4103  0014E8  0101               	movlb	1	; () banked
  4104  0014EA  6B8A               	clrf	(??_OpenUSART+2)& (0+255),b
  4105  0014EC  0101               	movlb	1	; () banked
  4106  0014EE  5189               	movf	(??_OpenUSART+1)& (0+255),w,b
  4107  0014F0  6EB0               	movwf	4016,c	;volatile
  4108                           
  4109                           ; BSR set to: 1
  4110  0014F2  8AAC               	bsf	4012,5,c	;volatile
  4111                           
  4112                           ; BSR set to: 1
  4113  0014F4  8EAB               	bsf	4011,7,c	;volatile
  4114                           
  4115                           ; BSR set to: 1
  4116  0014F6  9C94               	bcf	3988,6,c	;volatile
  4117                           
  4118                           ; BSR set to: 1
  4119  0014F8  8E94               	bsf	3988,7,c	;volatile
  4120                           
  4121                           ; BSR set to: 1
  4122  0014FA  A8AC               	btfss	4012,4,c	;volatile
  4123  0014FC  0012               	return	
  4124                           
  4125                           ; BSR set to: 1
  4126  0014FE  BEAC               	btfsc	4012,7,c	;volatile
  4127  001500  0012               	return	
  4128                           
  4129                           ; BSR set to: 1
  4130  001502  8C94               	bsf	3988,6,c	;volatile
  4131  001504  0012               	return	
  4132  001506                     __end_of_OpenUSART:
  4133                           	opt stack 0
  4134                           tblptru	equ	0xFF8
  4135                           tblptrh	equ	0xFF7
  4136                           tblptrl	equ	0xFF6
  4137                           tablat	equ	0xFF5
  4138                           prodh	equ	0xFF4
  4139                           prodl	equ	0xFF3
  4140                           intcon	equ	0xFF2
  4141                           postinc0	equ	0xFEE
  4142                           wreg	equ	0xFE8
  4143                           indf1	equ	0xFE7
  4144                           postdec1	equ	0xFE5
  4145                           fsr1h	equ	0xFE2
  4146                           fsr1l	equ	0xFE1
  4147                           indf2	equ	0xFDF
  4148                           postinc2	equ	0xFDE
  4149                           postdec2	equ	0xFDD
  4150                           fsr2h	equ	0xFDA
  4151                           fsr2l	equ	0xFD9
  4152                           status	equ	0xFD8
  4153                           
  4154 ;; *************** function _OpenTimer1 *****************
  4155 ;; Defined at:
  4156 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  config          1    wreg     unsigned char 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  config          1    0[BANK1 ] unsigned char 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;		None               void
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, status,0
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4170 ;;      Params:         0       0       0       0       0
  4171 ;;      Locals:         0       0       1       0       0
  4172 ;;      Temps:          0       0       0       0       0
  4173 ;;      Totals:         0       0       1       0       0
  4174 ;;Total ram usage:        1 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:   11
  4177 ;; This function calls:
  4178 ;;		Nothing
  4179 ;; This function is called by:
  4180 ;;		_main
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text24
  4185  001C20                     __ptext24:
  4186                           	opt stack 0
  4187  001C20                     _OpenTimer1:
  4188                           	opt stack 19
  4189                           
  4190                           ; BSR set to: 1
  4191                           ;incstack = 0
  4192                           ;OpenTimer1@config stored from wreg
  4193  001C20  CFE8 F186          	movff	wreg,OpenTimer1@config
  4194  001C24  0101               	movlb	1	; () banked
  4195  001C26  0101               	movlb	1	; () banked
  4196  001C28  5186               	movf	OpenTimer1@config& (0+255),w,b
  4197  001C2A  0B7E               	andlw	126
  4198  001C2C  6ECD               	movwf	4045,c	;volatile
  4199                           
  4200                           ; BSR set to: 1
  4201  001C2E  0101               	movlb	1	; () banked
  4202  001C30  0101               	movlb	1	; () banked
  4203  001C32  AD86               	btfss	OpenTimer1@config& (0+255),6,b
  4204  001C34  D002               	goto	l524
  4205                           
  4206                           ; BSR set to: 1
  4207  001C36  8ECD               	bsf	4045,7,c	;volatile
  4208  001C38  D001               	goto	l3846
  4209  001C3A                     l524:
  4210                           
  4211                           ; BSR set to: 1
  4212  001C3A  9ECD               	bcf	4045,7,c	;volatile
  4213  001C3C                     l3846:
  4214                           
  4215                           ; BSR set to: 1
  4216  001C3C  0E00               	movlw	0
  4217  001C3E  6ECF               	movwf	4047,c	;volatile
  4218  001C40  0E00               	movlw	0
  4219  001C42  6ECE               	movwf	4046,c	;volatile
  4220                           
  4221                           ; BSR set to: 1
  4222  001C44  909E               	bcf	3998,0,c	;volatile
  4223                           
  4224                           ; BSR set to: 1
  4225  001C46  0101               	movlb	1	; () banked
  4226  001C48  0101               	movlb	1	; () banked
  4227  001C4A  AF86               	btfss	OpenTimer1@config& (0+255),7,b
  4228  001C4C  D002               	goto	l526
  4229                           
  4230                           ; BSR set to: 1
  4231  001C4E  809D               	bsf	3997,0,c	;volatile
  4232  001C50  D001               	goto	l527
  4233  001C52                     l526:
  4234                           
  4235                           ; BSR set to: 1
  4236  001C52  909D               	bcf	3997,0,c	;volatile
  4237  001C54                     l527:
  4238                           
  4239                           ; BSR set to: 1
  4240  001C54  80CD               	bsf	4045,0,c	;volatile
  4241                           
  4242                           ; BSR set to: 1
  4243  001C56  0012               	return	
  4244  001C58                     __end_of_OpenTimer1:
  4245                           	opt stack 0
  4246                           tblptru	equ	0xFF8
  4247                           tblptrh	equ	0xFF7
  4248                           tblptrl	equ	0xFF6
  4249                           tablat	equ	0xFF5
  4250                           prodh	equ	0xFF4
  4251                           prodl	equ	0xFF3
  4252                           intcon	equ	0xFF2
  4253                           postinc0	equ	0xFEE
  4254                           wreg	equ	0xFE8
  4255                           indf1	equ	0xFE7
  4256                           postdec1	equ	0xFE5
  4257                           fsr1h	equ	0xFE2
  4258                           fsr1l	equ	0xFE1
  4259                           indf2	equ	0xFDF
  4260                           postinc2	equ	0xFDE
  4261                           postdec2	equ	0xFDD
  4262                           fsr2h	equ	0xFDA
  4263                           fsr2l	equ	0xFD9
  4264                           status	equ	0xFD8
  4265                           
  4266 ;; *************** function _OpenTimer0 *****************
  4267 ;; Defined at:
  4268 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  config          1    wreg     unsigned char 
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;  config          1    0[BANK1 ] unsigned char 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;		None               void
  4275 ;; Registers used:
  4276 ;;		wreg, status,2, status,0
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4282 ;;      Params:         0       0       0       0       0
  4283 ;;      Locals:         0       0       1       0       0
  4284 ;;      Temps:          0       0       0       0       0
  4285 ;;      Totals:         0       0       1       0       0
  4286 ;;Total ram usage:        1 bytes
  4287 ;; Hardware stack levels used:    1
  4288 ;; Hardware stack levels required when called:   11
  4289 ;; This function calls:
  4290 ;;		Nothing
  4291 ;; This function is called by:
  4292 ;;		_main
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text25
  4297  001D5E                     __ptext25:
  4298                           	opt stack 0
  4299  001D5E                     _OpenTimer0:
  4300                           	opt stack 19
  4301                           
  4302                           ; BSR set to: 1
  4303                           ;incstack = 0
  4304                           ;OpenTimer0@config stored from wreg
  4305  001D5E  CFE8 F186          	movff	wreg,OpenTimer0@config
  4306  001D62  0101               	movlb	1	; () banked
  4307  001D64  0101               	movlb	1	; () banked
  4308  001D66  5186               	movf	OpenTimer0@config& (0+255),w,b
  4309  001D68  0B7F               	andlw	127
  4310  001D6A  6ED5               	movwf	4053,c	;volatile
  4311                           
  4312                           ; BSR set to: 1
  4313  001D6C  0E00               	movlw	0
  4314  001D6E  6ED7               	movwf	4055,c	;volatile
  4315                           
  4316                           ; BSR set to: 1
  4317  001D70  0E00               	movlw	0
  4318  001D72  6ED6               	movwf	4054,c	;volatile
  4319                           
  4320                           ; BSR set to: 1
  4321  001D74  94F2               	bcf	intcon,2,c	;volatile
  4322                           
  4323                           ; BSR set to: 1
  4324  001D76  0101               	movlb	1	; () banked
  4325  001D78  0101               	movlb	1	; () banked
  4326  001D7A  AF86               	btfss	OpenTimer0@config& (0+255),7,b
  4327  001D7C  D002               	goto	l500
  4328                           
  4329                           ; BSR set to: 1
  4330  001D7E  8AF2               	bsf	intcon,5,c	;volatile
  4331  001D80  D001               	goto	l501
  4332  001D82                     l500:
  4333                           
  4334                           ; BSR set to: 1
  4335  001D82  9AF2               	bcf	intcon,5,c	;volatile
  4336  001D84                     l501:
  4337                           
  4338                           ; BSR set to: 1
  4339  001D84  8ED5               	bsf	4053,7,c	;volatile
  4340                           
  4341                           ; BSR set to: 1
  4342  001D86  0012               	return	
  4343  001D88                     __end_of_OpenTimer0:
  4344                           	opt stack 0
  4345                           tblptru	equ	0xFF8
  4346                           tblptrh	equ	0xFF7
  4347                           tblptrl	equ	0xFF6
  4348                           tablat	equ	0xFF5
  4349                           prodh	equ	0xFF4
  4350                           prodl	equ	0xFF3
  4351                           intcon	equ	0xFF2
  4352                           postinc0	equ	0xFEE
  4353                           wreg	equ	0xFE8
  4354                           indf1	equ	0xFE7
  4355                           postdec1	equ	0xFE5
  4356                           fsr1h	equ	0xFE2
  4357                           fsr1l	equ	0xFE1
  4358                           indf2	equ	0xFDF
  4359                           postinc2	equ	0xFDE
  4360                           postdec2	equ	0xFDD
  4361                           fsr2h	equ	0xFDA
  4362                           fsr2l	equ	0xFD9
  4363                           status	equ	0xFD8
  4364                           
  4365 ;; *************** function _OpenADC *****************
  4366 ;; Defined at:
  4367 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  config          1    wreg     unsigned char 
  4370 ;;  config2         1    0[BANK1 ] unsigned char 
  4371 ;;  portconfig      1    1[BANK1 ] unsigned char 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  config          1    4[BANK1 ] unsigned char 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;		None               void
  4376 ;; Registers used:
  4377 ;;		wreg, status,2, status,0
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4383 ;;      Params:         0       0       2       0       0
  4384 ;;      Locals:         0       0       1       0       0
  4385 ;;      Temps:          0       0       2       0       0
  4386 ;;      Totals:         0       0       5       0       0
  4387 ;;Total ram usage:        5 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:   11
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_main
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text26
  4398  001590                     __ptext26:
  4399                           	opt stack 0
  4400  001590                     _OpenADC:
  4401                           	opt stack 19
  4402                           
  4403                           ; BSR set to: 1
  4404                           ;incstack = 0
  4405                           ;OpenADC@config stored from wreg
  4406  001590  CFE8 F18A          	movff	wreg,OpenADC@config
  4407  001594  0E00               	movlw	0
  4408  001596  6EC2               	movwf	4034,c	;volatile
  4409  001598  0E00               	movlw	0
  4410  00159A  6EC0               	movwf	4032,c	;volatile
  4411  00159C  0101               	movlb	1	; () banked
  4412  00159E  0101               	movlb	1	; () banked
  4413  0015A0  90D8               	bcf	status,0,c
  4414  0015A2  3186               	rrcf	OpenADC@config2& (0+255),w,b
  4415  0015A4  0B3C               	andlw	60
  4416  0015A6  6EC2               	movwf	4034,c	;volatile
  4417                           
  4418                           ; BSR set to: 1
  4419  0015A8  C186  F188         	movff	OpenADC@config2,??_OpenADC
  4420  0015AC  0101               	movlb	1	; () banked
  4421  0015AE  3B88               	swapf	??_OpenADC& (0+255),f,b
  4422  0015B0  0EF0               	movlw	240
  4423  0015B2  1788               	andwf	??_OpenADC& (0+255),f,b
  4424  0015B4  0E30               	movlw	48
  4425  0015B6  0101               	movlb	1	; () banked
  4426  0015B8  1788               	andwf	??_OpenADC& (0+255),f,b
  4427  0015BA  0101               	movlb	1	; () banked
  4428  0015BC  0101               	movlb	1	; () banked
  4429  0015BE  5187               	movf	OpenADC@portconfig& (0+255),w,b
  4430  0015C0  0B0F               	andlw	15
  4431  0015C2  0101               	movlb	1	; () banked
  4432  0015C4  1188               	iorwf	??_OpenADC& (0+255),w,b
  4433  0015C6  6EC1               	movwf	4033,c	;volatile
  4434                           
  4435                           ; BSR set to: 1
  4436  0015C8  C18A  F188         	movff	OpenADC@config,??_OpenADC
  4437  0015CC  0101               	movlb	1	; () banked
  4438  0015CE  90D8               	bcf	status,0,c
  4439  0015D0  3788               	rlcf	??_OpenADC& (0+255),f,b
  4440  0015D2  0101               	movlb	1	; () banked
  4441  0015D4  90D8               	bcf	status,0,c
  4442  0015D6  3788               	rlcf	??_OpenADC& (0+255),f,b
  4443  0015D8  0E38               	movlw	56
  4444  0015DA  0101               	movlb	1	; () banked
  4445  0015DC  1788               	andwf	??_OpenADC& (0+255),f,b
  4446  0015DE  C18A  F189         	movff	OpenADC@config,??_OpenADC+1
  4447  0015E2  0101               	movlb	1	; () banked
  4448  0015E4  3B89               	swapf	(??_OpenADC+1)& (0+255),f,b
  4449  0015E6  0E0F               	movlw	15
  4450  0015E8  1789               	andwf	(??_OpenADC+1)& (0+255),f,b
  4451  0015EA  0E07               	movlw	7
  4452  0015EC  0101               	movlb	1	; () banked
  4453  0015EE  1789               	andwf	(??_OpenADC+1)& (0+255),f,b
  4454  0015F0  0101               	movlb	1	; () banked
  4455  0015F2  0101               	movlb	1	; () banked
  4456  0015F4  518A               	movf	OpenADC@config& (0+255),w,b
  4457  0015F6  0B80               	andlw	128
  4458  0015F8  0101               	movlb	1	; () banked
  4459  0015FA  1189               	iorwf	(??_OpenADC+1)& (0+255),w,b
  4460  0015FC  0101               	movlb	1	; () banked
  4461  0015FE  1188               	iorwf	??_OpenADC& (0+255),w,b
  4462  001600  6EC0               	movwf	4032,c	;volatile
  4463                           
  4464                           ; BSR set to: 1
  4465  001602  0101               	movlb	1	; () banked
  4466  001604  0101               	movlb	1	; () banked
  4467  001606  AF86               	btfss	OpenADC@config2& (0+255),7,b
  4468  001608  D003               	goto	l481
  4469                           
  4470                           ; BSR set to: 1
  4471  00160A  9C9E               	bcf	3998,6,c	;volatile
  4472  00160C  8C9D               	bsf	3997,6,c	;volatile
  4473  00160E  8CF2               	bsf	intcon,6,c	;volatile
  4474  001610                     l481:
  4475                           
  4476                           ; BSR set to: 1
  4477  001610  80C2               	bsf	4034,0,c	;volatile
  4478                           
  4479                           ; BSR set to: 1
  4480  001612  0012               	return	
  4481  001614                     __end_of_OpenADC:
  4482                           	opt stack 0
  4483                           tblptru	equ	0xFF8
  4484                           tblptrh	equ	0xFF7
  4485                           tblptrl	equ	0xFF6
  4486                           tablat	equ	0xFF5
  4487                           prodh	equ	0xFF4
  4488                           prodl	equ	0xFF3
  4489                           intcon	equ	0xFF2
  4490                           postinc0	equ	0xFEE
  4491                           wreg	equ	0xFE8
  4492                           indf1	equ	0xFE7
  4493                           postdec1	equ	0xFE5
  4494                           fsr1h	equ	0xFE2
  4495                           fsr1l	equ	0xFE1
  4496                           indf2	equ	0xFDF
  4497                           postinc2	equ	0xFDE
  4498                           postdec2	equ	0xFDD
  4499                           fsr2h	equ	0xFDA
  4500                           fsr2l	equ	0xFD9
  4501                           status	equ	0xFD8
  4502                           
  4503 ;; *************** function _FromMainLow_sendmsg *****************
  4504 ;; Defined at:
  4505 ;;		line 150 in file "../src/messages.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  length          1    wreg     unsigned char 
  4508 ;;  msgtype         1   22[BANK1 ] unsigned char 
  4509 ;;  data            2   23[BANK1 ] PTR void 
  4510 ;;		 -> main@msgbuffer(11), 
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;  length          1   25[BANK1 ] unsigned char 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  1    wreg      char 
  4515 ;; Registers used:
  4516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4522 ;;      Params:         0       0       3       0       0
  4523 ;;      Locals:         0       0       1       0       0
  4524 ;;      Temps:          0       0       0       0       0
  4525 ;;      Totals:         0       0       4       0       0
  4526 ;;Total ram usage:        4 bytes
  4527 ;; Hardware stack levels used:    1
  4528 ;; Hardware stack levels required when called:   13
  4529 ;; This function calls:
  4530 ;;		_send_msg
  4531 ;; This function is called by:
  4532 ;;		_main
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text27
  4537  001CC4                     __ptext27:
  4538                           	opt stack 0
  4539  001CC4                     _FromMainLow_sendmsg:
  4540                           	opt stack 17
  4541                           
  4542                           ; BSR set to: 1
  4543                           ;incstack = 0
  4544                           ;FromMainLow_sendmsg@length stored from wreg
  4545  001CC4  CFE8 F19F          	movff	wreg,FromMainLow_sendmsg@length
  4546                           
  4547                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  4548                           ;	Return value of _FromMainLow_sendmsg is never used
  4549  001CC8  0102               	movlb	2	; () banked
  4550  001CCA  0E02               	movlw	high _FromMainLow_MQ
  4551  001CCC  0101               	movlb	1	; () banked
  4552  001CCE  0101               	movlb	1	; () banked
  4553  001CD0  6F91               	movwf	(send_msg@qptr+1)& (0+255),b
  4554  001CD2  0102               	movlb	2	; () banked
  4555  001CD4  0E43               	movlw	low _FromMainLow_MQ
  4556  001CD6  0101               	movlb	1	; () banked
  4557  001CD8  0101               	movlb	1	; () banked
  4558  001CDA  6F90               	movwf	send_msg@qptr& (0+255),b
  4559  001CDC  C19F  F192         	movff	FromMainLow_sendmsg@length,send_msg@length
  4560  001CE0  C19C  F193         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  4561  001CE4  0101               	movlb	1	; () banked
  4562  001CE6  0101               	movlb	1	; () banked
  4563  001CE8  C19E  F195         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  4564  001CEC  0101               	movlb	1	; () banked
  4565  001CEE  0101               	movlb	1	; () banked
  4566  001CF0  C19D  F194         	movff	FromMainLow_sendmsg@data,send_msg@data
  4567  001CF4  EC36  F006         	call	_send_msg	;wreg free
  4568  001CF8  0012               	return	
  4569  001CFA                     __end_of_FromMainLow_sendmsg:
  4570                           	opt stack 0
  4571                           tblptru	equ	0xFF8
  4572                           tblptrh	equ	0xFF7
  4573                           tblptrl	equ	0xFF6
  4574                           tablat	equ	0xFF5
  4575                           prodh	equ	0xFF4
  4576                           prodl	equ	0xFF3
  4577                           intcon	equ	0xFF2
  4578                           postinc0	equ	0xFEE
  4579                           wreg	equ	0xFE8
  4580                           indf1	equ	0xFE7
  4581                           postdec1	equ	0xFE5
  4582                           fsr1h	equ	0xFE2
  4583                           fsr1l	equ	0xFE1
  4584                           indf2	equ	0xFDF
  4585                           postinc2	equ	0xFDE
  4586                           postdec2	equ	0xFDD
  4587                           fsr2h	equ	0xFDA
  4588                           fsr2l	equ	0xFD9
  4589                           status	equ	0xFD8
  4590                           
  4591 ;; *************** function _send_msg *****************
  4592 ;; Defined at:
  4593 ;;		line 24 in file "../src/messages.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4596 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4597 ;;  length          1   12[BANK1 ] unsigned char 
  4598 ;;  msgtype         1   13[BANK1 ] unsigned char 
  4599 ;;  data            2   14[BANK1 ] PTR void 
  4600 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), 
  4601 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  4604 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4605 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4606 ;;  tlength         2   17[BANK1 ] unsigned int 
  4607 ;;  slot            1   19[BANK1 ] unsigned char 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  1    wreg      char 
  4610 ;; Registers used:
  4611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4617 ;;      Params:         0       0       6       0       0
  4618 ;;      Locals:         0       0       5       0       0
  4619 ;;      Temps:          0       0       1       0       0
  4620 ;;      Totals:         0       0      12       0       0
  4621 ;;Total ram usage:       12 bytes
  4622 ;; Hardware stack levels used:    1
  4623 ;; Hardware stack levels required when called:   12
  4624 ;; This function calls:
  4625 ;;		___awmod
  4626 ;;		_memcpy
  4627 ;; This function is called by:
  4628 ;;		_FromMainLow_sendmsg
  4629 ;;		_FromMainHigh_sendmsg
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text28
  4634  000C6C                     __ptext28:
  4635                           	opt stack 0
  4636  000C6C                     _send_msg:
  4637                           	opt stack 16
  4638                           
  4639                           ;messages.c: 25: unsigned char slot;
  4640                           ;messages.c: 27: msg *qmsg;
  4641                           ;messages.c: 28: size_t tlength = length;
  4642                           
  4643                           ;incstack = 0
  4644  000C6C  0101               	movlb	1	; () banked
  4645  000C6E  0101               	movlb	1	; () banked
  4646  000C70  C192  F197         	movff	send_msg@length,send_msg@tlength
  4647  000C74  0101               	movlb	1	; () banked
  4648  000C76  0101               	movlb	1	; () banked
  4649  000C78  6B98               	clrf	(send_msg@tlength+1)& (0+255),b
  4650                           
  4651                           ; BSR set to: 1
  4652                           ;messages.c: 38: slot = qptr->cur_write_ind;
  4653  000C7A  0101               	movlb	1	; () banked
  4654  000C7C  EE20 F041          	lfsr	2,65
  4655  000C80  0101               	movlb	1	; () banked
  4656  000C82  5190               	movf	send_msg@qptr& (0+255),w,b
  4657  000C84  26D9               	addwf	fsr2l,f,c
  4658  000C86  0101               	movlb	1	; () banked
  4659  000C88  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  4660  000C8A  22DA               	addwfc	fsr2h,f,c
  4661  000C8C  50DF               	movf	indf2,w,c
  4662  000C8E  0101               	movlb	1	; () banked
  4663  000C90  0101               	movlb	1	; () banked
  4664  000C92  6F99               	movwf	send_msg@slot& (0+255),b
  4665                           
  4666                           ; BSR set to: 1
  4667                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  4668  000C94  0101               	movlb	1	; () banked
  4669  000C96  0101               	movlb	1	; () banked
  4670  000C98  5199               	movf	send_msg@slot& (0+255),w,b
  4671  000C9A  0D0D               	mullw	13
  4672  000C9C  50F3               	movf	prodl,w,c
  4673  000C9E  0101               	movlb	1	; () banked
  4674  000CA0  0101               	movlb	1	; () banked
  4675  000CA2  2590               	addwf	send_msg@qptr& (0+255),w,b
  4676  000CA4  0101               	movlb	1	; () banked
  4677  000CA6  0101               	movlb	1	; () banked
  4678  000CA8  6F9A               	movwf	send_msg@qmsg& (0+255),b
  4679  000CAA  50F4               	movf	prodh,w,c
  4680  000CAC  0101               	movlb	1	; () banked
  4681  000CAE  0101               	movlb	1	; () banked
  4682  000CB0  2191               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  4683  000CB2  0101               	movlb	1	; () banked
  4684  000CB4  6F9B               	movwf	(send_msg@qmsg+1)& (0+255),b
  4685                           
  4686                           ; BSR set to: 1
  4687                           ;messages.c: 41: if (qmsg->full != 0) {
  4688  000CB6  C19A  FFD9         	movff	send_msg@qmsg,fsr2l
  4689  000CBA  C19B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4690  000CBE  50DF               	movf	indf2,w,c
  4691  000CC0  B4D8               	btfsc	status,2,c
  4692  000CC2  D002               	goto	l4020
  4693                           
  4694                           ; BSR set to: 1
  4695                           ;messages.c: 42: return (-1);
  4696  000CC4  0EFF               	movlw	255
  4697  000CC6  0012               	return	
  4698  000CC8                     l4020:
  4699                           
  4700                           ; BSR set to: 1
  4701                           ;messages.c: 43: }
  4702                           ;messages.c: 46: qmsg->length = length;
  4703  000CC8  0101               	movlb	1	; () banked
  4704  000CCA  EE20 F001          	lfsr	2,1
  4705  000CCE  0101               	movlb	1	; () banked
  4706  000CD0  519A               	movf	send_msg@qmsg& (0+255),w,b
  4707  000CD2  26D9               	addwf	fsr2l,f,c
  4708  000CD4  0101               	movlb	1	; () banked
  4709  000CD6  519B               	movf	(send_msg@qmsg+1)& (0+255),w,b
  4710  000CD8  22DA               	addwfc	fsr2h,f,c
  4711  000CDA  0101               	movlb	1	; () banked
  4712  000CDC  C192  FFDF         	movff	send_msg@length,indf2
  4713                           
  4714                           ;messages.c: 47: qmsg->msgtype = msgtype;
  4715  000CE0  0101               	movlb	1	; () banked
  4716  000CE2  EE20 F002          	lfsr	2,2
  4717  000CE6  0101               	movlb	1	; () banked
  4718  000CE8  519A               	movf	send_msg@qmsg& (0+255),w,b
  4719  000CEA  26D9               	addwf	fsr2l,f,c
  4720  000CEC  0101               	movlb	1	; () banked
  4721  000CEE  519B               	movf	(send_msg@qmsg+1)& (0+255),w,b
  4722  000CF0  22DA               	addwfc	fsr2h,f,c
  4723  000CF2  0101               	movlb	1	; () banked
  4724  000CF4  C193  FFDF         	movff	send_msg@msgtype,indf2
  4725                           
  4726                           ; BSR set to: 1
  4727                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  4728  000CF8  0E03               	movlw	3
  4729  000CFA  0101               	movlb	1	; () banked
  4730  000CFC  0101               	movlb	1	; () banked
  4731  000CFE  259A               	addwf	send_msg@qmsg& (0+255),w,b
  4732  000D00  0101               	movlb	1	; () banked
  4733  000D02  0101               	movlb	1	; () banked
  4734  000D04  6F86               	movwf	memcpy@d1& (0+255),b
  4735  000D06  0E00               	movlw	0
  4736  000D08  0101               	movlb	1	; () banked
  4737  000D0A  0101               	movlb	1	; () banked
  4738  000D0C  219B               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  4739  000D0E  0101               	movlb	1	; () banked
  4740  000D10  6F87               	movwf	(memcpy@d1+1)& (0+255),b
  4741  000D12  0101               	movlb	1	; () banked
  4742  000D14  0101               	movlb	1	; () banked
  4743  000D16  C195  F189         	movff	send_msg@data+1,memcpy@s1+1
  4744  000D1A  0101               	movlb	1	; () banked
  4745  000D1C  0101               	movlb	1	; () banked
  4746  000D1E  C194  F188         	movff	send_msg@data,memcpy@s1
  4747  000D22  C197  F18A         	movff	send_msg@tlength,memcpy@n
  4748  000D26  C198  F18B         	movff	send_msg@tlength+1,memcpy@n+1
  4749  000D2A  ECA4  F00C         	call	_memcpy	;wreg free
  4750                           
  4751                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  4752  000D2E  0101               	movlb	1	; () banked
  4753  000D30  EE20 F041          	lfsr	2,65
  4754  000D34  0101               	movlb	1	; () banked
  4755  000D36  5190               	movf	send_msg@qptr& (0+255),w,b
  4756  000D38  26D9               	addwf	fsr2l,f,c
  4757  000D3A  0101               	movlb	1	; () banked
  4758  000D3C  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  4759  000D3E  22DA               	addwfc	fsr2h,f,c
  4760  000D40  0101               	movlb	1	; () banked
  4761  000D42  EE10 F041          	lfsr	1,65
  4762  000D46  0101               	movlb	1	; () banked
  4763  000D48  5190               	movf	send_msg@qptr& (0+255),w,b
  4764  000D4A  26E1               	addwf	fsr1l,f,c
  4765  000D4C  0101               	movlb	1	; () banked
  4766  000D4E  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  4767  000D50  22E2               	addwfc	fsr1h,f,c
  4768  000D52  50E7               	movf	indf1,w,c
  4769  000D54  0101               	movlb	1	; () banked
  4770  000D56  6F96               	movwf	??_send_msg& (0+255),b
  4771  000D58  0E01               	movlw	1
  4772  000D5A  0101               	movlb	1	; () banked
  4773  000D5C  2596               	addwf	??_send_msg& (0+255),w,b
  4774  000D5E  0101               	movlb	1	; () banked
  4775  000D60  0101               	movlb	1	; () banked
  4776  000D62  6F86               	movwf	___awmod@dividend& (0+255),b
  4777  000D64  0101               	movlb	1	; () banked
  4778  000D66  0101               	movlb	1	; () banked
  4779  000D68  6B87               	clrf	(___awmod@dividend+1)& (0+255),b
  4780  000D6A  0E00               	movlw	0
  4781  000D6C  2387               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4782  000D6E  0E00               	movlw	0
  4783  000D70  0101               	movlb	1	; () banked
  4784  000D72  0101               	movlb	1	; () banked
  4785  000D74  6F89               	movwf	(___awmod@divisor+1)& (0+255),b
  4786  000D76  0E05               	movlw	5
  4787  000D78  0101               	movlb	1	; () banked
  4788  000D7A  6F88               	movwf	___awmod@divisor& (0+255),b
  4789  000D7C  EC59  F007         	call	___awmod	;wreg free
  4790  000D80  0101               	movlb	1	; () banked
  4791  000D82  0101               	movlb	1	; () banked
  4792  000D84  5186               	movf	?___awmod& (0+255),w,b
  4793  000D86  6EDF               	movwf	indf2,c
  4794                           
  4795                           ; BSR set to: 1
  4796                           ;messages.c: 59: qmsg->full = 1;
  4797  000D88  C19A  FFD9         	movff	send_msg@qmsg,fsr2l
  4798  000D8C  C19B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4799  000D90  0E01               	movlw	1
  4800  000D92  6EDF               	movwf	indf2,c
  4801                           
  4802                           ; BSR set to: 1
  4803                           ;messages.c: 60: return (1);
  4804  000D94  0E01               	movlw	1
  4805  000D96  0012               	return	
  4806  000D98                     __end_of_send_msg:
  4807                           	opt stack 0
  4808                           tblptru	equ	0xFF8
  4809                           tblptrh	equ	0xFF7
  4810                           tblptrl	equ	0xFF6
  4811                           tablat	equ	0xFF5
  4812                           prodh	equ	0xFF4
  4813                           prodl	equ	0xFF3
  4814                           intcon	equ	0xFF2
  4815                           postinc0	equ	0xFEE
  4816                           wreg	equ	0xFE8
  4817                           indf1	equ	0xFE7
  4818                           postdec1	equ	0xFE5
  4819                           fsr1h	equ	0xFE2
  4820                           fsr1l	equ	0xFE1
  4821                           indf2	equ	0xFDF
  4822                           postinc2	equ	0xFDE
  4823                           postdec2	equ	0xFDD
  4824                           fsr2h	equ	0xFDA
  4825                           fsr2l	equ	0xFD9
  4826                           status	equ	0xFD8
  4827                           
  4828 ;; *************** function _memcpy *****************
  4829 ;; Defined at:
  4830 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;  d1              2    0[BANK1 ] PTR void 
  4833 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4834 ;;		 -> i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), 
  4835 ;;		 -> ToMainLow_MQ(67), main@msgbuffer(11), 
  4836 ;;  s1              2    2[BANK1 ] PTR const void 
  4837 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4838 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4839 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  4840 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  4841 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  4842 ;;  n               2    4[BANK1 ] unsigned int 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4845 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4846 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4847 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  4848 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  4849 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  4850 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4851 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4852 ;;		 -> i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), 
  4853 ;;		 -> ToMainLow_MQ(67), main@msgbuffer(11), 
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  2    0[BANK1 ] PTR void 
  4856 ;; Registers used:
  4857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4863 ;;      Params:         0       0       6       0       0
  4864 ;;      Locals:         0       0       4       0       0
  4865 ;;      Temps:          0       0       0       0       0
  4866 ;;      Totals:         0       0      10       0       0
  4867 ;;Total ram usage:       10 bytes
  4868 ;; Hardware stack levels used:    1
  4869 ;; Hardware stack levels required when called:   11
  4870 ;; This function calls:
  4871 ;;		Nothing
  4872 ;; This function is called by:
  4873 ;;		_send_msg
  4874 ;;		_recv_msg
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text29
  4879  001948                     __ptext29:
  4880                           	opt stack 0
  4881  001948                     _memcpy:
  4882                           	opt stack 16
  4883                           
  4884                           ; BSR set to: 1
  4885                           ;incstack = 0
  4886  001948  0101               	movlb	1	; () banked
  4887  00194A  0101               	movlb	1	; () banked
  4888  00194C  C189  F18F         	movff	memcpy@s1+1,memcpy@s+1
  4889  001950  0101               	movlb	1	; () banked
  4890  001952  0101               	movlb	1	; () banked
  4891  001954  C188  F18E         	movff	memcpy@s1,memcpy@s
  4892  001958  0101               	movlb	1	; () banked
  4893  00195A  0101               	movlb	1	; () banked
  4894  00195C  C187  F18D         	movff	memcpy@d1+1,memcpy@d+1
  4895  001960  0101               	movlb	1	; () banked
  4896  001962  0101               	movlb	1	; () banked
  4897  001964  C186  F18C         	movff	memcpy@d1,memcpy@d
  4898  001968  D012               	goto	l4040
  4899  00196A                     l4034:
  4900                           
  4901                           ; BSR set to: 1
  4902  00196A  C18E  FFD9         	movff	memcpy@s,fsr2l
  4903  00196E  C18F  FFDA         	movff	memcpy@s+1,fsr2h
  4904  001972  C18C  FFE1         	movff	memcpy@d,fsr1l
  4905  001976  C18D  FFE2         	movff	memcpy@d+1,fsr1h
  4906  00197A  CFDF FFE7          	movff	indf2,indf1
  4907                           
  4908                           ; BSR set to: 1
  4909  00197E  0101               	movlb	1	; () banked
  4910  001980  0101               	movlb	1	; () banked
  4911  001982  4B8E               	infsnz	memcpy@s& (0+255),f,b
  4912  001984  2B8F               	incf	(memcpy@s+1)& (0+255),f,b
  4913                           
  4914                           ; BSR set to: 1
  4915  001986  0101               	movlb	1	; () banked
  4916  001988  0101               	movlb	1	; () banked
  4917  00198A  4B8C               	infsnz	memcpy@d& (0+255),f,b
  4918  00198C  2B8D               	incf	(memcpy@d+1)& (0+255),f,b
  4919  00198E                     l4040:
  4920                           
  4921                           ; BSR set to: 1
  4922  00198E  0101               	movlb	1	; () banked
  4923  001990  0101               	movlb	1	; () banked
  4924  001992  078A               	decf	memcpy@n& (0+255),f,b
  4925  001994  A0D8               	btfss	status,0,c
  4926  001996  078B               	decf	(memcpy@n+1)& (0+255),f,b
  4927  001998  0101               	movlb	1	; () banked
  4928  00199A  298A               	incf	memcpy@n& (0+255),w,b
  4929  00199C  B4D8               	btfsc	status,2,c
  4930  00199E  298B               	incf	(memcpy@n+1)& (0+255),w,b
  4931  0019A0  B4D8               	btfsc	status,2,c
  4932                           
  4933                           ; BSR set to: 1
  4934                           
  4935                           ; BSR set to: 1
  4936                           ;	Return value of _memcpy is never used
  4937  0019A2  0012               	return	
  4938  0019A4  D7E2               	goto	l4034
  4939  0019A6                     __end_of_memcpy:
  4940                           	opt stack 0
  4941                           tblptru	equ	0xFF8
  4942                           tblptrh	equ	0xFF7
  4943                           tblptrl	equ	0xFF6
  4944                           tablat	equ	0xFF5
  4945                           prodh	equ	0xFF4
  4946                           prodl	equ	0xFF3
  4947                           intcon	equ	0xFF2
  4948                           postinc0	equ	0xFEE
  4949                           wreg	equ	0xFE8
  4950                           indf1	equ	0xFE7
  4951                           postdec1	equ	0xFE5
  4952                           fsr1h	equ	0xFE2
  4953                           fsr1l	equ	0xFE1
  4954                           indf2	equ	0xFDF
  4955                           postinc2	equ	0xFDE
  4956                           postdec2	equ	0xFDD
  4957                           fsr2h	equ	0xFDA
  4958                           fsr2l	equ	0xFD9
  4959                           status	equ	0xFD8
  4960                           
  4961 ;; *************** function ___awmod *****************
  4962 ;; Defined at:
  4963 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  dividend        2    0[BANK1 ] int 
  4966 ;;  divisor         2    2[BANK1 ] int 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  sign            1    6[BANK1 ] unsigned char 
  4969 ;;  counter         1    5[BANK1 ] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  2    0[BANK1 ] int 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0, prodl
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4979 ;;      Params:         0       0       4       0       0
  4980 ;;      Locals:         0       0       2       0       0
  4981 ;;      Temps:          0       0       1       0       0
  4982 ;;      Totals:         0       0       7       0       0
  4983 ;;Total ram usage:        7 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:   11
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_send_msg
  4990 ;;		_recv_msg
  4991 ;;		i1_send_msg
  4992 ;;		i2_send_msg
  4993 ;;		i2_recv_msg
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	text30
  4998  000EB2                     __ptext30:
  4999                           	opt stack 0
  5000  000EB2                     ___awmod:
  5001                           	opt stack 16
  5002                           
  5003                           ; BSR set to: 1
  5004                           ;incstack = 0
  5005  000EB2  0101               	movlb	1	; () banked
  5006  000EB4  6F8A               	movwf	??___awmod& (0+255),b
  5007  000EB6  0E00               	movlw	0
  5008  000EB8  0101               	movlb	1	; () banked
  5009  000EBA  0101               	movlb	1	; () banked
  5010  000EBC  6F8C               	movwf	___awmod@sign& (0+255),b
  5011  000EBE  0101               	movlb	1	; () banked
  5012  000EC0  518A               	movf	??___awmod& (0+255),w,b
  5013                           
  5014                           ; BSR set to: 1
  5015  000EC2  0101               	movlb	1	; () banked
  5016  000EC4  0101               	movlb	1	; () banked
  5017  000EC6  5187               	movf	(___awmod@dividend+1)& (0+255),w,b
  5018  000EC8  0A80               	xorlw	128
  5019  000ECA  6EF3               	movwf	prodl,c
  5020  000ECC  0E80               	movlw	128
  5021  000ECE  5CF3               	subwf	prodl,w,c
  5022  000ED0  0E00               	movlw	0
  5023  000ED2  B4D8               	btfsc	status,2,c
  5024  000ED4  5D86               	subwf	___awmod@dividend& (0+255),w,b
  5025  000ED6  B0D8               	btfsc	status,0,c
  5026  000ED8  D00F               	goto	l4338
  5027                           
  5028                           ; BSR set to: 1
  5029  000EDA  0101               	movlb	1	; () banked
  5030  000EDC  0101               	movlb	1	; () banked
  5031  000EDE  6D86               	negf	___awmod@dividend& (0+255),b
  5032  000EE0  0101               	movlb	1	; () banked
  5033  000EE2  1F87               	comf	(___awmod@dividend+1)& (0+255),f,b
  5034  000EE4  B0D8               	btfsc	status,0,c
  5035  000EE6  2B87               	incf	(___awmod@dividend+1)& (0+255),f,b
  5036                           
  5037                           ; BSR set to: 1
  5038  000EE8  0101               	movlb	1	; () banked
  5039  000EEA  6F8A               	movwf	??___awmod& (0+255),b
  5040  000EEC  0E01               	movlw	1
  5041  000EEE  0101               	movlb	1	; () banked
  5042  000EF0  0101               	movlb	1	; () banked
  5043  000EF2  6F8C               	movwf	___awmod@sign& (0+255),b
  5044  000EF4  0101               	movlb	1	; () banked
  5045  000EF6  518A               	movf	??___awmod& (0+255),w,b
  5046  000EF8                     l4338:
  5047                           
  5048                           ; BSR set to: 1
  5049  000EF8  0101               	movlb	1	; () banked
  5050  000EFA  0101               	movlb	1	; () banked
  5051  000EFC  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  5052  000EFE  0A80               	xorlw	128
  5053  000F00  6EF3               	movwf	prodl,c
  5054  000F02  0E80               	movlw	128
  5055  000F04  5CF3               	subwf	prodl,w,c
  5056  000F06  0E00               	movlw	0
  5057  000F08  B4D8               	btfsc	status,2,c
  5058  000F0A  5D88               	subwf	___awmod@divisor& (0+255),w,b
  5059  000F0C  B0D8               	btfsc	status,0,c
  5060  000F0E  D007               	goto	l4342
  5061                           
  5062                           ; BSR set to: 1
  5063  000F10  0101               	movlb	1	; () banked
  5064  000F12  0101               	movlb	1	; () banked
  5065  000F14  6D88               	negf	___awmod@divisor& (0+255),b
  5066  000F16  0101               	movlb	1	; () banked
  5067  000F18  1F89               	comf	(___awmod@divisor+1)& (0+255),f,b
  5068  000F1A  B0D8               	btfsc	status,0,c
  5069  000F1C  2B89               	incf	(___awmod@divisor+1)& (0+255),f,b
  5070  000F1E                     l4342:
  5071                           
  5072                           ; BSR set to: 1
  5073  000F1E  0101               	movlb	1	; () banked
  5074  000F20  0101               	movlb	1	; () banked
  5075  000F22  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  5076  000F24  1188               	iorwf	___awmod@divisor& (0+255),w,b
  5077  000F26  B4D8               	btfsc	status,2,c
  5078  000F28  D03A               	goto	l4358
  5079                           
  5080                           ; BSR set to: 1
  5081  000F2A  0101               	movlb	1	; () banked
  5082  000F2C  6F8A               	movwf	??___awmod& (0+255),b
  5083  000F2E  0E01               	movlw	1
  5084  000F30  0101               	movlb	1	; () banked
  5085  000F32  0101               	movlb	1	; () banked
  5086  000F34  6F8B               	movwf	___awmod@counter& (0+255),b
  5087  000F36  0101               	movlb	1	; () banked
  5088  000F38  518A               	movf	??___awmod& (0+255),w,b
  5089  000F3A  D009               	goto	l4348
  5090  000F3C                     l4346:
  5091                           
  5092                           ; BSR set to: 1
  5093  000F3C  0101               	movlb	1	; () banked
  5094  000F3E  0101               	movlb	1	; () banked
  5095  000F40  0101               	movlb	1	; () banked
  5096  000F42  90D8               	bcf	status,0,c
  5097  000F44  3788               	rlcf	___awmod@divisor& (0+255),f,b
  5098  000F46  3789               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5099  000F48  0101               	movlb	1	; () banked
  5100  000F4A  0101               	movlb	1	; () banked
  5101  000F4C  2B8B               	incf	___awmod@counter& (0+255),f,b
  5102  000F4E                     l4348:
  5103                           
  5104                           ; BSR set to: 1
  5105  000F4E  0101               	movlb	1	; () banked
  5106  000F50  0101               	movlb	1	; () banked
  5107  000F52  AF89               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5108  000F54  D7F3               	goto	l4346
  5109  000F56                     l4350:
  5110                           
  5111                           ; BSR set to: 1
  5112  000F56  0101               	movlb	1	; () banked
  5113  000F58  0101               	movlb	1	; () banked
  5114  000F5A  5188               	movf	___awmod@divisor& (0+255),w,b
  5115  000F5C  0101               	movlb	1	; () banked
  5116  000F5E  0101               	movlb	1	; () banked
  5117  000F60  5D86               	subwf	___awmod@dividend& (0+255),w,b
  5118  000F62  0101               	movlb	1	; () banked
  5119  000F64  0101               	movlb	1	; () banked
  5120  000F66  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  5121  000F68  0101               	movlb	1	; () banked
  5122  000F6A  0101               	movlb	1	; () banked
  5123  000F6C  5987               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5124  000F6E  A0D8               	btfss	status,0,c
  5125  000F70  D00C               	goto	l4354
  5126                           
  5127                           ; BSR set to: 1
  5128  000F72  0101               	movlb	1	; () banked
  5129  000F74  0101               	movlb	1	; () banked
  5130  000F76  5188               	movf	___awmod@divisor& (0+255),w,b
  5131  000F78  0101               	movlb	1	; () banked
  5132  000F7A  0101               	movlb	1	; () banked
  5133  000F7C  5F86               	subwf	___awmod@dividend& (0+255),f,b
  5134  000F7E  0101               	movlb	1	; () banked
  5135  000F80  0101               	movlb	1	; () banked
  5136  000F82  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  5137  000F84  0101               	movlb	1	; () banked
  5138  000F86  0101               	movlb	1	; () banked
  5139  000F88  5B87               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5140  000F8A                     l4354:
  5141                           
  5142                           ; BSR set to: 1
  5143  000F8A  0101               	movlb	1	; () banked
  5144  000F8C  0101               	movlb	1	; () banked
  5145  000F8E  0101               	movlb	1	; () banked
  5146  000F90  90D8               	bcf	status,0,c
  5147  000F92  3389               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5148  000F94  3388               	rrcf	___awmod@divisor& (0+255),f,b
  5149                           
  5150                           ; BSR set to: 1
  5151  000F96  0101               	movlb	1	; () banked
  5152  000F98  0101               	movlb	1	; () banked
  5153  000F9A  2F8B               	decfsz	___awmod@counter& (0+255),f,b
  5154  000F9C  D7DC               	goto	l4350
  5155  000F9E                     l4358:
  5156                           
  5157                           ; BSR set to: 1
  5158  000F9E  0101               	movlb	1	; () banked
  5159  000FA0  0101               	movlb	1	; () banked
  5160  000FA2  518C               	movf	___awmod@sign& (0+255),w,b
  5161  000FA4  B4D8               	btfsc	status,2,c
  5162  000FA6  D007               	goto	l4362
  5163                           
  5164                           ; BSR set to: 1
  5165  000FA8  0101               	movlb	1	; () banked
  5166  000FAA  0101               	movlb	1	; () banked
  5167  000FAC  6D86               	negf	___awmod@dividend& (0+255),b
  5168  000FAE  0101               	movlb	1	; () banked
  5169  000FB0  1F87               	comf	(___awmod@dividend+1)& (0+255),f,b
  5170  000FB2  B0D8               	btfsc	status,0,c
  5171  000FB4  2B87               	incf	(___awmod@dividend+1)& (0+255),f,b
  5172  000FB6                     l4362:
  5173                           
  5174                           ; BSR set to: 1
  5175  000FB6  C186  F186         	movff	___awmod@dividend,?___awmod
  5176  000FBA  C187  F187         	movff	___awmod@dividend+1,?___awmod+1
  5177  000FBE  0012               	return	
  5178  000FC0                     __end_of___awmod:
  5179                           	opt stack 0
  5180                           tblptru	equ	0xFF8
  5181                           tblptrh	equ	0xFF7
  5182                           tblptrl	equ	0xFF6
  5183                           tablat	equ	0xFF5
  5184                           prodh	equ	0xFF4
  5185                           prodl	equ	0xFF3
  5186                           intcon	equ	0xFF2
  5187                           postinc0	equ	0xFEE
  5188                           wreg	equ	0xFE8
  5189                           indf1	equ	0xFE7
  5190                           postdec1	equ	0xFE5
  5191                           fsr1h	equ	0xFE2
  5192                           fsr1l	equ	0xFE1
  5193                           indf2	equ	0xFDF
  5194                           postinc2	equ	0xFDE
  5195                           postdec2	equ	0xFDD
  5196                           fsr2h	equ	0xFDA
  5197                           fsr2l	equ	0xFD9
  5198                           status	equ	0xFD8
  5199                           
  5200 ;; *************** function _InterruptHandlerLow *****************
  5201 ;; Defined at:
  5202 ;;		line 126 in file "../src/interrupts.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;		None
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;		None
  5207 ;; Return value:  Size  Location     Type
  5208 ;;		None               void
  5209 ;; Registers used:
  5210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5216 ;;      Params:         0       0       0       0       0
  5217 ;;      Locals:         0       0       0       0       0
  5218 ;;      Temps:         17       0       0       0       0
  5219 ;;      Totals:        17       0       0       0       0
  5220 ;;Total ram usage:       17 bytes
  5221 ;; Hardware stack levels used:    1
  5222 ;; Hardware stack levels required when called:   10
  5223 ;; This function calls:
  5224 ;;		_adc_int_handler
  5225 ;;		_timer1_int_handler
  5226 ;;		_uart_recv_int_handler
  5227 ;;		_uart_trans_int_handler
  5228 ;; This function is called by:
  5229 ;;		Interrupt level 1
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           	psect	intcodelo
  5234  000018                     __pintcodelo:
  5235                           	opt stack 0
  5236  000018                     _InterruptHandlerLow:
  5237                           	opt stack 16
  5238                           
  5239                           ; BSR set to: 1
  5240                           ;incstack = 0
  5241  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  5242  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  5243  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  5244  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  5245  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  5246  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  5247  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  5248  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  5249  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  5250  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  5251  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  5252  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  5253  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  5254  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  5255  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  5256  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  5257  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  5258                           
  5259                           ;interrupts.c: 128: if(PIR1bits.ADIF){
  5260  00005C  AC9E               	btfss	3998,6,c	;volatile
  5261  00005E  D003               	goto	i1l4536
  5262                           
  5263                           ;interrupts.c: 130: PIR1bits.ADIF = 0;
  5264  000060  9C9E               	bcf	3998,6,c	;volatile
  5265                           
  5266                           ;interrupts.c: 131: adc_int_handler();
  5267  000062  ECFD  F00E         	call	_adc_int_handler	;wreg free
  5268  000066                     i1l4536:
  5269                           
  5270                           ;interrupts.c: 132: }
  5271                           ;interrupts.c: 135: if (PIR1bits.TMR1IF) {
  5272  000066  A09E               	btfss	3998,0,c	;volatile
  5273  000068  D003               	goto	i1l4542
  5274                           
  5275                           ;interrupts.c: 136: PIR1bits.TMR1IF = 0;
  5276  00006A  909E               	bcf	3998,0,c	;volatile
  5277                           
  5278                           ;interrupts.c: 137: timer1_int_handler();
  5279  00006C  EC7D  F00F         	call	_timer1_int_handler	;wreg free
  5280  000070                     i1l4542:
  5281                           
  5282                           ;interrupts.c: 139: }
  5283                           ;interrupts.c: 141: if (PIR1bits.TXIF) {
  5284  000070  B89E               	btfsc	3998,4,c	;volatile
  5285                           
  5286                           ;interrupts.c: 143: uart_trans_int_handler();
  5287  000072  EC70  F00C         	call	_uart_trans_int_handler	;wreg free
  5288                           
  5289                           ;interrupts.c: 144: }
  5290                           ;interrupts.c: 146: if (PIR1bits.RCIF) {
  5291  000076  AA9E               	btfss	3998,5,c	;volatile
  5292  000078  D003               	goto	i1l55
  5293                           
  5294                           ;interrupts.c: 147: PIR1bits.RCIF = 0;
  5295  00007A  9A9E               	bcf	3998,5,c	;volatile
  5296                           
  5297                           ;interrupts.c: 149: uart_recv_int_handler();
  5298  00007C  EC52  F009         	call	_uart_recv_int_handler	;wreg free
  5299  000080                     i1l55:
  5300  000080  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5301  000084  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5302  000088  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5303  00008C  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5304  000090  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5305  000094  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5306  000098  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5307  00009C  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5308  0000A0  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5309  0000A4  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5310  0000A8  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5311  0000AC  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5312  0000B0  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5313  0000B4  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5314  0000B8  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5315  0000BC  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5316  0000C0  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5317  0000C4  0010               	retfie	
  5318  0000C6                     __end_of_InterruptHandlerLow:
  5319                           	opt stack 0
  5320                           pclatu	equ	0xFFB
  5321                           pclath	equ	0xFFA
  5322                           tblptru	equ	0xFF8
  5323                           tblptrh	equ	0xFF7
  5324                           tblptrl	equ	0xFF6
  5325                           tablat	equ	0xFF5
  5326                           prodh	equ	0xFF4
  5327                           prodl	equ	0xFF3
  5328                           intcon	equ	0xFF2
  5329                           postinc0	equ	0xFEE
  5330                           fsr0h	equ	0xFEA
  5331                           fsr0l	equ	0xFE9
  5332                           wreg	equ	0xFE8
  5333                           indf1	equ	0xFE7
  5334                           postdec1	equ	0xFE5
  5335                           fsr1h	equ	0xFE2
  5336                           fsr1l	equ	0xFE1
  5337                           bsr	equ	0xFE0
  5338                           indf2	equ	0xFDF
  5339                           postinc2	equ	0xFDE
  5340                           postdec2	equ	0xFDD
  5341                           fsr2h	equ	0xFDA
  5342                           fsr2l	equ	0xFD9
  5343                           status	equ	0xFD8
  5344                           
  5345 ;; *************** function _uart_trans_int_handler *****************
  5346 ;; Defined at:
  5347 ;;		line 68 in file "../src/my_uart.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;		None
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;		None
  5352 ;; Return value:  Size  Location     Type
  5353 ;;		None               void
  5354 ;; Registers used:
  5355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5361 ;;      Params:         0       0       0       0       0
  5362 ;;      Locals:         0       0       0       0       0
  5363 ;;      Temps:          1       0       0       0       0
  5364 ;;      Totals:         1       0       0       0       0
  5365 ;;Total ram usage:        1 bytes
  5366 ;; Hardware stack levels used:    1
  5367 ;; Hardware stack levels required when called:    6
  5368 ;; This function calls:
  5369 ;;		Nothing
  5370 ;; This function is called by:
  5371 ;;		_InterruptHandlerLow
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           	psect	text32
  5376  0018E0                     __ptext32:
  5377                           	opt stack 0
  5378  0018E0                     _uart_trans_int_handler:
  5379                           	opt stack 19
  5380                           
  5381                           ;my_uart.c: 70: if(TXSTAbits.TRMT){
  5382                           
  5383                           ;incstack = 0
  5384  0018E0  A2AC               	btfss	4012,1,c	;volatile
  5385  0018E2  0012               	return	
  5386                           
  5387                           ;my_uart.c: 71: if(uc_ptr->txBufind < uc_ptr->txBuflen){
  5388  0018E4  EE20 F00C          	lfsr	2,12
  5389  0018E8  5052               	movf	_uc_ptr,w,c
  5390  0018EA  26D9               	addwf	fsr2l,f,c
  5391  0018EC  5053               	movf	_uc_ptr+1,w,c
  5392  0018EE  22DA               	addwfc	fsr2h,f,c
  5393  0018F0  50DF               	movf	indf2,w,c
  5394  0018F2  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5395  0018F4  EE20 F00B          	lfsr	2,11
  5396  0018F8  5052               	movf	_uc_ptr,w,c
  5397  0018FA  26D9               	addwf	fsr2l,f,c
  5398  0018FC  5053               	movf	_uc_ptr+1,w,c
  5399  0018FE  22DA               	addwfc	fsr2h,f,c
  5400  001900  50DF               	movf	indf2,w,c
  5401  001902  5C01               	subwf	??_uart_trans_int_handler,w,c
  5402  001904  B0D8               	btfsc	status,0,c
  5403  001906  D01E               	goto	i1l418
  5404                           
  5405                           ;my_uart.c: 72: TXREG = uc_ptr->txBuff[uc_ptr->txBufind];
  5406  001908  EE20 F00C          	lfsr	2,12
  5407  00190C  5052               	movf	_uc_ptr,w,c
  5408  00190E  26D9               	addwf	fsr2l,f,c
  5409  001910  5053               	movf	_uc_ptr+1,w,c
  5410  001912  22DA               	addwfc	fsr2h,f,c
  5411  001914  50DF               	movf	indf2,w,c
  5412  001916  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5413  001918  5001               	movf	??_uart_trans_int_handler,w,c
  5414  00191A  0D01               	mullw	1
  5415  00191C  0E06               	movlw	6
  5416  00191E  26F3               	addwf	prodl,f,c
  5417  001920  0E00               	movlw	0
  5418  001922  22F4               	addwfc	prodh,f,c
  5419  001924  50F3               	movf	prodl,w,c
  5420  001926  2452               	addwf	_uc_ptr,w,c
  5421  001928  6ED9               	movwf	fsr2l,c
  5422  00192A  50F4               	movf	prodh,w,c
  5423  00192C  2053               	addwfc	_uc_ptr+1,w,c
  5424  00192E  6EDA               	movwf	fsr2h,c
  5425  001930  50DF               	movf	indf2,w,c
  5426  001932  6EAD               	movwf	4013,c	;volatile
  5427                           
  5428                           ;my_uart.c: 74: uc_ptr->txBufind++;
  5429  001934  EE20 F00C          	lfsr	2,12
  5430  001938  5052               	movf	_uc_ptr,w,c
  5431  00193A  26D9               	addwf	fsr2l,f,c
  5432  00193C  5053               	movf	_uc_ptr+1,w,c
  5433  00193E  22DA               	addwfc	fsr2h,f,c
  5434  001940  2ADF               	incf	indf2,f,c
  5435                           
  5436                           ;my_uart.c: 75: } else
  5437  001942  0012               	return	
  5438  001944                     i1l418:
  5439                           
  5440                           ;my_uart.c: 76: PIE1bits.TX1IE = 0;
  5441  001944  989D               	bcf	3997,4,c	;volatile
  5442  001946  0012               	return	
  5443  001948                     __end_of_uart_trans_int_handler:
  5444                           	opt stack 0
  5445                           pclatu	equ	0xFFB
  5446                           pclath	equ	0xFFA
  5447                           tblptru	equ	0xFF8
  5448                           tblptrh	equ	0xFF7
  5449                           tblptrl	equ	0xFF6
  5450                           tablat	equ	0xFF5
  5451                           prodh	equ	0xFF4
  5452                           prodl	equ	0xFF3
  5453                           intcon	equ	0xFF2
  5454                           postinc0	equ	0xFEE
  5455                           fsr0h	equ	0xFEA
  5456                           fsr0l	equ	0xFE9
  5457                           wreg	equ	0xFE8
  5458                           indf1	equ	0xFE7
  5459                           postdec1	equ	0xFE5
  5460                           fsr1h	equ	0xFE2
  5461                           fsr1l	equ	0xFE1
  5462                           bsr	equ	0xFE0
  5463                           indf2	equ	0xFDF
  5464                           postinc2	equ	0xFDE
  5465                           postdec2	equ	0xFDD
  5466                           fsr2h	equ	0xFDA
  5467                           fsr2l	equ	0xFD9
  5468                           status	equ	0xFD8
  5469                           
  5470 ;; *************** function _uart_recv_int_handler *****************
  5471 ;; Defined at:
  5472 ;;		line 11 in file "../src/my_uart.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;		None
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;		None
  5477 ;; Return value:  Size  Location     Type
  5478 ;;		None               void
  5479 ;; Registers used:
  5480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5486 ;;      Params:         0       0       0       0       0
  5487 ;;      Locals:         0       0       0       0       0
  5488 ;;      Temps:          1       0       0       0       0
  5489 ;;      Totals:         1       0       0       0       0
  5490 ;;Total ram usage:        1 bytes
  5491 ;; Hardware stack levels used:    1
  5492 ;; Hardware stack levels required when called:    9
  5493 ;; This function calls:
  5494 ;;		_ReadUSART
  5495 ;;		_ToMainLow_sendmsg
  5496 ;; This function is called by:
  5497 ;;		_InterruptHandlerLow
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text33
  5502  0012A4                     __ptext33:
  5503                           	opt stack 0
  5504  0012A4                     _uart_recv_int_handler:
  5505                           	opt stack 16
  5506                           
  5507                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  5508                           
  5509                           ;incstack = 0
  5510  0012A4  AA9E               	btfss	3998,5,c	;volatile
  5511  0012A6  D03C               	goto	i1l4524
  5512                           
  5513                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5514  0012A8  EE20 F005          	lfsr	2,5
  5515  0012AC  5052               	movf	_uc_ptr,w,c
  5516  0012AE  26D9               	addwf	fsr2l,f,c
  5517  0012B0  5053               	movf	_uc_ptr+1,w,c
  5518  0012B2  22DA               	addwfc	fsr2h,f,c
  5519  0012B4  50DF               	movf	indf2,w,c
  5520  0012B6  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5521  0012B8  501B               	movf	??_uart_recv_int_handler,w,c
  5522  0012BA  0D01               	mullw	1
  5523  0012BC  50F3               	movf	prodl,w,c
  5524  0012BE  2452               	addwf	_uc_ptr,w,c
  5525  0012C0  6ED9               	movwf	fsr2l,c
  5526  0012C2  50F4               	movf	prodh,w,c
  5527  0012C4  2053               	addwfc	_uc_ptr+1,w,c
  5528  0012C6  6EDA               	movwf	fsr2h,c
  5529  0012C8  EC2D  F00F         	call	_ReadUSART	;wreg free
  5530  0012CC  6EDF               	movwf	indf2,c
  5531                           
  5532                           ;my_uart.c: 25: uc_ptr->buflen++;
  5533  0012CE  EE20 F005          	lfsr	2,5
  5534  0012D2  5052               	movf	_uc_ptr,w,c
  5535  0012D4  26D9               	addwf	fsr2l,f,c
  5536  0012D6  5053               	movf	_uc_ptr+1,w,c
  5537  0012D8  22DA               	addwfc	fsr2h,f,c
  5538  0012DA  2ADF               	incf	indf2,f,c
  5539                           
  5540                           ;my_uart.c: 27: if (uc_ptr->buflen == 5) {
  5541  0012DC  EE20 F005          	lfsr	2,5
  5542  0012E0  5052               	movf	_uc_ptr,w,c
  5543  0012E2  26D9               	addwf	fsr2l,f,c
  5544  0012E4  5053               	movf	_uc_ptr+1,w,c
  5545  0012E6  22DA               	addwfc	fsr2h,f,c
  5546  0012E8  0E05               	movlw	5
  5547  0012EA  62DF               	cpfseq	indf2,c
  5548  0012EC  D019               	goto	i1l4524
  5549                           
  5550                           ;my_uart.c: 28: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5551  0012EE  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5552  0012F0  0E1F               	movlw	31
  5553  0012F2  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5554  0012F4  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5555  0012F6  C053  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5556  0012FA  C052  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5557  0012FE  EE20 F005          	lfsr	2,5
  5558  001302  5052               	movf	_uc_ptr,w,c
  5559  001304  26D9               	addwf	fsr2l,f,c
  5560  001306  5053               	movf	_uc_ptr+1,w,c
  5561  001308  22DA               	addwfc	fsr2h,f,c
  5562  00130A  50DF               	movf	indf2,w,c
  5563  00130C  ECD8  F00E         	call	_ToMainLow_sendmsg
  5564                           
  5565                           ;my_uart.c: 29: uc_ptr->buflen = 0;
  5566  001310  EE20 F005          	lfsr	2,5
  5567  001314  5052               	movf	_uc_ptr,w,c
  5568  001316  26D9               	addwf	fsr2l,f,c
  5569  001318  5053               	movf	_uc_ptr+1,w,c
  5570  00131A  22DA               	addwfc	fsr2h,f,c
  5571  00131C  0E00               	movlw	0
  5572  00131E  6EDF               	movwf	indf2,c
  5573  001320                     i1l4524:
  5574                           
  5575                           ;my_uart.c: 30: }
  5576                           ;my_uart.c: 31: }
  5577                           ;my_uart.c: 38: if (USART_Status.OVERRUN_ERROR == 1) {
  5578  001320  A64F               	btfss	_USART_Status,3,c
  5579  001322  0012               	return	
  5580                           
  5581                           ;my_uart.c: 43: RCSTAbits.CREN = 0;
  5582  001324  98AB               	bcf	4011,4,c	;volatile
  5583                           
  5584                           ;my_uart.c: 44: RCSTAbits.CREN = 1;
  5585  001326  88AB               	bsf	4011,4,c	;volatile
  5586                           
  5587                           ;my_uart.c: 45: ToMainLow_sendmsg(0, 30, (void *) 0);
  5588  001328  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5589  00132A  0E1E               	movlw	30
  5590  00132C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5591  00132E  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5592  001330  0E00               	movlw	0
  5593  001332  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5594  001334  0E00               	movlw	0
  5595  001336  6E18               	movwf	ToMainLow_sendmsg@data,c
  5596  001338  0E00               	movlw	0
  5597  00133A  ECD8  F00E         	call	_ToMainLow_sendmsg
  5598  00133E  0012               	return	
  5599  001340                     __end_of_uart_recv_int_handler:
  5600                           	opt stack 0
  5601                           pclatu	equ	0xFFB
  5602                           pclath	equ	0xFFA
  5603                           tblptru	equ	0xFF8
  5604                           tblptrh	equ	0xFF7
  5605                           tblptrl	equ	0xFF6
  5606                           tablat	equ	0xFF5
  5607                           prodh	equ	0xFF4
  5608                           prodl	equ	0xFF3
  5609                           intcon	equ	0xFF2
  5610                           postinc0	equ	0xFEE
  5611                           fsr0h	equ	0xFEA
  5612                           fsr0l	equ	0xFE9
  5613                           wreg	equ	0xFE8
  5614                           indf1	equ	0xFE7
  5615                           postdec1	equ	0xFE5
  5616                           fsr1h	equ	0xFE2
  5617                           fsr1l	equ	0xFE1
  5618                           bsr	equ	0xFE0
  5619                           indf2	equ	0xFDF
  5620                           postinc2	equ	0xFDE
  5621                           postdec2	equ	0xFDD
  5622                           fsr2h	equ	0xFDA
  5623                           fsr2l	equ	0xFD9
  5624                           status	equ	0xFD8
  5625                           
  5626 ;; *************** function _ToMainLow_sendmsg *****************
  5627 ;; Defined at:
  5628 ;;		line 103 in file "../src/messages.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  length          1    wreg     unsigned char 
  5631 ;;  msgtype         1   22[COMRAM] unsigned char 
  5632 ;;  data            2   23[COMRAM] PTR void 
  5633 ;;		 -> NULL(0), main@uc(13), 
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;  length          1   25[COMRAM] unsigned char 
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  1    wreg      char 
  5638 ;; Registers used:
  5639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5645 ;;      Params:         3       0       0       0       0
  5646 ;;      Locals:         1       0       0       0       0
  5647 ;;      Temps:          0       0       0       0       0
  5648 ;;      Totals:         4       0       0       0       0
  5649 ;;Total ram usage:        4 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    8
  5652 ;; This function calls:
  5653 ;;		i1_send_msg
  5654 ;; This function is called by:
  5655 ;;		_uart_recv_int_handler
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           	psect	text34
  5660  001DB0                     __ptext34:
  5661                           	opt stack 0
  5662  001DB0                     _ToMainLow_sendmsg:
  5663                           	opt stack 16
  5664                           
  5665                           ;incstack = 0
  5666                           ;ToMainLow_sendmsg@length stored from wreg
  5667  001DB0  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5668                           
  5669                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5670                           ;	Return value of _ToMainLow_sendmsg is never used
  5671  001DB4  0101               	movlb	1	; () banked
  5672  001DB6  0E01               	movlw	high _ToMainLow_MQ
  5673  001DB8  6E0C               	movwf	i1send_msg@qptr+1,c
  5674  001DBA  0101               	movlb	1	; () banked
  5675  001DBC  0E43               	movlw	low _ToMainLow_MQ
  5676  001DBE  6E0B               	movwf	i1send_msg@qptr,c
  5677  001DC0  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5678  001DC4  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5679  001DC8  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5680  001DCC  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5681  001DD0  ECE0  F007         	call	i1_send_msg	;wreg free
  5682  001DD4  0012               	return	
  5683  001DD6                     __end_of_ToMainLow_sendmsg:
  5684                           	opt stack 0
  5685                           pclatu	equ	0xFFB
  5686                           pclath	equ	0xFFA
  5687                           tblptru	equ	0xFF8
  5688                           tblptrh	equ	0xFF7
  5689                           tblptrl	equ	0xFF6
  5690                           tablat	equ	0xFF5
  5691                           prodh	equ	0xFF4
  5692                           prodl	equ	0xFF3
  5693                           intcon	equ	0xFF2
  5694                           postinc0	equ	0xFEE
  5695                           fsr0h	equ	0xFEA
  5696                           fsr0l	equ	0xFE9
  5697                           wreg	equ	0xFE8
  5698                           indf1	equ	0xFE7
  5699                           postdec1	equ	0xFE5
  5700                           fsr1h	equ	0xFE2
  5701                           fsr1l	equ	0xFE1
  5702                           bsr	equ	0xFE0
  5703                           indf2	equ	0xFDF
  5704                           postinc2	equ	0xFDE
  5705                           postdec2	equ	0xFDD
  5706                           fsr2h	equ	0xFDA
  5707                           fsr2l	equ	0xFD9
  5708                           status	equ	0xFD8
  5709                           
  5710 ;; *************** function i1_send_msg *****************
  5711 ;; Defined at:
  5712 ;;		line 24 in file "../src/messages.c"
  5713 ;; Parameters:    Size  Location     Type
  5714 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5715 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5716 ;;  length          1   12[COMRAM] unsigned char 
  5717 ;;  msgtype         1   13[COMRAM] unsigned char 
  5718 ;;  data            2   14[COMRAM] PTR void 
  5719 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), 
  5720 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5723 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  5724 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5725 ;;  send_msg        2   17[COMRAM] unsigned int 
  5726 ;;  send_msg        1   19[COMRAM] unsigned char 
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      char 
  5729 ;; Registers used:
  5730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5736 ;;      Params:         6       0       0       0       0
  5737 ;;      Locals:         5       0       0       0       0
  5738 ;;      Temps:          1       0       0       0       0
  5739 ;;      Totals:        12       0       0       0       0
  5740 ;;Total ram usage:       12 bytes
  5741 ;; Hardware stack levels used:    1
  5742 ;; Hardware stack levels required when called:    7
  5743 ;; This function calls:
  5744 ;;		i1___awmod
  5745 ;;		i1_memcpy
  5746 ;; This function is called by:
  5747 ;;		_ToMainLow_sendmsg
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751                           	psect	text35
  5752  000FC0                     __ptext35:
  5753                           	opt stack 0
  5754  000FC0                     i1_send_msg:
  5755                           	opt stack 16
  5756                           
  5757                           ;messages.c: 25: unsigned char slot;
  5758                           ;messages.c: 27: msg *qmsg;
  5759                           ;messages.c: 28: size_t tlength = length;
  5760                           
  5761                           ;incstack = 0
  5762  000FC0  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5763  000FC4  6A13               	clrf	i1send_msg@tlength+1,c
  5764                           
  5765                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5766  000FC6  EE20 F041          	lfsr	2,65
  5767  000FCA  500B               	movf	i1send_msg@qptr,w,c
  5768  000FCC  26D9               	addwf	fsr2l,f,c
  5769  000FCE  500C               	movf	i1send_msg@qptr+1,w,c
  5770  000FD0  22DA               	addwfc	fsr2h,f,c
  5771  000FD2  50DF               	movf	indf2,w,c
  5772  000FD4  6E14               	movwf	i1send_msg@slot,c
  5773                           
  5774                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5775  000FD6  5014               	movf	i1send_msg@slot,w,c
  5776  000FD8  0D0D               	mullw	13
  5777  000FDA  50F3               	movf	prodl,w,c
  5778  000FDC  240B               	addwf	i1send_msg@qptr,w,c
  5779  000FDE  6E15               	movwf	i1send_msg@qmsg,c
  5780  000FE0  50F4               	movf	prodh,w,c
  5781  000FE2  200C               	addwfc	i1send_msg@qptr+1,w,c
  5782  000FE4  6E16               	movwf	i1send_msg@qmsg+1,c
  5783                           
  5784                           ;messages.c: 41: if (qmsg->full != 0) {
  5785  000FE6  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5786  000FEA  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5787  000FEE  50DF               	movf	indf2,w,c
  5788  000FF0  B4D8               	btfsc	status,2,c
  5789  000FF2  D002               	goto	i1l4496
  5790                           
  5791                           ;messages.c: 42: return (-1);
  5792  000FF4  0EFF               	movlw	255
  5793  000FF6  0012               	return	
  5794  000FF8                     i1l4496:
  5795                           
  5796                           ;messages.c: 43: }
  5797                           ;messages.c: 46: qmsg->length = length;
  5798  000FF8  EE20 F001          	lfsr	2,1
  5799  000FFC  5015               	movf	i1send_msg@qmsg,w,c
  5800  000FFE  26D9               	addwf	fsr2l,f,c
  5801  001000  5016               	movf	i1send_msg@qmsg+1,w,c
  5802  001002  22DA               	addwfc	fsr2h,f,c
  5803  001004  C00D  FFDF         	movff	i1send_msg@length,indf2
  5804                           
  5805                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5806  001008  EE20 F002          	lfsr	2,2
  5807  00100C  5015               	movf	i1send_msg@qmsg,w,c
  5808  00100E  26D9               	addwf	fsr2l,f,c
  5809  001010  5016               	movf	i1send_msg@qmsg+1,w,c
  5810  001012  22DA               	addwfc	fsr2h,f,c
  5811  001014  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5812                           
  5813                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5814  001018  0E03               	movlw	3
  5815  00101A  2415               	addwf	i1send_msg@qmsg,w,c
  5816  00101C  6E01               	movwf	i1memcpy@d1,c
  5817  00101E  0E00               	movlw	0
  5818  001020  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5819  001022  6E02               	movwf	i1memcpy@d1+1,c
  5820  001024  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5821  001028  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5822  00102C  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5823  001030  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5824  001034  ECF0  F00D         	call	i1_memcpy	;wreg free
  5825                           
  5826                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  5827  001038  EE20 F041          	lfsr	2,65
  5828  00103C  500B               	movf	i1send_msg@qptr,w,c
  5829  00103E  26D9               	addwf	fsr2l,f,c
  5830  001040  500C               	movf	i1send_msg@qptr+1,w,c
  5831  001042  22DA               	addwfc	fsr2h,f,c
  5832  001044  EE10 F041          	lfsr	1,65
  5833  001048  500B               	movf	i1send_msg@qptr,w,c
  5834  00104A  26E1               	addwf	fsr1l,f,c
  5835  00104C  500C               	movf	i1send_msg@qptr+1,w,c
  5836  00104E  22E2               	addwfc	fsr1h,f,c
  5837  001050  50E7               	movf	indf1,w,c
  5838  001052  6E11               	movwf	??i1_send_msg& (0+255),c
  5839  001054  0E01               	movlw	1
  5840  001056  2411               	addwf	??i1_send_msg,w,c
  5841  001058  6E01               	movwf	i1___awmod@dividend,c
  5842  00105A  6A02               	clrf	i1___awmod@dividend+1,c
  5843  00105C  0E00               	movlw	0
  5844  00105E  2202               	addwfc	i1___awmod@dividend+1,f,c
  5845  001060  0E00               	movlw	0
  5846  001062  6E04               	movwf	i1___awmod@divisor+1,c
  5847  001064  0E05               	movlw	5
  5848  001066  6E03               	movwf	i1___awmod@divisor,c
  5849  001068  ECA0  F009         	call	i1___awmod	;wreg free
  5850  00106C  5001               	movf	?i1___awmod,w,c
  5851  00106E  6EDF               	movwf	indf2,c
  5852                           
  5853                           ;messages.c: 59: qmsg->full = 1;
  5854  001070  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5855  001074  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5856  001078  0E01               	movlw	1
  5857  00107A  6EDF               	movwf	indf2,c
  5858                           
  5859                           ;messages.c: 60: return (1);
  5860  00107C  0E01               	movlw	1
  5861  00107E  0012               	return	
  5862  001080                     __end_ofi1_send_msg:
  5863                           	opt stack 0
  5864                           pclatu	equ	0xFFB
  5865                           pclath	equ	0xFFA
  5866                           tblptru	equ	0xFF8
  5867                           tblptrh	equ	0xFF7
  5868                           tblptrl	equ	0xFF6
  5869                           tablat	equ	0xFF5
  5870                           prodh	equ	0xFF4
  5871                           prodl	equ	0xFF3
  5872                           intcon	equ	0xFF2
  5873                           postinc0	equ	0xFEE
  5874                           fsr0h	equ	0xFEA
  5875                           fsr0l	equ	0xFE9
  5876                           wreg	equ	0xFE8
  5877                           indf1	equ	0xFE7
  5878                           postdec1	equ	0xFE5
  5879                           fsr1h	equ	0xFE2
  5880                           fsr1l	equ	0xFE1
  5881                           bsr	equ	0xFE0
  5882                           indf2	equ	0xFDF
  5883                           postinc2	equ	0xFDE
  5884                           postdec2	equ	0xFDD
  5885                           fsr2h	equ	0xFDA
  5886                           fsr2l	equ	0xFD9
  5887                           status	equ	0xFD8
  5888                           
  5889 ;; *************** function i1_memcpy *****************
  5890 ;; Defined at:
  5891 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;  d1              2    0[COMRAM] PTR void 
  5894 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  5895 ;;		 -> i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), 
  5896 ;;		 -> ToMainLow_MQ(67), main@msgbuffer(11), 
  5897 ;;  s1              2    2[COMRAM] PTR const void 
  5898 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5899 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5900 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  5901 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  5902 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  5903 ;;  n               2    4[COMRAM] unsigned int 
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5906 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5907 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5908 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  5909 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  5910 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  5911 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5912 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  5913 ;;		 -> i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), 
  5914 ;;		 -> ToMainLow_MQ(67), main@msgbuffer(11), 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  2    0[COMRAM] PTR void 
  5917 ;; Registers used:
  5918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5924 ;;      Params:         6       0       0       0       0
  5925 ;;      Locals:         4       0       0       0       0
  5926 ;;      Temps:          0       0       0       0       0
  5927 ;;      Totals:        10       0       0       0       0
  5928 ;;Total ram usage:       10 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:    6
  5931 ;; This function calls:
  5932 ;;		Nothing
  5933 ;; This function is called by:
  5934 ;;		i1_send_msg
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           	psect	text36
  5939  001BE0                     __ptext36:
  5940                           	opt stack 0
  5941  001BE0                     i1_memcpy:
  5942                           	opt stack 16
  5943                           
  5944                           ;incstack = 0
  5945  001BE0  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5946  001BE4  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5947  001BE8  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5948  001BEC  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5949  001BF0  D00E               	goto	i1l3490
  5950  001BF2                     i1l3484:
  5951  001BF2  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5952  001BF6  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5953  001BFA  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5954  001BFE  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5955  001C02  CFDF FFE7          	movff	indf2,indf1
  5956  001C06  4A09               	infsnz	i1memcpy@s,f,c
  5957  001C08  2A0A               	incf	i1memcpy@s+1,f,c
  5958  001C0A  4A07               	infsnz	i1memcpy@d,f,c
  5959  001C0C  2A08               	incf	i1memcpy@d+1,f,c
  5960  001C0E                     i1l3490:
  5961  001C0E  0605               	decf	i1memcpy@n,f,c
  5962  001C10  A0D8               	btfss	status,0,c
  5963  001C12  0606               	decf	i1memcpy@n+1,f,c
  5964  001C14  2805               	incf	i1memcpy@n& (0+255),w,c
  5965  001C16  B4D8               	btfsc	status,2,c
  5966  001C18  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5967  001C1A  B4D8               	btfsc	status,2,c
  5968                           
  5969                           ;	Return value of i1_memcpy is never used
  5970  001C1C  0012               	return	
  5971  001C1E  D7E9               	goto	i1l3484
  5972  001C20                     __end_ofi1_memcpy:
  5973                           	opt stack 0
  5974                           pclatu	equ	0xFFB
  5975                           pclath	equ	0xFFA
  5976                           tblptru	equ	0xFF8
  5977                           tblptrh	equ	0xFF7
  5978                           tblptrl	equ	0xFF6
  5979                           tablat	equ	0xFF5
  5980                           prodh	equ	0xFF4
  5981                           prodl	equ	0xFF3
  5982                           intcon	equ	0xFF2
  5983                           postinc0	equ	0xFEE
  5984                           fsr0h	equ	0xFEA
  5985                           fsr0l	equ	0xFE9
  5986                           wreg	equ	0xFE8
  5987                           indf1	equ	0xFE7
  5988                           postdec1	equ	0xFE5
  5989                           fsr1h	equ	0xFE2
  5990                           fsr1l	equ	0xFE1
  5991                           bsr	equ	0xFE0
  5992                           indf2	equ	0xFDF
  5993                           postinc2	equ	0xFDE
  5994                           postdec2	equ	0xFDD
  5995                           fsr2h	equ	0xFDA
  5996                           fsr2l	equ	0xFD9
  5997                           status	equ	0xFD8
  5998                           
  5999 ;; *************** function i1___awmod *****************
  6000 ;; Defined at:
  6001 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;  dividend        2    0[COMRAM] int 
  6004 ;;  divisor         2    2[COMRAM] int 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  __awmod         1    6[COMRAM] unsigned char 
  6007 ;;  __awmod         1    5[COMRAM] unsigned char 
  6008 ;; Return value:  Size  Location     Type
  6009 ;;                  2    0[COMRAM] int 
  6010 ;; Registers used:
  6011 ;;		wreg, status,2, status,0, prodl
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6017 ;;      Params:         4       0       0       0       0
  6018 ;;      Locals:         2       0       0       0       0
  6019 ;;      Temps:          1       0       0       0       0
  6020 ;;      Totals:         7       0       0       0       0
  6021 ;;Total ram usage:        7 bytes
  6022 ;; Hardware stack levels used:    1
  6023 ;; Hardware stack levels required when called:    6
  6024 ;; This function calls:
  6025 ;;		Nothing
  6026 ;; This function is called by:
  6027 ;;		i1_send_msg
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           	psect	text37
  6032  001340                     __ptext37:
  6033                           	opt stack 0
  6034  001340                     i1___awmod:
  6035                           	opt stack 16
  6036                           
  6037                           ;incstack = 0
  6038  001340  6E05               	movwf	??i1___awmod& (0+255),c
  6039  001342  0E00               	movlw	0
  6040  001344  6E07               	movwf	i1___awmod@sign,c
  6041  001346  5005               	movf	??i1___awmod& (0+255),w,c
  6042  001348  5002               	movf	i1___awmod@dividend+1,w,c
  6043  00134A  0A80               	xorlw	128
  6044  00134C  6EF3               	movwf	prodl,c
  6045  00134E  0E80               	movlw	128
  6046  001350  5CF3               	subwf	prodl,w,c
  6047  001352  0E00               	movlw	0
  6048  001354  B4D8               	btfsc	status,2,c
  6049  001356  5C01               	subwf	i1___awmod@dividend,w,c
  6050  001358  B0D8               	btfsc	status,0,c
  6051  00135A  D008               	goto	i1l3510
  6052  00135C  6C01               	negf	i1___awmod@dividend,c
  6053  00135E  1E02               	comf	i1___awmod@dividend+1,f,c
  6054  001360  B0D8               	btfsc	status,0,c
  6055  001362  2A02               	incf	i1___awmod@dividend+1,f,c
  6056  001364  6E05               	movwf	??i1___awmod& (0+255),c
  6057  001366  0E01               	movlw	1
  6058  001368  6E07               	movwf	i1___awmod@sign,c
  6059  00136A  5005               	movf	??i1___awmod& (0+255),w,c
  6060  00136C                     i1l3510:
  6061  00136C  5004               	movf	i1___awmod@divisor+1,w,c
  6062  00136E  0A80               	xorlw	128
  6063  001370  6EF3               	movwf	prodl,c
  6064  001372  0E80               	movlw	128
  6065  001374  5CF3               	subwf	prodl,w,c
  6066  001376  0E00               	movlw	0
  6067  001378  B4D8               	btfsc	status,2,c
  6068  00137A  5C03               	subwf	i1___awmod@divisor,w,c
  6069  00137C  B0D8               	btfsc	status,0,c
  6070  00137E  D004               	goto	i1l3514
  6071  001380  6C03               	negf	i1___awmod@divisor,c
  6072  001382  1E04               	comf	i1___awmod@divisor+1,f,c
  6073  001384  B0D8               	btfsc	status,0,c
  6074  001386  2A04               	incf	i1___awmod@divisor+1,f,c
  6075  001388                     i1l3514:
  6076  001388  5004               	movf	i1___awmod@divisor+1,w,c
  6077  00138A  1003               	iorwf	i1___awmod@divisor,w,c
  6078  00138C  B4D8               	btfsc	status,2,c
  6079  00138E  D01A               	goto	i1l3530
  6080  001390  6E05               	movwf	??i1___awmod& (0+255),c
  6081  001392  0E01               	movlw	1
  6082  001394  6E06               	movwf	i1___awmod@counter,c
  6083  001396  5005               	movf	??i1___awmod& (0+255),w,c
  6084  001398  D004               	goto	i1l3520
  6085  00139A                     i1l3518:
  6086  00139A  90D8               	bcf	status,0,c
  6087  00139C  3603               	rlcf	i1___awmod@divisor,f,c
  6088  00139E  3604               	rlcf	i1___awmod@divisor+1,f,c
  6089  0013A0  2A06               	incf	i1___awmod@counter,f,c
  6090  0013A2                     i1l3520:
  6091  0013A2  AE04               	btfss	i1___awmod@divisor+1,7,c
  6092  0013A4  D7FA               	goto	i1l3518
  6093  0013A6                     i1l3522:
  6094  0013A6  5003               	movf	i1___awmod@divisor,w,c
  6095  0013A8  5C01               	subwf	i1___awmod@dividend,w,c
  6096  0013AA  5004               	movf	i1___awmod@divisor+1,w,c
  6097  0013AC  5802               	subwfb	i1___awmod@dividend+1,w,c
  6098  0013AE  A0D8               	btfss	status,0,c
  6099  0013B0  D004               	goto	i1l3526
  6100  0013B2  5003               	movf	i1___awmod@divisor,w,c
  6101  0013B4  5E01               	subwf	i1___awmod@dividend,f,c
  6102  0013B6  5004               	movf	i1___awmod@divisor+1,w,c
  6103  0013B8  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6104  0013BA                     i1l3526:
  6105  0013BA  90D8               	bcf	status,0,c
  6106  0013BC  3204               	rrcf	i1___awmod@divisor+1,f,c
  6107  0013BE  3203               	rrcf	i1___awmod@divisor,f,c
  6108  0013C0  2E06               	decfsz	i1___awmod@counter,f,c
  6109  0013C2  D7F1               	goto	i1l3522
  6110  0013C4                     i1l3530:
  6111  0013C4  5007               	movf	i1___awmod@sign,w,c
  6112  0013C6  B4D8               	btfsc	status,2,c
  6113  0013C8  D004               	goto	i1l3534
  6114  0013CA  6C01               	negf	i1___awmod@dividend,c
  6115  0013CC  1E02               	comf	i1___awmod@dividend+1,f,c
  6116  0013CE  B0D8               	btfsc	status,0,c
  6117  0013D0  2A02               	incf	i1___awmod@dividend+1,f,c
  6118  0013D2                     i1l3534:
  6119  0013D2  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6120  0013D6  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6121  0013DA  0012               	return	
  6122  0013DC                     __end_ofi1___awmod:
  6123                           	opt stack 0
  6124                           pclatu	equ	0xFFB
  6125                           pclath	equ	0xFFA
  6126                           tblptru	equ	0xFF8
  6127                           tblptrh	equ	0xFF7
  6128                           tblptrl	equ	0xFF6
  6129                           tablat	equ	0xFF5
  6130                           prodh	equ	0xFF4
  6131                           prodl	equ	0xFF3
  6132                           intcon	equ	0xFF2
  6133                           postinc0	equ	0xFEE
  6134                           fsr0h	equ	0xFEA
  6135                           fsr0l	equ	0xFE9
  6136                           wreg	equ	0xFE8
  6137                           indf1	equ	0xFE7
  6138                           postdec1	equ	0xFE5
  6139                           fsr1h	equ	0xFE2
  6140                           fsr1l	equ	0xFE1
  6141                           bsr	equ	0xFE0
  6142                           indf2	equ	0xFDF
  6143                           postinc2	equ	0xFDE
  6144                           postdec2	equ	0xFDD
  6145                           fsr2h	equ	0xFDA
  6146                           fsr2l	equ	0xFD9
  6147                           status	equ	0xFD8
  6148                           
  6149 ;; *************** function _ReadUSART *****************
  6150 ;; Defined at:
  6151 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;		None
  6154 ;; Auto vars:     Size  Location     Type
  6155 ;;  data            1    0[COMRAM] unsigned char 
  6156 ;; Return value:  Size  Location     Type
  6157 ;;                  1    wreg      unsigned char 
  6158 ;; Registers used:
  6159 ;;		wreg, status,2, status,0
  6160 ;; Tracked objects:
  6161 ;;		On entry : 0/0
  6162 ;;		On exit  : 0/0
  6163 ;;		Unchanged: 0/0
  6164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6165 ;;      Params:         0       0       0       0       0
  6166 ;;      Locals:         1       0       0       0       0
  6167 ;;      Temps:          0       0       0       0       0
  6168 ;;      Totals:         1       0       0       0       0
  6169 ;;Total ram usage:        1 bytes
  6170 ;; Hardware stack levels used:    1
  6171 ;; Hardware stack levels required when called:    6
  6172 ;; This function calls:
  6173 ;;		Nothing
  6174 ;; This function is called by:
  6175 ;;		_uart_recv_int_handler
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text38
  6180  001E5A                     __ptext38:
  6181                           	opt stack 0
  6182  001E5A                     _ReadUSART:
  6183                           	opt stack 18
  6184                           
  6185                           ;incstack = 0
  6186  001E5A  0EF2               	movlw	242
  6187  001E5C  164F               	andwf	_USART_Status,f,c
  6188  001E5E  ACAB               	btfss	4011,6,c	;volatile
  6189  001E60  D003               	goto	i1l579
  6190  001E62  904F               	bcf	_USART_Status,0,c
  6191  001E64  B0AB               	btfsc	4011,0,c	;volatile
  6192  001E66  804F               	bsf	_USART_Status,0,c
  6193  001E68                     i1l579:
  6194  001E68  B4AB               	btfsc	4011,2,c	;volatile
  6195  001E6A  844F               	bsf	_USART_Status,2,c
  6196  001E6C  B2AB               	btfsc	4011,1,c	;volatile
  6197  001E6E  864F               	bsf	_USART_Status,3,c
  6198  001E70  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6199  001E74  5001               	movf	ReadUSART@data,w,c
  6200  001E76  0012               	return	
  6201  001E78                     __end_of_ReadUSART:
  6202                           	opt stack 0
  6203                           pclatu	equ	0xFFB
  6204                           pclath	equ	0xFFA
  6205                           tblptru	equ	0xFF8
  6206                           tblptrh	equ	0xFF7
  6207                           tblptrl	equ	0xFF6
  6208                           tablat	equ	0xFF5
  6209                           prodh	equ	0xFF4
  6210                           prodl	equ	0xFF3
  6211                           intcon	equ	0xFF2
  6212                           postinc0	equ	0xFEE
  6213                           fsr0h	equ	0xFEA
  6214                           fsr0l	equ	0xFE9
  6215                           wreg	equ	0xFE8
  6216                           indf1	equ	0xFE7
  6217                           postdec1	equ	0xFE5
  6218                           fsr1h	equ	0xFE2
  6219                           fsr1l	equ	0xFE1
  6220                           bsr	equ	0xFE0
  6221                           indf2	equ	0xFDF
  6222                           postinc2	equ	0xFDE
  6223                           postdec2	equ	0xFDD
  6224                           fsr2h	equ	0xFDA
  6225                           fsr2l	equ	0xFD9
  6226                           status	equ	0xFD8
  6227                           
  6228 ;; *************** function _timer1_int_handler *****************
  6229 ;; Defined at:
  6230 ;;		line 46 in file "../src/user_interrupts.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;		None
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;		None
  6235 ;; Return value:  Size  Location     Type
  6236 ;;		None               void
  6237 ;; Registers used:
  6238 ;;		wreg, status,2, cstack
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6244 ;;      Params:         0       0       0       0       0
  6245 ;;      Locals:         0       0       0       0       0
  6246 ;;      Temps:          0       0       0       0       0
  6247 ;;      Totals:         0       0       0       0       0
  6248 ;;Total ram usage:        0 bytes
  6249 ;; Hardware stack levels used:    1
  6250 ;; Hardware stack levels required when called:    7
  6251 ;; This function calls:
  6252 ;;		_WriteTimer1
  6253 ;; This function is called by:
  6254 ;;		_InterruptHandlerLow
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           	psect	text39
  6259  001EFA                     __ptext39:
  6260                           	opt stack 0
  6261  001EFA                     _timer1_int_handler:
  6262                           	opt stack 18
  6263                           
  6264                           ;user_interrupts.c: 58: WriteTimer1(0);
  6265                           
  6266                           ;incstack = 0
  6267  001EFA  0E00               	movlw	0
  6268  001EFC  6E02               	movwf	WriteTimer1@timer1+1,c
  6269  001EFE  0E00               	movlw	0
  6270  001F00  6E01               	movwf	WriteTimer1@timer1,c
  6271  001F02  EC62  F00F         	call	_WriteTimer1	;wreg free
  6272  001F06  0012               	return	
  6273  001F08                     __end_of_timer1_int_handler:
  6274                           	opt stack 0
  6275                           pclatu	equ	0xFFB
  6276                           pclath	equ	0xFFA
  6277                           tblptru	equ	0xFF8
  6278                           tblptrh	equ	0xFF7
  6279                           tblptrl	equ	0xFF6
  6280                           tablat	equ	0xFF5
  6281                           prodh	equ	0xFF4
  6282                           prodl	equ	0xFF3
  6283                           intcon	equ	0xFF2
  6284                           postinc0	equ	0xFEE
  6285                           fsr0h	equ	0xFEA
  6286                           fsr0l	equ	0xFE9
  6287                           wreg	equ	0xFE8
  6288                           indf1	equ	0xFE7
  6289                           postdec1	equ	0xFE5
  6290                           fsr1h	equ	0xFE2
  6291                           fsr1l	equ	0xFE1
  6292                           bsr	equ	0xFE0
  6293                           indf2	equ	0xFDF
  6294                           postinc2	equ	0xFDE
  6295                           postdec2	equ	0xFDD
  6296                           fsr2h	equ	0xFDA
  6297                           fsr2l	equ	0xFD9
  6298                           status	equ	0xFD8
  6299                           
  6300 ;; *************** function _WriteTimer1 *****************
  6301 ;; Defined at:
  6302 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;  timer1          2    0[COMRAM] unsigned int 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;  timer           2    2[COMRAM] struct Timers
  6307 ;; Return value:  Size  Location     Type
  6308 ;;		None               void
  6309 ;; Registers used:
  6310 ;;		None
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6316 ;;      Params:         2       0       0       0       0
  6317 ;;      Locals:         2       0       0       0       0
  6318 ;;      Temps:          0       0       0       0       0
  6319 ;;      Totals:         4       0       0       0       0
  6320 ;;Total ram usage:        4 bytes
  6321 ;; Hardware stack levels used:    1
  6322 ;; Hardware stack levels required when called:    6
  6323 ;; This function calls:
  6324 ;;		Nothing
  6325 ;; This function is called by:
  6326 ;;		_timer1_int_handler
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	text40
  6331  001EC4                     __ptext40:
  6332                           	opt stack 0
  6333  001EC4                     _WriteTimer1:
  6334                           	opt stack 18
  6335                           
  6336                           ;incstack = 0
  6337  001EC4  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6338  001EC8  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6339  001ECC  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6340  001ED0  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6341  001ED4  0012               	return	
  6342  001ED6                     __end_of_WriteTimer1:
  6343                           	opt stack 0
  6344                           pclatu	equ	0xFFB
  6345                           pclath	equ	0xFFA
  6346                           tblptru	equ	0xFF8
  6347                           tblptrh	equ	0xFF7
  6348                           tblptrl	equ	0xFF6
  6349                           tablat	equ	0xFF5
  6350                           prodh	equ	0xFF4
  6351                           prodl	equ	0xFF3
  6352                           intcon	equ	0xFF2
  6353                           postinc0	equ	0xFEE
  6354                           fsr0h	equ	0xFEA
  6355                           fsr0l	equ	0xFE9
  6356                           wreg	equ	0xFE8
  6357                           indf1	equ	0xFE7
  6358                           postdec1	equ	0xFE5
  6359                           fsr1h	equ	0xFE2
  6360                           fsr1l	equ	0xFE1
  6361                           bsr	equ	0xFE0
  6362                           indf2	equ	0xFDF
  6363                           postinc2	equ	0xFDE
  6364                           postdec2	equ	0xFDD
  6365                           fsr2h	equ	0xFDA
  6366                           fsr2l	equ	0xFD9
  6367                           status	equ	0xFD8
  6368                           
  6369 ;; *************** function _adc_int_handler *****************
  6370 ;; Defined at:
  6371 ;;		line 61 in file "../src/user_interrupts.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;		None
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;		None
  6376 ;; Return value:  Size  Location     Type
  6377 ;;		None               void
  6378 ;; Registers used:
  6379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6385 ;;      Params:         0       0       0       0       0
  6386 ;;      Locals:         0       0       0       0       0
  6387 ;;      Temps:          0       0       0       0       0
  6388 ;;      Totals:         0       0       0       0       0
  6389 ;;Total ram usage:        0 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:    6
  6392 ;; This function calls:
  6393 ;;		Nothing
  6394 ;; This function is called by:
  6395 ;;		_InterruptHandlerLow
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           	psect	text41
  6400  001DFA                     __ptext41:
  6401                           	opt stack 0
  6402  001DFA                     _adc_int_handler:
  6403                           	opt stack 19
  6404                           
  6405                           ;user_interrupts.c: 63: if(adcbuffer[0] < 27)
  6406                           
  6407                           ;incstack = 0
  6408  001DFA  0E1B               	movlw	27
  6409  001DFC  5C32               	subwf	_adcbuffer,w,c
  6410  001DFE  B0D8               	btfsc	status,0,c
  6411  001E00  D002               	goto	i1l1356
  6412                           
  6413                           ;user_interrupts.c: 64: adcbuffer[0] = adcbuffer[0] + 1;
  6414  001E02  2832               	incf	_adcbuffer,w,c
  6415  001E04  6E32               	movwf	_adcbuffer,c
  6416  001E06                     i1l1356:
  6417                           
  6418                           ;user_interrupts.c: 71: adcbuffer[adcbuffer[0]] = ADRESH;
  6419  001E06  5032               	movf	_adcbuffer,w,c
  6420  001E08  0D01               	mullw	1
  6421  001E0A  0E32               	movlw	low _adcbuffer
  6422  001E0C  24F3               	addwf	prodl,w,c
  6423  001E0E  6ED9               	movwf	fsr2l,c
  6424  001E10  0E00               	movlw	high _adcbuffer
  6425  001E12  20F4               	addwfc	prodh,w,c
  6426  001E14  6EDA               	movwf	fsr2h,c
  6427  001E16  CFC4 FFDF          	movff	4036,indf2	;volatile
  6428  001E1A  0012               	return	
  6429  001E1C                     __end_of_adc_int_handler:
  6430                           	opt stack 0
  6431                           pclatu	equ	0xFFB
  6432                           pclath	equ	0xFFA
  6433                           tblptru	equ	0xFF8
  6434                           tblptrh	equ	0xFF7
  6435                           tblptrl	equ	0xFF6
  6436                           tablat	equ	0xFF5
  6437                           prodh	equ	0xFF4
  6438                           prodl	equ	0xFF3
  6439                           intcon	equ	0xFF2
  6440                           postinc0	equ	0xFEE
  6441                           fsr0h	equ	0xFEA
  6442                           fsr0l	equ	0xFE9
  6443                           wreg	equ	0xFE8
  6444                           indf1	equ	0xFE7
  6445                           postdec1	equ	0xFE5
  6446                           fsr1h	equ	0xFE2
  6447                           fsr1l	equ	0xFE1
  6448                           bsr	equ	0xFE0
  6449                           indf2	equ	0xFDF
  6450                           postinc2	equ	0xFDE
  6451                           postdec2	equ	0xFDD
  6452                           fsr2h	equ	0xFDA
  6453                           fsr2l	equ	0xFD9
  6454                           status	equ	0xFD8
  6455                           
  6456 ;; *************** function _InterruptHandlerHigh *****************
  6457 ;; Defined at:
  6458 ;;		line 84 in file "../src/interrupts.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;		None
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;		None
  6463 ;; Return value:  Size  Location     Type
  6464 ;;		None               void
  6465 ;; Registers used:
  6466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6472 ;;      Params:         0       0       0       0       0
  6473 ;;      Locals:         0       0       0       0       0
  6474 ;;      Temps:          0      14       0       0       0
  6475 ;;      Totals:         0      14       0       0       0
  6476 ;;Total ram usage:       14 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    5
  6479 ;; This function calls:
  6480 ;;		_SleepIfOkay
  6481 ;;		_i2c_int_handler
  6482 ;;		_timer0_int_handler
  6483 ;; This function is called by:
  6484 ;;		Interrupt level 2
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	intcode
  6489  000008                     __pintcode:
  6490                           	opt stack 0
  6491  000008                     _InterruptHandlerHigh:
  6492                           	opt stack 16
  6493                           
  6494                           ;incstack = 0
  6495  000008  CFFA F0B9          	movff	pclath,??_InterruptHandlerHigh
  6496  00000C  CFFB F0BA          	movff	pclatu,??_InterruptHandlerHigh+1
  6497  000010  EF0A  F00B         	goto	int_func
  6498                           pclatu	equ	0xFFB
  6499                           pclath	equ	0xFFA
  6500                           tblptru	equ	0xFF8
  6501                           tblptrh	equ	0xFF7
  6502                           tblptrl	equ	0xFF6
  6503                           tablat	equ	0xFF5
  6504                           prodh	equ	0xFF4
  6505                           prodl	equ	0xFF3
  6506                           intcon	equ	0xFF2
  6507                           postinc0	equ	0xFEE
  6508                           fsr0h	equ	0xFEA
  6509                           fsr0l	equ	0xFE9
  6510                           wreg	equ	0xFE8
  6511                           indf1	equ	0xFE7
  6512                           postdec1	equ	0xFE5
  6513                           fsr1h	equ	0xFE2
  6514                           fsr1l	equ	0xFE1
  6515                           bsr	equ	0xFE0
  6516                           indf2	equ	0xFDF
  6517                           postinc2	equ	0xFDE
  6518                           postdec2	equ	0xFDD
  6519                           fsr2h	equ	0xFDA
  6520                           fsr2l	equ	0xFD9
  6521                           status	equ	0xFD8
  6522                           
  6523                           	psect	intcode_body
  6524  001614                     __pintcode_body:
  6525                           	opt stack 16
  6526  001614                     int_func:
  6527                           	opt stack 16
  6528  001614  CFE9 F0BB          	movff	fsr0l,??_InterruptHandlerHigh+2
  6529  001618  CFEA F0BC          	movff	fsr0h,??_InterruptHandlerHigh+3
  6530  00161C  CFE1 F0BD          	movff	fsr1l,??_InterruptHandlerHigh+4
  6531  001620  CFE2 F0BE          	movff	fsr1h,??_InterruptHandlerHigh+5
  6532  001624  CFD9 F0BF          	movff	fsr2l,??_InterruptHandlerHigh+6
  6533  001628  CFDA F0C0          	movff	fsr2h,??_InterruptHandlerHigh+7
  6534  00162C  CFF3 F0C1          	movff	prodl,??_InterruptHandlerHigh+8
  6535  001630  CFF4 F0C2          	movff	prodh,??_InterruptHandlerHigh+9
  6536  001634  CFF6 F0C3          	movff	tblptrl,??_InterruptHandlerHigh+10
  6537  001638  CFF7 F0C4          	movff	tblptrh,??_InterruptHandlerHigh+11
  6538  00163C  CFF8 F0C5          	movff	tblptru,??_InterruptHandlerHigh+12
  6539  001640  CFF5 F0C6          	movff	tablat,??_InterruptHandlerHigh+13
  6540                           
  6541                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  6542  001644  A69E               	btfss	3998,3,c	;volatile
  6543  001646  D003               	goto	i2l3700
  6544                           
  6545                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  6546  001648  969E               	bcf	3998,3,c	;volatile
  6547                           
  6548                           ;interrupts.c: 94: i2c_int_handler();
  6549  00164A  EC92  F00F         	call	_i2c_int_handler	;wreg free
  6550  00164E                     i2l3700:
  6551                           
  6552                           ;interrupts.c: 96: }
  6553                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  6554  00164E  A4F2               	btfss	intcon,2,c	;volatile
  6555  001650  D003               	goto	i2l3706
  6556                           
  6557                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  6558  001652  94F2               	bcf	intcon,2,c	;volatile
  6559                           
  6560                           ;interrupts.c: 103: timer0_int_handler();
  6561  001654  EC6B  F00F         	call	_timer0_int_handler	;wreg free
  6562  001658                     i2l3706:
  6563                           
  6564                           ;interrupts.c: 104: }
  6565                           ;interrupts.c: 113: SleepIfOkay();
  6566  001658  EC21  F00D         	call	_SleepIfOkay	;wreg free
  6567  00165C  C0C6  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6568  001660  C0C5  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6569  001664  C0C4  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6570  001668  C0C3  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6571  00166C  C0C2  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6572  001670  C0C1  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6573  001674  C0C0  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6574  001678  C0BF  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6575  00167C  C0BE  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6576  001680  C0BD  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6577  001684  C0BC  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6578  001688  C0BB  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6579  00168C  C0BA  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6580  001690  C0B9  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6581  001694  0011               	retfie		f
  6582  001696                     __end_of_InterruptHandlerHigh:
  6583                           	opt stack 0
  6584                           pclatu	equ	0xFFB
  6585                           pclath	equ	0xFFA
  6586                           tblptru	equ	0xFF8
  6587                           tblptrh	equ	0xFF7
  6588                           tblptrl	equ	0xFF6
  6589                           tablat	equ	0xFF5
  6590                           prodh	equ	0xFF4
  6591                           prodl	equ	0xFF3
  6592                           intcon	equ	0xFF2
  6593                           postinc0	equ	0xFEE
  6594                           fsr0h	equ	0xFEA
  6595                           fsr0l	equ	0xFE9
  6596                           wreg	equ	0xFE8
  6597                           indf1	equ	0xFE7
  6598                           postdec1	equ	0xFE5
  6599                           fsr1h	equ	0xFE2
  6600                           fsr1l	equ	0xFE1
  6601                           bsr	equ	0xFE0
  6602                           indf2	equ	0xFDF
  6603                           postinc2	equ	0xFDE
  6604                           postdec2	equ	0xFDD
  6605                           fsr2h	equ	0xFDA
  6606                           fsr2l	equ	0xFD9
  6607                           status	equ	0xFD8
  6608                           
  6609 ;; *************** function _timer0_int_handler *****************
  6610 ;; Defined at:
  6611 ;;		line 16 in file "../src/user_interrupts.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;		None
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;		None
  6616 ;; Return value:  Size  Location     Type
  6617 ;;		None               void
  6618 ;; Registers used:
  6619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/0
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6625 ;;      Params:         0       0       0       0       0
  6626 ;;      Locals:         0       0       0       0       0
  6627 ;;      Temps:          0       0       0       0       0
  6628 ;;      Totals:         0       0       0       0       0
  6629 ;;Total ram usage:        0 bytes
  6630 ;; Hardware stack levels used:    1
  6631 ;; Hardware stack levels required when called:    1
  6632 ;; This function calls:
  6633 ;;		_ConvertADC
  6634 ;;		_WriteTimer0
  6635 ;; This function is called by:
  6636 ;;		_InterruptHandlerHigh
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640                           	psect	text43
  6641  001ED6                     __ptext43:
  6642                           	opt stack 0
  6643  001ED6                     _timer0_int_handler:
  6644                           	opt stack 19
  6645                           
  6646                           ;user_interrupts.c: 17: WriteTimer0(0);
  6647                           
  6648                           ;incstack = 0
  6649  001ED6  0E00               	movlw	0
  6650  001ED8  6E2E               	movwf	WriteTimer0@timer0+1,c
  6651  001EDA  0E00               	movlw	0
  6652  001EDC  6E2D               	movwf	WriteTimer0@timer0,c
  6653  001EDE  EC74  F00F         	call	_WriteTimer0	;wreg free
  6654                           
  6655                           ;user_interrupts.c: 34: ConvertADC();
  6656  001EE2  EC98  F00F         	call	_ConvertADC	;wreg free
  6657  001EE6  0012               	return	
  6658  001EE8                     __end_of_timer0_int_handler:
  6659                           	opt stack 0
  6660                           pclatu	equ	0xFFB
  6661                           pclath	equ	0xFFA
  6662                           tblptru	equ	0xFF8
  6663                           tblptrh	equ	0xFF7
  6664                           tblptrl	equ	0xFF6
  6665                           tablat	equ	0xFF5
  6666                           prodh	equ	0xFF4
  6667                           prodl	equ	0xFF3
  6668                           intcon	equ	0xFF2
  6669                           postinc0	equ	0xFEE
  6670                           fsr0h	equ	0xFEA
  6671                           fsr0l	equ	0xFE9
  6672                           wreg	equ	0xFE8
  6673                           indf1	equ	0xFE7
  6674                           postdec1	equ	0xFE5
  6675                           fsr1h	equ	0xFE2
  6676                           fsr1l	equ	0xFE1
  6677                           bsr	equ	0xFE0
  6678                           indf2	equ	0xFDF
  6679                           postinc2	equ	0xFDE
  6680                           postdec2	equ	0xFDD
  6681                           fsr2h	equ	0xFDA
  6682                           fsr2l	equ	0xFD9
  6683                           status	equ	0xFD8
  6684                           
  6685 ;; *************** function _WriteTimer0 *****************
  6686 ;; Defined at:
  6687 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;  timer0          2   44[COMRAM] unsigned int 
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;  timer           2   46[COMRAM] struct Timers
  6692 ;; Return value:  Size  Location     Type
  6693 ;;		None               void
  6694 ;; Registers used:
  6695 ;;		None
  6696 ;; Tracked objects:
  6697 ;;		On entry : 0/0
  6698 ;;		On exit  : 0/0
  6699 ;;		Unchanged: 0/0
  6700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6701 ;;      Params:         2       0       0       0       0
  6702 ;;      Locals:         2       0       0       0       0
  6703 ;;      Temps:          0       0       0       0       0
  6704 ;;      Totals:         4       0       0       0       0
  6705 ;;Total ram usage:        4 bytes
  6706 ;; Hardware stack levels used:    1
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_timer0_int_handler
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           	psect	text44
  6715  001EE8                     __ptext44:
  6716                           	opt stack 0
  6717  001EE8                     _WriteTimer0:
  6718                           	opt stack 19
  6719                           
  6720                           ;incstack = 0
  6721  001EE8  C02D  F02F         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6722  001EEC  C02E  F030         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6723  001EF0  C030  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6724  001EF4  C02F  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6725  001EF8  0012               	return	
  6726  001EFA                     __end_of_WriteTimer0:
  6727                           	opt stack 0
  6728                           pclatu	equ	0xFFB
  6729                           pclath	equ	0xFFA
  6730                           tblptru	equ	0xFF8
  6731                           tblptrh	equ	0xFF7
  6732                           tblptrl	equ	0xFF6
  6733                           tablat	equ	0xFF5
  6734                           prodh	equ	0xFF4
  6735                           prodl	equ	0xFF3
  6736                           intcon	equ	0xFF2
  6737                           postinc0	equ	0xFEE
  6738                           fsr0h	equ	0xFEA
  6739                           fsr0l	equ	0xFE9
  6740                           wreg	equ	0xFE8
  6741                           indf1	equ	0xFE7
  6742                           postdec1	equ	0xFE5
  6743                           fsr1h	equ	0xFE2
  6744                           fsr1l	equ	0xFE1
  6745                           bsr	equ	0xFE0
  6746                           indf2	equ	0xFDF
  6747                           postinc2	equ	0xFDE
  6748                           postdec2	equ	0xFDD
  6749                           fsr2h	equ	0xFDA
  6750                           fsr2l	equ	0xFD9
  6751                           status	equ	0xFD8
  6752                           
  6753 ;; *************** function _ConvertADC *****************
  6754 ;; Defined at:
  6755 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcconv.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;		None
  6758 ;; Auto vars:     Size  Location     Type
  6759 ;;		None
  6760 ;; Return value:  Size  Location     Type
  6761 ;;		None               void
  6762 ;; Registers used:
  6763 ;;		None
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6769 ;;      Params:         0       0       0       0       0
  6770 ;;      Locals:         0       0       0       0       0
  6771 ;;      Temps:          0       0       0       0       0
  6772 ;;      Totals:         0       0       0       0       0
  6773 ;;Total ram usage:        0 bytes
  6774 ;; Hardware stack levels used:    1
  6775 ;; This function calls:
  6776 ;;		Nothing
  6777 ;; This function is called by:
  6778 ;;		_timer0_int_handler
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           	psect	text45
  6783  001F30                     __ptext45:
  6784                           	opt stack 0
  6785  001F30                     _ConvertADC:
  6786                           	opt stack 19
  6787                           
  6788                           ;incstack = 0
  6789  001F30  82C2               	bsf	4034,1,c	;volatile
  6790  001F32  0012               	return	
  6791  001F34                     __end_of_ConvertADC:
  6792                           	opt stack 0
  6793                           pclatu	equ	0xFFB
  6794                           pclath	equ	0xFFA
  6795                           tblptru	equ	0xFF8
  6796                           tblptrh	equ	0xFF7
  6797                           tblptrl	equ	0xFF6
  6798                           tablat	equ	0xFF5
  6799                           prodh	equ	0xFF4
  6800                           prodl	equ	0xFF3
  6801                           intcon	equ	0xFF2
  6802                           postinc0	equ	0xFEE
  6803                           fsr0h	equ	0xFEA
  6804                           fsr0l	equ	0xFE9
  6805                           wreg	equ	0xFE8
  6806                           indf1	equ	0xFE7
  6807                           postdec1	equ	0xFE5
  6808                           fsr1h	equ	0xFE2
  6809                           fsr1l	equ	0xFE1
  6810                           bsr	equ	0xFE0
  6811                           indf2	equ	0xFDF
  6812                           postinc2	equ	0xFDE
  6813                           postdec2	equ	0xFDD
  6814                           fsr2h	equ	0xFDA
  6815                           fsr2l	equ	0xFD9
  6816                           status	equ	0xFD8
  6817                           
  6818 ;; *************** function _i2c_int_handler *****************
  6819 ;; Defined at:
  6820 ;;		line 139 in file "../src/my_i2c.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;		None
  6823 ;; Auto vars:     Size  Location     Type
  6824 ;;		None
  6825 ;; Return value:  Size  Location     Type
  6826 ;;		None               void
  6827 ;; Registers used:
  6828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6834 ;;      Params:         0       0       0       0       0
  6835 ;;      Locals:         0       0       0       0       0
  6836 ;;      Temps:          0       0       0       0       0
  6837 ;;      Totals:         0       0       0       0       0
  6838 ;;Total ram usage:        0 bytes
  6839 ;; Hardware stack levels used:    1
  6840 ;; Hardware stack levels required when called:    4
  6841 ;; This function calls:
  6842 ;;		_i2c_slave_int_handler
  6843 ;; This function is called by:
  6844 ;;		_InterruptHandlerHigh
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848                           	psect	text46
  6849  001F24                     __ptext46:
  6850                           	opt stack 0
  6851  001F24                     _i2c_int_handler:
  6852                           	opt stack 16
  6853                           
  6854                           ;my_i2c.c: 143: i2c_slave_int_handler();
  6855                           
  6856                           ;incstack = 0
  6857  001F24  EC65  F000         	call	_i2c_slave_int_handler	;wreg free
  6858  001F28  0012               	return	
  6859  001F2A                     __end_of_i2c_int_handler:
  6860                           	opt stack 0
  6861                           pclatu	equ	0xFFB
  6862                           pclath	equ	0xFFA
  6863                           tblptru	equ	0xFF8
  6864                           tblptrh	equ	0xFF7
  6865                           tblptrl	equ	0xFF6
  6866                           tablat	equ	0xFF5
  6867                           prodh	equ	0xFF4
  6868                           prodl	equ	0xFF3
  6869                           intcon	equ	0xFF2
  6870                           postinc0	equ	0xFEE
  6871                           fsr0h	equ	0xFEA
  6872                           fsr0l	equ	0xFE9
  6873                           wreg	equ	0xFE8
  6874                           indf1	equ	0xFE7
  6875                           postdec1	equ	0xFE5
  6876                           fsr1h	equ	0xFE2
  6877                           fsr1l	equ	0xFE1
  6878                           bsr	equ	0xFE0
  6879                           indf2	equ	0xFDF
  6880                           postinc2	equ	0xFDE
  6881                           postdec2	equ	0xFDD
  6882                           fsr2h	equ	0xFDA
  6883                           fsr2l	equ	0xFD9
  6884                           status	equ	0xFD8
  6885                           
  6886 ;; *************** function _i2c_slave_int_handler *****************
  6887 ;; Defined at:
  6888 ;;		line 248 in file "../src/my_i2c.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;		None
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;  sensorData      5   40[BANK0 ] unsigned char [5]
  6893 ;;  noData          5   27[BANK0 ] unsigned char [5]
  6894 ;;  msgtype         2   52[BANK0 ] int 
  6895 ;;  reply           5   32[BANK0 ] unsigned char [5]
  6896 ;;  gatherAck       3   37[BANK0 ] unsigned char [3]
  6897 ;;  length          1   55[BANK0 ] unsigned char 
  6898 ;;  error_buf       3   45[BANK0 ] unsigned char [3]
  6899 ;;  data_read       1   56[BANK0 ] unsigned char 
  6900 ;;  msg_ready       1   54[BANK0 ] unsigned char 
  6901 ;;  msg_to_send     1   51[BANK0 ] unsigned char 
  6902 ;;  i2c_data        1   50[BANK0 ] unsigned char 
  6903 ;;  overrun_erro    1   49[BANK0 ] unsigned char 
  6904 ;;  data_written    1   48[BANK0 ] unsigned char 
  6905 ;; Return value:  Size  Location     Type
  6906 ;;		None               void
  6907 ;; Registers used:
  6908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6909 ;; Tracked objects:
  6910 ;;		On entry : 0/0
  6911 ;;		On exit  : 0/0
  6912 ;;		Unchanged: 0/0
  6913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6914 ;;      Params:         0       0       0       0       0
  6915 ;;      Locals:         0      30       0       0       0
  6916 ;;      Temps:          0       2       0       0       0
  6917 ;;      Totals:         0      32       0       0       0
  6918 ;;Total ram usage:       32 bytes
  6919 ;; Hardware stack levels used:    1
  6920 ;; Hardware stack levels required when called:    3
  6921 ;; This function calls:
  6922 ;;		_FromMainLow_recvmsg
  6923 ;;		_ToMainHigh_sendmsg
  6924 ;;		_handle_start
  6925 ;;		_start_i2c_slave_reply
  6926 ;; This function is called by:
  6927 ;;		_i2c_int_handler
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           	psect	text47
  6932  0000CA                     __ptext47:
  6933                           	opt stack 0
  6934  0000CA                     _i2c_slave_int_handler:
  6935                           	opt stack 16
  6936                           
  6937                           ;my_i2c.c: 249: unsigned char i2c_data;
  6938                           ;my_i2c.c: 250: unsigned char data_read = 0;
  6939                           
  6940                           ;incstack = 0
  6941  0000CA  0100               	movlb	0	; () banked
  6942  0000CC  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  6943  0000CE  0E00               	movlw	0
  6944  0000D0  0100               	movlb	0	; () banked
  6945  0000D2  0100               	movlb	0	; () banked
  6946  0000D4  6FB8               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6947  0000D6  0100               	movlb	0	; () banked
  6948  0000D8  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6949                           
  6950                           ;my_i2c.c: 251: unsigned char data_written = 0;
  6951  0000DA  0100               	movlb	0	; () banked
  6952  0000DC  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  6953  0000DE  0E00               	movlw	0
  6954  0000E0  0100               	movlb	0	; () banked
  6955  0000E2  0100               	movlb	0	; () banked
  6956  0000E4  6FB0               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  6957  0000E6  0100               	movlb	0	; () banked
  6958  0000E8  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6959                           
  6960                           ;my_i2c.c: 252: unsigned char msg_ready = 0;
  6961  0000EA  0100               	movlb	0	; () banked
  6962  0000EC  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  6963  0000EE  0E00               	movlw	0
  6964  0000F0  0100               	movlb	0	; () banked
  6965  0000F2  0100               	movlb	0	; () banked
  6966  0000F4  6FB6               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6967  0000F6  0100               	movlb	0	; () banked
  6968  0000F8  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6969                           
  6970                           ;my_i2c.c: 253: unsigned char msg_to_send = 0;
  6971  0000FA  0100               	movlb	0	; () banked
  6972  0000FC  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  6973  0000FE  0E00               	movlw	0
  6974  000100  0100               	movlb	0	; () banked
  6975  000102  0100               	movlb	0	; () banked
  6976  000104  6FB3               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6977  000106  0100               	movlb	0	; () banked
  6978  000108  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6979                           
  6980                           ;my_i2c.c: 254: unsigned char overrun_error = 0;
  6981  00010A  0100               	movlb	0	; () banked
  6982  00010C  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  6983  00010E  0E00               	movlw	0
  6984  000110  0100               	movlb	0	; () banked
  6985  000112  0100               	movlb	0	; () banked
  6986  000114  6FB1               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  6987  000116  0100               	movlb	0	; () banked
  6988  000118  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;my_i2c.c: 255: unsigned char error_buf[3];
  6992                           ;my_i2c.c: 258: if (SSPCON1bits.SSPOV == 1) {
  6993  00011A  ACC6               	btfss	4038,6,c	;volatile
  6994  00011C  D020               	goto	i2l4112
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;my_i2c.c: 259: SSPCON1bits.SSPOV = 0;
  6998  00011E  9CC6               	bcf	4038,6,c	;volatile
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;my_i2c.c: 263: ic_ptr->status = 0x5;
  7002  000120  EE20 F00D          	lfsr	2,13
  7003  000124  5050               	movf	_ic_ptr,w,c
  7004  000126  26D9               	addwf	fsr2l,f,c
  7005  000128  5051               	movf	_ic_ptr+1,w,c
  7006  00012A  22DA               	addwfc	fsr2h,f,c
  7007  00012C  0E05               	movlw	5
  7008  00012E  6EDF               	movwf	indf2,c
  7009                           
  7010                           ; BSR set to: 0
  7011                           ;my_i2c.c: 264: overrun_error = 1;
  7012  000130  0100               	movlb	0	; () banked
  7013  000132  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7014  000134  0E01               	movlw	1
  7015  000136  0100               	movlb	0	; () banked
  7016  000138  0100               	movlb	0	; () banked
  7017  00013A  6FB1               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7018  00013C  0100               	movlb	0	; () banked
  7019  00013E  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7020                           
  7021                           ; BSR set to: 0
  7022                           ;my_i2c.c: 265: ic_ptr->error_count++;
  7023  000140  EE20 F00F          	lfsr	2,15
  7024  000144  5050               	movf	_ic_ptr,w,c
  7025  000146  26D9               	addwf	fsr2l,f,c
  7026  000148  5051               	movf	_ic_ptr+1,w,c
  7027  00014A  22DA               	addwfc	fsr2h,f,c
  7028  00014C  2ADF               	incf	indf2,f,c
  7029                           
  7030                           ; BSR set to: 0
  7031                           ;my_i2c.c: 266: ic_ptr->error_code = 0x4;
  7032  00014E  EE20 F00E          	lfsr	2,14
  7033  000152  5050               	movf	_ic_ptr,w,c
  7034  000154  26D9               	addwf	fsr2l,f,c
  7035  000156  5051               	movf	_ic_ptr+1,w,c
  7036  000158  22DA               	addwfc	fsr2h,f,c
  7037  00015A  0E04               	movlw	4
  7038  00015C  6EDF               	movwf	indf2,c
  7039  00015E                     i2l4112:
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;my_i2c.c: 267: }
  7043                           ;my_i2c.c: 269: if (SSPSTATbits.BF == 1) {
  7044  00015E  A0C7               	btfss	4039,0,c	;volatile
  7045  000160  D00A               	goto	i2l4118
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;my_i2c.c: 270: i2c_data = SSPBUF;
  7049  000162  CFC9 F0B2          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;my_i2c.c: 271: data_read = 1;
  7053  000166  0100               	movlb	0	; () banked
  7054  000168  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7055  00016A  0E01               	movlw	1
  7056  00016C  0100               	movlb	0	; () banked
  7057  00016E  0100               	movlb	0	; () banked
  7058  000170  6FB8               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7059  000172  0100               	movlb	0	; () banked
  7060  000174  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7061  000176                     i2l4118:
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;my_i2c.c: 272: }
  7065                           ;my_i2c.c: 274: if (!overrun_error) {
  7066  000176  0100               	movlb	0	; () banked
  7067  000178  0100               	movlb	0	; () banked
  7068  00017A  67B1               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  7069  00017C  D174               	goto	i2l323
  7070  00017E  D160               	goto	i2l4206
  7071  000180                     i2l325:
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;my_i2c.c: 277: {
  7075                           ;my_i2c.c: 279: if (SSPSTATbits.S == 1) {
  7076  000180  A6C7               	btfss	4039,3,c	;volatile
  7077  000182  D171               	goto	i2l323
  7078                           
  7079                           ; BSR set to: 0
  7080                           ;my_i2c.c: 280: handle_start(data_read);
  7081  000184  0100               	movlb	0	; () banked
  7082  000186  0100               	movlb	0	; () banked
  7083  000188  51B8               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7084  00018A  ECEE  F009         	call	_handle_start
  7085                           
  7086                           ;my_i2c.c: 282: if (ic_ptr->status == 0x8) {
  7087  00018E  EE20 F00D          	lfsr	2,13
  7088  000192  5050               	movf	_ic_ptr,w,c
  7089  000194  26D9               	addwf	fsr2l,f,c
  7090  000196  5051               	movf	_ic_ptr+1,w,c
  7091  000198  22DA               	addwfc	fsr2h,f,c
  7092  00019A  0E08               	movlw	8
  7093  00019C  62DF               	cpfseq	indf2,c
  7094  00019E  D163               	goto	i2l323
  7095                           
  7096                           ;my_i2c.c: 283: data_read = 0;
  7097  0001A0  0100               	movlb	0	; () banked
  7098  0001A2  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7099  0001A4  0E00               	movlw	0
  7100  0001A6  0100               	movlb	0	; () banked
  7101  0001A8  0100               	movlb	0	; () banked
  7102  0001AA  6FB8               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7103  0001AC  0100               	movlb	0	; () banked
  7104  0001AE  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7105                           
  7106                           ;my_i2c.c: 284: msg_to_send = 1;
  7107  0001B0  0100               	movlb	0	; () banked
  7108  0001B2  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7109  0001B4  0E01               	movlw	1
  7110  0001B6  0100               	movlb	0	; () banked
  7111  0001B8  0100               	movlb	0	; () banked
  7112  0001BA  6FB3               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7113  0001BC  D136               	goto	L6
  7114  0001BE                     i2l329:
  7115                           
  7116                           ; BSR set to: 0
  7117                           ;my_i2c.c: 290: {
  7118                           ;my_i2c.c: 292: if (SSPSTATbits.P == 1) {
  7119  0001BE  A8C7               	btfss	4039,4,c	;volatile
  7120  0001C0  D027               	goto	i2l4138
  7121                           
  7122                           ; BSR set to: 0
  7123                           ;my_i2c.c: 295: ic_ptr->event_count++;
  7124  0001C2  EE20 F00C          	lfsr	2,12
  7125  0001C6  5050               	movf	_ic_ptr,w,c
  7126  0001C8  26D9               	addwf	fsr2l,f,c
  7127  0001CA  5051               	movf	_ic_ptr+1,w,c
  7128  0001CC  22DA               	addwfc	fsr2h,f,c
  7129  0001CE  2ADF               	incf	indf2,f,c
  7130                           
  7131                           ; BSR set to: 0
  7132                           ;my_i2c.c: 296: if (data_read) {
  7133  0001D0  0100               	movlb	0	; () banked
  7134  0001D2  0100               	movlb	0	; () banked
  7135  0001D4  51B8               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7136  0001D6  B4D8               	btfsc	status,2,c
  7137  0001D8  D12B               	goto	L8
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;my_i2c.c: 297: if (SSPSTATbits.D_A == 0) {
  7141  0001DA  BAC7               	btfsc	4039,5,c	;volatile
  7142  0001DC  D009               	goto	i2l4136
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;my_i2c.c: 298: msg_ready = 1;
  7146  0001DE  0100               	movlb	0	; () banked
  7147  0001E0  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7148  0001E2  0E01               	movlw	1
  7149  0001E4  0100               	movlb	0	; () banked
  7150  0001E6  0100               	movlb	0	; () banked
  7151  0001E8  6FB6               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7152  0001EA  0100               	movlb	0	; () banked
  7153  0001EC  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7154                           
  7155                           ;my_i2c.c: 299: } else {
  7156  0001EE  D120               	goto	L8
  7157  0001F0                     i2l4136:
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;my_i2c.c: 300: ic_ptr->error_count++;
  7161  0001F0  EE20 F00F          	lfsr	2,15
  7162  0001F4  5050               	movf	_ic_ptr,w,c
  7163  0001F6  26D9               	addwf	fsr2l,f,c
  7164  0001F8  5051               	movf	_ic_ptr+1,w,c
  7165  0001FA  22DA               	addwfc	fsr2h,f,c
  7166  0001FC  2ADF               	incf	indf2,f,c
  7167                           
  7168                           ;my_i2c.c: 301: ic_ptr->error_code = 0x6;
  7169  0001FE  EE20 F00E          	lfsr	2,14
  7170  000202  5050               	movf	_ic_ptr,w,c
  7171  000204  26D9               	addwf	fsr2l,f,c
  7172  000206  5051               	movf	_ic_ptr+1,w,c
  7173  000208  22DA               	addwfc	fsr2h,f,c
  7174  00020A  0E06               	movlw	6
  7175  00020C  6EDF               	movwf	indf2,c
  7176                           
  7177                           ; BSR set to: 0
  7178  00020E  D110               	goto	L8
  7179  000210                     i2l4138:
  7180                           
  7181                           ; BSR set to: 0
  7182  000210  0100               	movlb	0	; () banked
  7183  000212  0100               	movlb	0	; () banked
  7184  000214  51B8               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7185  000216  B4D8               	btfsc	status,2,c
  7186  000218  D126               	goto	i2l323
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;my_i2c.c: 306: ic_ptr->event_count++;
  7190  00021A  EE20 F00C          	lfsr	2,12
  7191  00021E  5050               	movf	_ic_ptr,w,c
  7192  000220  26D9               	addwf	fsr2l,f,c
  7193  000222  5051               	movf	_ic_ptr+1,w,c
  7194  000224  22DA               	addwfc	fsr2h,f,c
  7195  000226  2ADF               	incf	indf2,f,c
  7196                           
  7197                           ; BSR set to: 0
  7198                           ;my_i2c.c: 307: if (SSPSTATbits.D_A == 0) {
  7199  000228  BAC7               	btfsc	4039,5,c	;volatile
  7200  00022A  D013               	goto	i2l4154
  7201                           
  7202                           ; BSR set to: 0
  7203                           ;my_i2c.c: 308: if (SSPSTATbits.R_W == 0) {
  7204  00022C  B4C7               	btfsc	4039,2,c	;volatile
  7205  00022E  D008               	goto	i2l4148
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;my_i2c.c: 309: ic_ptr->status = 0x7;
  7209  000230  EE20 F00D          	lfsr	2,13
  7210  000234  5050               	movf	_ic_ptr,w,c
  7211  000236  26D9               	addwf	fsr2l,f,c
  7212  000238  5051               	movf	_ic_ptr+1,w,c
  7213  00023A  22DA               	addwfc	fsr2h,f,c
  7214  00023C  0E07               	movlw	7
  7215  00023E  D05A               	goto	L5
  7216  000240                     i2l4148:
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;my_i2c.c: 311: ic_ptr->status = 0x8;
  7220  000240  EE20 F00D          	lfsr	2,13
  7221  000244  5050               	movf	_ic_ptr,w,c
  7222  000246  26D9               	addwf	fsr2l,f,c
  7223  000248  5051               	movf	_ic_ptr+1,w,c
  7224  00024A  22DA               	addwfc	fsr2h,f,c
  7225  00024C  0E08               	movlw	8
  7226  00024E  6EDF               	movwf	indf2,c
  7227  000250  D0DE               	goto	L9
  7228  000252                     i2l4154:
  7229                           
  7230                           ; BSR set to: 0
  7231                           ;my_i2c.c: 317: ic_ptr->error_count++;
  7232  000252  EE20 F00F          	lfsr	2,15
  7233  000256  5050               	movf	_ic_ptr,w,c
  7234  000258  26D9               	addwf	fsr2l,f,c
  7235  00025A  5051               	movf	_ic_ptr+1,w,c
  7236  00025C  22DA               	addwfc	fsr2h,f,c
  7237  00025E  2ADF               	incf	indf2,f,c
  7238                           
  7239                           ;my_i2c.c: 318: ic_ptr->status = 0x5;
  7240  000260  EE20 F00D          	lfsr	2,13
  7241  000264  5050               	movf	_ic_ptr,w,c
  7242  000266  26D9               	addwf	fsr2l,f,c
  7243  000268  5051               	movf	_ic_ptr+1,w,c
  7244  00026A  22DA               	addwfc	fsr2h,f,c
  7245  00026C  0E05               	movlw	5
  7246  00026E  6EDF               	movwf	indf2,c
  7247                           
  7248                           ;my_i2c.c: 319: ic_ptr->error_code = 0x6;
  7249  000270  EE20 F00E          	lfsr	2,14
  7250  000274  5050               	movf	_ic_ptr,w,c
  7251  000276  26D9               	addwf	fsr2l,f,c
  7252  000278  5051               	movf	_ic_ptr+1,w,c
  7253  00027A  22DA               	addwfc	fsr2h,f,c
  7254  00027C  0E06               	movlw	6
  7255  00027E  D03A               	goto	L5
  7256  000280                     i2l4156:
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;my_i2c.c: 325: {
  7260                           ;my_i2c.c: 326: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7261  000280  EE20 F01B          	lfsr	2,27
  7262  000284  5050               	movf	_ic_ptr,w,c
  7263  000286  26D9               	addwf	fsr2l,f,c
  7264  000288  5051               	movf	_ic_ptr+1,w,c
  7265  00028A  22DA               	addwfc	fsr2h,f,c
  7266  00028C  50DF               	movf	indf2,w,c
  7267  00028E  0100               	movlb	0	; () banked
  7268  000290  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7269  000292  EE20 F01A          	lfsr	2,26
  7270  000296  5050               	movf	_ic_ptr,w,c
  7271  000298  26D9               	addwf	fsr2l,f,c
  7272  00029A  5051               	movf	_ic_ptr+1,w,c
  7273  00029C  22DA               	addwfc	fsr2h,f,c
  7274  00029E  50DF               	movf	indf2,w,c
  7275  0002A0  0100               	movlb	0	; () banked
  7276  0002A2  5D99               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  7277  0002A4  B0D8               	btfsc	status,0,c
  7278  0002A6  D0C4               	goto	L8
  7279                           
  7280                           ; BSR set to: 0
  7281                           ;my_i2c.c: 327: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7282  0002A8  EE20 F01B          	lfsr	2,27
  7283  0002AC  5050               	movf	_ic_ptr,w,c
  7284  0002AE  26D9               	addwf	fsr2l,f,c
  7285  0002B0  5051               	movf	_ic_ptr+1,w,c
  7286  0002B2  22DA               	addwfc	fsr2h,f,c
  7287  0002B4  50DF               	movf	indf2,w,c
  7288  0002B6  0100               	movlb	0	; () banked
  7289  0002B8  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7290  0002BA  0100               	movlb	0	; () banked
  7291  0002BC  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7292  0002BE  0D01               	mullw	1
  7293  0002C0  0E10               	movlw	16
  7294  0002C2  26F3               	addwf	prodl,f,c
  7295  0002C4  0E00               	movlw	0
  7296  0002C6  22F4               	addwfc	prodh,f,c
  7297  0002C8  50F3               	movf	prodl,w,c
  7298  0002CA  2450               	addwf	_ic_ptr,w,c
  7299  0002CC  6ED9               	movwf	fsr2l,c
  7300  0002CE  50F4               	movf	prodh,w,c
  7301  0002D0  2051               	addwfc	_ic_ptr+1,w,c
  7302  0002D2  6EDA               	movwf	fsr2h,c
  7303  0002D4  50DF               	movf	indf2,w,c
  7304  0002D6  6EC9               	movwf	4041,c	;volatile
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;my_i2c.c: 328: ic_ptr->outbufind++;
  7308  0002D8  EE20 F01B          	lfsr	2,27
  7309  0002DC  5050               	movf	_ic_ptr,w,c
  7310  0002DE  26D9               	addwf	fsr2l,f,c
  7311  0002E0  5051               	movf	_ic_ptr+1,w,c
  7312  0002E2  22DA               	addwfc	fsr2h,f,c
  7313  0002E4  2ADF               	incf	indf2,f,c
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;my_i2c.c: 329: data_written = 1;
  7317  0002E6  0100               	movlb	0	; () banked
  7318  0002E8  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7319  0002EA  0E01               	movlw	1
  7320  0002EC  0100               	movlb	0	; () banked
  7321  0002EE  0100               	movlb	0	; () banked
  7322  0002F0  6FB0               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7323  0002F2  D09B               	goto	L6
  7324  0002F4                     L5:
  7325  0002F4  6EDF               	movwf	indf2,c
  7326  0002F6  D0B7               	goto	i2l323
  7327  0002F8                     i2l343:
  7328                           
  7329                           ; BSR set to: 0
  7330                           ;my_i2c.c: 337: {
  7331                           ;my_i2c.c: 339: if (SSPSTATbits.P == 1) {
  7332  0002F8  A8C7               	btfss	4039,4,c	;volatile
  7333  0002FA  D04C               	goto	i2l4184
  7334                           
  7335                           ; BSR set to: 0
  7336                           ;my_i2c.c: 341: ic_ptr->event_count++;
  7337  0002FC  EE20 F00C          	lfsr	2,12
  7338  000300  5050               	movf	_ic_ptr,w,c
  7339  000302  26D9               	addwf	fsr2l,f,c
  7340  000304  5051               	movf	_ic_ptr+1,w,c
  7341  000306  22DA               	addwfc	fsr2h,f,c
  7342  000308  2ADF               	incf	indf2,f,c
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;my_i2c.c: 342: if (data_read) {
  7346  00030A  0100               	movlb	0	; () banked
  7347  00030C  0100               	movlb	0	; () banked
  7348  00030E  51B8               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7349  000310  B4D8               	btfsc	status,2,c
  7350  000312  D037               	goto	i2l4180
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;my_i2c.c: 343: if (SSPSTATbits.D_A == 1) {
  7354  000314  AAC7               	btfss	4039,5,c	;volatile
  7355  000316  D01D               	goto	i2l4178
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;my_i2c.c: 344: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7359  000318  EE20 F00A          	lfsr	2,10
  7360  00031C  5050               	movf	_ic_ptr,w,c
  7361  00031E  26D9               	addwf	fsr2l,f,c
  7362  000320  5051               	movf	_ic_ptr+1,w,c
  7363  000322  22DA               	addwfc	fsr2h,f,c
  7364  000324  50DF               	movf	indf2,w,c
  7365  000326  0100               	movlb	0	; () banked
  7366  000328  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7367  00032A  0100               	movlb	0	; () banked
  7368  00032C  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7369  00032E  0D01               	mullw	1
  7370  000330  50F3               	movf	prodl,w,c
  7371  000332  2450               	addwf	_ic_ptr,w,c
  7372  000334  6ED9               	movwf	fsr2l,c
  7373  000336  50F4               	movf	prodh,w,c
  7374  000338  2051               	addwfc	_ic_ptr+1,w,c
  7375  00033A  6EDA               	movwf	fsr2h,c
  7376  00033C  0100               	movlb	0	; () banked
  7377  00033E  C0B2  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;my_i2c.c: 345: ic_ptr->buflen++;
  7381  000342  EE20 F00A          	lfsr	2,10
  7382  000346  5050               	movf	_ic_ptr,w,c
  7383  000348  26D9               	addwf	fsr2l,f,c
  7384  00034A  5051               	movf	_ic_ptr+1,w,c
  7385  00034C  22DA               	addwfc	fsr2h,f,c
  7386  00034E  2ADF               	incf	indf2,f,c
  7387  000350  D018               	goto	i2l4180
  7388  000352                     i2l4178:
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;my_i2c.c: 348: ic_ptr->error_count++;
  7392  000352  EE20 F00F          	lfsr	2,15
  7393  000356  5050               	movf	_ic_ptr,w,c
  7394  000358  26D9               	addwf	fsr2l,f,c
  7395  00035A  5051               	movf	_ic_ptr+1,w,c
  7396  00035C  22DA               	addwfc	fsr2h,f,c
  7397  00035E  2ADF               	incf	indf2,f,c
  7398                           
  7399                           ;my_i2c.c: 349: ic_ptr->error_code = 0x6;
  7400  000360  EE20 F00E          	lfsr	2,14
  7401  000364  5050               	movf	_ic_ptr,w,c
  7402  000366  26D9               	addwf	fsr2l,f,c
  7403  000368  5051               	movf	_ic_ptr+1,w,c
  7404  00036A  22DA               	addwfc	fsr2h,f,c
  7405  00036C  0E06               	movlw	6
  7406  00036E  6EDF               	movwf	indf2,c
  7407                           
  7408                           ;my_i2c.c: 350: ic_ptr->status = 0x5;
  7409  000370  EE20 F00D          	lfsr	2,13
  7410  000374  5050               	movf	_ic_ptr,w,c
  7411  000376  26D9               	addwf	fsr2l,f,c
  7412  000378  5051               	movf	_ic_ptr+1,w,c
  7413  00037A  22DA               	addwfc	fsr2h,f,c
  7414  00037C  0E05               	movlw	5
  7415  00037E  6EDF               	movwf	indf2,c
  7416  000380  D057               	goto	L8
  7417  000382                     i2l4180:
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;my_i2c.c: 353: msg_ready = 1;
  7421  000382  0100               	movlb	0	; () banked
  7422  000384  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7423  000386  0E01               	movlw	1
  7424  000388  0100               	movlb	0	; () banked
  7425  00038A  0100               	movlb	0	; () banked
  7426  00038C  6FB6               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7427  00038E  0100               	movlb	0	; () banked
  7428  000390  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7429                           
  7430                           ; BSR set to: 0
  7431  000392  D04E               	goto	L8
  7432  000394                     i2l4184:
  7433                           
  7434                           ; BSR set to: 0
  7435  000394  0100               	movlb	0	; () banked
  7436  000396  0100               	movlb	0	; () banked
  7437  000398  51B8               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7438  00039A  B4D8               	btfsc	status,2,c
  7439  00039C  D064               	goto	i2l323
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;my_i2c.c: 357: ic_ptr->event_count++;
  7443  00039E  EE20 F00C          	lfsr	2,12
  7444  0003A2  5050               	movf	_ic_ptr,w,c
  7445  0003A4  26D9               	addwf	fsr2l,f,c
  7446  0003A6  5051               	movf	_ic_ptr+1,w,c
  7447  0003A8  22DA               	addwfc	fsr2h,f,c
  7448  0003AA  2ADF               	incf	indf2,f,c
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;my_i2c.c: 358: if (SSPSTATbits.D_A == 1) {
  7452  0003AC  AAC7               	btfss	4039,5,c	;volatile
  7453  0003AE  D01D               	goto	i2l351
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;my_i2c.c: 359: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7457  0003B0  EE20 F00A          	lfsr	2,10
  7458  0003B4  5050               	movf	_ic_ptr,w,c
  7459  0003B6  26D9               	addwf	fsr2l,f,c
  7460  0003B8  5051               	movf	_ic_ptr+1,w,c
  7461  0003BA  22DA               	addwfc	fsr2h,f,c
  7462  0003BC  50DF               	movf	indf2,w,c
  7463  0003BE  0100               	movlb	0	; () banked
  7464  0003C0  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7465  0003C2  0100               	movlb	0	; () banked
  7466  0003C4  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7467  0003C6  0D01               	mullw	1
  7468  0003C8  50F3               	movf	prodl,w,c
  7469  0003CA  2450               	addwf	_ic_ptr,w,c
  7470  0003CC  6ED9               	movwf	fsr2l,c
  7471  0003CE  50F4               	movf	prodh,w,c
  7472  0003D0  2051               	addwfc	_ic_ptr+1,w,c
  7473  0003D2  6EDA               	movwf	fsr2h,c
  7474  0003D4  0100               	movlb	0	; () banked
  7475  0003D6  C0B2  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;my_i2c.c: 360: ic_ptr->buflen++;
  7479  0003DA  EE20 F00A          	lfsr	2,10
  7480  0003DE  5050               	movf	_ic_ptr,w,c
  7481  0003E0  26D9               	addwf	fsr2l,f,c
  7482  0003E2  5051               	movf	_ic_ptr+1,w,c
  7483  0003E4  22DA               	addwfc	fsr2h,f,c
  7484  0003E6  2ADF               	incf	indf2,f,c
  7485                           
  7486                           ;my_i2c.c: 361: } else {
  7487  0003E8  D03E               	goto	i2l323
  7488  0003EA                     i2l351:
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;my_i2c.c: 362: if (SSPSTATbits.R_W == 1) {
  7492  0003EA  A4C7               	btfss	4039,2,c	;volatile
  7493  0003EC  D701               	goto	i2l4136
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;my_i2c.c: 363: ic_ptr->status = 0x8;
  7497  0003EE  EE20 F00D          	lfsr	2,13
  7498  0003F2  5050               	movf	_ic_ptr,w,c
  7499  0003F4  26D9               	addwf	fsr2l,f,c
  7500  0003F6  5051               	movf	_ic_ptr+1,w,c
  7501  0003F8  22DA               	addwfc	fsr2h,f,c
  7502  0003FA  0E08               	movlw	8
  7503  0003FC  6EDF               	movwf	indf2,c
  7504                           
  7505                           ; BSR set to: 0
  7506                           ;my_i2c.c: 364: msg_ready = 1;
  7507  0003FE  0100               	movlb	0	; () banked
  7508  000400  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7509  000402  0E01               	movlw	1
  7510  000404  0100               	movlb	0	; () banked
  7511  000406  0100               	movlb	0	; () banked
  7512  000408  6FB6               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7513  00040A  0100               	movlb	0	; () banked
  7514  00040C  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7515  00040E                     L9:
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;my_i2c.c: 365: msg_to_send = 1;
  7519  00040E  0100               	movlb	0	; () banked
  7520  000410  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7521  000412  0E01               	movlw	1
  7522  000414  0100               	movlb	0	; () banked
  7523  000416  0100               	movlb	0	; () banked
  7524  000418  6FB3               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7525  00041A  0100               	movlb	0	; () banked
  7526  00041C  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;my_i2c.c: 367: data_read = 0;
  7530  00041E  0100               	movlb	0	; () banked
  7531  000420  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7532  000422  0E00               	movlw	0
  7533  000424  0100               	movlb	0	; () banked
  7534  000426  0100               	movlb	0	; () banked
  7535  000428  6FB8               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7536  00042A                     L6:
  7537  00042A  0100               	movlb	0	; () banked
  7538  00042C  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7539                           
  7540                           ;my_i2c.c: 368: } else {
  7541  00042E  D01B               	goto	i2l323
  7542  000430                     L8:
  7543                           
  7544                           ;my_i2c.c: 371: ic_ptr->status = 0x5;
  7545  000430  EE20 F00D          	lfsr	2,13
  7546  000434  5050               	movf	_ic_ptr,w,c
  7547  000436  26D9               	addwf	fsr2l,f,c
  7548  000438  5051               	movf	_ic_ptr+1,w,c
  7549  00043A  22DA               	addwfc	fsr2h,f,c
  7550  00043C  0E05               	movlw	5
  7551  00043E  D75A               	goto	L5
  7552  000440                     i2l4206:
  7553                           
  7554                           ; BSR set to: 0
  7555  000440  EE20 F00D          	lfsr	2,13
  7556  000444  5050               	movf	_ic_ptr,w,c
  7557  000446  26D9               	addwf	fsr2l,f,c
  7558  000448  5051               	movf	_ic_ptr+1,w,c
  7559  00044A  22DA               	addwfc	fsr2h,f,c
  7560  00044C  50DF               	movf	indf2,w,c
  7561                           
  7562                           ; Switch size 1, requested type "space"
  7563                           ; Number of cases is 4, Range of values is 5 to 8
  7564                           ; switch strategies available:
  7565                           ; Name         Instructions Cycles
  7566                           ; simple_byte           13     7 (average)
  7567                           ;	Chosen strategy is simple_byte
  7568  00044E  0A05               	xorlw	5	; case 5
  7569  000450  B4D8               	btfsc	status,2,c
  7570  000452  D696               	goto	i2l325
  7571  000454  0A03               	xorlw	3	; case 6
  7572  000456  B4D8               	btfsc	status,2,c
  7573  000458  D6B2               	goto	i2l329
  7574  00045A  0A01               	xorlw	1	; case 7
  7575  00045C  B4D8               	btfsc	status,2,c
  7576  00045E  D74C               	goto	i2l343
  7577  000460  0A0F               	xorlw	15	; case 8
  7578  000462  B4D8               	btfsc	status,2,c
  7579  000464  D70D               	goto	i2l4156
  7580  000466                     i2l323:
  7581                           
  7582                           ;my_i2c.c: 378: }
  7583                           ;my_i2c.c: 381: if (data_read || data_written) {
  7584  000466  0100               	movlb	0	; () banked
  7585  000468  0100               	movlb	0	; () banked
  7586  00046A  67B8               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  7587  00046C  D005               	goto	i2l357
  7588                           
  7589                           ; BSR set to: 0
  7590  00046E  0100               	movlb	0	; () banked
  7591  000470  0100               	movlb	0	; () banked
  7592  000472  51B0               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  7593  000474  B4D8               	btfsc	status,2,c
  7594  000476  D002               	goto	i2l4212
  7595  000478                     i2l357:
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;my_i2c.c: 383: if (SSPCON1bits.CKP == 0) {
  7599  000478  A8C6               	btfss	4038,4,c	;volatile
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;my_i2c.c: 384: SSPCON1bits.CKP = 1;
  7603  00047A  88C6               	bsf	4038,4,c	;volatile
  7604  00047C                     i2l4212:
  7605                           
  7606                           ; BSR set to: 0
  7607                           ;my_i2c.c: 385: }
  7608                           ;my_i2c.c: 386: }
  7609                           ;my_i2c.c: 389: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7610  00047C  EE20 F00A          	lfsr	2,10
  7611  000480  5050               	movf	_ic_ptr,w,c
  7612  000482  26D9               	addwf	fsr2l,f,c
  7613  000484  5051               	movf	_ic_ptr+1,w,c
  7614  000486  22DA               	addwfc	fsr2h,f,c
  7615  000488  0E08               	movlw	8
  7616  00048A  64DF               	cpfsgt	indf2,c
  7617  00048C  D01B               	goto	i2l4218
  7618                           
  7619                           ; BSR set to: 0
  7620  00048E  0100               	movlb	0	; () banked
  7621  000490  0100               	movlb	0	; () banked
  7622  000492  67B6               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  7623  000494  D017               	goto	i2l4218
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;my_i2c.c: 390: ic_ptr->status = 0x5;
  7627  000496  EE20 F00D          	lfsr	2,13
  7628  00049A  5050               	movf	_ic_ptr,w,c
  7629  00049C  26D9               	addwf	fsr2l,f,c
  7630  00049E  5051               	movf	_ic_ptr+1,w,c
  7631  0004A0  22DA               	addwfc	fsr2h,f,c
  7632  0004A2  0E05               	movlw	5
  7633  0004A4  6EDF               	movwf	indf2,c
  7634                           
  7635                           ;my_i2c.c: 391: ic_ptr->error_count++;
  7636  0004A6  EE20 F00F          	lfsr	2,15
  7637  0004AA  5050               	movf	_ic_ptr,w,c
  7638  0004AC  26D9               	addwf	fsr2l,f,c
  7639  0004AE  5051               	movf	_ic_ptr+1,w,c
  7640  0004B0  22DA               	addwfc	fsr2h,f,c
  7641  0004B2  2ADF               	incf	indf2,f,c
  7642                           
  7643                           ;my_i2c.c: 392: ic_ptr->error_code = 0x7;
  7644  0004B4  EE20 F00E          	lfsr	2,14
  7645  0004B8  5050               	movf	_ic_ptr,w,c
  7646  0004BA  26D9               	addwf	fsr2l,f,c
  7647  0004BC  5051               	movf	_ic_ptr+1,w,c
  7648  0004BE  22DA               	addwfc	fsr2h,f,c
  7649  0004C0  0E07               	movlw	7
  7650  0004C2  6EDF               	movwf	indf2,c
  7651  0004C4                     i2l4218:
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;my_i2c.c: 393: }
  7655                           ;my_i2c.c: 395: if (msg_ready) {
  7656  0004C4  0100               	movlb	0	; () banked
  7657  0004C6  0100               	movlb	0	; () banked
  7658  0004C8  51B6               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  7659  0004CA  B4D8               	btfsc	status,2,c
  7660  0004CC  D038               	goto	i2l4226
  7661                           
  7662                           ; BSR set to: 0
  7663                           ;my_i2c.c: 396: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7664  0004CE  EE20 F00C          	lfsr	2,12
  7665  0004D2  5050               	movf	_ic_ptr,w,c
  7666  0004D4  26D9               	addwf	fsr2l,f,c
  7667  0004D6  5051               	movf	_ic_ptr+1,w,c
  7668  0004D8  22DA               	addwfc	fsr2h,f,c
  7669  0004DA  EE10 F00A          	lfsr	1,10
  7670  0004DE  5050               	movf	_ic_ptr,w,c
  7671  0004E0  26E1               	addwf	fsr1l,f,c
  7672  0004E2  5051               	movf	_ic_ptr+1,w,c
  7673  0004E4  22E2               	addwfc	fsr1h,f,c
  7674  0004E6  50E7               	movf	indf1,w,c
  7675  0004E8  0100               	movlb	0	; () banked
  7676  0004EA  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7677  0004EC  0100               	movlb	0	; () banked
  7678  0004EE  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7679  0004F0  0D01               	mullw	1
  7680  0004F2  50F3               	movf	prodl,w,c
  7681  0004F4  2450               	addwf	_ic_ptr,w,c
  7682  0004F6  6EE1               	movwf	fsr1l,c
  7683  0004F8  50F4               	movf	prodh,w,c
  7684  0004FA  2051               	addwfc	_ic_ptr+1,w,c
  7685  0004FC  6EE2               	movwf	fsr1h,c
  7686  0004FE  CFDF FFE7          	movff	indf2,indf1
  7687                           
  7688                           ; BSR set to: 0
  7689                           ;my_i2c.c: 397: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7690  000502  0100               	movlb	0	; () banked
  7691  000504  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7692  000506  0E28               	movlw	40
  7693  000508  0100               	movlb	0	; () banked
  7694  00050A  0100               	movlb	0	; () banked
  7695  00050C  6F92               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7696  00050E  0100               	movlb	0	; () banked
  7697  000510  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7698  000512  0100               	movlb	0	; () banked
  7699  000514  C051  F094         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7700  000518  0100               	movlb	0	; () banked
  7701  00051A  C050  F093         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7702  00051E  EE20 F00A          	lfsr	2,10
  7703  000522  5050               	movf	_ic_ptr,w,c
  7704  000524  26D9               	addwf	fsr2l,f,c
  7705  000526  5051               	movf	_ic_ptr+1,w,c
  7706  000528  22DA               	addwfc	fsr2h,f,c
  7707  00052A  50DF               	movf	indf2,w,c
  7708  00052C  0100               	movlb	0	; () banked
  7709  00052E  6F9A               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  7710  000530  0100               	movlb	0	; () banked
  7711  000532  299A               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  7712  000534  EC7D  F00E         	call	_ToMainHigh_sendmsg
  7713                           
  7714                           ;my_i2c.c: 398: ic_ptr->buflen = 0;
  7715  000538  EE20 F00A          	lfsr	2,10
  7716  00053C  D03E               	goto	L7
  7717  00053E                     i2l4226:
  7718  00053E  EE20 F00F          	lfsr	2,15
  7719  000542  5050               	movf	_ic_ptr,w,c
  7720  000544  26D9               	addwf	fsr2l,f,c
  7721  000546  5051               	movf	_ic_ptr+1,w,c
  7722  000548  22DA               	addwfc	fsr2h,f,c
  7723  00054A  50DF               	movf	indf2,w,c
  7724  00054C  B4D8               	btfsc	status,2,c
  7725  00054E  D03B               	goto	i2l4234
  7726                           
  7727                           ;my_i2c.c: 400: error_buf[0] = ic_ptr->error_count;
  7728  000550  EE20 F00F          	lfsr	2,15
  7729  000554  5050               	movf	_ic_ptr,w,c
  7730  000556  26D9               	addwf	fsr2l,f,c
  7731  000558  5051               	movf	_ic_ptr+1,w,c
  7732  00055A  22DA               	addwfc	fsr2h,f,c
  7733  00055C  50DF               	movf	indf2,w,c
  7734  00055E  0100               	movlb	0	; () banked
  7735  000560  0100               	movlb	0	; () banked
  7736  000562  6FAD               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  7737                           
  7738                           ;my_i2c.c: 401: error_buf[1] = ic_ptr->error_code;
  7739  000564  EE20 F00E          	lfsr	2,14
  7740  000568  5050               	movf	_ic_ptr,w,c
  7741  00056A  26D9               	addwf	fsr2l,f,c
  7742  00056C  5051               	movf	_ic_ptr+1,w,c
  7743  00056E  22DA               	addwfc	fsr2h,f,c
  7744  000570  50DF               	movf	indf2,w,c
  7745  000572  0100               	movlb	0	; () banked
  7746  000574  0100               	movlb	0	; () banked
  7747  000576  6FAE               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  7748                           
  7749                           ;my_i2c.c: 402: error_buf[2] = ic_ptr->event_count;
  7750  000578  EE20 F00C          	lfsr	2,12
  7751  00057C  5050               	movf	_ic_ptr,w,c
  7752  00057E  26D9               	addwf	fsr2l,f,c
  7753  000580  5051               	movf	_ic_ptr+1,w,c
  7754  000582  22DA               	addwfc	fsr2h,f,c
  7755  000584  50DF               	movf	indf2,w,c
  7756  000586  0100               	movlb	0	; () banked
  7757  000588  0100               	movlb	0	; () banked
  7758  00058A  6FAF               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;my_i2c.c: 403: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7762  00058C  0100               	movlb	0	; () banked
  7763  00058E  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7764  000590  0E29               	movlw	41
  7765  000592  0100               	movlb	0	; () banked
  7766  000594  0100               	movlb	0	; () banked
  7767  000596  6F92               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7768  000598  0100               	movlb	0	; () banked
  7769  00059A  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7770  00059C  0100               	movlb	0	; () banked
  7771  00059E  0E00               	movlw	high i2c_slave_int_handler@error_buf
  7772  0005A0  0100               	movlb	0	; () banked
  7773  0005A2  0100               	movlb	0	; () banked
  7774  0005A4  6F94               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7775  0005A6  0100               	movlb	0	; () banked
  7776  0005A8  0EAD               	movlw	low i2c_slave_int_handler@error_buf
  7777  0005AA  0100               	movlb	0	; () banked
  7778  0005AC  0100               	movlb	0	; () banked
  7779  0005AE  6F93               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7780  0005B0  0E03               	movlw	3
  7781  0005B2  EC7D  F00E         	call	_ToMainHigh_sendmsg
  7782                           
  7783                           ;my_i2c.c: 404: ic_ptr->error_count = 0;
  7784  0005B6  EE20 F00F          	lfsr	2,15
  7785  0005BA                     L7:
  7786  0005BA  5050               	movf	_ic_ptr,w,c
  7787  0005BC  26D9               	addwf	fsr2l,f,c
  7788  0005BE  5051               	movf	_ic_ptr+1,w,c
  7789  0005C0  22DA               	addwfc	fsr2h,f,c
  7790  0005C2  0E00               	movlw	0
  7791  0005C4  6EDF               	movwf	indf2,c
  7792  0005C6                     i2l4234:
  7793                           
  7794                           ;my_i2c.c: 405: }
  7795                           ;my_i2c.c: 406: if (msg_to_send) {
  7796  0005C6  0100               	movlb	0	; () banked
  7797  0005C8  0100               	movlb	0	; () banked
  7798  0005CA  51B3               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  7799  0005CC  B4D8               	btfsc	status,2,c
  7800  0005CE  0012               	return	
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;my_i2c.c: 407: unsigned char length = 0;
  7804  0005D0  0100               	movlb	0	; () banked
  7805  0005D2  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7806  0005D4  0E00               	movlw	0
  7807  0005D6  0100               	movlb	0	; () banked
  7808  0005D8  0100               	movlb	0	; () banked
  7809  0005DA  6FB7               	movwf	i2c_slave_int_handler@length& (0+255),b
  7810  0005DC  0100               	movlb	0	; () banked
  7811  0005DE  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;my_i2c.c: 411: if(ic_ptr->buffer[0] == 0xAA){
  7815  0005E0  0EAA               	movlw	170
  7816  0005E2  C050  FFD9         	movff	_ic_ptr,fsr2l
  7817  0005E6  C051  FFDA         	movff	_ic_ptr+1,fsr2h
  7818  0005EA  62DF               	cpfseq	indf2,c
  7819  0005EC  D038               	goto	i2l4250
  7820                           
  7821                           ; BSR set to: 0
  7822                           ;my_i2c.c: 412: length = 3;
  7823  0005EE  0100               	movlb	0	; () banked
  7824  0005F0  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7825  0005F2  0E03               	movlw	3
  7826  0005F4  0100               	movlb	0	; () banked
  7827  0005F6  0100               	movlb	0	; () banked
  7828  0005F8  6FB7               	movwf	i2c_slave_int_handler@length& (0+255),b
  7829  0005FA  0100               	movlb	0	; () banked
  7830  0005FC  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;my_i2c.c: 413: unsigned char gatherAck[3] = {0x00, 0x01, 0x01};
  7834  0005FE  C0CC  F0A5         	movff	i2c_slave_int_handler@F5127,i2c_slave_int_handler@gatherAck
  7835  000602  C0CD  F0A6         	movff	i2c_slave_int_handler@F5127+1,i2c_slave_int_handler@gatherAck+1
  7836  000606  C0CE  F0A7         	movff	i2c_slave_int_handler@F5127+2,i2c_slave_int_handler@gatherAck+2
  7837                           
  7838                           ; BSR set to: 0
  7839                           ;my_i2c.c: 414: start_i2c_slave_reply(length, gatherAck);
  7840  00060A  0100               	movlb	0	; () banked
  7841  00060C  0E00               	movlw	high i2c_slave_int_handler@gatherAck
  7842  00060E  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  7843  000610  0100               	movlb	0	; () banked
  7844  000612  0EA5               	movlw	low i2c_slave_int_handler@gatherAck
  7845  000614  6E2D               	movwf	start_i2c_slave_reply@msg,c
  7846  000616  0100               	movlb	0	; () banked
  7847  000618  0100               	movlb	0	; () banked
  7848  00061A  51B7               	movf	i2c_slave_int_handler@length& (0+255),w,b
  7849  00061C  EC40  F008         	call	_start_i2c_slave_reply
  7850                           
  7851                           ;my_i2c.c: 415: unsigned char reply[5] = {0xAA, 0x00, 0x00, 0x00, 0x00};
  7852  000620  EE20  F0C7         	lfsr	2,i2c_slave_int_handler@F5129
  7853  000624  EE10  F0A0         	lfsr	1,i2c_slave_int_handler@reply
  7854  000628  0E05               	movlw	5
  7855  00062A                     i2u337_41:
  7856  00062A  CFDE FFE6          	movff	postinc2,postinc1
  7857  00062E  2EE8               	decfsz	wreg,f,c
  7858  000630  D7FC               	goto	i2u337_41
  7859                           
  7860                           ;my_i2c.c: 416: ToMainHigh_sendmsg(5, 32, reply);
  7861  000632  0100               	movlb	0	; () banked
  7862  000634  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7863  000636  0E20               	movlw	32
  7864  000638  0100               	movlb	0	; () banked
  7865  00063A  0100               	movlb	0	; () banked
  7866  00063C  6F92               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7867  00063E  0100               	movlb	0	; () banked
  7868  000640  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7869  000642  0100               	movlb	0	; () banked
  7870  000644  0E00               	movlw	high i2c_slave_int_handler@reply
  7871  000646  0100               	movlb	0	; () banked
  7872  000648  0100               	movlb	0	; () banked
  7873  00064A  6F94               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7874  00064C  0100               	movlb	0	; () banked
  7875  00064E  0EA0               	movlw	low i2c_slave_int_handler@reply
  7876  000650  0100               	movlb	0	; () banked
  7877  000652  0100               	movlb	0	; () banked
  7878  000654  6F93               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7879  000656  0E05               	movlw	5
  7880  000658  EC7D  F00E         	call	_ToMainHigh_sendmsg
  7881                           
  7882                           ;my_i2c.c: 417: } else if(ic_ptr->buffer[0] == 0xAB){
  7883  00065C  D04B               	goto	i2l4264
  7884  00065E                     i2l4250:
  7885  00065E  0EAB               	movlw	171
  7886  000660  C050  FFD9         	movff	_ic_ptr,fsr2l
  7887  000664  C051  FFDA         	movff	_ic_ptr+1,fsr2h
  7888  000668  62DF               	cpfseq	indf2,c
  7889  00066A  D044               	goto	i2l4264
  7890                           
  7891                           ;my_i2c.c: 418: int msgtype;
  7892                           ;my_i2c.c: 419: unsigned char sensorData[5];
  7893                           ;my_i2c.c: 420: unsigned char noData[5] = {0x00,0x00,0x00,0x00,0x00};
  7894  00066C  EE20  F0CF         	lfsr	2,i2c_slave_int_handler@F5133
  7895  000670  EE10  F09B         	lfsr	1,i2c_slave_int_handler@noData
  7896  000674  0E05               	movlw	5
  7897  000676                     i2u339_41:
  7898  000676  CFDE FFE6          	movff	postinc2,postinc1
  7899  00067A  2EE8               	decfsz	wreg,f,c
  7900  00067C  D7FC               	goto	i2u339_41
  7901                           
  7902                           ;my_i2c.c: 421: FromMainLow_recvmsg(length, (unsigned char *)&msgtype, sensorData);
  7903  00067E  0100               	movlb	0	; () banked
  7904  000680  0E00               	movlw	high i2c_slave_int_handler@msgtype
  7905  000682  0100               	movlb	0	; () banked
  7906  000684  0100               	movlb	0	; () banked
  7907  000686  6F95               	movwf	(FromMainLow_recvmsg@msgtype+1)& (0+255),b
  7908  000688  0100               	movlb	0	; () banked
  7909  00068A  0EB4               	movlw	low i2c_slave_int_handler@msgtype
  7910  00068C  0100               	movlb	0	; () banked
  7911  00068E  0100               	movlb	0	; () banked
  7912  000690  6F94               	movwf	FromMainLow_recvmsg@msgtype& (0+255),b
  7913  000692  0100               	movlb	0	; () banked
  7914  000694  0E00               	movlw	high i2c_slave_int_handler@sensorData
  7915  000696  0100               	movlb	0	; () banked
  7916  000698  0100               	movlb	0	; () banked
  7917  00069A  6F97               	movwf	(FromMainLow_recvmsg@data+1)& (0+255),b
  7918  00069C  0100               	movlb	0	; () banked
  7919  00069E  0EA8               	movlw	low i2c_slave_int_handler@sensorData
  7920  0006A0  0100               	movlb	0	; () banked
  7921  0006A2  0100               	movlb	0	; () banked
  7922  0006A4  6F96               	movwf	FromMainLow_recvmsg@data& (0+255),b
  7923  0006A6  0100               	movlb	0	; () banked
  7924  0006A8  0100               	movlb	0	; () banked
  7925  0006AA  51B7               	movf	i2c_slave_int_handler@length& (0+255),w,b
  7926  0006AC  ECCF  F00D         	call	_FromMainLow_recvmsg
  7927                           
  7928                           ;my_i2c.c: 422: if(length == 5 && msgtype == 31)
  7929  0006B0  0100               	movlb	0	; () banked
  7930  0006B2  0100               	movlb	0	; () banked
  7931  0006B4  51B7               	movf	i2c_slave_int_handler@length& (0+255),w,b
  7932  0006B6  0A05               	xorlw	5
  7933  0006B8  A4D8               	btfss	status,2,c
  7934  0006BA  D013               	goto	i2l4262
  7935                           
  7936                           ; BSR set to: 0
  7937  0006BC  0100               	movlb	0	; () banked
  7938  0006BE  0100               	movlb	0	; () banked
  7939  0006C0  51B4               	movf	i2c_slave_int_handler@msgtype& (0+255),w,b
  7940  0006C2  0A1F               	xorlw	31
  7941  0006C4  11B5               	iorwf	(i2c_slave_int_handler@msgtype+1)& (0+255),w,b
  7942  0006C6  A4D8               	btfss	status,2,c
  7943  0006C8  D00C               	goto	i2l4262
  7944                           
  7945                           ; BSR set to: 0
  7946                           ;my_i2c.c: 423: start_i2c_slave_reply(length, sensorData);
  7947  0006CA  0100               	movlb	0	; () banked
  7948  0006CC  0E00               	movlw	high i2c_slave_int_handler@sensorData
  7949  0006CE  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  7950  0006D0  0100               	movlb	0	; () banked
  7951  0006D2  0EA8               	movlw	low i2c_slave_int_handler@sensorData
  7952  0006D4  6E2D               	movwf	start_i2c_slave_reply@msg,c
  7953  0006D6  0100               	movlb	0	; () banked
  7954  0006D8  0100               	movlb	0	; () banked
  7955  0006DA  51B7               	movf	i2c_slave_int_handler@length& (0+255),w,b
  7956  0006DC  EC40  F008         	call	_start_i2c_slave_reply
  7957  0006E0  D009               	goto	i2l4264
  7958  0006E2                     i2l4262:
  7959                           
  7960                           ;my_i2c.c: 424: else
  7961                           ;my_i2c.c: 425: start_i2c_slave_reply(5, noData);
  7962  0006E2  0100               	movlb	0	; () banked
  7963  0006E4  0E00               	movlw	high i2c_slave_int_handler@noData
  7964  0006E6  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  7965  0006E8  0100               	movlb	0	; () banked
  7966  0006EA  0E9B               	movlw	low i2c_slave_int_handler@noData
  7967  0006EC  6E2D               	movwf	start_i2c_slave_reply@msg,c
  7968  0006EE  0E05               	movlw	5
  7969  0006F0  EC40  F008         	call	_start_i2c_slave_reply
  7970  0006F4                     i2l4264:
  7971                           
  7972                           ;my_i2c.c: 426: }
  7973                           ;my_i2c.c: 427: msg_to_send = 0;
  7974  0006F4  0100               	movlb	0	; () banked
  7975  0006F6  6F99               	movwf	??_i2c_slave_int_handler& (0+255),b
  7976  0006F8  0E00               	movlw	0
  7977  0006FA  0100               	movlb	0	; () banked
  7978  0006FC  0100               	movlb	0	; () banked
  7979  0006FE  6FB3               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7980  000700  0100               	movlb	0	; () banked
  7981  000702  5199               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7982  000704  0012               	return	
  7983  000706                     __end_of_i2c_slave_int_handler:
  7984                           	opt stack 0
  7985                           pclatu	equ	0xFFB
  7986                           pclath	equ	0xFFA
  7987                           tblptru	equ	0xFF8
  7988                           tblptrh	equ	0xFF7
  7989                           tblptrl	equ	0xFF6
  7990                           tablat	equ	0xFF5
  7991                           prodh	equ	0xFF4
  7992                           prodl	equ	0xFF3
  7993                           intcon	equ	0xFF2
  7994                           postinc0	equ	0xFEE
  7995                           fsr0h	equ	0xFEA
  7996                           fsr0l	equ	0xFE9
  7997                           wreg	equ	0xFE8
  7998                           indf1	equ	0xFE7
  7999                           postinc1	equ	0xFE6
  8000                           postdec1	equ	0xFE5
  8001                           fsr1h	equ	0xFE2
  8002                           fsr1l	equ	0xFE1
  8003                           bsr	equ	0xFE0
  8004                           indf2	equ	0xFDF
  8005                           postinc2	equ	0xFDE
  8006                           postdec2	equ	0xFDD
  8007                           fsr2h	equ	0xFDA
  8008                           fsr2l	equ	0xFD9
  8009                           status	equ	0xFD8
  8010                           
  8011 ;; *************** function _start_i2c_slave_reply *****************
  8012 ;; Defined at:
  8013 ;;		line 92 in file "../src/my_i2c.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  length          1    wreg     unsigned char 
  8016 ;;  msg             2   44[COMRAM] PTR unsigned char 
  8017 ;;		 -> i2c_slave_int_handler@sensorData(5), i2c_slave_int_handler@noData(5), i2c_slave_int_handler@gatherAck(3), 
  8018 ;; Auto vars:     Size  Location     Type
  8019 ;;  length          1   48[COMRAM] unsigned char 
  8020 ;; Return value:  Size  Location     Type
  8021 ;;		None               void
  8022 ;; Registers used:
  8023 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8029 ;;      Params:         2       0       0       0       0
  8030 ;;      Locals:         1       0       0       0       0
  8031 ;;      Temps:          2       0       0       0       0
  8032 ;;      Totals:         5       0       0       0       0
  8033 ;;Total ram usage:        5 bytes
  8034 ;; Hardware stack levels used:    1
  8035 ;; This function calls:
  8036 ;;		Nothing
  8037 ;; This function is called by:
  8038 ;;		_i2c_slave_int_handler
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           	psect	text48
  8043  001080                     __ptext48:
  8044                           	opt stack 0
  8045  001080                     _start_i2c_slave_reply:
  8046                           	opt stack 18
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;incstack = 0
  8050                           ;start_i2c_slave_reply@length stored from wreg
  8051  001080  CFE8 F031          	movff	wreg,start_i2c_slave_reply@length
  8052                           
  8053                           ;my_i2c.c: 94: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  8054  001084  EE20 F01A          	lfsr	2,26
  8055  001088  5050               	movf	_ic_ptr,w,c
  8056  00108A  26D9               	addwf	fsr2l,f,c
  8057  00108C  5051               	movf	_ic_ptr+1,w,c
  8058  00108E  22DA               	addwfc	fsr2h,f,c
  8059  001090  0E00               	movlw	0
  8060  001092  6EDF               	movwf	indf2,c
  8061  001094  D02D               	goto	i2l3078
  8062  001096                     i2l3074:
  8063                           
  8064                           ;my_i2c.c: 95: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  8065  001096  EE20 F01A          	lfsr	2,26
  8066  00109A  5050               	movf	_ic_ptr,w,c
  8067  00109C  26D9               	addwf	fsr2l,f,c
  8068  00109E  5051               	movf	_ic_ptr+1,w,c
  8069  0010A0  22DA               	addwfc	fsr2h,f,c
  8070  0010A2  50DF               	movf	indf2,w,c
  8071  0010A4  6E2F               	movwf	??_start_i2c_slave_reply& (0+255),c
  8072  0010A6  502F               	movf	??_start_i2c_slave_reply,w,c
  8073  0010A8  0D01               	mullw	1
  8074  0010AA  50F3               	movf	prodl,w,c
  8075  0010AC  242D               	addwf	start_i2c_slave_reply@msg,w,c
  8076  0010AE  6ED9               	movwf	fsr2l,c
  8077  0010B0  50F4               	movf	prodh,w,c
  8078  0010B2  202E               	addwfc	start_i2c_slave_reply@msg+1,w,c
  8079  0010B4  6EDA               	movwf	fsr2h,c
  8080  0010B6  EE10 F01A          	lfsr	1,26
  8081  0010BA  5050               	movf	_ic_ptr,w,c
  8082  0010BC  26E1               	addwf	fsr1l,f,c
  8083  0010BE  5051               	movf	_ic_ptr+1,w,c
  8084  0010C0  22E2               	addwfc	fsr1h,f,c
  8085  0010C2  50E7               	movf	indf1,w,c
  8086  0010C4  6E30               	movwf	(??_start_i2c_slave_reply+1)& (0+255),c
  8087  0010C6  5030               	movf	??_start_i2c_slave_reply+1,w,c
  8088  0010C8  0D01               	mullw	1
  8089  0010CA  0E10               	movlw	16
  8090  0010CC  26F3               	addwf	prodl,f,c
  8091  0010CE  0E00               	movlw	0
  8092  0010D0  22F4               	addwfc	prodh,f,c
  8093  0010D2  50F3               	movf	prodl,w,c
  8094  0010D4  2450               	addwf	_ic_ptr,w,c
  8095  0010D6  6EE1               	movwf	fsr1l,c
  8096  0010D8  50F4               	movf	prodh,w,c
  8097  0010DA  2051               	addwfc	_ic_ptr+1,w,c
  8098  0010DC  6EE2               	movwf	fsr1h,c
  8099  0010DE  CFDF FFE7          	movff	indf2,indf1
  8100  0010E2  EE20 F01A          	lfsr	2,26
  8101  0010E6  5050               	movf	_ic_ptr,w,c
  8102  0010E8  26D9               	addwf	fsr2l,f,c
  8103  0010EA  5051               	movf	_ic_ptr+1,w,c
  8104  0010EC  22DA               	addwfc	fsr2h,f,c
  8105  0010EE  2ADF               	incf	indf2,f,c
  8106  0010F0                     i2l3078:
  8107  0010F0  EE20 F01A          	lfsr	2,26
  8108  0010F4  5050               	movf	_ic_ptr,w,c
  8109  0010F6  26D9               	addwf	fsr2l,f,c
  8110  0010F8  5051               	movf	_ic_ptr+1,w,c
  8111  0010FA  22DA               	addwfc	fsr2h,f,c
  8112  0010FC  50DF               	movf	indf2,w,c
  8113  0010FE  6E2F               	movwf	??_start_i2c_slave_reply& (0+255),c
  8114  001100  5031               	movf	start_i2c_slave_reply@length,w,c
  8115  001102  5C2F               	subwf	??_start_i2c_slave_reply,w,c
  8116  001104  A0D8               	btfss	status,0,c
  8117  001106  D7C7               	goto	i2l3074
  8118                           
  8119                           ;my_i2c.c: 96: }
  8120                           ;my_i2c.c: 97: ic_ptr->outbuflen = length;
  8121  001108  EE20 F01A          	lfsr	2,26
  8122  00110C  5050               	movf	_ic_ptr,w,c
  8123  00110E  26D9               	addwf	fsr2l,f,c
  8124  001110  5051               	movf	_ic_ptr+1,w,c
  8125  001112  22DA               	addwfc	fsr2h,f,c
  8126  001114  C031  FFDF         	movff	start_i2c_slave_reply@length,indf2
  8127                           
  8128                           ;my_i2c.c: 98: ic_ptr->outbufind = 1;
  8129  001118  EE20 F01B          	lfsr	2,27
  8130  00111C  5050               	movf	_ic_ptr,w,c
  8131  00111E  26D9               	addwf	fsr2l,f,c
  8132  001120  5051               	movf	_ic_ptr+1,w,c
  8133  001122  22DA               	addwfc	fsr2h,f,c
  8134  001124  0E01               	movlw	1
  8135  001126  6EDF               	movwf	indf2,c
  8136                           
  8137                           ;my_i2c.c: 101: SSPBUF = ic_ptr->outbuffer[0];
  8138  001128  EE20 F010          	lfsr	2,16
  8139  00112C  5050               	movf	_ic_ptr,w,c
  8140  00112E  26D9               	addwf	fsr2l,f,c
  8141  001130  5051               	movf	_ic_ptr+1,w,c
  8142  001132  22DA               	addwfc	fsr2h,f,c
  8143  001134  50DF               	movf	indf2,w,c
  8144  001136  6EC9               	movwf	4041,c	;volatile
  8145                           
  8146                           ;my_i2c.c: 104: SSPCON1bits.CKP = 1;
  8147  001138  88C6               	bsf	4038,4,c	;volatile
  8148  00113A  0012               	return	
  8149  00113C                     __end_of_start_i2c_slave_reply:
  8150                           	opt stack 0
  8151                           pclatu	equ	0xFFB
  8152                           pclath	equ	0xFFA
  8153                           tblptru	equ	0xFF8
  8154                           tblptrh	equ	0xFF7
  8155                           tblptrl	equ	0xFF6
  8156                           tablat	equ	0xFF5
  8157                           prodh	equ	0xFF4
  8158                           prodl	equ	0xFF3
  8159                           intcon	equ	0xFF2
  8160                           postinc0	equ	0xFEE
  8161                           fsr0h	equ	0xFEA
  8162                           fsr0l	equ	0xFE9
  8163                           wreg	equ	0xFE8
  8164                           indf1	equ	0xFE7
  8165                           postinc1	equ	0xFE6
  8166                           postdec1	equ	0xFE5
  8167                           fsr1h	equ	0xFE2
  8168                           fsr1l	equ	0xFE1
  8169                           bsr	equ	0xFE0
  8170                           indf2	equ	0xFDF
  8171                           postinc2	equ	0xFDE
  8172                           postdec2	equ	0xFDD
  8173                           fsr2h	equ	0xFDA
  8174                           fsr2l	equ	0xFD9
  8175                           status	equ	0xFD8
  8176                           
  8177 ;; *************** function _handle_start *****************
  8178 ;; Defined at:
  8179 ;;		line 110 in file "../src/my_i2c.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;  data_read       1    wreg     unsigned char 
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;  data_read       1   44[COMRAM] unsigned char 
  8184 ;; Return value:  Size  Location     Type
  8185 ;;		None               void
  8186 ;; Registers used:
  8187 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8188 ;; Tracked objects:
  8189 ;;		On entry : 0/0
  8190 ;;		On exit  : 0/0
  8191 ;;		Unchanged: 0/0
  8192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8193 ;;      Params:         0       0       0       0       0
  8194 ;;      Locals:         1       0       0       0       0
  8195 ;;      Temps:          0       0       0       0       0
  8196 ;;      Totals:         1       0       0       0       0
  8197 ;;Total ram usage:        1 bytes
  8198 ;; Hardware stack levels used:    1
  8199 ;; This function calls:
  8200 ;;		Nothing
  8201 ;; This function is called by:
  8202 ;;		_i2c_slave_int_handler
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           	psect	text49
  8207  0013DC                     __ptext49:
  8208                           	opt stack 0
  8209  0013DC                     _handle_start:
  8210                           	opt stack 18
  8211                           
  8212                           ;incstack = 0
  8213                           ;handle_start@data_read stored from wreg
  8214  0013DC  CFE8 F02D          	movff	wreg,handle_start@data_read
  8215                           
  8216                           ;my_i2c.c: 111: ic_ptr->event_count = 1;
  8217  0013E0  EE20 F00C          	lfsr	2,12
  8218  0013E4  5050               	movf	_ic_ptr,w,c
  8219  0013E6  26D9               	addwf	fsr2l,f,c
  8220  0013E8  5051               	movf	_ic_ptr+1,w,c
  8221  0013EA  22DA               	addwfc	fsr2h,f,c
  8222  0013EC  0E01               	movlw	1
  8223  0013EE  6EDF               	movwf	indf2,c
  8224                           
  8225                           ;my_i2c.c: 112: ic_ptr->buflen = 0;
  8226  0013F0  EE20 F00A          	lfsr	2,10
  8227  0013F4  5050               	movf	_ic_ptr,w,c
  8228  0013F6  26D9               	addwf	fsr2l,f,c
  8229  0013F8  5051               	movf	_ic_ptr+1,w,c
  8230  0013FA  22DA               	addwfc	fsr2h,f,c
  8231  0013FC  0E00               	movlw	0
  8232  0013FE  6EDF               	movwf	indf2,c
  8233                           
  8234                           ;my_i2c.c: 114: if (data_read) {
  8235  001400  502D               	movf	handle_start@data_read,w,c
  8236  001402  B4D8               	btfsc	status,2,c
  8237  001404  D02E               	goto	i2l3096
  8238                           
  8239                           ;my_i2c.c: 115: if (SSPSTATbits.D_A == 1) {
  8240  001406  AAC7               	btfss	4039,5,c	;volatile
  8241  001408  D018               	goto	i2l286
  8242                           
  8243                           ;my_i2c.c: 118: ic_ptr->status = 0x5;
  8244  00140A  EE20 F00D          	lfsr	2,13
  8245  00140E  5050               	movf	_ic_ptr,w,c
  8246  001410  26D9               	addwf	fsr2l,f,c
  8247  001412  5051               	movf	_ic_ptr+1,w,c
  8248  001414  22DA               	addwfc	fsr2h,f,c
  8249  001416  0E05               	movlw	5
  8250  001418  6EDF               	movwf	indf2,c
  8251                           
  8252                           ;my_i2c.c: 119: ic_ptr->error_count++;
  8253  00141A  EE20 F00F          	lfsr	2,15
  8254  00141E  5050               	movf	_ic_ptr,w,c
  8255  001420  26D9               	addwf	fsr2l,f,c
  8256  001422  5051               	movf	_ic_ptr+1,w,c
  8257  001424  22DA               	addwfc	fsr2h,f,c
  8258  001426  2ADF               	incf	indf2,f,c
  8259                           
  8260                           ;my_i2c.c: 120: ic_ptr->error_code = 0x5;
  8261  001428  EE20 F00E          	lfsr	2,14
  8262  00142C  5050               	movf	_ic_ptr,w,c
  8263  00142E  26D9               	addwf	fsr2l,f,c
  8264  001430  5051               	movf	_ic_ptr+1,w,c
  8265  001432  22DA               	addwfc	fsr2h,f,c
  8266  001434  0E05               	movlw	5
  8267  001436  6EDF               	movwf	indf2,c
  8268                           
  8269                           ;my_i2c.c: 121: } else {
  8270  001438  0012               	return	
  8271  00143A                     i2l286:
  8272                           
  8273                           ;my_i2c.c: 122: if (SSPSTATbits.R_W == 1) {
  8274  00143A  A4C7               	btfss	4039,2,c	;volatile
  8275  00143C  D009               	goto	i2l3094
  8276                           
  8277                           ;my_i2c.c: 123: ic_ptr->status = 0x8;
  8278  00143E  EE20 F00D          	lfsr	2,13
  8279  001442  5050               	movf	_ic_ptr,w,c
  8280  001444  26D9               	addwf	fsr2l,f,c
  8281  001446  5051               	movf	_ic_ptr+1,w,c
  8282  001448  22DA               	addwfc	fsr2h,f,c
  8283  00144A  0E08               	movlw	8
  8284  00144C  6EDF               	movwf	indf2,c
  8285                           
  8286                           ;my_i2c.c: 124: } else {
  8287  00144E  0012               	return	
  8288  001450                     i2l3094:
  8289                           
  8290                           ;my_i2c.c: 125: ic_ptr->status = 0x7;
  8291  001450  EE20 F00D          	lfsr	2,13
  8292  001454  5050               	movf	_ic_ptr,w,c
  8293  001456  26D9               	addwf	fsr2l,f,c
  8294  001458  5051               	movf	_ic_ptr+1,w,c
  8295  00145A  22DA               	addwfc	fsr2h,f,c
  8296  00145C  0E07               	movlw	7
  8297  00145E  6EDF               	movwf	indf2,c
  8298  001460  0012               	return	
  8299  001462                     i2l3096:
  8300                           
  8301                           ;my_i2c.c: 129: ic_ptr->status = 0x6;
  8302  001462  EE20 F00D          	lfsr	2,13
  8303  001466  5050               	movf	_ic_ptr,w,c
  8304  001468  26D9               	addwf	fsr2l,f,c
  8305  00146A  5051               	movf	_ic_ptr+1,w,c
  8306  00146C  22DA               	addwfc	fsr2h,f,c
  8307  00146E  0E06               	movlw	6
  8308  001470  6EDF               	movwf	indf2,c
  8309  001472  0012               	return	
  8310  001474                     __end_of_handle_start:
  8311                           	opt stack 0
  8312                           pclatu	equ	0xFFB
  8313                           pclath	equ	0xFFA
  8314                           tblptru	equ	0xFF8
  8315                           tblptrh	equ	0xFF7
  8316                           tblptrl	equ	0xFF6
  8317                           tablat	equ	0xFF5
  8318                           prodh	equ	0xFF4
  8319                           prodl	equ	0xFF3
  8320                           intcon	equ	0xFF2
  8321                           postinc0	equ	0xFEE
  8322                           fsr0h	equ	0xFEA
  8323                           fsr0l	equ	0xFE9
  8324                           wreg	equ	0xFE8
  8325                           indf1	equ	0xFE7
  8326                           postinc1	equ	0xFE6
  8327                           postdec1	equ	0xFE5
  8328                           fsr1h	equ	0xFE2
  8329                           fsr1l	equ	0xFE1
  8330                           bsr	equ	0xFE0
  8331                           indf2	equ	0xFDF
  8332                           postinc2	equ	0xFDE
  8333                           postdec2	equ	0xFDD
  8334                           fsr2h	equ	0xFDA
  8335                           fsr2l	equ	0xFD9
  8336                           status	equ	0xFD8
  8337                           
  8338 ;; *************** function _ToMainHigh_sendmsg *****************
  8339 ;; Defined at:
  8340 ;;		line 126 in file "../src/messages.c"
  8341 ;; Parameters:    Size  Location     Type
  8342 ;;  length          1    wreg     unsigned char 
  8343 ;;  msgtype         1   18[BANK0 ] unsigned char 
  8344 ;;  data            2   19[BANK0 ] PTR void 
  8345 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), main@ic(29), 
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;  length          1   21[BANK0 ] unsigned char 
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  1    wreg      char 
  8350 ;; Registers used:
  8351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8357 ;;      Params:         0       3       0       0       0
  8358 ;;      Locals:         0       1       0       0       0
  8359 ;;      Temps:          0       0       0       0       0
  8360 ;;      Totals:         0       4       0       0       0
  8361 ;;Total ram usage:        4 bytes
  8362 ;; Hardware stack levels used:    1
  8363 ;; Hardware stack levels required when called:    2
  8364 ;; This function calls:
  8365 ;;		i2_send_msg
  8366 ;; This function is called by:
  8367 ;;		_i2c_slave_int_handler
  8368 ;;		_i2c_master_int_handler
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           	psect	text50
  8373  001CFA                     __ptext50:
  8374                           	opt stack 0
  8375  001CFA                     _ToMainHigh_sendmsg:
  8376                           	opt stack 16
  8377                           
  8378                           ;incstack = 0
  8379                           ;ToMainHigh_sendmsg@length stored from wreg
  8380  001CFA  CFE8 F095          	movff	wreg,ToMainHigh_sendmsg@length
  8381                           
  8382                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8383                           ;	Return value of _ToMainHigh_sendmsg is never used
  8384  001CFE  0101               	movlb	1	; () banked
  8385  001D00  0E01               	movlw	high _ToMainHigh_MQ
  8386  001D02  0100               	movlb	0	; () banked
  8387  001D04  0100               	movlb	0	; () banked
  8388  001D06  6F87               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8389  001D08  0101               	movlb	1	; () banked
  8390  001D0A  0E00               	movlw	low _ToMainHigh_MQ
  8391  001D0C  0100               	movlb	0	; () banked
  8392  001D0E  0100               	movlb	0	; () banked
  8393  001D10  6F86               	movwf	i2send_msg@qptr& (0+255),b
  8394  001D12  C095  F088         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8395  001D16  C092  F089         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8396  001D1A  0100               	movlb	0	; () banked
  8397  001D1C  0100               	movlb	0	; () banked
  8398  001D1E  C094  F08B         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8399  001D22  0100               	movlb	0	; () banked
  8400  001D24  0100               	movlb	0	; () banked
  8401  001D26  C093  F08A         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8402  001D2A  ECCC  F006         	call	i2_send_msg	;wreg free
  8403  001D2E  0012               	return	
  8404  001D30                     __end_of_ToMainHigh_sendmsg:
  8405                           	opt stack 0
  8406                           pclatu	equ	0xFFB
  8407                           pclath	equ	0xFFA
  8408                           tblptru	equ	0xFF8
  8409                           tblptrh	equ	0xFF7
  8410                           tblptrl	equ	0xFF6
  8411                           tablat	equ	0xFF5
  8412                           prodh	equ	0xFF4
  8413                           prodl	equ	0xFF3
  8414                           intcon	equ	0xFF2
  8415                           postinc0	equ	0xFEE
  8416                           fsr0h	equ	0xFEA
  8417                           fsr0l	equ	0xFE9
  8418                           wreg	equ	0xFE8
  8419                           indf1	equ	0xFE7
  8420                           postinc1	equ	0xFE6
  8421                           postdec1	equ	0xFE5
  8422                           fsr1h	equ	0xFE2
  8423                           fsr1l	equ	0xFE1
  8424                           bsr	equ	0xFE0
  8425                           indf2	equ	0xFDF
  8426                           postinc2	equ	0xFDE
  8427                           postdec2	equ	0xFDD
  8428                           fsr2h	equ	0xFDA
  8429                           fsr2l	equ	0xFD9
  8430                           status	equ	0xFD8
  8431                           
  8432 ;; *************** function i2_send_msg *****************
  8433 ;; Defined at:
  8434 ;;		line 24 in file "../src/messages.c"
  8435 ;; Parameters:    Size  Location     Type
  8436 ;;  qptr            2    6[BANK0 ] PTR struct __msg_queue
  8437 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8438 ;;  length          1    8[BANK0 ] unsigned char 
  8439 ;;  msgtype         1    9[BANK0 ] unsigned char 
  8440 ;;  data            2   10[BANK0 ] PTR void 
  8441 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), 
  8442 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;  send_msg        2   16[BANK0 ] PTR struct __msg
  8445 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8446 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8447 ;;  send_msg        2   13[BANK0 ] unsigned int 
  8448 ;;  send_msg        1   15[BANK0 ] unsigned char 
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  1    wreg      char 
  8451 ;; Registers used:
  8452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8458 ;;      Params:         0       6       0       0       0
  8459 ;;      Locals:         0       5       0       0       0
  8460 ;;      Temps:          0       1       0       0       0
  8461 ;;      Totals:         0      12       0       0       0
  8462 ;;Total ram usage:       12 bytes
  8463 ;; Hardware stack levels used:    1
  8464 ;; Hardware stack levels required when called:    1
  8465 ;; This function calls:
  8466 ;;		i2___awmod
  8467 ;;		i2_memcpy
  8468 ;; This function is called by:
  8469 ;;		_ToMainHigh_sendmsg
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           	psect	text51
  8474  000D98                     __ptext51:
  8475                           	opt stack 0
  8476  000D98                     i2_send_msg:
  8477                           	opt stack 16
  8478                           
  8479                           ;messages.c: 25: unsigned char slot;
  8480                           ;messages.c: 27: msg *qmsg;
  8481                           ;messages.c: 28: size_t tlength = length;
  8482                           
  8483                           ;incstack = 0
  8484  000D98  0100               	movlb	0	; () banked
  8485  000D9A  0100               	movlb	0	; () banked
  8486  000D9C  C088  F08D         	movff	i2send_msg@length,i2send_msg@tlength
  8487  000DA0  0100               	movlb	0	; () banked
  8488  000DA2  0100               	movlb	0	; () banked
  8489  000DA4  6B8E               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8493  000DA6  0100               	movlb	0	; () banked
  8494  000DA8  EE20 F041          	lfsr	2,65
  8495  000DAC  0100               	movlb	0	; () banked
  8496  000DAE  5186               	movf	i2send_msg@qptr& (0+255),w,b
  8497  000DB0  26D9               	addwf	fsr2l,f,c
  8498  000DB2  0100               	movlb	0	; () banked
  8499  000DB4  5187               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8500  000DB6  22DA               	addwfc	fsr2h,f,c
  8501  000DB8  50DF               	movf	indf2,w,c
  8502  000DBA  0100               	movlb	0	; () banked
  8503  000DBC  0100               	movlb	0	; () banked
  8504  000DBE  6F8F               	movwf	i2send_msg@slot& (0+255),b
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8508  000DC0  0100               	movlb	0	; () banked
  8509  000DC2  0100               	movlb	0	; () banked
  8510  000DC4  518F               	movf	i2send_msg@slot& (0+255),w,b
  8511  000DC6  0D0D               	mullw	13
  8512  000DC8  50F3               	movf	prodl,w,c
  8513  000DCA  0100               	movlb	0	; () banked
  8514  000DCC  0100               	movlb	0	; () banked
  8515  000DCE  2586               	addwf	i2send_msg@qptr& (0+255),w,b
  8516  000DD0  0100               	movlb	0	; () banked
  8517  000DD2  0100               	movlb	0	; () banked
  8518  000DD4  6F90               	movwf	i2send_msg@qmsg& (0+255),b
  8519  000DD6  50F4               	movf	prodh,w,c
  8520  000DD8  0100               	movlb	0	; () banked
  8521  000DDA  0100               	movlb	0	; () banked
  8522  000DDC  2187               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8523  000DDE  0100               	movlb	0	; () banked
  8524  000DE0  6F91               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8525                           
  8526                           ; BSR set to: 0
  8527                           ;messages.c: 41: if (qmsg->full != 0) {
  8528  000DE2  C090  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8529  000DE6  C091  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8530  000DEA  50DF               	movf	indf2,w,c
  8531  000DEC  B4D8               	btfsc	status,2,c
  8532  000DEE  D002               	goto	i2l4394
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;messages.c: 42: return (-1);
  8536  000DF0  0EFF               	movlw	255
  8537  000DF2  0012               	return	
  8538  000DF4                     i2l4394:
  8539                           
  8540                           ; BSR set to: 0
  8541                           ;messages.c: 43: }
  8542                           ;messages.c: 46: qmsg->length = length;
  8543  000DF4  0100               	movlb	0	; () banked
  8544  000DF6  EE20 F001          	lfsr	2,1
  8545  000DFA  0100               	movlb	0	; () banked
  8546  000DFC  5190               	movf	i2send_msg@qmsg& (0+255),w,b
  8547  000DFE  26D9               	addwf	fsr2l,f,c
  8548  000E00  0100               	movlb	0	; () banked
  8549  000E02  5191               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8550  000E04  22DA               	addwfc	fsr2h,f,c
  8551  000E06  0100               	movlb	0	; () banked
  8552  000E08  C088  FFDF         	movff	i2send_msg@length,indf2
  8553                           
  8554                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8555  000E0C  0100               	movlb	0	; () banked
  8556  000E0E  EE20 F002          	lfsr	2,2
  8557  000E12  0100               	movlb	0	; () banked
  8558  000E14  5190               	movf	i2send_msg@qmsg& (0+255),w,b
  8559  000E16  26D9               	addwf	fsr2l,f,c
  8560  000E18  0100               	movlb	0	; () banked
  8561  000E1A  5191               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8562  000E1C  22DA               	addwfc	fsr2h,f,c
  8563  000E1E  0100               	movlb	0	; () banked
  8564  000E20  C089  FFDF         	movff	i2send_msg@msgtype,indf2
  8565                           
  8566                           ; BSR set to: 0
  8567                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8568  000E24  0E03               	movlw	3
  8569  000E26  0100               	movlb	0	; () banked
  8570  000E28  0100               	movlb	0	; () banked
  8571  000E2A  2590               	addwf	i2send_msg@qmsg& (0+255),w,b
  8572  000E2C  0100               	movlb	0	; () banked
  8573  000E2E  0100               	movlb	0	; () banked
  8574  000E30  6F80               	movwf	i2memcpy@d1& (0+255),b
  8575  000E32  0E00               	movlw	0
  8576  000E34  0100               	movlb	0	; () banked
  8577  000E36  0100               	movlb	0	; () banked
  8578  000E38  2191               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8579  000E3A  0100               	movlb	0	; () banked
  8580  000E3C  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  8581  000E3E  0100               	movlb	0	; () banked
  8582  000E40  0100               	movlb	0	; () banked
  8583  000E42  C08B  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8584  000E46  0100               	movlb	0	; () banked
  8585  000E48  0100               	movlb	0	; () banked
  8586  000E4A  C08A  F082         	movff	i2send_msg@data,i2memcpy@s1
  8587  000E4E  C08D  F084         	movff	i2send_msg@tlength,i2memcpy@n
  8588  000E52  C08E  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8589  000E56  ECFA  F00C         	call	i2_memcpy	;wreg free
  8590                           
  8591                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  8592  000E5A  0100               	movlb	0	; () banked
  8593  000E5C  EE20 F041          	lfsr	2,65
  8594  000E60  0100               	movlb	0	; () banked
  8595  000E62  5186               	movf	i2send_msg@qptr& (0+255),w,b
  8596  000E64  26D9               	addwf	fsr2l,f,c
  8597  000E66  0100               	movlb	0	; () banked
  8598  000E68  5187               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8599  000E6A  22DA               	addwfc	fsr2h,f,c
  8600  000E6C  0100               	movlb	0	; () banked
  8601  000E6E  EE10 F041          	lfsr	1,65
  8602  000E72  0100               	movlb	0	; () banked
  8603  000E74  5186               	movf	i2send_msg@qptr& (0+255),w,b
  8604  000E76  26E1               	addwf	fsr1l,f,c
  8605  000E78  0100               	movlb	0	; () banked
  8606  000E7A  5187               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8607  000E7C  22E2               	addwfc	fsr1h,f,c
  8608  000E7E  50E7               	movf	indf1,w,c
  8609  000E80  0100               	movlb	0	; () banked
  8610  000E82  6F8C               	movwf	??i2_send_msg& (0+255),b
  8611  000E84  0E01               	movlw	1
  8612  000E86  0100               	movlb	0	; () banked
  8613  000E88  258C               	addwf	??i2_send_msg& (0+255),w,b
  8614  000E8A  6E2D               	movwf	i2___awmod@dividend,c
  8615  000E8C  6A2E               	clrf	i2___awmod@dividend+1,c
  8616  000E8E  0E00               	movlw	0
  8617  000E90  222E               	addwfc	i2___awmod@dividend+1,f,c
  8618  000E92  0E00               	movlw	0
  8619  000E94  6E30               	movwf	i2___awmod@divisor+1,c
  8620  000E96  0E05               	movlw	5
  8621  000E98  6E2F               	movwf	i2___awmod@divisor,c
  8622  000E9A  ECF8  F008         	call	i2___awmod	;wreg free
  8623  000E9E  502D               	movf	?i2___awmod,w,c
  8624  000EA0  6EDF               	movwf	indf2,c
  8625                           
  8626                           ;messages.c: 59: qmsg->full = 1;
  8627  000EA2  C090  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8628  000EA6  C091  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8629  000EAA  0E01               	movlw	1
  8630  000EAC  6EDF               	movwf	indf2,c
  8631                           
  8632                           ;messages.c: 60: return (1);
  8633  000EAE  0E01               	movlw	1
  8634  000EB0  0012               	return	
  8635  000EB2                     __end_ofi2_send_msg:
  8636                           	opt stack 0
  8637                           pclatu	equ	0xFFB
  8638                           pclath	equ	0xFFA
  8639                           tblptru	equ	0xFF8
  8640                           tblptrh	equ	0xFF7
  8641                           tblptrl	equ	0xFF6
  8642                           tablat	equ	0xFF5
  8643                           prodh	equ	0xFF4
  8644                           prodl	equ	0xFF3
  8645                           intcon	equ	0xFF2
  8646                           postinc0	equ	0xFEE
  8647                           fsr0h	equ	0xFEA
  8648                           fsr0l	equ	0xFE9
  8649                           wreg	equ	0xFE8
  8650                           indf1	equ	0xFE7
  8651                           postinc1	equ	0xFE6
  8652                           postdec1	equ	0xFE5
  8653                           fsr1h	equ	0xFE2
  8654                           fsr1l	equ	0xFE1
  8655                           bsr	equ	0xFE0
  8656                           indf2	equ	0xFDF
  8657                           postinc2	equ	0xFDE
  8658                           postdec2	equ	0xFDD
  8659                           fsr2h	equ	0xFDA
  8660                           fsr2l	equ	0xFD9
  8661                           status	equ	0xFD8
  8662                           
  8663 ;; *************** function _FromMainLow_recvmsg *****************
  8664 ;; Defined at:
  8665 ;;		line 159 in file "../src/messages.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;  maxlength       1    wreg     unsigned char 
  8668 ;;  msgtype         2   20[BANK0 ] PTR unsigned char 
  8669 ;;		 -> i2c_slave_int_handler@msgtype(2), 
  8670 ;;  data            2   22[BANK0 ] PTR void 
  8671 ;;		 -> i2c_slave_int_handler@sensorData(5), 
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;  maxlength       1   24[BANK0 ] unsigned char 
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  1    wreg      char 
  8676 ;; Registers used:
  8677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8683 ;;      Params:         0       4       0       0       0
  8684 ;;      Locals:         0       1       0       0       0
  8685 ;;      Temps:          0       0       0       0       0
  8686 ;;      Totals:         0       5       0       0       0
  8687 ;;Total ram usage:        5 bytes
  8688 ;; Hardware stack levels used:    1
  8689 ;; Hardware stack levels required when called:    2
  8690 ;; This function calls:
  8691 ;;		i2_recv_msg
  8692 ;; This function is called by:
  8693 ;;		_i2c_slave_int_handler
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           	psect	text52
  8698  001B9E                     __ptext52:
  8699                           	opt stack 0
  8700  001B9E                     _FromMainLow_recvmsg:
  8701                           	opt stack 16
  8702                           
  8703                           ;incstack = 0
  8704                           ;FromMainLow_recvmsg@maxlength stored from wreg
  8705  001B9E  CFE8 F098          	movff	wreg,FromMainLow_recvmsg@maxlength
  8706                           
  8707                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  8708                           ;	Return value of _FromMainLow_recvmsg is never used
  8709  001BA2  0102               	movlb	2	; () banked
  8710  001BA4  0E02               	movlw	high _FromMainLow_MQ
  8711  001BA6  0100               	movlb	0	; () banked
  8712  001BA8  0100               	movlb	0	; () banked
  8713  001BAA  6F87               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8714  001BAC  0102               	movlb	2	; () banked
  8715  001BAE  0E43               	movlw	low _FromMainLow_MQ
  8716  001BB0  0100               	movlb	0	; () banked
  8717  001BB2  0100               	movlb	0	; () banked
  8718  001BB4  6F86               	movwf	i2recv_msg@qptr& (0+255),b
  8719  001BB6  C098  F088         	movff	FromMainLow_recvmsg@maxlength,i2recv_msg@maxlength
  8720  001BBA  0100               	movlb	0	; () banked
  8721  001BBC  0100               	movlb	0	; () banked
  8722  001BBE  C095  F08A         	movff	FromMainLow_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8723  001BC2  0100               	movlb	0	; () banked
  8724  001BC4  0100               	movlb	0	; () banked
  8725  001BC6  C094  F089         	movff	FromMainLow_recvmsg@msgtype,i2recv_msg@msgtype
  8726  001BCA  0100               	movlb	0	; () banked
  8727  001BCC  0100               	movlb	0	; () banked
  8728  001BCE  C097  F08C         	movff	FromMainLow_recvmsg@data+1,i2recv_msg@data+1
  8729  001BD2  0100               	movlb	0	; () banked
  8730  001BD4  0100               	movlb	0	; () banked
  8731  001BD6  C096  F08B         	movff	FromMainLow_recvmsg@data,i2recv_msg@data
  8732  001BDA  EC90  F005         	call	i2_recv_msg	;wreg free
  8733  001BDE  0012               	return	
  8734  001BE0                     __end_of_FromMainLow_recvmsg:
  8735                           	opt stack 0
  8736                           pclatu	equ	0xFFB
  8737                           pclath	equ	0xFFA
  8738                           tblptru	equ	0xFF8
  8739                           tblptrh	equ	0xFF7
  8740                           tblptrl	equ	0xFF6
  8741                           tablat	equ	0xFF5
  8742                           prodh	equ	0xFF4
  8743                           prodl	equ	0xFF3
  8744                           intcon	equ	0xFF2
  8745                           postinc0	equ	0xFEE
  8746                           fsr0h	equ	0xFEA
  8747                           fsr0l	equ	0xFE9
  8748                           wreg	equ	0xFE8
  8749                           indf1	equ	0xFE7
  8750                           postinc1	equ	0xFE6
  8751                           postdec1	equ	0xFE5
  8752                           fsr1h	equ	0xFE2
  8753                           fsr1l	equ	0xFE1
  8754                           bsr	equ	0xFE0
  8755                           indf2	equ	0xFDF
  8756                           postinc2	equ	0xFDE
  8757                           postdec2	equ	0xFDD
  8758                           fsr2h	equ	0xFDA
  8759                           fsr2l	equ	0xFD9
  8760                           status	equ	0xFD8
  8761                           
  8762 ;; *************** function i2_recv_msg *****************
  8763 ;; Defined at:
  8764 ;;		line 63 in file "../src/messages.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;  qptr            2    6[BANK0 ] PTR struct __msg_queue
  8767 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8768 ;;  maxlength       1    8[BANK0 ] unsigned char 
  8769 ;;  msgtype         2    9[BANK0 ] PTR unsigned char 
  8770 ;;		 -> i2c_slave_int_handler@msgtype(2), main@msgtype(1), 
  8771 ;;  data            2   11[BANK0 ] PTR void 
  8772 ;;		 -> i2c_slave_int_handler@sensorData(5), main@msgbuffer(11), 
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;  recv_msg        2   18[BANK0 ] PTR struct __msg
  8775 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8776 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8777 ;;  recv_msg        2   16[BANK0 ] unsigned int 
  8778 ;;  recv_msg        1   15[BANK0 ] unsigned char 
  8779 ;; Return value:  Size  Location     Type
  8780 ;;                  1    wreg      char 
  8781 ;; Registers used:
  8782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8783 ;; Tracked objects:
  8784 ;;		On entry : 0/0
  8785 ;;		On exit  : 0/0
  8786 ;;		Unchanged: 0/0
  8787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8788 ;;      Params:         0       7       0       0       0
  8789 ;;      Locals:         0       5       0       0       0
  8790 ;;      Temps:          0       2       0       0       0
  8791 ;;      Totals:         0      14       0       0       0
  8792 ;;Total ram usage:       14 bytes
  8793 ;; Hardware stack levels used:    1
  8794 ;; Hardware stack levels required when called:    1
  8795 ;; This function calls:
  8796 ;;		i2___awmod
  8797 ;;		i2_memcpy
  8798 ;; This function is called by:
  8799 ;;		_FromMainLow_recvmsg
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           	psect	text53
  8804  000B20                     __ptext53:
  8805                           	opt stack 0
  8806  000B20                     i2_recv_msg:
  8807                           	opt stack 16
  8808                           
  8809                           ;messages.c: 64: unsigned char slot;
  8810                           ;messages.c: 68: msg *qmsg;
  8811                           ;messages.c: 69: size_t tlength;
  8812                           ;messages.c: 72: slot = qptr->cur_read_ind;
  8813                           
  8814                           ;incstack = 0
  8815  000B20  0100               	movlb	0	; () banked
  8816  000B22  EE20 F042          	lfsr	2,66
  8817  000B26  0100               	movlb	0	; () banked
  8818  000B28  5186               	movf	i2recv_msg@qptr& (0+255),w,b
  8819  000B2A  26D9               	addwf	fsr2l,f,c
  8820  000B2C  0100               	movlb	0	; () banked
  8821  000B2E  5187               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8822  000B30  22DA               	addwfc	fsr2h,f,c
  8823  000B32  50DF               	movf	indf2,w,c
  8824  000B34  0100               	movlb	0	; () banked
  8825  000B36  0100               	movlb	0	; () banked
  8826  000B38  6F8F               	movwf	i2recv_msg@slot& (0+255),b
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  8830  000B3A  0100               	movlb	0	; () banked
  8831  000B3C  0100               	movlb	0	; () banked
  8832  000B3E  518F               	movf	i2recv_msg@slot& (0+255),w,b
  8833  000B40  0D0D               	mullw	13
  8834  000B42  50F3               	movf	prodl,w,c
  8835  000B44  0100               	movlb	0	; () banked
  8836  000B46  0100               	movlb	0	; () banked
  8837  000B48  2586               	addwf	i2recv_msg@qptr& (0+255),w,b
  8838  000B4A  0100               	movlb	0	; () banked
  8839  000B4C  0100               	movlb	0	; () banked
  8840  000B4E  6F92               	movwf	i2recv_msg@qmsg& (0+255),b
  8841  000B50  50F4               	movf	prodh,w,c
  8842  000B52  0100               	movlb	0	; () banked
  8843  000B54  0100               	movlb	0	; () banked
  8844  000B56  2187               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  8845  000B58  0100               	movlb	0	; () banked
  8846  000B5A  6F93               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  8847                           
  8848                           ; BSR set to: 0
  8849                           ;messages.c: 74: if (qmsg->full == 1) {
  8850  000B5C  0E01               	movlw	1
  8851  000B5E  C092  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8852  000B62  C093  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8853  000B66  62DF               	cpfseq	indf2,c
  8854  000B68  D07F               	goto	i2l4434
  8855                           
  8856                           ; BSR set to: 0
  8857                           ;messages.c: 76: if (qmsg->length > maxlength) {
  8858  000B6A  0100               	movlb	0	; () banked
  8859  000B6C  EE20 F001          	lfsr	2,1
  8860  000B70  0100               	movlb	0	; () banked
  8861  000B72  5192               	movf	i2recv_msg@qmsg& (0+255),w,b
  8862  000B74  26D9               	addwf	fsr2l,f,c
  8863  000B76  0100               	movlb	0	; () banked
  8864  000B78  5193               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8865  000B7A  22DA               	addwfc	fsr2h,f,c
  8866  000B7C  50DF               	movf	indf2,w,c
  8867  000B7E  0100               	movlb	0	; () banked
  8868  000B80  0100               	movlb	0	; () banked
  8869  000B82  5D88               	subwf	i2recv_msg@maxlength& (0+255),w,b
  8870  000B84  B0D8               	btfsc	status,0,c
  8871  000B86  D002               	goto	i2l4418
  8872                           
  8873                           ; BSR set to: 0
  8874                           ;messages.c: 77: return (-3);
  8875  000B88  0EFD               	movlw	253
  8876  000B8A  0012               	return	
  8877  000B8C                     i2l4418:
  8878                           
  8879                           ; BSR set to: 0
  8880                           ;messages.c: 78: }
  8881                           ;messages.c: 80: tlength = qmsg->length;
  8882  000B8C  0100               	movlb	0	; () banked
  8883  000B8E  EE20 F001          	lfsr	2,1
  8884  000B92  0100               	movlb	0	; () banked
  8885  000B94  5192               	movf	i2recv_msg@qmsg& (0+255),w,b
  8886  000B96  26D9               	addwf	fsr2l,f,c
  8887  000B98  0100               	movlb	0	; () banked
  8888  000B9A  5193               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8889  000B9C  22DA               	addwfc	fsr2h,f,c
  8890  000B9E  50DF               	movf	indf2,w,c
  8891  000BA0  0100               	movlb	0	; () banked
  8892  000BA2  6F8D               	movwf	??i2_recv_msg& (0+255),b
  8893  000BA4  0100               	movlb	0	; () banked
  8894  000BA6  518D               	movf	??i2_recv_msg& (0+255),w,b
  8895  000BA8  0100               	movlb	0	; () banked
  8896  000BAA  0100               	movlb	0	; () banked
  8897  000BAC  6F90               	movwf	i2recv_msg@tlength& (0+255),b
  8898  000BAE  0100               	movlb	0	; () banked
  8899  000BB0  6B91               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  8903  000BB2  0100               	movlb	0	; () banked
  8904  000BB4  0100               	movlb	0	; () banked
  8905  000BB6  C08C  F081         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  8906  000BBA  0100               	movlb	0	; () banked
  8907  000BBC  0100               	movlb	0	; () banked
  8908  000BBE  C08B  F080         	movff	i2recv_msg@data,i2memcpy@d1
  8909  000BC2  0E03               	movlw	3
  8910  000BC4  0100               	movlb	0	; () banked
  8911  000BC6  0100               	movlb	0	; () banked
  8912  000BC8  2592               	addwf	i2recv_msg@qmsg& (0+255),w,b
  8913  000BCA  0100               	movlb	0	; () banked
  8914  000BCC  6F8D               	movwf	??i2_recv_msg& (0+255),b
  8915  000BCE  0E00               	movlw	0
  8916  000BD0  0100               	movlb	0	; () banked
  8917  000BD2  0100               	movlb	0	; () banked
  8918  000BD4  2193               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  8919  000BD6  0100               	movlb	0	; () banked
  8920  000BD8  6F8E               	movwf	(??i2_recv_msg+1)& (0+255),b
  8921  000BDA  C08D  F082         	movff	??i2_recv_msg,i2memcpy@s1
  8922  000BDE  C08E  F083         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  8923  000BE2  C090  F084         	movff	i2recv_msg@tlength,i2memcpy@n
  8924  000BE6  C091  F085         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  8925  000BEA  ECFA  F00C         	call	i2_memcpy	;wreg free
  8926                           
  8927                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  8928  000BEE  0100               	movlb	0	; () banked
  8929  000BF0  EE20 F042          	lfsr	2,66
  8930  000BF4  0100               	movlb	0	; () banked
  8931  000BF6  5186               	movf	i2recv_msg@qptr& (0+255),w,b
  8932  000BF8  26D9               	addwf	fsr2l,f,c
  8933  000BFA  0100               	movlb	0	; () banked
  8934  000BFC  5187               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8935  000BFE  22DA               	addwfc	fsr2h,f,c
  8936  000C00  0100               	movlb	0	; () banked
  8937  000C02  EE10 F042          	lfsr	1,66
  8938  000C06  0100               	movlb	0	; () banked
  8939  000C08  5186               	movf	i2recv_msg@qptr& (0+255),w,b
  8940  000C0A  26E1               	addwf	fsr1l,f,c
  8941  000C0C  0100               	movlb	0	; () banked
  8942  000C0E  5187               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  8943  000C10  22E2               	addwfc	fsr1h,f,c
  8944  000C12  50E7               	movf	indf1,w,c
  8945  000C14  0100               	movlb	0	; () banked
  8946  000C16  6F8D               	movwf	??i2_recv_msg& (0+255),b
  8947  000C18  0E01               	movlw	1
  8948  000C1A  0100               	movlb	0	; () banked
  8949  000C1C  258D               	addwf	??i2_recv_msg& (0+255),w,b
  8950  000C1E  6E2D               	movwf	i2___awmod@dividend,c
  8951  000C20  6A2E               	clrf	i2___awmod@dividend+1,c
  8952  000C22  0E00               	movlw	0
  8953  000C24  222E               	addwfc	i2___awmod@dividend+1,f,c
  8954  000C26  0E00               	movlw	0
  8955  000C28  6E30               	movwf	i2___awmod@divisor+1,c
  8956  000C2A  0E05               	movlw	5
  8957  000C2C  6E2F               	movwf	i2___awmod@divisor,c
  8958  000C2E  ECF8  F008         	call	i2___awmod	;wreg free
  8959  000C32  502D               	movf	?i2___awmod,w,c
  8960  000C34  6EDF               	movwf	indf2,c
  8961                           
  8962                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  8963  000C36  0100               	movlb	0	; () banked
  8964  000C38  EE20 F002          	lfsr	2,2
  8965  000C3C  0100               	movlb	0	; () banked
  8966  000C3E  5192               	movf	i2recv_msg@qmsg& (0+255),w,b
  8967  000C40  26D9               	addwf	fsr2l,f,c
  8968  000C42  0100               	movlb	0	; () banked
  8969  000C44  5193               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8970  000C46  22DA               	addwfc	fsr2h,f,c
  8971  000C48  C089  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  8972  000C4C  C08A  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  8973  000C50  CFDF FFE7          	movff	indf2,indf1
  8974                           
  8975                           ; BSR set to: 0
  8976                           ;messages.c: 91: qmsg->full = 0;
  8977  000C54  C092  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8978  000C58  C093  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8979  000C5C  0E00               	movlw	0
  8980  000C5E  6EDF               	movwf	indf2,c
  8981                           
  8982                           ; BSR set to: 0
  8983                           ;messages.c: 92: return (tlength);
  8984  000C60  0100               	movlb	0	; () banked
  8985  000C62  0100               	movlb	0	; () banked
  8986  000C64  5190               	movf	i2recv_msg@tlength& (0+255),w,b
  8987  000C66  0012               	return	
  8988  000C68                     i2l4434:
  8989                           
  8990                           ; BSR set to: 0
  8991                           ;messages.c: 94: return (-4);
  8992  000C68  0EFC               	movlw	252
  8993  000C6A  0012               	return	
  8994  000C6C                     __end_ofi2_recv_msg:
  8995                           	opt stack 0
  8996                           pclatu	equ	0xFFB
  8997                           pclath	equ	0xFFA
  8998                           tblptru	equ	0xFF8
  8999                           tblptrh	equ	0xFF7
  9000                           tblptrl	equ	0xFF6
  9001                           tablat	equ	0xFF5
  9002                           prodh	equ	0xFF4
  9003                           prodl	equ	0xFF3
  9004                           intcon	equ	0xFF2
  9005                           postinc0	equ	0xFEE
  9006                           fsr0h	equ	0xFEA
  9007                           fsr0l	equ	0xFE9
  9008                           wreg	equ	0xFE8
  9009                           indf1	equ	0xFE7
  9010                           postinc1	equ	0xFE6
  9011                           postdec1	equ	0xFE5
  9012                           fsr1h	equ	0xFE2
  9013                           fsr1l	equ	0xFE1
  9014                           bsr	equ	0xFE0
  9015                           indf2	equ	0xFDF
  9016                           postinc2	equ	0xFDE
  9017                           postdec2	equ	0xFDD
  9018                           fsr2h	equ	0xFDA
  9019                           fsr2l	equ	0xFD9
  9020                           status	equ	0xFD8
  9021                           
  9022 ;; *************** function i2_memcpy *****************
  9023 ;; Defined at:
  9024 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  9025 ;; Parameters:    Size  Location     Type
  9026 ;;  d1              2    0[BANK0 ] PTR void 
  9027 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  9028 ;;		 -> i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), 
  9029 ;;		 -> ToMainLow_MQ(67), main@msgbuffer(11), 
  9030 ;;  s1              2    2[BANK0 ] PTR const void 
  9031 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9032 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9033 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  9034 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  9035 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  9036 ;;  n               2    4[BANK0 ] unsigned int 
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;  memcpy          2   46[COMRAM] PTR const unsigned char 
  9039 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9040 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9041 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  9042 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  9043 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  9044 ;;  memcpy          2   44[COMRAM] PTR unsigned char 
  9045 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  9046 ;;		 -> i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), 
  9047 ;;		 -> ToMainLow_MQ(67), main@msgbuffer(11), 
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  2    0[BANK0 ] PTR void 
  9050 ;; Registers used:
  9051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9057 ;;      Params:         0       6       0       0       0
  9058 ;;      Locals:         4       0       0       0       0
  9059 ;;      Temps:          0       0       0       0       0
  9060 ;;      Totals:         4       6       0       0       0
  9061 ;;Total ram usage:       10 bytes
  9062 ;; Hardware stack levels used:    1
  9063 ;; This function calls:
  9064 ;;		Nothing
  9065 ;; This function is called by:
  9066 ;;		i2_send_msg
  9067 ;;		i2_recv_msg
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071                           	psect	text54
  9072  0019F4                     __ptext54:
  9073                           	opt stack 0
  9074  0019F4                     i2_memcpy:
  9075                           	opt stack 16
  9076                           
  9077                           ; BSR set to: 0
  9078                           ;incstack = 0
  9079  0019F4  0100               	movlb	0	; () banked
  9080  0019F6  C083  F030         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9081  0019FA  0100               	movlb	0	; () banked
  9082  0019FC  C082  F02F         	movff	i2memcpy@s1,i2memcpy@s
  9083  001A00  0100               	movlb	0	; () banked
  9084  001A02  C081  F02E         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9085  001A06  0100               	movlb	0	; () banked
  9086  001A08  C080  F02D         	movff	i2memcpy@d1,i2memcpy@d
  9087  001A0C  D00E               	goto	i2l4446
  9088  001A0E                     i2l4440:
  9089                           
  9090                           ; BSR set to: 0
  9091  001A0E  C02F  FFD9         	movff	i2memcpy@s,fsr2l
  9092  001A12  C030  FFDA         	movff	i2memcpy@s+1,fsr2h
  9093  001A16  C02D  FFE1         	movff	i2memcpy@d,fsr1l
  9094  001A1A  C02E  FFE2         	movff	i2memcpy@d+1,fsr1h
  9095  001A1E  CFDF FFE7          	movff	indf2,indf1
  9096                           
  9097                           ; BSR set to: 0
  9098  001A22  4A2F               	infsnz	i2memcpy@s,f,c
  9099  001A24  2A30               	incf	i2memcpy@s+1,f,c
  9100                           
  9101                           ; BSR set to: 0
  9102  001A26  4A2D               	infsnz	i2memcpy@d,f,c
  9103  001A28  2A2E               	incf	i2memcpy@d+1,f,c
  9104  001A2A                     i2l4446:
  9105                           
  9106                           ; BSR set to: 0
  9107  001A2A  0100               	movlb	0	; () banked
  9108  001A2C  0100               	movlb	0	; () banked
  9109  001A2E  0784               	decf	i2memcpy@n& (0+255),f,b
  9110  001A30  A0D8               	btfss	status,0,c
  9111  001A32  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  9112  001A34  0100               	movlb	0	; () banked
  9113  001A36  2984               	incf	i2memcpy@n& (0+255),w,b
  9114  001A38  B4D8               	btfsc	status,2,c
  9115  001A3A  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  9116  001A3C  B4D8               	btfsc	status,2,c
  9117                           
  9118                           ; BSR set to: 0
  9119                           
  9120                           ; BSR set to: 0
  9121                           ;	Return value of i2_memcpy is never used
  9122  001A3E  0012               	return	
  9123  001A40  D7E6               	goto	i2l4440
  9124  001A42                     __end_ofi2_memcpy:
  9125                           	opt stack 0
  9126                           pclatu	equ	0xFFB
  9127                           pclath	equ	0xFFA
  9128                           tblptru	equ	0xFF8
  9129                           tblptrh	equ	0xFF7
  9130                           tblptrl	equ	0xFF6
  9131                           tablat	equ	0xFF5
  9132                           prodh	equ	0xFF4
  9133                           prodl	equ	0xFF3
  9134                           intcon	equ	0xFF2
  9135                           postinc0	equ	0xFEE
  9136                           fsr0h	equ	0xFEA
  9137                           fsr0l	equ	0xFE9
  9138                           wreg	equ	0xFE8
  9139                           indf1	equ	0xFE7
  9140                           postinc1	equ	0xFE6
  9141                           postdec1	equ	0xFE5
  9142                           fsr1h	equ	0xFE2
  9143                           fsr1l	equ	0xFE1
  9144                           bsr	equ	0xFE0
  9145                           indf2	equ	0xFDF
  9146                           postinc2	equ	0xFDE
  9147                           postdec2	equ	0xFDD
  9148                           fsr2h	equ	0xFDA
  9149                           fsr2l	equ	0xFD9
  9150                           status	equ	0xFD8
  9151                           
  9152 ;; *************** function i2___awmod *****************
  9153 ;; Defined at:
  9154 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;  dividend        2   44[COMRAM] int 
  9157 ;;  divisor         2   46[COMRAM] int 
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;  __awmod         1    1[BANK0 ] unsigned char 
  9160 ;;  __awmod         1    0[BANK0 ] unsigned char 
  9161 ;; Return value:  Size  Location     Type
  9162 ;;                  2   44[COMRAM] int 
  9163 ;; Registers used:
  9164 ;;		wreg, status,2, status,0, prodl
  9165 ;; Tracked objects:
  9166 ;;		On entry : 0/0
  9167 ;;		On exit  : 0/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9170 ;;      Params:         4       0       0       0       0
  9171 ;;      Locals:         0       2       0       0       0
  9172 ;;      Temps:          1       0       0       0       0
  9173 ;;      Totals:         5       2       0       0       0
  9174 ;;Total ram usage:        7 bytes
  9175 ;; Hardware stack levels used:    1
  9176 ;; This function calls:
  9177 ;;		Nothing
  9178 ;; This function is called by:
  9179 ;;		i2_send_msg
  9180 ;;		i2_recv_msg
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184                           	psect	text55
  9185  0011F0                     __ptext55:
  9186                           	opt stack 0
  9187  0011F0                     i2___awmod:
  9188                           	opt stack 16
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;incstack = 0
  9192  0011F0  6E31               	movwf	??i2___awmod& (0+255),c
  9193  0011F2  0E00               	movlw	0
  9194  0011F4  0100               	movlb	0	; () banked
  9195  0011F6  0100               	movlb	0	; () banked
  9196  0011F8  6F81               	movwf	i2___awmod@sign& (0+255),b
  9197  0011FA  5031               	movf	??i2___awmod& (0+255),w,c
  9198                           
  9199                           ; BSR set to: 0
  9200  0011FC  502E               	movf	i2___awmod@dividend+1,w,c
  9201  0011FE  0A80               	xorlw	128
  9202  001200  6EF3               	movwf	prodl,c
  9203  001202  0E80               	movlw	128
  9204  001204  5CF3               	subwf	prodl,w,c
  9205  001206  0E00               	movlw	0
  9206  001208  B4D8               	btfsc	status,2,c
  9207  00120A  5C2D               	subwf	i2___awmod@dividend,w,c
  9208  00120C  B0D8               	btfsc	status,0,c
  9209  00120E  D00A               	goto	i2l4456
  9210                           
  9211                           ; BSR set to: 0
  9212  001210  6C2D               	negf	i2___awmod@dividend,c
  9213  001212  1E2E               	comf	i2___awmod@dividend+1,f,c
  9214  001214  B0D8               	btfsc	status,0,c
  9215  001216  2A2E               	incf	i2___awmod@dividend+1,f,c
  9216                           
  9217                           ; BSR set to: 0
  9218  001218  6E31               	movwf	??i2___awmod& (0+255),c
  9219  00121A  0E01               	movlw	1
  9220  00121C  0100               	movlb	0	; () banked
  9221  00121E  0100               	movlb	0	; () banked
  9222  001220  6F81               	movwf	i2___awmod@sign& (0+255),b
  9223  001222  5031               	movf	??i2___awmod& (0+255),w,c
  9224  001224                     i2l4456:
  9225                           
  9226                           ; BSR set to: 0
  9227  001224  5030               	movf	i2___awmod@divisor+1,w,c
  9228  001226  0A80               	xorlw	128
  9229  001228  6EF3               	movwf	prodl,c
  9230  00122A  0E80               	movlw	128
  9231  00122C  5CF3               	subwf	prodl,w,c
  9232  00122E  0E00               	movlw	0
  9233  001230  B4D8               	btfsc	status,2,c
  9234  001232  5C2F               	subwf	i2___awmod@divisor,w,c
  9235  001234  B0D8               	btfsc	status,0,c
  9236  001236  D004               	goto	i2l4460
  9237                           
  9238                           ; BSR set to: 0
  9239  001238  6C2F               	negf	i2___awmod@divisor,c
  9240  00123A  1E30               	comf	i2___awmod@divisor+1,f,c
  9241  00123C  B0D8               	btfsc	status,0,c
  9242  00123E  2A30               	incf	i2___awmod@divisor+1,f,c
  9243  001240                     i2l4460:
  9244                           
  9245                           ; BSR set to: 0
  9246  001240  5030               	movf	i2___awmod@divisor+1,w,c
  9247  001242  102F               	iorwf	i2___awmod@divisor,w,c
  9248  001244  B4D8               	btfsc	status,2,c
  9249  001246  D020               	goto	i2l4476
  9250                           
  9251                           ; BSR set to: 0
  9252  001248  6E31               	movwf	??i2___awmod& (0+255),c
  9253  00124A  0E01               	movlw	1
  9254  00124C  0100               	movlb	0	; () banked
  9255  00124E  0100               	movlb	0	; () banked
  9256  001250  6F80               	movwf	i2___awmod@counter& (0+255),b
  9257  001252  5031               	movf	??i2___awmod& (0+255),w,c
  9258  001254  D006               	goto	i2l4466
  9259  001256                     i2l4464:
  9260                           
  9261                           ; BSR set to: 0
  9262  001256  90D8               	bcf	status,0,c
  9263  001258  362F               	rlcf	i2___awmod@divisor,f,c
  9264  00125A  3630               	rlcf	i2___awmod@divisor+1,f,c
  9265  00125C  0100               	movlb	0	; () banked
  9266  00125E  0100               	movlb	0	; () banked
  9267  001260  2B80               	incf	i2___awmod@counter& (0+255),f,b
  9268  001262                     i2l4466:
  9269                           
  9270                           ; BSR set to: 0
  9271  001262  AE30               	btfss	i2___awmod@divisor+1,7,c
  9272  001264  D7F8               	goto	i2l4464
  9273  001266                     i2l4468:
  9274                           
  9275                           ; BSR set to: 0
  9276  001266  502F               	movf	i2___awmod@divisor,w,c
  9277  001268  5C2D               	subwf	i2___awmod@dividend,w,c
  9278  00126A  5030               	movf	i2___awmod@divisor+1,w,c
  9279  00126C  582E               	subwfb	i2___awmod@dividend+1,w,c
  9280  00126E  A0D8               	btfss	status,0,c
  9281  001270  D004               	goto	i2l4472
  9282                           
  9283                           ; BSR set to: 0
  9284  001272  502F               	movf	i2___awmod@divisor,w,c
  9285  001274  5E2D               	subwf	i2___awmod@dividend,f,c
  9286  001276  5030               	movf	i2___awmod@divisor+1,w,c
  9287  001278  5A2E               	subwfb	i2___awmod@dividend+1,f,c
  9288  00127A                     i2l4472:
  9289                           
  9290                           ; BSR set to: 0
  9291  00127A  90D8               	bcf	status,0,c
  9292  00127C  3230               	rrcf	i2___awmod@divisor+1,f,c
  9293  00127E  322F               	rrcf	i2___awmod@divisor,f,c
  9294                           
  9295                           ; BSR set to: 0
  9296  001280  0100               	movlb	0	; () banked
  9297  001282  0100               	movlb	0	; () banked
  9298  001284  2F80               	decfsz	i2___awmod@counter& (0+255),f,b
  9299  001286  D7EF               	goto	i2l4468
  9300  001288                     i2l4476:
  9301                           
  9302                           ; BSR set to: 0
  9303  001288  0100               	movlb	0	; () banked
  9304  00128A  0100               	movlb	0	; () banked
  9305  00128C  5181               	movf	i2___awmod@sign& (0+255),w,b
  9306  00128E  B4D8               	btfsc	status,2,c
  9307  001290  D004               	goto	i2l4480
  9308                           
  9309                           ; BSR set to: 0
  9310  001292  6C2D               	negf	i2___awmod@dividend,c
  9311  001294  1E2E               	comf	i2___awmod@dividend+1,f,c
  9312  001296  B0D8               	btfsc	status,0,c
  9313  001298  2A2E               	incf	i2___awmod@dividend+1,f,c
  9314  00129A                     i2l4480:
  9315                           
  9316                           ; BSR set to: 0
  9317  00129A  C02D  F02D         	movff	i2___awmod@dividend,?i2___awmod
  9318  00129E  C02E  F02E         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9319  0012A2  0012               	return	
  9320  0012A4                     __end_ofi2___awmod:
  9321                           	opt stack 0
  9322                           pclatu	equ	0xFFB
  9323                           pclath	equ	0xFFA
  9324                           tblptru	equ	0xFF8
  9325                           tblptrh	equ	0xFF7
  9326                           tblptrl	equ	0xFF6
  9327                           tablat	equ	0xFF5
  9328                           prodh	equ	0xFF4
  9329                           prodl	equ	0xFF3
  9330                           intcon	equ	0xFF2
  9331                           postinc0	equ	0xFEE
  9332                           fsr0h	equ	0xFEA
  9333                           fsr0l	equ	0xFE9
  9334                           wreg	equ	0xFE8
  9335                           indf1	equ	0xFE7
  9336                           postinc1	equ	0xFE6
  9337                           postdec1	equ	0xFE5
  9338                           fsr1h	equ	0xFE2
  9339                           fsr1l	equ	0xFE1
  9340                           bsr	equ	0xFE0
  9341                           indf2	equ	0xFDF
  9342                           postinc2	equ	0xFDE
  9343                           postdec2	equ	0xFDD
  9344                           fsr2h	equ	0xFDA
  9345                           fsr2l	equ	0xFD9
  9346                           status	equ	0xFD8
  9347                           
  9348 ;; *************** function _SleepIfOkay *****************
  9349 ;; Defined at:
  9350 ;;		line 228 in file "../src/messages.c"
  9351 ;; Parameters:    Size  Location     Type
  9352 ;;		None
  9353 ;; Auto vars:     Size  Location     Type
  9354 ;;		None
  9355 ;; Return value:  Size  Location     Type
  9356 ;;		None               void
  9357 ;; Registers used:
  9358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9359 ;; Tracked objects:
  9360 ;;		On entry : 0/0
  9361 ;;		On exit  : 0/0
  9362 ;;		Unchanged: 0/0
  9363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9364 ;;      Params:         0       0       0       0       0
  9365 ;;      Locals:         0       0       0       0       0
  9366 ;;      Temps:          0       0       0       0       0
  9367 ;;      Totals:         0       0       0       0       0
  9368 ;;Total ram usage:        0 bytes
  9369 ;; Hardware stack levels used:    1
  9370 ;; Hardware stack levels required when called:    2
  9371 ;; This function calls:
  9372 ;;		_enter_sleep_mode
  9373 ;;		i2_check_msg
  9374 ;;		i2_in_high_int
  9375 ;;		i2_in_low_int
  9376 ;; This function is called by:
  9377 ;;		_InterruptHandlerHigh
  9378 ;; This function uses a non-reentrant model
  9379 ;;
  9380                           
  9381                           	psect	text56
  9382  001A42                     __ptext56:
  9383                           	opt stack 0
  9384  001A42                     _SleepIfOkay:
  9385                           	opt stack 18
  9386                           
  9387                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  9388                           
  9389                           ; BSR set to: 0
  9390                           ;incstack = 0
  9391  001A42  664E               	tstfsz	_MQ_Main_Willing_to_block,c
  9392  001A44  D001               	goto	i2l2632
  9393  001A46  0012               	return	
  9394  001A48                     i2l2632:
  9395                           
  9396                           ;messages.c: 232: }
  9397                           ;messages.c: 235: if (in_low_int()) {
  9398  001A48  EC98  F00E         	call	i2_in_low_int	;wreg free
  9399  001A4C  5030               	movf	?i2_in_low_int+1,w,c
  9400  001A4E  102F               	iorwf	?i2_in_low_int,w,c
  9401  001A50  A4D8               	btfss	status,2,c
  9402  001A52  0012               	return	
  9403                           
  9404                           ;messages.c: 237: }
  9405                           ;messages.c: 240: if (!in_high_int()) {
  9406                           
  9407                           ;messages.c: 236: return;
  9408  001A54  EC84  F00F         	call	i2_in_high_int	;wreg free
  9409  001A58  502E               	movf	?i2_in_high_int+1,w,c
  9410  001A5A  102D               	iorwf	?i2_in_high_int,w,c
  9411  001A5C  B4D8               	btfsc	status,2,c
  9412  001A5E  0012               	return	
  9413                           
  9414                           ;messages.c: 242: }
  9415                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  9416                           
  9417                           ;messages.c: 241: return;
  9418  001A60  0101               	movlb	1	; () banked
  9419  001A62  0E01               	movlw	high _ToMainHigh_MQ
  9420  001A64  6E2E               	movwf	i2check_msg@qptr+1,c
  9421  001A66  0101               	movlb	1	; () banked
  9422  001A68  0E00               	movlw	low _ToMainHigh_MQ
  9423  001A6A  6E2D               	movwf	i2check_msg@qptr,c
  9424  001A6C  ECEB  F00E         	call	i2_check_msg	;wreg free
  9425  001A70  0900               	iorlw	0
  9426  001A72  A4D8               	btfss	status,2,c
  9427  001A74  0012               	return	
  9428                           
  9429                           ;messages.c: 249: }
  9430                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  9431                           
  9432                           ;messages.c: 248: return;
  9433  001A76  0101               	movlb	1	; () banked
  9434  001A78  0E01               	movlw	high _ToMainLow_MQ
  9435  001A7A  6E2E               	movwf	i2check_msg@qptr+1,c
  9436  001A7C  0101               	movlb	1	; () banked
  9437  001A7E  0E43               	movlw	low _ToMainLow_MQ
  9438  001A80  6E2D               	movwf	i2check_msg@qptr,c
  9439  001A82  ECEB  F00E         	call	i2_check_msg	;wreg free
  9440  001A86  0900               	iorlw	0
  9441  001A88  B4D8               	btfsc	status,2,c
  9442                           
  9443                           ;messages.c: 252: }
  9444                           ;messages.c: 253: enter_sleep_mode();
  9445                           
  9446                           ;messages.c: 251: return;
  9447  001A8A  EC95  F00F         	call	_enter_sleep_mode	;wreg free
  9448  001A8E  0012               	return	
  9449  001A90                     __end_of_SleepIfOkay:
  9450                           	opt stack 0
  9451                           pclatu	equ	0xFFB
  9452                           pclath	equ	0xFFA
  9453                           tblptru	equ	0xFF8
  9454                           tblptrh	equ	0xFF7
  9455                           tblptrl	equ	0xFF6
  9456                           tablat	equ	0xFF5
  9457                           prodh	equ	0xFF4
  9458                           prodl	equ	0xFF3
  9459                           intcon	equ	0xFF2
  9460                           postinc0	equ	0xFEE
  9461                           fsr0h	equ	0xFEA
  9462                           fsr0l	equ	0xFE9
  9463                           wreg	equ	0xFE8
  9464                           indf1	equ	0xFE7
  9465                           postinc1	equ	0xFE6
  9466                           postdec1	equ	0xFE5
  9467                           fsr1h	equ	0xFE2
  9468                           fsr1l	equ	0xFE1
  9469                           bsr	equ	0xFE0
  9470                           indf2	equ	0xFDF
  9471                           postinc2	equ	0xFDE
  9472                           postdec2	equ	0xFDD
  9473                           fsr2h	equ	0xFDA
  9474                           fsr2l	equ	0xFD9
  9475                           status	equ	0xFD8
  9476                           
  9477 ;; *************** function i2_in_low_int *****************
  9478 ;; Defined at:
  9479 ;;		line 31 in file "../src/interrupts.c"
  9480 ;; Parameters:    Size  Location     Type
  9481 ;;		None
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;		None
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  2   46[COMRAM] int 
  9486 ;; Registers used:
  9487 ;;		wreg, status,2, status,0, cstack
  9488 ;; Tracked objects:
  9489 ;;		On entry : 0/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9493 ;;      Params:         2       0       0       0       0
  9494 ;;      Locals:         0       0       0       0       0
  9495 ;;      Temps:          0       0       0       0       0
  9496 ;;      Totals:         2       0       0       0       0
  9497 ;;Total ram usage:        2 bytes
  9498 ;; Hardware stack levels used:    1
  9499 ;; Hardware stack levels required when called:    1
  9500 ;; This function calls:
  9501 ;;		i2_in_high_int
  9502 ;; This function is called by:
  9503 ;;		_SleepIfOkay
  9504 ;; This function uses a non-reentrant model
  9505 ;;
  9506                           
  9507                           	psect	text57
  9508  001D30                     __ptext57:
  9509                           	opt stack 0
  9510  001D30                     i2_in_low_int:
  9511                           	opt stack 18
  9512                           
  9513                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  9514                           
  9515                           ;incstack = 0
  9516  001D30  ACF2               	btfss	intcon,6,c	;volatile
  9517  001D32  D005               	goto	i2l3410
  9518                           
  9519                           ;interrupts.c: 33: return (0);
  9520  001D34  0E00               	movlw	0
  9521  001D36  6E30               	movwf	?i2_in_low_int+1,c
  9522  001D38  0E00               	movlw	0
  9523  001D3A  6E2F               	movwf	?i2_in_low_int,c
  9524  001D3C  0012               	return	
  9525  001D3E                     i2l3410:
  9526  001D3E  EC84  F00F         	call	i2_in_high_int	;wreg free
  9527  001D42  502E               	movf	?i2_in_high_int+1,w,c
  9528  001D44  102D               	iorwf	?i2_in_high_int,w,c
  9529  001D46  B4D8               	btfsc	status,2,c
  9530  001D48  D005               	goto	i2l3418
  9531                           
  9532                           ;interrupts.c: 35: return (0);
  9533  001D4A  0E00               	movlw	0
  9534  001D4C  6E30               	movwf	?i2_in_low_int+1,c
  9535  001D4E  0E00               	movlw	0
  9536  001D50  6E2F               	movwf	?i2_in_low_int,c
  9537  001D52  0012               	return	
  9538  001D54                     i2l3418:
  9539                           
  9540                           ;interrupts.c: 37: return (1);
  9541  001D54  0E00               	movlw	0
  9542  001D56  6E30               	movwf	?i2_in_low_int+1,c
  9543  001D58  0E01               	movlw	1
  9544  001D5A  6E2F               	movwf	?i2_in_low_int,c
  9545  001D5C  0012               	return	
  9546  001D5E                     __end_ofi2_in_low_int:
  9547                           	opt stack 0
  9548                           pclatu	equ	0xFFB
  9549                           pclath	equ	0xFFA
  9550                           tblptru	equ	0xFF8
  9551                           tblptrh	equ	0xFF7
  9552                           tblptrl	equ	0xFF6
  9553                           tablat	equ	0xFF5
  9554                           prodh	equ	0xFF4
  9555                           prodl	equ	0xFF3
  9556                           intcon	equ	0xFF2
  9557                           postinc0	equ	0xFEE
  9558                           fsr0h	equ	0xFEA
  9559                           fsr0l	equ	0xFE9
  9560                           wreg	equ	0xFE8
  9561                           indf1	equ	0xFE7
  9562                           postinc1	equ	0xFE6
  9563                           postdec1	equ	0xFE5
  9564                           fsr1h	equ	0xFE2
  9565                           fsr1l	equ	0xFE1
  9566                           bsr	equ	0xFE0
  9567                           indf2	equ	0xFDF
  9568                           postinc2	equ	0xFDE
  9569                           postdec2	equ	0xFDD
  9570                           fsr2h	equ	0xFDA
  9571                           fsr2l	equ	0xFD9
  9572                           status	equ	0xFD8
  9573                           
  9574 ;; *************** function i2_in_high_int *****************
  9575 ;; Defined at:
  9576 ;;		line 23 in file "../src/interrupts.c"
  9577 ;; Parameters:    Size  Location     Type
  9578 ;;		None
  9579 ;; Auto vars:     Size  Location     Type
  9580 ;;		None
  9581 ;; Return value:  Size  Location     Type
  9582 ;;                  2   44[COMRAM] int 
  9583 ;; Registers used:
  9584 ;;		wreg, status,2
  9585 ;; Tracked objects:
  9586 ;;		On entry : 0/0
  9587 ;;		On exit  : 0/0
  9588 ;;		Unchanged: 0/0
  9589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9590 ;;      Params:         2       0       0       0       0
  9591 ;;      Locals:         0       0       0       0       0
  9592 ;;      Temps:          0       0       0       0       0
  9593 ;;      Totals:         2       0       0       0       0
  9594 ;;Total ram usage:        2 bytes
  9595 ;; Hardware stack levels used:    1
  9596 ;; This function calls:
  9597 ;;		Nothing
  9598 ;; This function is called by:
  9599 ;;		_SleepIfOkay
  9600 ;;		i2_in_low_int
  9601 ;; This function uses a non-reentrant model
  9602 ;;
  9603                           
  9604                           	psect	text58
  9605  001F08                     __ptext58:
  9606                           	opt stack 0
  9607  001F08                     i2_in_high_int:
  9608                           	opt stack 18
  9609                           
  9610                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  9611                           
  9612                           ;incstack = 0
  9613  001F08  0E00               	movlw	0
  9614  001F0A  AEF2               	btfss	intcon,7,c	;volatile
  9615  001F0C  0E01               	movlw	1
  9616  001F0E  6E2D               	movwf	?i2_in_high_int,c
  9617  001F10  6A2E               	clrf	?i2_in_high_int+1,c
  9618  001F12  0012               	return	
  9619  001F14                     __end_ofi2_in_high_int:
  9620                           	opt stack 0
  9621                           pclatu	equ	0xFFB
  9622                           pclath	equ	0xFFA
  9623                           tblptru	equ	0xFF8
  9624                           tblptrh	equ	0xFF7
  9625                           tblptrl	equ	0xFF6
  9626                           tablat	equ	0xFF5
  9627                           prodh	equ	0xFF4
  9628                           prodl	equ	0xFF3
  9629                           intcon	equ	0xFF2
  9630                           postinc0	equ	0xFEE
  9631                           fsr0h	equ	0xFEA
  9632                           fsr0l	equ	0xFE9
  9633                           wreg	equ	0xFE8
  9634                           indf1	equ	0xFE7
  9635                           postinc1	equ	0xFE6
  9636                           postdec1	equ	0xFE5
  9637                           fsr1h	equ	0xFE2
  9638                           fsr1l	equ	0xFE1
  9639                           bsr	equ	0xFE0
  9640                           indf2	equ	0xFDF
  9641                           postinc2	equ	0xFDE
  9642                           postdec2	equ	0xFDD
  9643                           fsr2h	equ	0xFDA
  9644                           fsr2l	equ	0xFD9
  9645                           status	equ	0xFD8
  9646                           
  9647 ;; *************** function i2_check_msg *****************
  9648 ;; Defined at:
  9649 ;;		line 222 in file "../src/messages.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;  qptr            2   44[COMRAM] PTR struct __msg_queue
  9652 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9653 ;; Auto vars:     Size  Location     Type
  9654 ;;		None
  9655 ;; Return value:  Size  Location     Type
  9656 ;;                  1    wreg      unsigned char 
  9657 ;; Registers used:
  9658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9659 ;; Tracked objects:
  9660 ;;		On entry : 0/0
  9661 ;;		On exit  : 0/0
  9662 ;;		Unchanged: 0/0
  9663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9664 ;;      Params:         2       0       0       0       0
  9665 ;;      Locals:         0       0       0       0       0
  9666 ;;      Temps:          1       0       0       0       0
  9667 ;;      Totals:         3       0       0       0       0
  9668 ;;Total ram usage:        3 bytes
  9669 ;; Hardware stack levels used:    1
  9670 ;; This function calls:
  9671 ;;		Nothing
  9672 ;; This function is called by:
  9673 ;;		_SleepIfOkay
  9674 ;; This function uses a non-reentrant model
  9675 ;;
  9676                           
  9677                           	psect	text59
  9678  001DD6                     __ptext59:
  9679                           	opt stack 0
  9680  001DD6                     i2_check_msg:
  9681                           	opt stack 19
  9682                           
  9683                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9684                           
  9685                           ;incstack = 0
  9686  001DD6  EE20 F042          	lfsr	2,66
  9687  001DDA  502D               	movf	i2check_msg@qptr,w,c
  9688  001DDC  26D9               	addwf	fsr2l,f,c
  9689  001DDE  502E               	movf	i2check_msg@qptr+1,w,c
  9690  001DE0  22DA               	addwfc	fsr2h,f,c
  9691  001DE2  50DF               	movf	indf2,w,c
  9692  001DE4  6E2F               	movwf	??i2_check_msg& (0+255),c
  9693  001DE6  502F               	movf	??i2_check_msg,w,c
  9694  001DE8  0D0D               	mullw	13
  9695  001DEA  50F3               	movf	prodl,w,c
  9696  001DEC  242D               	addwf	i2check_msg@qptr,w,c
  9697  001DEE  6ED9               	movwf	fsr2l,c
  9698  001DF0  50F4               	movf	prodh,w,c
  9699  001DF2  202E               	addwfc	i2check_msg@qptr+1,w,c
  9700  001DF4  6EDA               	movwf	fsr2h,c
  9701  001DF6  50DF               	movf	indf2,w,c
  9702  001DF8  0012               	return	
  9703  001DFA                     __end_ofi2_check_msg:
  9704                           	opt stack 0
  9705                           pclatu	equ	0xFFB
  9706                           pclath	equ	0xFFA
  9707                           tblptru	equ	0xFF8
  9708                           tblptrh	equ	0xFF7
  9709                           tblptrl	equ	0xFF6
  9710                           tablat	equ	0xFF5
  9711                           prodh	equ	0xFF4
  9712                           prodl	equ	0xFF3
  9713                           intcon	equ	0xFF2
  9714                           postinc0	equ	0xFEE
  9715                           fsr0h	equ	0xFEA
  9716                           fsr0l	equ	0xFE9
  9717                           wreg	equ	0xFE8
  9718                           indf1	equ	0xFE7
  9719                           postinc1	equ	0xFE6
  9720                           postdec1	equ	0xFE5
  9721                           fsr1h	equ	0xFE2
  9722                           fsr1l	equ	0xFE1
  9723                           bsr	equ	0xFE0
  9724                           indf2	equ	0xFDF
  9725                           postinc2	equ	0xFDE
  9726                           postdec2	equ	0xFDD
  9727                           fsr2h	equ	0xFDA
  9728                           fsr2l	equ	0xFD9
  9729                           status	equ	0xFD8
  9730                           
  9731 ;; *************** function _enter_sleep_mode *****************
  9732 ;; Defined at:
  9733 ;;		line 202 in file "../src/messages.c"
  9734 ;; Parameters:    Size  Location     Type
  9735 ;;		None
  9736 ;; Auto vars:     Size  Location     Type
  9737 ;;		None
  9738 ;; Return value:  Size  Location     Type
  9739 ;;		None               void
  9740 ;; Registers used:
  9741 ;;		None
  9742 ;; Tracked objects:
  9743 ;;		On entry : 0/0
  9744 ;;		On exit  : 0/0
  9745 ;;		Unchanged: 0/0
  9746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9747 ;;      Params:         0       0       0       0       0
  9748 ;;      Locals:         0       0       0       0       0
  9749 ;;      Temps:          0       0       0       0       0
  9750 ;;      Totals:         0       0       0       0       0
  9751 ;;Total ram usage:        0 bytes
  9752 ;; Hardware stack levels used:    1
  9753 ;; This function calls:
  9754 ;;		Nothing
  9755 ;; This function is called by:
  9756 ;;		_SleepIfOkay
  9757 ;; This function uses a non-reentrant model
  9758 ;;
  9759                           
  9760                           	psect	text60
  9761  001F2A                     __ptext60:
  9762                           	opt stack 0
  9763  001F2A                     _enter_sleep_mode:
  9764                           	opt stack 19
  9765                           
  9766                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9767                           
  9768                           ;incstack = 0
  9769  001F2A  8ED3               	bsf	4051,7,c	;volatile
  9770  001F2C  0003               	sleep		;# 
  9771  001F2E  0012               	return	
  9772  001F30                     __end_of_enter_sleep_mode:
  9773                           	opt stack 0
  9774  0000                     pclatu	equ	0xFFB
  9775                           pclath	equ	0xFFA
  9776                           tblptru	equ	0xFF8
  9777                           tblptrh	equ	0xFF7
  9778                           tblptrl	equ	0xFF6
  9779                           tablat	equ	0xFF5
  9780                           prodh	equ	0xFF4
  9781                           prodl	equ	0xFF3
  9782                           intcon	equ	0xFF2
  9783                           postinc0	equ	0xFEE
  9784                           fsr0h	equ	0xFEA
  9785                           fsr0l	equ	0xFE9
  9786                           wreg	equ	0xFE8
  9787                           indf1	equ	0xFE7
  9788                           postinc1	equ	0xFE6
  9789                           postdec1	equ	0xFE5
  9790                           fsr1h	equ	0xFE2
  9791                           fsr1l	equ	0xFE1
  9792                           bsr	equ	0xFE0
  9793                           indf2	equ	0xFDF
  9794                           postinc2	equ	0xFDE
  9795                           postdec2	equ	0xFDD
  9796                           fsr2h	equ	0xFDA
  9797                           fsr2l	equ	0xFD9
  9798                           status	equ	0xFD8
  9799                           pclatu	equ	0xFFB
  9800                           pclath	equ	0xFFA
  9801                           tblptru	equ	0xFF8
  9802                           tblptrh	equ	0xFF7
  9803                           tblptrl	equ	0xFF6
  9804                           tablat	equ	0xFF5
  9805                           prodh	equ	0xFF4
  9806                           prodl	equ	0xFF3
  9807                           intcon	equ	0xFF2
  9808                           postinc0	equ	0xFEE
  9809                           fsr0h	equ	0xFEA
  9810                           fsr0l	equ	0xFE9
  9811                           wreg	equ	0xFE8
  9812                           indf1	equ	0xFE7
  9813                           postinc1	equ	0xFE6
  9814                           postdec1	equ	0xFE5
  9815                           fsr1h	equ	0xFE2
  9816                           fsr1l	equ	0xFE1
  9817                           bsr	equ	0xFE0
  9818                           indf2	equ	0xFDF
  9819                           postinc2	equ	0xFDE
  9820                           postdec2	equ	0xFDD
  9821                           fsr2h	equ	0xFDA
  9822                           fsr2l	equ	0xFD9
  9823                           status	equ	0xFD8
  9824                           
  9825                           	psect	rparam
  9826  0000                     pclatu	equ	0xFFB
  9827                           pclath	equ	0xFFA
  9828                           tblptru	equ	0xFF8
  9829                           tblptrh	equ	0xFF7
  9830                           tblptrl	equ	0xFF6
  9831                           tablat	equ	0xFF5
  9832                           prodh	equ	0xFF4
  9833                           prodl	equ	0xFF3
  9834                           intcon	equ	0xFF2
  9835                           postinc0	equ	0xFEE
  9836                           fsr0h	equ	0xFEA
  9837                           fsr0l	equ	0xFE9
  9838                           wreg	equ	0xFE8
  9839                           indf1	equ	0xFE7
  9840                           postinc1	equ	0xFE6
  9841                           postdec1	equ	0xFE5
  9842                           fsr1h	equ	0xFE2
  9843                           fsr1l	equ	0xFE1
  9844                           bsr	equ	0xFE0
  9845                           indf2	equ	0xFDF
  9846                           postinc2	equ	0xFDE
  9847                           postdec2	equ	0xFDD
  9848                           fsr2h	equ	0xFDA
  9849                           fsr2l	equ	0xFD9
  9850                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         303
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     49      83
    BANK0           128     71      84
    BANK1           256    100     236
    BANK2           256      0     134
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> i2c_slave_int_handler@sensorData(BANK0[5]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), 
		 -> ToMainLow_MQ(BANK1[67]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> i2c_slave_int_handler@sensorData(BANK0[5]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), 
		 -> ToMainLow_MQ(BANK1[67]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@reply(BANK0[5]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), 
		 -> FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@msgbuffer(BANK1[11]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), main@uc(BANK1[13]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@reply(BANK0[5]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), 
		 -> FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@msgbuffer(BANK1[11]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), main@uc(BANK1[13]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_trans@data	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 13
		 -> main@uc(BANK1[13]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK1[29]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 5
		 -> i2c_slave_int_handler@sensorData(BANK0[5]), i2c_slave_int_handler@noData(BANK0[5]), i2c_slave_int_handler@gatherAck(BANK0[3]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK1[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 5
		 -> i2c_slave_int_handler@sensorData(BANK0[5]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> i2c_slave_int_handler@msgtype(BANK0[2]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@reply(BANK0[5]), i2c_slave_int_handler@error_buf(BANK0[3]), main@ic(BANK1[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> i2c_slave_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> i2c_slave_int_handler@sensorData(BANK0[5]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> i2c_slave_int_handler@sensorData(BANK0[5]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), 
		 -> ToMainLow_MQ(BANK1[67]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@reply(BANK0[5]), i2c_slave_int_handler@error_buf(BANK0[3]), main@msgbuffer(BANK1[11]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), main@uc(BANK1[13]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_WriteTimer0
    _i2c_slave_int_handler->_start_i2c_slave_reply
    i2_send_msg->i2___awmod
    i2_recv_msg->i2___awmod
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->_FromMainLow_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainLow_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0   15937
                                             36 BANK1     64    64      0
                _FromMainLow_sendmsg
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                         _uart_trans
 ---------------------------------------------------------------------------------
 (1) _uart_trans                                           5     3      2     192
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3379
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2690
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2861
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2861
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2638
                                             10 BANK1     14     7      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     347
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _FromMainLow_sendmsg                                  4     1      3    2690
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2467
                                             10 BANK1     12     6      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     669
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    3486
                                             27 COMRAM    17    17      0
                    _adc_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3398
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    3375
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    3022
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     809
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   0     0      0      88
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0   10319
                                             57 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  0     0      0      88
                         _ConvertADC
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      88
                                             44 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _ConvertADC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    9995
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_slave_int_handler                              32    32      0    9995
                                             25 BANK0     32    32      0
                _FromMainLow_recvmsg
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     3      2     225
                                             44 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    4588
                                             18 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    3845
                                              6 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) _FromMainLow_recvmsg                                 5     1      4    4156
                                             20 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7    3933
                                              6 BANK0     14     7      7
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6    1108
                                             44 COMRAM     4     4      0
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           7     3      4    1186
                                             44 COMRAM     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             46 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             44 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FromMainLow_sendmsg
     _send_msg
       ___awmod
       _memcpy
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
   _uart_trans

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
   _timer1_int_handler
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_trans_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_slave_int_handler
       _FromMainLow_recvmsg
         i2_recv_msg
           i2___awmod
           i2_memcpy
       _ToMainHigh_sendmsg
         i2_send_msg
           i2___awmod
           i2_memcpy
       _handle_start
       _start_i2c_slave_reply
   _timer0_int_handler
     _ConvertADC
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      86       8       52.3%
BITBANK1           100      0       0       5        0.0%
BANK1              100     64      EC       6       92.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80     47      54       4       65.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     31      53       1       65.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     219      11        0.0%
DATA                 0      0     219      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Mar 04 01:07:13 2014

          _MQ_Main_Willing_to_block 004E                         _SSPSTATbits 000FC7  
         __end_of_ToMainLow_recvmsg 1B5C                                  bsr 000FE0  
         __end_of_ToMainLow_sendmsg 1DD6                        __CFG_CP0$OFF 000000  
                 i2recv_msg@msgtype 0089                   i2recv_msg@tlength 0090  
              ?_FromMainLow_recvmsg 0094                                 l128 0870  
                               l500 1D82                                 l501 1D84  
                               l524 1C3A                                 l526 1C52  
                               l527 1C54                                 l481 1610  
                               l561 14A8                                 l565 14C8  
                               l566 14CA                                 l567 14D8  
                               l568 14DA                ?_FromMainLow_sendmsg 019C  
                               l794 1E7C     __size_of_uart_trans_int_handler 0068  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                      ___awmod@sign 018C                      _FromMainLow_MQ 0243  
                               prod 000FF3                                 wreg 000FE8  
                      __CFG_IESO$ON 000000                        ?_in_high_int 0186  
                  ??_init_uart_recv 0188        i2c_slave_int_handler@msgtype 00B4  
        i2c_slave_int_handler@F5133 00CF          i2c_slave_int_handler@F5127 00CC  
        i2c_slave_int_handler@F5129 00C7                 i2recv_msg@maxlength 0088  
                              l1106 1586                                l4002 175C  
                              l4020 0CC8                                l4040 198E  
                              l4034 196A                                l4054 0A2E  
                              l4070 0B1C                                l4350 0F56  
                              l4342 0F1E                                l3800 09A8  
                              l4362 0FB6                                l4354 0F8A  
                              l4346 0F3C                                l4338 0EF8  
                              l4370 1524                                l4348 0F4E  
                              l4372 1536                                l4358 0F9E  
                              l4374 153E                                l3690 1B0A  
                              l4378 1572                                l3676 1AC6  
                              l3668 1AA4                                l3846 1C3C  
                              l3790 091A                                l3774 081E  
                              l3782 08B6                                l3766 07DC  
                              l3952 16E0                                l3792 096C  
                              l3776 0876                                l3784 08DC  
                              l3946 16B4                                l3778 0896  
                              l3972 11BC                                l3796 09A4  
                              l3894 14AA                                l3886 1494  
                              l3958 170C                                l3968 1152  
                              _LATA 000F89                                _LATB 000F8A  
                              i1l55 0080                                u3777 1E7E  
                   _FromMainHigh_MQ 0200                       __CFG_FCMEN$ON 000000  
            ?_block_on_To_msgqueues 0001                                _main 0706  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr0l 000FE9                                fsr2h 000FDA  
                              indf1 000FE7                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                       main@msgtype 01BE                          i1_send_msg 0FC0  
                              pclat 000FFA                         i2_check_msg 1DD6  
                              prodh 000FF4                                prodl 000FF3  
             handle_start@data_read 002D                                start 00C6  
                        i2_recv_msg 0B20                       __CFG_FOSC2$ON 000000  
                  ?_adc_int_handler 0001                          i2_send_msg 0D98  
        i2c_slave_int_handler@reply 00A0           ToMainHigh_recvmsg@msgtype 019E  
                    send_msg@length 0192                     __end_of_OpenADC 1614  
       __size_of_timer0_int_handler 0012             ??_i2c_slave_int_handler 0099  
                       _Delay1KTCYx 1E78               ??_FromMainLow_recvmsg 0032  
             ??_FromMainLow_sendmsg 019F                               ?_main 0001  
                   __end_of___awmod 0FC0                               _T0CON 000FD5  
                             _T1CON 000FCD                     __end_of___lwmod 1590  
                             i1l418 1944                          i1memcpy@d1 0001  
                             i2l323 0466                               i2l325 0180  
                             i2l351 03EA                               i2l343 02F8  
                             i2l329 01BE                               i1l579 1E68  
                             i2l357 0478                               i2l286 143A  
                        i1memcpy@s1 0003                               _RCREG 000FAE  
                             _RCSTA 000FAB                               _TMR0H 000FD7  
                             _TMR1H 000FCF                               _TMR0L 000FD6  
                             _TMR1L 000FCE                               _SPBRG 000FAF  
                             _PORTA 000F80                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                        i2memcpy@d1 0080                          i2memcpy@s1 0082  
                      ?_init_queues 0001           __size_of_enter_sleep_mode 0006  
                    i1___awmod@sign 0007                     __end_of_in_main 1B1A  
        ToMainLow_recvmsg@maxlength 01A2             timer0_lthread@msgbuffer 018C  
                        _ConvertADC 1F30             i2c_configure_slave@addr 0186  
                             tablat 000FF5                               status 000FD8  
            _uart_trans_int_handler 18E0                    __end_ofi1_memcpy 1C20  
                __size_ofi1___awmod 009C                    __end_ofi2_memcpy 1A42  
                __size_ofi2___awmod 00B4                     __initialization 178E  
                      __end_of_main 09C2         __size_of_timer1_int_handler 000E  
        __size_of_ToMainLow_recvmsg 0042          __size_of_ToMainLow_sendmsg 0026  
             __size_ofi2_in_low_int 002E       __size_of_FromMainHigh_sendmsg 0036  
                            ??_main 01AA                     send_msg@msgtype 0193  
                     __activetblptr 000002                     send_msg@tlength 0197  
        FromMainLow_sendmsg@msgtype 019C                          _SetChanADC 1E1C  
              __end_of_handle_start 1474                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADCON2 000FC0  
                            _ADRESH 000FC4             ??_uart_recv_int_handler 001B  
                            i1l1356 1E06                              i1l3510 136C  
                            i1l3520 13A2                              i1l3522 13A6  
                            i1l3530 13C4                              i1l3514 1388  
                            i1l3534 13D2                              i1l3526 13BA  
                            i1l3518 139A                              i1l3490 1C0E  
                            i1l3484 1BF2                              i1l4524 1320  
                            i1l4542 0070                              i1l4536 0066  
                            i2l4112 015E                              i1l4496 0FF8  
                        _OpenTimer0 1D5E                              i2l3410 1D3E  
                            i2l3074 1096                          _OpenTimer1 1C20  
                            i2l4212 047C                              i2l3094 1450  
                            i2l3078 10F0                              i2l4206 0440  
                            i2l4118 0176                      __CFG_WDTEN$OFF 000000  
                            i2l2632 1A48                              i2l3096 1462  
                            i2l4136 01F0                              i2l3418 1D54  
                            i2l4250 065E                              i2l4234 05C6  
                            i2l4226 053E                              i2l4218 04C4  
                            i2l4154 0252                              i2l4138 0210  
                            i2l4180 0382                              i2l4156 0280  
                            i2l4148 0240                              i2l3700 164E  
                            i2l4262 06E2                              i2l4440 1A0E  
                            i2l4264 06F4                              i2l4184 0394  
                            i2l4418 0B8C                              i2l4434 0C68  
                            i2l4178 0352                              i2l3706 1658  
                            i2l4460 1240                              i2l4446 1A2A  
                            i2l4480 129A                              i2l4472 127A  
                            i2l4464 1256                              i2l4456 1224  
                            i2l4466 1262                              i2l4394 0DF4  
                            i2l4468 1266                              i2l4476 1288  
       __end_of_i2c_configure_slave 1DB0                       ??_SleepIfOkay 0031  
                __size_of_ReadUSART 001E                              _OSCCON 000FD3  
                            _SPBRGH 000FB0                              _SSPADD 000FC8  
                            _SSPBUF 000FC9      __size_of_start_i2c_slave_reply 00BC  
                       ?i1_send_msg 000B       __end_of_start_i2c_slave_reply 113C  
                timer0_lthread@tptr 0186             FromMainLow_recvmsg@data 0096  
                       ?i2_recv_msg 0086                           ??_OpenADC 0188  
                      i2_in_low_int 1D30                         ?i2_send_msg 0086  
                    __CFG_XINST$OFF 000000                  __size_of_OpenUSART 0092  
                   _i2c_int_handler 1F24                           ??___awmod 018A  
 i2c_slave_int_handler@data_written 00B0                    OpenTimer0@config 0186  
                            _ic_ptr 0050                           ??___lwmod 018A  
                     main@msgbuffer 01AF                    __end_of_init_i2c 19F4  
                  OpenTimer1@config 0186                              _memcpy 1948  
                            clear_0 1794                              clear_1 17A0  
                            clear_2 17B8                     ___awmod@divisor 0188  
                            _uc_ptr 0052                     ___awmod@counter 018B  
                            main@ic 01CD                              main@uc 01BF  
                  __end_of_recv_msg 0B20         start_i2c_slave_reply@length 0031  
                         ??_in_main 018C                   __end_ofi1___awmod 13DC  
                  __end_of_send_msg 0D98                   __end_ofi2___awmod 12A4  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 0189  
                    i2___awmod@sign 0081            ToMainLow_recvmsg@msgtype 019E  
              __size_of_in_high_int 0012                         ?_ConvertADC 0001  
           FromMainLow_sendmsg@data 019D                     __CFG_FOSC$HSPLL 000000  
                        __accesstop 0080             __end_of__initialization 17F6  
        __end_of_ToMainHigh_recvmsg 1B9E          __end_of_ToMainHigh_sendmsg 1D30  
       __end_of_init_timer1_lthread 1EB2                 __end_of_SleepIfOkay 1A90  
                    __pcstackCOMRAM 0001                        __pidataBANK0 1F14  
                      __pidataBANK1 1F34              __size_ofi2_in_high_int 000C  
                __size_of_check_msg 0036                   __end_of_ReadUSART 1E78  
                       ?_SetChanADC 0001                 __size_ofi1_send_msg 00C0  
                         ?i1_memcpy 0001       __size_of_InterruptHandlerHigh 168E  
       __end_of_InterruptHandlerLow 00C6                           ?i2_memcpy 0080  
                     _ToMainHigh_MQ 0100                 __size_ofi2_recv_msg 014C  
                  _enter_sleep_mode 1F2A                 __size_ofi2_send_msg 011A  
              timer1_lthread@length 01A4                       ReadUSART@data 0001  
                 __end_of_OpenUSART 1506                       check_msg@qptr 0186  
              timer1_lthread@retval 01A9             ??_block_on_To_msgqueues 018C  
              __size_of_init_queues 006E                          __pbssBANK0 00CF  
                        __pbssBANK1 0100                          __pbssBANK2 0200  
                       ?_OpenTimer0 0001                         ?_OpenTimer1 0001  
                        __pnvCOMRAM 0050             __end_of_i2c_int_handler 1F2A  
                      ?i2_check_msg 002D                  timer1_lthread@tptr 01A0  
                 recv_msg@maxlength 0192                     recv_msg@msgtype 0193  
                   recv_msg@tlength 019A               __size_of_handle_start 0098  
                      ?_Delay1KTCYx 0001                    WriteTimer0@timer 002F  
                           ?_memcpy 0186                    WriteTimer1@timer 0003  
                     ??_WriteTimer0 002F                       ??_WriteTimer1 0003  
               __size_of_ConvertADC 0004      __size_of_i2c_slave_int_handler 063C  
           __size_of_timer0_lthread 0012       __end_of_i2c_slave_int_handler 0706  
           __size_of_timer1_lthread 0072                          ??i1_memcpy 0007  
                        ??i2_memcpy 002D                    i1send_msg@length 000D  
                     i2_in_high_int 1F08                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _SSPSTAT 000FC7  
           ?_uart_trans_int_handler 0001                   __end_of_check_msg 1CC4  
                         ?_init_i2c 0186                         _SleepIfOkay 1A42  
                         ?_recv_msg 0190                             _OpenADC 1590  
                        _in_low_int 1A90                        _handle_start 13DC  
                           __Hparam 0000                 __size_of_SetChanADC 0020  
                         ?_send_msg 0190                             __Lparam 0000  
        __end_of_timer0_int_handler 1EE8         __end_of_FromMainLow_recvmsg 1BE0  
       __end_of_FromMainLow_sendmsg 1CFA                    init_uart_recv@uc 0186  
                           ___awmod 0EB2                             ___lwmod 1506  
                   __CFG_STVREN$OFF 000000  i2c_slave_int_handler@overrun_error 00B1  
                           __pcinit 178E                     __size_of_memcpy 005E  
          __size_of_adc_int_handler 0022                          _init_queue 1714  
                           __ramtop 0400                 __size_of_OpenTimer0 002A  
               __size_of_OpenTimer1 0038                             __ptext0 0706  
                           __ptext1 113C                             __ptext2 1800  
                           __ptext3 1506                             __ptext4 1C58  
                           __ptext5 1E8E                             __ptext6 1E3C  
                           __ptext7 1EA0                             __ptext8 1872  
                           __ptext9 1714                           _T0CONbits 000FD5  
                           _in_main 1AD6                           _T1CONbits 000FCD  
                  ___awmod@dividend 0186                 __end_of_WriteTimer0 1EFA  
               __end_of_WriteTimer1 1ED6                      ?i2_in_high_int 002D  
    __end_of_uart_trans_int_handler 1948                      OpenADC@config2 0186  
                           main@msg 01AC                      __pintcode_body 1614  
              end_of_initialization 17F6             timer1_lthread@msgbuffer 01A6  
      __end_of_FromMainHigh_sendmsg 1C8E      __size_of_uart_recv_int_handler 009C  
        FromMainHigh_sendmsg@length 019F                             memcpy@d 018C  
                           memcpy@n 018A                             memcpy@s 018E  
     __end_of_uart_recv_int_handler 1340                          ??_init_i2c 0188  
   i2c_slave_int_handler@sensorData 00A8                       __Lmediumconst 0000  
                           int_func 1614                        ??i1_send_msg 0011  
           __size_of_init_uart_recv 001E                    ?_i2c_int_handler 0001  
                      ??i2_recv_msg 008D                          ??_recv_msg 0197  
                      ??i2_send_msg 008C                          ??_send_msg 0196  
        __end_of_timer1_int_handler 1F08                           _RCSTAbits 000FAB  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 0092  
                        _uart_trans 113C                  __end_ofi1_send_msg 1080  
       FromMainHigh_sendmsg@msgtype 019C                           _TRISCbits 000F94  
                __end_ofi2_recv_msg 0C6C                           i1___awmod 1340  
                __end_ofi2_send_msg 0EB2                           i2___awmod 11F0  
                      ??_ConvertADC 002D                           _TXSTAbits 000FAC  
                        main@length 01CC                         ?_in_low_int 0188  
             timer0_lthread@msgtype 0188               _start_i2c_slave_reply 1080  
      __size_of_i2c_configure_slave 0028                __size_ofi2_check_msg 0024  
          __end_of_enter_sleep_mode 1F30                  _ToMainHigh_recvmsg 1B5C  
                         i1memcpy@d 0007                  _ToMainHigh_sendmsg 1CFA  
                         i1memcpy@n 0005                           i1memcpy@s 0009  
                    _timer0_lthread 1E8E                         ?_init_queue 0186  
                         i2memcpy@d 002D                         _WriteTimer0 1EE8  
                       _WriteTimer1 1EC4                           i2memcpy@n 0084  
                         i2memcpy@s 002F                  __end_of_ConvertADC 1F34  
                    _timer1_lthread 1800                      __end_of_memcpy 19A6  
                 _enable_interrupts 1F1C                __size_of_Delay1KTCYx 0016  
                      ??_SetChanADC 0186                 ?_ToMainHigh_recvmsg 019E  
                   ??i2_in_high_int 002F                 ?_ToMainHigh_sendmsg 0092  
                ?_enable_interrupts 0001                 start_initialization 178E  
                     ??_in_high_int 0188                           _ReadUSART 1E5A  
                 ??_adc_int_handler 0001                          ?i1___awmod 0001  
                 __size_ofi1_memcpy 0040                   __size_ofi2_memcpy 004E  
                        ?i2___awmod 002D           FromMainLow_sendmsg@length 019F  
               ??_enable_interrupts 0186                        ??_OpenTimer0 0186  
                      ??_OpenTimer1 0186      __size_of_block_on_To_msgqueues 007E  
     __end_of_block_on_To_msgqueues 1714                           _OpenUSART 1474  
      __end_of_InterruptHandlerHigh 1696                          init_i2c@ic 0186  
              ??_ToMainHigh_recvmsg 01A2                ??_ToMainHigh_sendmsg 0032  
                __end_of_SetChanADC 1E3C              __end_of_timer0_lthread 1EA0  
                       __pdataBANK0 00C7                         __pdataBANK1 01EA  
            __end_of_timer1_lthread 1872                  i1___awmod@dividend 0001  
         __end_of_enable_interrupts 1F24                            ??_memcpy 018C  
             timer1_lthread@msgtype 01A2                         ?_uart_trans 0186  
              _FromMainHigh_sendmsg 1C58        __size_of_init_timer1_lthread 0012  
                __end_of_OpenTimer0 1D88                  __end_of_OpenTimer1 1C58  
                       __pbssCOMRAM 0032                          ?_ReadUSART 0001  
                     ??_init_queues 018A                       __pcstackBANK0 0080  
                     __pcstackBANK1 0186                 __size_of_in_low_int 0046  
          start_i2c_slave_reply@msg 002D                           _adcbuffer 0032  
               __CFG_CCP2MX$DEFAULT 000000                     Delay1KTCYx@unit 0186  
          ToMainLow_sendmsg@msgtype 0017        __size_of_InterruptHandlerLow 00AE  
    i2c_slave_int_handler@data_read 00B8                 __end_of_in_high_int 1EC4  
                        ?_OpenUSART 0186                        ?_SleepIfOkay 0001  
             ToMainLow_recvmsg@data 01A0                        _ToMainLow_MQ 0143  
               __size_of_init_queue 007A                      _init_uart_recv 1E3C  
                         _check_msg 1C8E              ?_start_i2c_slave_reply 002D  
                 __size_of_init_i2c 004E                   OpenADC@portconfig 0187  
                          ?_OpenADC 0186      i2c_slave_int_handler@gatherAck 00A5  
                      recv_msg@data 0195                        recv_msg@qmsg 019C  
                      recv_msg@slot 0199                        recv_msg@qptr 0190  
                 __size_of_recv_msg 015E                           __pintcode 0008  
                 __size_of_send_msg 012C                            ?___awmod 0186  
                   ?_timer0_lthread 0186                            ?___lwmod 0186  
                   ?_timer1_lthread 01A0               ?_FromMainHigh_sendmsg 019C  
                       __pintcodelo 0018              ToMainHigh_recvmsg@data 01A0  
                          ?_in_main 018A                   WriteTimer0@timer0 002D  
                _timer0_int_handler 1ED6                   WriteTimer1@timer1 0001  
             _i2c_slave_int_handler 00CA      i2c_slave_int_handler@error_buf 00AD  
                       ??i1___awmod 0005               ToMainLow_sendmsg@data 0018  
                       ??i2___awmod 0031                 ?_timer0_int_handler 0001  
    i2c_slave_int_handler@msg_ready 00B6              __end_of_init_uart_recv 1E5A  
       i2c_slave_int_handler@noData 009B                 __end_of_init_queues 18E0  
       i2c_slave_int_handler@length 00B7                 __size_of_uart_trans 00B4  
                     OpenADC@config 018A                            _LATBbits 000F8A  
                   i2check_msg@qptr 002D                          ?_check_msg 0186  
                          _IPR1bits 000F9F                            _PIE1bits 000F9D  
                     ?i2_in_low_int 002F                            i2u337_41 062A  
                          _PIR1bits 000F9E                            i2u339_41 0676  
            ToMainHigh_sendmsg@data 0093                            _RCONbits 000FD0  
                  __CFG_WDTPS$32768 000000                           main@F5211 01EA  
              ??_timer0_int_handler 0031        FromMainLow_recvmsg@maxlength 0098  
        __size_of_enable_interrupts 0008                   i1send_msg@msgtype 000E  
                 i1send_msg@tlength 0012          FromMainLow_recvmsg@msgtype 0094  
                        _ADCON0bits 000FC2        __size_of_FromMainLow_recvmsg 0042  
      __size_of_FromMainLow_sendmsg 0036                timer0_lthread@length 018A  
                _timer1_int_handler 1EFA                            i1_memcpy 1BE0  
              _InterruptHandlerHigh 0008                         ??_ReadUSART 0001  
                          i2_memcpy 19F4                timer0_lthread@msgval 018E  
                       _in_high_int 1EB2                        send_msg@data 0194  
               _i2c_configure_slave 1D88                        send_msg@qmsg 019A  
                      send_msg@slot 0199                        send_msg@qptr 0190  
                         copy_data0 17EA                 ?_timer1_int_handler 0001  
                i2___awmod@dividend 002D                     ?_init_uart_recv 0186  
                       ??_OpenUSART 0188                     OpenUSART@config 018B  
                    ??i2_in_low_int 0031               _uart_recv_int_handler 12A4  
                      ??_in_low_int 018A                            __Hrparam 0000  
                  __size_of_OpenADC 0084                ?_i2c_configure_slave 0001  
                          __Lrparam 0000                   ?_enter_sleep_mode 0001  
            ??_FromMainHigh_sendmsg 019F                   i1___awmod@divisor 0003  
              ??_timer1_int_handler 0005                   i1___awmod@counter 0006  
                   _adc_int_handler 1DFA            __size_of_i2c_int_handler 0006  
                  __size_of___awmod 010E                  ??_enter_sleep_mode 002D  
                  __size_of___lwmod 008A                        ??_init_queue 0188  
                      ?_WriteTimer0 002D                        ?_WriteTimer1 0001  
          FromMainHigh_sendmsg@data 019D             ToMainLow_sendmsg@length 001A  
            ?_i2c_slave_int_handler 0001                   main@t0thread_data 01BA  
             ?_InterruptHandlerHigh 0001                    __size_of_in_main 0044  
                 i2send_msg@msgtype 0089         ToMainHigh_recvmsg@maxlength 01A2  
                 i2send_msg@tlength 008D             init_timer1_lthread@tptr 0186  
                       _init_queues 1872                  __end_of_in_low_int 1AD6  
                          __ptext10 19A6                            __ptext11 1D88  
                          __ptext20 1B5C                            __ptext12 1F1C  
                          __ptext21 09C2                            __ptext13 1696  
                          __ptext30 0EB2                            __ptext22 1E1C  
                          __ptext14 1AD6                            __ptext23 1474  
                          __ptext15 1A90                            __ptext40 1EC4  
                          __ptext32 18E0                            __ptext24 1C20  
                          __ptext16 1EB2                            __ptext41 1DFA  
                          __ptext33 12A4                            __ptext25 1D5E  
                          __ptext17 1C8E                            __ptext50 1CFA  
                          __ptext34 1DB0                            __ptext26 1590  
                          __ptext18 1E78                            __ptext51 0D98  
                          __ptext43 1ED6                            __ptext35 0FC0  
                          __ptext27 1CC4                            __ptext19 1B1A  
                          __ptext60 1F2A                            __ptext52 1B9E  
                          __ptext44 1EE8                            __ptext36 1BE0  
                          __ptext28 0C6C                            __ptext53 0B20  
                          __ptext45 1F30                            __ptext37 1340  
                          __ptext29 1948                            __ptext54 19F4  
                          __ptext46 1F24                            __ptext38 1E5A  
                          __ptext55 11F0                            __ptext47 00CA  
                          __ptext39 1EFA                            __ptext56 1A42  
                          __ptext48 1080                            __ptext57 1D30  
                          __ptext49 13DC                            __ptext58 1F08  
                          __ptext59 1DD6                      i1send_msg@data 000F  
                    i1send_msg@qmsg 0015                      i1send_msg@slot 0014  
                    i1send_msg@qptr 000B                            _init_i2c 19A6  
               _init_timer1_lthread 1EA0                       __size_of_main 02BC  
                     ??i2_check_msg 002F                   main@t1thread_data 01BC  
                       ??_check_msg 0188                  __end_of_init_queue 178E  
              __size_of_SleepIfOkay 004E                            _recv_msg 09C2  
  i2c_slave_int_handler@msg_to_send 00B3               ??_i2c_configure_slave 0186  
                          _send_msg 0C6C                      init_queue@qptr 0186  
                    i2recv_msg@data 008B                      i2recv_msg@qmsg 0092  
                     ??_Delay1KTCYx 0186                      i2recv_msg@slot 008F  
                    i2recv_msg@qptr 0086                    uart_trans@length 018A  
                      ??_uart_trans 0188                 _InterruptHandlerLow 0018  
              ?_init_timer1_lthread 0186            ??_uart_trans_int_handler 0001  
                 i2___awmod@divisor 002F                   i2___awmod@counter 0080  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
                    OpenUSART@spbrg 0186                            memcpy@d1 0186  
                          memcpy@s1 0188               __end_ofi2_in_high_int 1F14  
                  i2send_msg@length 0088                            intlevel1 0000  
                          intlevel2 0000                ?_InterruptHandlerLow 0001  
           ??_start_i2c_slave_reply 002F                    ___lwmod@dividend 0186  
            ?_uart_recv_int_handler 0001                  __end_of_uart_trans 11F0  
                 SetChanADC@channel 0187               _block_on_To_msgqueues 1696  
                     ?_handle_start 0001                    ??_timer0_lthread 018E  
       __size_of_ToMainHigh_recvmsg 0042             __end_of_adc_int_handler 1E1C  
       __size_of_ToMainHigh_sendmsg 0036                          _OSCCONbits 000FD3  
                  ??_timer1_lthread 01A8            ToMainHigh_sendmsg@length 0095  
               __end_ofi2_check_msg 1DFA               ??_init_timer1_lthread 0188  
            ??_InterruptHandlerHigh 00B9                   _ToMainLow_recvmsg 1B1A  
                 _ToMainLow_sendmsg 1DB0                  main@last_reg_recvd 01AE  
                   ___lwmod@divisor 0188                __end_ofi2_in_low_int 1D5E  
                ?_ToMainLow_recvmsg 019E                 __end_of_Delay1KTCYx 1E8E  
                 ??_i2c_int_handler 0032                     ___lwmod@counter 018B  
                ?_ToMainLow_sendmsg 0017                      uart_trans@data 0186  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
                    i2send_msg@data 008A               ??_InterruptHandlerLow 001C  
               ??_ToMainLow_recvmsg 01A2                      i2send_msg@qmsg 0090  
                    i2send_msg@slot 008F                      i2send_msg@qptr 0086  
               ??_ToMainLow_sendmsg 001A       i2c_slave_int_handler@i2c_data 00B2  
               _FromMainLow_recvmsg 1B9E                      ??_handle_start 002D  
               _FromMainLow_sendmsg 1CC4                        _USART_Status 004F  
