

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Mar 04 18:04:58 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           	psect	idataBANK0
    83  0020E2                     __pidataBANK0:
    84                           	opt stack 0
    85                           
    86                           ;initializer for i2c_slave_int_handler@F5130
    87  0020E2  AA                 	db	170
    88  0020E3  00                 	db	0
    89  0020E4  00                 	db	0
    90  0020E5  00                 	db	0
    91  0020E6  00                 	db	0
    92                           
    93                           ;initializer for i2c_slave_int_handler@F5128
    94  0020E7  00                 	db	0
    95  0020E8  01                 	db	1
    96  0020E9  01                 	db	1
    97                           
    98                           ;initializer for i2c_slave_int_handler@F5137
    99  0020EA  02                 	db	2
   100  0020EB  01                 	db	1
   101  0020EC  01                 	db	1
   102                           
   103                           	psect	idataBANK1
   104  002102                     __pidataBANK1:
   105                           	opt stack 0
   106                           
   107                           ;initializer for main@F5212
   108  002102  01                 	db	1
   109  002103  02                 	db	2
   110  0000                     _ADCON0	set	4034
   111  0000                     _ADCON0bits	set	4034
   112  0000                     _ADCON1	set	4033
   113  0000                     _ADCON2	set	4032
   114  0000                     _ADRESH	set	4036
   115  0000                     _INTCONbits	set	4082
   116  0000                     _IPR1bits	set	3999
   117  0000                     _LATA	set	3977
   118  0000                     _LATB	set	3978
   119  0000                     _LATBbits	set	3978
   120  0000                     _OSCCON	set	4051
   121  0000                     _OSCCONbits	set	4051
   122  0000                     _OSCTUNEbits	set	3995
   123  0000                     _PIE1bits	set	3997
   124  0000                     _PIR1bits	set	3998
   125  0000                     _PORTA	set	3968
   126  0000                     _RCONbits	set	4048
   127  0000                     _RCREG	set	4014
   128  0000                     _RCSTA	set	4011
   129  0000                     _RCSTAbits	set	4011
   130  0000                     _SPBRG	set	4015
   131  0000                     _SPBRGH	set	4016
   132  0000                     _SSPADD	set	4040
   133  0000                     _SSPBUF	set	4041
   134  0000                     _SSPCON1	set	4038
   135  0000                     _SSPCON1bits	set	4038
   136  0000                     _SSPCON2	set	4037
   137  0000                     _SSPCON2bits	set	4037
   138  0000                     _SSPSTAT	set	4039
   139  0000                     _SSPSTATbits	set	4039
   140  0000                     _T0CON	set	4053
   141  0000                     _T0CONbits	set	4053
   142  0000                     _T1CON	set	4045
   143  0000                     _T1CONbits	set	4045
   144  0000                     _TMR0H	set	4055
   145  0000                     _TMR0L	set	4054
   146  0000                     _TMR1H	set	4047
   147  0000                     _TMR1L	set	4046
   148  0000                     _TRISA	set	3986
   149  0000                     _TRISB	set	3987
   150  0000                     _TRISC	set	3988
   151  0000                     _TRISCbits	set	3988
   152  0000                     _TXREG	set	4013
   153  0000                     _TXSTA	set	4012
   154  0000                     _TXSTAbits	set	4012
   155                           
   156                           	psect	nvCOMRAM
   157  000050                     __pnvCOMRAM:
   158                           	opt stack 0
   159  000050                     _ic_ptr:
   160                           	opt stack 0
   161  000050                     	ds	2
   162  000052                     _uc_ptr:
   163                           	opt stack 0
   164  000052                     	ds	2
   165                           
   166                           ; #config settings
   167  0000                     
   168                           	psect	cinit
   169  001934                     __pcinit:
   170                           	opt stack 0
   171  001934                     start_initialization:
   172                           	opt stack 0
   173  001934                     __initialization:
   174                           	opt stack 0
   175                           
   176                           ; Clear objects allocated to BANK2 (134 bytes)
   177  001934  EE02  F000         	lfsr	0,__pbssBANK2
   178  001938  0E86               	movlw	134
   179  00193A                     clear_0:
   180  00193A  6AEE               	clrf	postinc0,c
   181  00193C  06E8               	decf	wreg,f,c
   182  00193E  E1FD               	bnz	clear_0
   183                           
   184                           ; Clear objects allocated to BANK1 (134 bytes)
   185  001940  EE01  F000         	lfsr	0,__pbssBANK1
   186  001944  0E86               	movlw	134
   187  001946                     clear_1:
   188  001946  6AEE               	clrf	postinc0,c
   189  001948  06E8               	decf	wreg,f,c
   190  00194A  E1FD               	bnz	clear_1
   191                           
   192                           ; Clear objects allocated to BANK0 (10 bytes)
   193  00194C  EE00  F0E6         	lfsr	0,__pbssBANK0
   194  001950  0E0A               	movlw	10
   195  001952                     clear_2:
   196  001952  6AEE               	clrf	postinc0,c
   197  001954  06E8               	decf	wreg,f,c
   198  001956  E1FD               	bnz	clear_2
   199                           
   200                           ; Clear objects allocated to COMRAM (32 bytes)
   201  001958  EE00  F030         	lfsr	0,__pbssCOMRAM
   202  00195C  0E20               	movlw	32
   203  00195E                     clear_3:
   204  00195E  6AEE               	clrf	postinc0,c
   205  001960  06E8               	decf	wreg,f,c
   206  001962  E1FD               	bnz	clear_3
   207                           
   208                           ; Initialize objects allocated to BANK1 (2 bytes)
   209                           ; load TBLPTR registers with __pidataBANK1
   210  001964  0E02               	movlw	low __pidataBANK1
   211  001966  6EF6               	movwf	tblptrl,c
   212  001968  0E21               	movlw	high __pidataBANK1
   213  00196A  6EF7               	movwf	tblptrh,c
   214  00196C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   215  00196E  6EF8               	movwf	tblptru,c
   216  001970  0009               	tblrd		*+	;fetch initializer
   217  001972  CFF5 F1EA          	movff	tablat,__pdataBANK1
   218  001976  0009               	tblrd		*+	;fetch initializer
   219  001978  CFF5 F1EB          	movff	tablat,__pdataBANK1+1
   220                           
   221                           ; Initialize objects allocated to BANK0 (11 bytes)
   222                           ; load TBLPTR registers with __pidataBANK0
   223  00197C  0EE2               	movlw	low __pidataBANK0
   224  00197E  6EF6               	movwf	tblptrl,c
   225  001980  0E20               	movlw	high __pidataBANK0
   226  001982  6EF7               	movwf	tblptrh,c
   227  001984  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   228  001986  6EF8               	movwf	tblptru,c
   229  001988  EE00  F0DB         	lfsr	0,__pdataBANK0
   230  00198C  EE10 F00B          	lfsr	1,11
   231  001990                     copy_data0:
   232  001990  0009               	tblrd		*+
   233  001992  CFF5 FFEE          	movff	tablat,postinc0
   234  001996  50E5               	movf	postdec1,w,c
   235  001998  50E1               	movf	fsr1l,w,c
   236  00199A  E1FA               	bnz	copy_data0
   237  00199C                     end_of_initialization:
   238                           	opt stack 0
   239  00199C                     __end_of__initialization:
   240                           	opt stack 0
   241  00199C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   242  00199E  6EF8               	movwf	tblptru,c
   243  0019A0  0100               	movlb	0
   244  0019A2  EF15  F004         	goto	_main	;jump to C main() function
   245                           tblptru	equ	0xFF8
   246                           tblptrh	equ	0xFF7
   247                           tblptrl	equ	0xFF6
   248                           tablat	equ	0xFF5
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           postdec1	equ	0xFE5
   252                           fsr1l	equ	0xFE1
   253                           
   254                           	psect	bssCOMRAM
   255  000030                     __pbssCOMRAM:
   256                           	opt stack 0
   257  000030                     _adcbuffer:
   258                           	opt stack 0
   259  000030                     	ds	28
   260  00004C                     _uartTimeOut:
   261                           	opt stack 0
   262  00004C                     	ds	2
   263  00004E                     _MQ_Main_Willing_to_block:
   264                           	opt stack 0
   265  00004E                     	ds	1
   266  00004F                     _USART_Status:
   267                           	opt stack 0
   268  00004F                     	ds	1
   269                           tblptru	equ	0xFF8
   270                           tblptrh	equ	0xFF7
   271                           tblptrl	equ	0xFF6
   272                           tablat	equ	0xFF5
   273                           postinc0	equ	0xFEE
   274                           wreg	equ	0xFE8
   275                           postdec1	equ	0xFE5
   276                           fsr1l	equ	0xFE1
   277                           
   278                           	psect	bssBANK0
   279  0000E6                     __pbssBANK0:
   280                           	opt stack 0
   281  0000E6                     i2c_slave_int_handler@F5134:
   282                           	opt stack 0
   283  0000E6                     	ds	5
   284  0000EB                     i2c_slave_int_handler@F5141:
   285                           	opt stack 0
   286  0000EB                     	ds	5
   287                           tblptru	equ	0xFF8
   288                           tblptrh	equ	0xFF7
   289                           tblptrl	equ	0xFF6
   290                           tablat	equ	0xFF5
   291                           postinc0	equ	0xFEE
   292                           wreg	equ	0xFE8
   293                           postdec1	equ	0xFE5
   294                           fsr1l	equ	0xFE1
   295                           
   296                           	psect	dataBANK0
   297  0000DB                     __pdataBANK0:
   298                           	opt stack 0
   299  0000DB                     i2c_slave_int_handler@F5130:
   300                           	opt stack 0
   301  0000DB                     	ds	5
   302  0000E0                     i2c_slave_int_handler@F5128:
   303                           	opt stack 0
   304  0000E0                     	ds	3
   305  0000E3                     i2c_slave_int_handler@F5137:
   306                           	opt stack 0
   307  0000E3                     	ds	3
   308                           tblptru	equ	0xFF8
   309                           tblptrh	equ	0xFF7
   310                           tblptrl	equ	0xFF6
   311                           tablat	equ	0xFF5
   312                           postinc0	equ	0xFEE
   313                           wreg	equ	0xFE8
   314                           postdec1	equ	0xFE5
   315                           fsr1l	equ	0xFE1
   316                           
   317                           	psect	bssBANK1
   318  000100                     __pbssBANK1:
   319                           	opt stack 0
   320  000100                     _ToMainHigh_MQ:
   321                           	opt stack 0
   322  000100                     	ds	67
   323  000143                     _ToMainLow_MQ:
   324                           	opt stack 0
   325  000143                     	ds	67
   326                           tblptru	equ	0xFF8
   327                           tblptrh	equ	0xFF7
   328                           tblptrl	equ	0xFF6
   329                           tablat	equ	0xFF5
   330                           postinc0	equ	0xFEE
   331                           wreg	equ	0xFE8
   332                           postdec1	equ	0xFE5
   333                           fsr1l	equ	0xFE1
   334                           
   335                           	psect	dataBANK1
   336  0001EA                     __pdataBANK1:
   337                           	opt stack 0
   338  0001EA                     main@F5212:
   339                           	opt stack 0
   340  0001EA                     	ds	2
   341                           tblptru	equ	0xFF8
   342                           tblptrh	equ	0xFF7
   343                           tblptrl	equ	0xFF6
   344                           tablat	equ	0xFF5
   345                           postinc0	equ	0xFEE
   346                           wreg	equ	0xFE8
   347                           postdec1	equ	0xFE5
   348                           fsr1l	equ	0xFE1
   349                           
   350                           	psect	bssBANK2
   351  000200                     __pbssBANK2:
   352                           	opt stack 0
   353  000200                     _FromMainHigh_MQ:
   354                           	opt stack 0
   355  000200                     	ds	67
   356  000243                     _FromMainLow_MQ:
   357                           	opt stack 0
   358  000243                     	ds	67
   359                           tblptru	equ	0xFF8
   360                           tblptrh	equ	0xFF7
   361                           tblptrl	equ	0xFF6
   362                           tablat	equ	0xFF5
   363                           postinc0	equ	0xFEE
   364                           wreg	equ	0xFE8
   365                           postdec1	equ	0xFE5
   366                           fsr1l	equ	0xFE1
   367                           
   368                           	psect	cstackBANK1
   369  000186                     __pcstackBANK1:
   370                           	opt stack 0
   371  000186                     ??_SetChanADC:
   372  000186                     ?_in_high_int:
   373                           	opt stack 0
   374  000186                     ?___awmod:
   375                           	opt stack 0
   376  000186                     ?___lwmod:
   377                           	opt stack 0
   378  000186                     i2c_configure_slave@addr:
   379                           	opt stack 0
   380  000186                     OpenADC@config2:
   381                           	opt stack 0
   382  000186                     OpenTimer0@config:
   383                           	opt stack 0
   384  000186                     OpenTimer1@config:
   385                           	opt stack 0
   386  000186                     Delay1KTCYx@unit:
   387                           	opt stack 0
   388  000186                     init_queue@qptr:
   389                           	opt stack 0
   390  000186                     check_msg@qptr:
   391                           	opt stack 0
   392  000186                     init_i2c@ic:
   393                           	opt stack 0
   394  000186                     init_uart_recv@uc:
   395                           	opt stack 0
   396  000186                     uart_trans@data:
   397                           	opt stack 0
   398  000186                     timer0_lthread@tptr:
   399                           	opt stack 0
   400  000186                     init_timer1_lthread@tptr:
   401                           	opt stack 0
   402  000186                     OpenUSART@spbrg:
   403                           	opt stack 0
   404  000186                     ___awmod@dividend:
   405                           	opt stack 0
   406  000186                     ___lwmod@dividend:
   407                           	opt stack 0
   408  000186                     memcpy@d1:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x0
   412  000186                     	ds	1
   413  000187                     OpenADC@portconfig:
   414                           	opt stack 0
   415  000187                     SetChanADC@channel:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0x1
   419  000187                     	ds	1
   420  000188                     ??_OpenUSART:
   421  000188                     ??_OpenADC:
   422  000188                     ??_uart_trans:
   423  000188                     ??_init_queue:
   424  000188                     ??_check_msg:
   425  000188                     ?_in_low_int:
   426                           	opt stack 0
   427  000188                     timer0_lthread@msgtype:
   428                           	opt stack 0
   429  000188                     ___awmod@divisor:
   430                           	opt stack 0
   431  000188                     ___lwmod@divisor:
   432                           	opt stack 0
   433  000188                     memcpy@s1:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x2
   437  000188                     	ds	1
   438  000189                     init_queue@i:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x3
   442  000189                     	ds	1
   443  00018A                     ??_init_queues:
   444  00018A                     ??___awmod:
   445  00018A                     ??___lwmod:
   446  00018A                     ?_in_main:
   447                           	opt stack 0
   448  00018A                     uart_trans@length:
   449                           	opt stack 0
   450  00018A                     OpenADC@config:
   451                           	opt stack 0
   452  00018A                     timer0_lthread@length:
   453                           	opt stack 0
   454  00018A                     memcpy@n:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x4
   458  00018A                     	ds	1
   459  00018B                     OpenUSART@config:
   460                           	opt stack 0
   461  00018B                     ___awmod@counter:
   462                           	opt stack 0
   463  00018B                     ___lwmod@counter:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x5
   467  00018B                     	ds	1
   468  00018C                     ??_block_on_To_msgqueues:
   469  00018C                     ___awmod@sign:
   470                           	opt stack 0
   471  00018C                     timer0_lthread@msgbuffer:
   472                           	opt stack 0
   473  00018C                     memcpy@d:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x6
   477  00018C                     	ds	2
   478  00018E                     timer0_lthread@msgval:
   479                           	opt stack 0
   480  00018E                     memcpy@s:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x8
   484  00018E                     	ds	2
   485  000190                     send_msg@qptr:
   486                           	opt stack 0
   487  000190                     recv_msg@qptr:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0xA
   491  000190                     	ds	2
   492  000192                     send_msg@length:
   493                           	opt stack 0
   494  000192                     recv_msg@maxlength:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0xC
   498  000192                     	ds	1
   499  000193                     send_msg@msgtype:
   500                           	opt stack 0
   501  000193                     recv_msg@msgtype:
   502                           	opt stack 0
   503                           
   504                           ; 2 bytes @ 0xD
   505  000193                     	ds	1
   506  000194                     send_msg@data:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0xE
   510  000194                     	ds	1
   511  000195                     recv_msg@data:
   512                           	opt stack 0
   513                           
   514                           ; 2 bytes @ 0xF
   515  000195                     	ds	1
   516  000196                     ??_send_msg:
   517                           
   518                           ; 0 bytes @ 0x10
   519  000196                     	ds	1
   520  000197                     ??_recv_msg:
   521  000197                     send_msg@tlength:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x11
   525  000197                     	ds	2
   526  000199                     send_msg@slot:
   527                           	opt stack 0
   528  000199                     recv_msg@slot:
   529                           	opt stack 0
   530                           
   531                           ; 1 bytes @ 0x13
   532  000199                     	ds	1
   533  00019A                     send_msg@qmsg:
   534                           	opt stack 0
   535  00019A                     recv_msg@tlength:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x14
   539  00019A                     	ds	2
   540  00019C                     FromMainLow_sendmsg@msgtype:
   541                           	opt stack 0
   542  00019C                     FromMainHigh_sendmsg@msgtype:
   543                           	opt stack 0
   544  00019C                     recv_msg@qmsg:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x16
   548  00019C                     	ds	1
   549  00019D                     FromMainLow_sendmsg@data:
   550                           	opt stack 0
   551  00019D                     FromMainHigh_sendmsg@data:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x17
   555  00019D                     	ds	1
   556  00019E                     ToMainLow_recvmsg@msgtype:
   557                           	opt stack 0
   558  00019E                     ToMainHigh_recvmsg@msgtype:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x18
   562  00019E                     	ds	1
   563  00019F                     FromMainLow_sendmsg@length:
   564                           	opt stack 0
   565  00019F                     FromMainHigh_sendmsg@length:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x19
   569  00019F                     	ds	1
   570  0001A0                     ToMainLow_recvmsg@data:
   571                           	opt stack 0
   572  0001A0                     ToMainHigh_recvmsg@data:
   573                           	opt stack 0
   574  0001A0                     timer1_lthread@tptr:
   575                           	opt stack 0
   576                           
   577                           ; 2 bytes @ 0x1A
   578  0001A0                     	ds	2
   579  0001A2                     ToMainLow_recvmsg@maxlength:
   580                           	opt stack 0
   581  0001A2                     ToMainHigh_recvmsg@maxlength:
   582                           	opt stack 0
   583  0001A2                     timer1_lthread@msgtype:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x1C
   587  0001A2                     	ds	2
   588  0001A4                     timer1_lthread@length:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x1E
   592  0001A4                     	ds	2
   593  0001A6                     timer1_lthread@msgbuffer:
   594                           	opt stack 0
   595                           
   596                           ; 2 bytes @ 0x20
   597  0001A6                     	ds	2
   598  0001A8                     ??_timer1_lthread:
   599                           
   600                           ; 0 bytes @ 0x22
   601  0001A8                     	ds	1
   602  0001A9                     timer1_lthread@retval:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x23
   606  0001A9                     	ds	1
   607  0001AA                     ??_main:
   608                           
   609                           ; 0 bytes @ 0x24
   610  0001AA                     	ds	2
   611  0001AC                     main@msg:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x26
   615  0001AC                     	ds	2
   616  0001AE                     main@last_reg_recvd:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x28
   620  0001AE                     	ds	1
   621  0001AF                     main@msgbuffer:
   622                           	opt stack 0
   623                           
   624                           ; 11 bytes @ 0x29
   625  0001AF                     	ds	11
   626  0001BA                     main@t0thread_data:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x34
   630  0001BA                     	ds	2
   631  0001BC                     main@t1thread_data:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x36
   635  0001BC                     	ds	2
   636  0001BE                     main@msgtype:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x38
   640  0001BE                     	ds	1
   641  0001BF                     main@length:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x39
   645  0001BF                     	ds	1
   646  0001C0                     main@uc:
   647                           	opt stack 0
   648                           
   649                           ; 13 bytes @ 0x3A
   650  0001C0                     	ds	13
   651  0001CD                     main@ic:
   652                           	opt stack 0
   653                           
   654                           ; 29 bytes @ 0x47
   655  0001CD                     	ds	29
   656                           tblptru	equ	0xFF8
   657                           tblptrh	equ	0xFF7
   658                           tblptrl	equ	0xFF6
   659                           tablat	equ	0xFF5
   660                           postinc0	equ	0xFEE
   661                           wreg	equ	0xFE8
   662                           postdec1	equ	0xFE5
   663                           fsr1l	equ	0xFE1
   664                           
   665                           	psect	cstackBANK0
   666  000080                     __pcstackBANK0:
   667                           	opt stack 0
   668  000080                     ??_start_i2c_slave_reply:
   669  000080                     ?i2_in_low_int:
   670                           	opt stack 0
   671  000080                     ?i2___awmod:
   672                           	opt stack 0
   673  000080                     WriteTimer0@timer:
   674                           	opt stack 0
   675  000080                     i2memcpy@d1:
   676                           	opt stack 0
   677  000080                     i2___awmod@dividend:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x0
   681  000080                     	ds	2
   682  000082                     i2memcpy@s1:
   683                           	opt stack 0
   684  000082                     i2___awmod@divisor:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x2
   688  000082                     	ds	2
   689  000084                     i2memcpy@n:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x4
   693  000084                     	ds	2
   694  000086                     i2memcpy@d:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x6
   698  000086                     	ds	2
   699  000088                     i2memcpy@s:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x8
   703  000088                     	ds	2
   704  00008A                     i2send_msg@qptr:
   705                           	opt stack 0
   706  00008A                     i2recv_msg@qptr:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0xA
   710  00008A                     	ds	2
   711  00008C                     i2send_msg@length:
   712                           	opt stack 0
   713  00008C                     i2recv_msg@maxlength:
   714                           	opt stack 0
   715                           
   716                           ; 1 bytes @ 0xC
   717  00008C                     	ds	1
   718  00008D                     i2send_msg@msgtype:
   719                           	opt stack 0
   720  00008D                     i2recv_msg@msgtype:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0xD
   724  00008D                     	ds	1
   725  00008E                     i2send_msg@data:
   726                           	opt stack 0
   727                           
   728                           ; 2 bytes @ 0xE
   729  00008E                     	ds	1
   730  00008F                     i2recv_msg@data:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0xF
   734  00008F                     	ds	1
   735  000090                     ??i2_send_msg:
   736                           
   737                           ; 0 bytes @ 0x10
   738  000090                     	ds	1
   739  000091                     ??i2_recv_msg:
   740  000091                     i2send_msg@tlength:
   741                           	opt stack 0
   742                           
   743                           ; 2 bytes @ 0x11
   744  000091                     	ds	2
   745  000093                     i2send_msg@slot:
   746                           	opt stack 0
   747  000093                     i2recv_msg@slot:
   748                           	opt stack 0
   749                           
   750                           ; 1 bytes @ 0x13
   751  000093                     	ds	1
   752  000094                     i2send_msg@qmsg:
   753                           	opt stack 0
   754  000094                     i2recv_msg@tlength:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x14
   758  000094                     	ds	2
   759  000096                     ToMainHigh_sendmsg@msgtype:
   760                           	opt stack 0
   761  000096                     i2recv_msg@qmsg:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x16
   765  000096                     	ds	1
   766  000097                     ToMainHigh_sendmsg@data:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x17
   770  000097                     	ds	1
   771  000098                     FromMainLow_recvmsg@msgtype:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x18
   775  000098                     	ds	1
   776  000099                     ToMainHigh_sendmsg@length:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x19
   780  000099                     	ds	1
   781  00009A                     FromMainLow_recvmsg@data:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x1A
   785  00009A                     	ds	2
   786  00009C                     FromMainLow_recvmsg@maxlength:
   787                           	opt stack 0
   788                           
   789                           ; 1 bytes @ 0x1C
   790  00009C                     	ds	1
   791  00009D                     ??_i2c_slave_int_handler:
   792                           
   793                           ; 0 bytes @ 0x1D
   794  00009D                     	ds	2
   795  00009F                     i2c_slave_int_handler@reply:
   796                           	opt stack 0
   797                           
   798                           ; 5 bytes @ 0x1F
   799  00009F                     	ds	5
   800  0000A4                     i2c_slave_int_handler@gatherAck:
   801                           	opt stack 0
   802                           
   803                           ; 3 bytes @ 0x24
   804  0000A4                     	ds	3
   805  0000A7                     i2c_slave_int_handler@movecomAck:
   806                           	opt stack 0
   807                           
   808                           ; 3 bytes @ 0x27
   809  0000A7                     	ds	3
   810  0000AA                     i2c_slave_int_handler@sensorData:
   811                           	opt stack 0
   812                           
   813                           ; 5 bytes @ 0x2A
   814  0000AA                     	ds	5
   815  0000AF                     i2c_slave_int_handler@motorData:
   816                           	opt stack 0
   817                           
   818                           ; 5 bytes @ 0x2F
   819  0000AF                     	ds	5
   820  0000B4                     i2c_slave_int_handler@noData:
   821                           	opt stack 0
   822                           
   823                           ; 5 bytes @ 0x34
   824  0000B4                     	ds	5
   825  0000B9                     i2c_slave_int_handler@noData_1511:
   826                           	opt stack 0
   827                           
   828                           ; 5 bytes @ 0x39
   829  0000B9                     	ds	5
   830  0000BE                     i2c_slave_int_handler@error_buf:
   831                           	opt stack 0
   832                           
   833                           ; 3 bytes @ 0x3E
   834  0000BE                     	ds	3
   835  0000C1                     i2c_slave_int_handler@data_written:
   836                           	opt stack 0
   837                           
   838                           ; 1 bytes @ 0x41
   839  0000C1                     	ds	1
   840  0000C2                     i2c_slave_int_handler@overrun_error:
   841                           	opt stack 0
   842                           
   843                           ; 1 bytes @ 0x42
   844  0000C2                     	ds	1
   845  0000C3                     i2c_slave_int_handler@i2c_data:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0x43
   849  0000C3                     	ds	1
   850  0000C4                     i2c_slave_int_handler@msg_to_send:
   851                           	opt stack 0
   852                           
   853                           ; 1 bytes @ 0x44
   854  0000C4                     	ds	1
   855  0000C5                     i2c_slave_int_handler@msg_ready:
   856                           	opt stack 0
   857                           
   858                           ; 1 bytes @ 0x45
   859  0000C5                     	ds	1
   860  0000C6                     i2c_slave_int_handler@msgtype:
   861                           	opt stack 0
   862                           
   863                           ; 2 bytes @ 0x46
   864  0000C6                     	ds	2
   865  0000C8                     i2c_slave_int_handler@msgtype_1508:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0x48
   869  0000C8                     	ds	2
   870  0000CA                     i2c_slave_int_handler@data_read:
   871                           	opt stack 0
   872                           
   873                           ; 1 bytes @ 0x4A
   874  0000CA                     	ds	1
   875  0000CB                     i2c_slave_int_handler@length:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0x4B
   879  0000CB                     	ds	2
   880  0000CD                     ??_InterruptHandlerHigh:
   881                           
   882                           ; 0 bytes @ 0x4D
   883  0000CD                     	ds	14
   884                           tblptru	equ	0xFF8
   885                           tblptrh	equ	0xFF7
   886                           tblptrl	equ	0xFF6
   887                           tablat	equ	0xFF5
   888                           postinc0	equ	0xFEE
   889                           wreg	equ	0xFE8
   890                           postdec1	equ	0xFE5
   891                           fsr1l	equ	0xFE1
   892                           
   893                           	psect	cstackCOMRAM
   894  000001                     __pcstackCOMRAM:
   895                           	opt stack 0
   896  000001                     ??_uart_trans_int_handler:
   897  000001                     ?i1___awmod:
   898                           	opt stack 0
   899  000001                     ReadUSART@data:
   900                           	opt stack 0
   901  000001                     WriteTimer1@timer1:
   902                           	opt stack 0
   903  000001                     i1memcpy@d1:
   904                           	opt stack 0
   905  000001                     i1___awmod@dividend:
   906                           	opt stack 0
   907                           
   908                           ; 2 bytes @ 0x0
   909  000001                     	ds	2
   910  000003                     WriteTimer1@timer:
   911                           	opt stack 0
   912  000003                     i1memcpy@s1:
   913                           	opt stack 0
   914  000003                     i1___awmod@divisor:
   915                           	opt stack 0
   916                           
   917                           ; 2 bytes @ 0x2
   918  000003                     	ds	2
   919  000005                     ??i1___awmod:
   920  000005                     i1memcpy@n:
   921                           	opt stack 0
   922                           
   923                           ; 2 bytes @ 0x4
   924  000005                     	ds	1
   925  000006                     i1___awmod@counter:
   926                           	opt stack 0
   927                           
   928                           ; 1 bytes @ 0x5
   929  000006                     	ds	1
   930  000007                     i1___awmod@sign:
   931                           	opt stack 0
   932  000007                     i1memcpy@d:
   933                           	opt stack 0
   934                           
   935                           ; 2 bytes @ 0x6
   936  000007                     	ds	2
   937  000009                     i1memcpy@s:
   938                           	opt stack 0
   939                           
   940                           ; 2 bytes @ 0x8
   941  000009                     	ds	2
   942  00000B                     i1send_msg@qptr:
   943                           	opt stack 0
   944                           
   945                           ; 2 bytes @ 0xA
   946  00000B                     	ds	2
   947  00000D                     i1send_msg@length:
   948                           	opt stack 0
   949                           
   950                           ; 1 bytes @ 0xC
   951  00000D                     	ds	1
   952  00000E                     i1send_msg@msgtype:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0xD
   956  00000E                     	ds	1
   957  00000F                     i1send_msg@data:
   958                           	opt stack 0
   959                           
   960                           ; 2 bytes @ 0xE
   961  00000F                     	ds	2
   962  000011                     ??i1_send_msg:
   963                           
   964                           ; 0 bytes @ 0x10
   965  000011                     	ds	1
   966  000012                     i1send_msg@tlength:
   967                           	opt stack 0
   968                           
   969                           ; 2 bytes @ 0x11
   970  000012                     	ds	2
   971  000014                     i1send_msg@slot:
   972                           	opt stack 0
   973                           
   974                           ; 1 bytes @ 0x13
   975  000014                     	ds	1
   976  000015                     i1send_msg@qmsg:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0x14
   980  000015                     	ds	2
   981  000017                     ToMainLow_sendmsg@msgtype:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0x16
   985  000017                     	ds	1
   986  000018                     ToMainLow_sendmsg@data:
   987                           	opt stack 0
   988                           
   989                           ; 2 bytes @ 0x17
   990  000018                     	ds	2
   991  00001A                     ToMainLow_sendmsg@length:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x19
   995  00001A                     	ds	1
   996  00001B                     ??_uart_recv_int_handler:
   997                           
   998                           ; 0 bytes @ 0x1A
   999  00001B                     	ds	1
  1000  00001C                     ??_InterruptHandlerLow:
  1001                           
  1002                           ; 0 bytes @ 0x1B
  1003  00001C                     	ds	17
  1004  00002D                     ??i2___awmod:
  1005  00002D                     ?i2_in_high_int:
  1006                           	opt stack 0
  1007  00002D                     handle_start@data_read:
  1008                           	opt stack 0
  1009  00002D                     start_i2c_slave_reply@msg:
  1010                           	opt stack 0
  1011  00002D                     WriteTimer0@timer0:
  1012                           	opt stack 0
  1013  00002D                     i2check_msg@qptr:
  1014                           	opt stack 0
  1015                           
  1016                           ; 2 bytes @ 0x2C
  1017  00002D                     	ds	1
  1018  00002E                     i2___awmod@counter:
  1019                           	opt stack 0
  1020                           
  1021                           ; 1 bytes @ 0x2D
  1022  00002E                     	ds	1
  1023  00002F                     ??i2_check_msg:
  1024  00002F                     start_i2c_slave_reply@length:
  1025                           	opt stack 0
  1026  00002F                     i2___awmod@sign:
  1027                           	opt stack 0
  1028                           
  1029                           ; 1 bytes @ 0x2E
  1030  00002F                     	ds	1
  1031  000030                     tblptru	equ	0xFF8
  1032                           tblptrh	equ	0xFF7
  1033                           tblptrl	equ	0xFF6
  1034                           tablat	equ	0xFF5
  1035                           postinc0	equ	0xFEE
  1036                           wreg	equ	0xFE8
  1037                           postdec1	equ	0xFE5
  1038                           fsr1l	equ	0xFE1
  1039                           
  1040                           ; 0 bytes @ 0x2F
  1041 ;;
  1042 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1043 ;;
  1044 ;; *************** function _main *****************
  1045 ;; Defined at:
  1046 ;;		line 186 in file "../src/main.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  ic             29   71[BANK1 ] struct __i2c_comm
  1051 ;;  uc             13   58[BANK1 ] struct __uart_comm
  1052 ;;  msgbuffer      11   41[BANK1 ] unsigned char [11]
  1053 ;;  t1thread_dat    2   54[BANK1 ] struct __timer1_thread_s
  1054 ;;  t0thread_dat    2   52[BANK1 ] struct __timer0_thread_s
  1055 ;;  msg             2   38[BANK1 ] unsigned char [2]
  1056 ;;  uthread_data    2    0        struct __uart_thread_str
  1057 ;;  length          1   57[BANK1 ] char 
  1058 ;;  msgtype         1   56[BANK1 ] unsigned char 
  1059 ;;  last_reg_rec    1   40[BANK1 ] unsigned char 
  1060 ;;  i               1    0        unsigned char 
  1061 ;;  c               1    0        unsigned char 
  1062 ;; Return value:  Size  Location     Type
  1063 ;;		None               void
  1064 ;; Registers used:
  1065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1071 ;;      Params:         0       0       0       0       0
  1072 ;;      Locals:         0       0      62       0       0
  1073 ;;      Temps:          0       0       2       0       0
  1074 ;;      Totals:         0       0      64       0       0
  1075 ;;Total ram usage:       64 bytes
  1076 ;; Hardware stack levels required when called:   15
  1077 ;; This function calls:
  1078 ;;		_FromMainLow_sendmsg
  1079 ;;		_OpenADC
  1080 ;;		_OpenTimer0
  1081 ;;		_OpenTimer1
  1082 ;;		_OpenUSART
  1083 ;;		_SetChanADC
  1084 ;;		_ToMainHigh_recvmsg
  1085 ;;		_ToMainLow_recvmsg
  1086 ;;		_block_on_To_msgqueues
  1087 ;;		_enable_interrupts
  1088 ;;		_i2c_configure_slave
  1089 ;;		_init_i2c
  1090 ;;		_init_queues
  1091 ;;		_init_timer1_lthread
  1092 ;;		_init_uart_recv
  1093 ;;		_timer0_lthread
  1094 ;;		_timer1_lthread
  1095 ;;		_uart_trans
  1096 ;; This function is called by:
  1097 ;;		Startup code after reset
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text0
  1102  00082A                     __ptext0:
  1103                           	opt stack 0
  1104  00082A                     _main:
  1105                           	opt stack 16
  1106                           
  1107                           ;main.c: 187: char c;
  1108                           ;main.c: 188: signed char length;
  1109                           ;main.c: 189: unsigned char msgtype;
  1110                           ;main.c: 190: unsigned char last_reg_recvd;
  1111                           ;main.c: 191: uart_comm uc;
  1112                           ;main.c: 192: i2c_comm ic;
  1113                           ;main.c: 193: unsigned char msgbuffer[10 + 1];
  1114                           ;main.c: 194: unsigned char i;
  1115                           ;main.c: 195: uart_thread_struct uthread_data;
  1116                           ;main.c: 196: timer1_thread_struct t1thread_data;
  1117                           ;main.c: 197: timer0_thread_struct t0thread_data;
  1118                           ;main.c: 205: OSCCON = 0x82;
  1119                           
  1120                           ;incstack = 0
  1121  00082A  0E82               	movlw	130
  1122  00082C  6ED3               	movwf	4051,c	;volatile
  1123                           
  1124                           ;main.c: 206: OSCTUNEbits.PLLEN = 0;
  1125  00082E  9C9B               	bcf	3995,6,c	;volatile
  1126                           
  1127                           ;main.c: 224: init_uart_recv(&uc);
  1128  000830  0101               	movlb	1	; () banked
  1129  000832  0E01               	movlw	high main@uc
  1130  000834  0101               	movlb	1	; () banked
  1131  000836  0101               	movlb	1	; () banked
  1132  000838  6F87               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1133  00083A  0101               	movlb	1	; () banked
  1134  00083C  0EC0               	movlw	low main@uc
  1135  00083E  0101               	movlb	1	; () banked
  1136  000840  0101               	movlb	1	; () banked
  1137  000842  6F86               	movwf	init_uart_recv@uc& (0+255),b
  1138  000844  EC05  F010         	call	_init_uart_recv	;wreg free
  1139                           
  1140                           ;main.c: 227: init_i2c(&ic);
  1141  000848  0101               	movlb	1	; () banked
  1142  00084A  0E01               	movlw	high main@ic
  1143  00084C  0101               	movlb	1	; () banked
  1144  00084E  0101               	movlb	1	; () banked
  1145  000850  6F87               	movwf	(init_i2c@ic+1)& (0+255),b
  1146  000852  0101               	movlb	1	; () banked
  1147  000854  0ECD               	movlw	low main@ic
  1148  000856  0101               	movlb	1	; () banked
  1149  000858  0101               	movlb	1	; () banked
  1150  00085A  6F86               	movwf	init_i2c@ic& (0+255),b
  1151  00085C  ECFF  F00D         	call	_init_i2c	;wreg free
  1152                           
  1153                           ;main.c: 230: init_timer1_lthread(&t1thread_data);
  1154  000860  0101               	movlb	1	; () banked
  1155  000862  0E01               	movlw	high main@t1thread_data
  1156  000864  0101               	movlb	1	; () banked
  1157  000866  0101               	movlb	1	; () banked
  1158  000868  6F87               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1159  00086A  0101               	movlb	1	; () banked
  1160  00086C  0EBC               	movlw	low main@t1thread_data
  1161  00086E  0101               	movlb	1	; () banked
  1162  000870  0101               	movlb	1	; () banked
  1163  000872  6F86               	movwf	init_timer1_lthread@tptr& (0+255),b
  1164  000874  EC37  F010         	call	_init_timer1_lthread	;wreg free
  1165                           
  1166                           ;main.c: 233: init_queues();
  1167  000878  EC0C  F00D         	call	_init_queues	;wreg free
  1168                           
  1169                           ;main.c: 237: TRISB = 0x0;
  1170  00087C  0E00               	movlw	0
  1171  00087E  6E93               	movwf	3987,c	;volatile
  1172                           
  1173                           ;main.c: 238: LATB = 0x0;
  1174  000880  0E00               	movlw	0
  1175  000882  6E8A               	movwf	3978,c	;volatile
  1176                           
  1177                           ;main.c: 240: PORTA = 0x0;
  1178  000884  0E00               	movlw	0
  1179  000886  6E80               	movwf	3968,c	;volatile
  1180                           
  1181                           ;main.c: 241: LATA = 0x0;
  1182  000888  0E00               	movlw	0
  1183  00088A  6E89               	movwf	3977,c	;volatile
  1184                           
  1185                           ;main.c: 242: TRISA = 0x0F;
  1186  00088C  0E0F               	movlw	15
  1187  00088E  6E92               	movwf	3986,c	;volatile
  1188                           
  1189                           ;main.c: 255: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110101);
  1190  000890  0ED5               	movlw	213
  1191  000892  EC96  F00F         	call	_OpenTimer0
  1192                           
  1193                           ;main.c: 264: OpenTimer1(0b11111111 & 0b10111111 & 0b11001111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1194  000896  0E85               	movlw	133
  1195  000898  EC0E  F00F         	call	_OpenTimer1
  1196                           
  1197                           ;main.c: 272: IPR1bits.ADIP = 0;
  1198  00089C  9C9F               	bcf	3999,6,c	;volatile
  1199                           
  1200                           ;main.c: 273: PIE1bits.ADIE = 1;
  1201  00089E  8C9D               	bsf	3997,6,c	;volatile
  1202                           
  1203                           ;main.c: 275: IPR1bits.TMR1IP = 0;
  1204  0008A0  909F               	bcf	3999,0,c	;volatile
  1205                           
  1206                           ;main.c: 277: IPR1bits.RCIP = 0;
  1207  0008A2  9A9F               	bcf	3999,5,c	;volatile
  1208                           
  1209                           ;main.c: 279: IPR1bits.TXIP = 0;
  1210  0008A4  989F               	bcf	3999,4,c	;volatile
  1211                           
  1212                           ;main.c: 281: IPR1bits.SSPIP = 1;
  1213  0008A6  869F               	bsf	3999,3,c	;volatile
  1214                           
  1215                           ;main.c: 301: i2c_configure_slave(0x9E);
  1216  0008A8  0E9E               	movlw	158
  1217  0008AA  ECAB  F00F         	call	_i2c_configure_slave
  1218                           
  1219                           ;main.c: 320: PIE1bits.SSPIE = 1;
  1220  0008AE  869D               	bsf	3997,3,c	;volatile
  1221                           
  1222                           ;main.c: 331: OpenUSART(0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1223                           ;main.c: 332: 0b11111111 & 0b11111111, 38);
  1224  0008B0  0E00               	movlw	0
  1225  0008B2  0101               	movlb	1	; () banked
  1226  0008B4  0101               	movlb	1	; () banked
  1227  0008B6  6F87               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1228  0008B8  0E26               	movlw	38
  1229  0008BA  0101               	movlb	1	; () banked
  1230  0008BC  6F86               	movwf	OpenUSART@spbrg& (0+255),b
  1231  0008BE  0EFC               	movlw	252
  1232  0008C0  EC0D  F00B         	call	_OpenUSART
  1233                           
  1234                           ;main.c: 333: RCSTAbits.SPEN = 1;
  1235  0008C4  8EAB               	bsf	4011,7,c	;volatile
  1236                           
  1237                           ;main.c: 334: TRISC = 0xFF;
  1238  0008C6  6894               	setf	3988,c	;volatile
  1239                           
  1240                           ;main.c: 341: enable_interrupts();
  1241  0008C8  EC77  F010         	call	_enable_interrupts	;wreg free
  1242                           
  1243                           ;main.c: 355: OpenADC(0b11011111 & 0b01111111 & 0b11110011,
  1244                           ;main.c: 356: 0b10001111 & 0b01111111 & 0b11111110 & 0b11111101,
  1245                           ;main.c: 357: 0b1011);
  1246  0008CC  0101               	movlb	1	; () banked
  1247  0008CE  6FAA               	movwf	??_main& (0+255),b
  1248  0008D0  0E0C               	movlw	12
  1249  0008D2  0101               	movlb	1	; () banked
  1250  0008D4  0101               	movlb	1	; () banked
  1251  0008D6  6F86               	movwf	OpenADC@config2& (0+255),b
  1252  0008D8  0101               	movlb	1	; () banked
  1253  0008DA  51AA               	movf	??_main& (0+255),w,b
  1254  0008DC  0101               	movlb	1	; () banked
  1255  0008DE  6FAB               	movwf	(??_main+1)& (0+255),b
  1256  0008E0  0E0B               	movlw	11
  1257  0008E2  0101               	movlb	1	; () banked
  1258  0008E4  0101               	movlb	1	; () banked
  1259  0008E6  6F87               	movwf	OpenADC@portconfig& (0+255),b
  1260  0008E8  0101               	movlb	1	; () banked
  1261  0008EA  51AB               	movf	(??_main+1)& (0+255),w,b
  1262  0008EC  0E53               	movlw	83
  1263  0008EE  EC9B  F00B         	call	_OpenADC
  1264                           
  1265                           ;main.c: 358: SetChanADC(0b10001111);
  1266  0008F2  0E8F               	movlw	143
  1267  0008F4  ECF5  F00F         	call	_SetChanADC
  1268                           
  1269                           ;main.c: 369: unsigned char msg[2] = {0x01, 0x02};
  1270  0008F8  C1EA  F1AC         	movff	main@F5212,main@msg
  1271  0008FC  C1EB  F1AD         	movff	main@F5212+1,main@msg+1
  1272  000900                     l3881:
  1273                           
  1274                           ;main.c: 381: block_on_To_msgqueues();
  1275  000900  EC1E  F00C         	call	_block_on_To_msgqueues	;wreg free
  1276                           
  1277                           ;main.c: 388: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1278  000904  0101               	movlb	1	; () banked
  1279  000906  0E01               	movlw	high main@msgtype
  1280  000908  0101               	movlb	1	; () banked
  1281  00090A  0101               	movlb	1	; () banked
  1282  00090C  6F9F               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1283  00090E  0101               	movlb	1	; () banked
  1284  000910  0EBE               	movlw	low main@msgtype
  1285  000912  0101               	movlb	1	; () banked
  1286  000914  0101               	movlb	1	; () banked
  1287  000916  6F9E               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1288  000918  0101               	movlb	1	; () banked
  1289  00091A  0E01               	movlw	high main@msgbuffer
  1290  00091C  0101               	movlb	1	; () banked
  1291  00091E  0101               	movlb	1	; () banked
  1292  000920  6FA1               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1293  000922  0101               	movlb	1	; () banked
  1294  000924  0EAF               	movlw	low main@msgbuffer
  1295  000926  0101               	movlb	1	; () banked
  1296  000928  0101               	movlb	1	; () banked
  1297  00092A  6FA0               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1298  00092C  0E0A               	movlw	10
  1299  00092E  EC8C  F00E         	call	_ToMainHigh_recvmsg
  1300  000932  0101               	movlb	1	; () banked
  1301  000934  0101               	movlb	1	; () banked
  1302  000936  6FBF               	movwf	main@length& (0+255),b
  1303                           
  1304                           ; BSR set to: 1
  1305                           ;main.c: 389: if (length < 0) {
  1306  000938  0101               	movlb	1	; () banked
  1307  00093A  0101               	movlb	1	; () banked
  1308  00093C  BFBF               	btfsc	main@length& (0+255),7,b
  1309  00093E  D060               	goto	l3899
  1310  000940  D04C               	goto	l3897
  1311  000942                     l3889:
  1312                           
  1313                           ; BSR set to: 1
  1314                           ;main.c: 397: {
  1315                           ;main.c: 398: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1316  000942  0101               	movlb	1	; () banked
  1317  000944  0E01               	movlw	high main@t0thread_data
  1318  000946  0101               	movlb	1	; () banked
  1319  000948  0101               	movlb	1	; () banked
  1320  00094A  6F87               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1321  00094C  0101               	movlb	1	; () banked
  1322  00094E  0EBA               	movlw	low main@t0thread_data
  1323  000950  0101               	movlb	1	; () banked
  1324  000952  0101               	movlb	1	; () banked
  1325  000954  6F86               	movwf	timer0_lthread@tptr& (0+255),b
  1326  000956  0101               	movlb	1	; () banked
  1327  000958  0101               	movlb	1	; () banked
  1328  00095A  C1BE  F188         	movff	main@msgtype,timer0_lthread@msgtype
  1329  00095E  0101               	movlb	1	; () banked
  1330  000960  0101               	movlb	1	; () banked
  1331  000962  6B89               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1332  000964  0101               	movlb	1	; () banked
  1333  000966  0101               	movlb	1	; () banked
  1334  000968  51BF               	movf	main@length& (0+255),w,b
  1335  00096A  0101               	movlb	1	; () banked
  1336  00096C  0101               	movlb	1	; () banked
  1337  00096E  6F8A               	movwf	timer0_lthread@length& (0+255),b
  1338  000970  0101               	movlb	1	; () banked
  1339  000972  6B8B               	clrf	(timer0_lthread@length+1)& (0+255),b
  1340  000974  0101               	movlb	1	; () banked
  1341  000976  BF8A               	btfsc	timer0_lthread@length& (0+255),7,b
  1342  000978  078B               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1343  00097A  0101               	movlb	1	; () banked
  1344  00097C  0E01               	movlw	high main@msgbuffer
  1345  00097E  0101               	movlb	1	; () banked
  1346  000980  0101               	movlb	1	; () banked
  1347  000982  6F8D               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1348  000984  0101               	movlb	1	; () banked
  1349  000986  0EAF               	movlw	low main@msgbuffer
  1350  000988  0101               	movlb	1	; () banked
  1351  00098A  0101               	movlb	1	; () banked
  1352  00098C  6F8C               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1353  00098E  EC2E  F010         	call	_timer0_lthread	;wreg free
  1354                           
  1355                           ;main.c: 399: break;
  1356  000992  D036               	goto	l3899
  1357  000994                     l132:
  1358                           
  1359                           ;main.c: 402: case 41:
  1360                           ;main.c: 403: {
  1361                           ;main.c: 406: last_reg_recvd = msgbuffer[0];
  1362  000994  C1AF  F1AE         	movff	main@msgbuffer,main@last_reg_recvd
  1363                           
  1364                           ;main.c: 407: break;
  1365  000998  D033               	goto	l3899
  1366  00099A                     l3891:
  1367                           
  1368                           ;main.c: 410: {
  1369                           ;main.c: 413: uart_trans(length, msgbuffer);
  1370  00099A  0101               	movlb	1	; () banked
  1371  00099C  0E01               	movlw	high main@msgbuffer
  1372  00099E  0101               	movlb	1	; () banked
  1373  0009A0  0101               	movlb	1	; () banked
  1374  0009A2  6F87               	movwf	(uart_trans@data+1)& (0+255),b
  1375  0009A4  0101               	movlb	1	; () banked
  1376  0009A6  0EAF               	movlw	low main@msgbuffer
  1377  0009A8  0101               	movlb	1	; () banked
  1378  0009AA  0101               	movlb	1	; () banked
  1379  0009AC  6F86               	movwf	uart_trans@data& (0+255),b
  1380  0009AE  0101               	movlb	1	; () banked
  1381  0009B0  0101               	movlb	1	; () banked
  1382  0009B2  51BF               	movf	main@length& (0+255),w,b
  1383  0009B4  EC19  F00A         	call	_uart_trans
  1384                           
  1385                           ;main.c: 416: break;
  1386  0009B8  D023               	goto	l3899
  1387  0009BA                     l3893:
  1388                           
  1389                           ;main.c: 426: {
  1390                           ;main.c: 427: uart_trans(length, msgbuffer);
  1391  0009BA  0101               	movlb	1	; () banked
  1392  0009BC  0E01               	movlw	high main@msgbuffer
  1393  0009BE  0101               	movlb	1	; () banked
  1394  0009C0  0101               	movlb	1	; () banked
  1395  0009C2  6F87               	movwf	(uart_trans@data+1)& (0+255),b
  1396  0009C4  0101               	movlb	1	; () banked
  1397  0009C6  0EAF               	movlw	low main@msgbuffer
  1398  0009C8  0101               	movlb	1	; () banked
  1399  0009CA  0101               	movlb	1	; () banked
  1400  0009CC  6F86               	movwf	uart_trans@data& (0+255),b
  1401  0009CE  0101               	movlb	1	; () banked
  1402  0009D0  0101               	movlb	1	; () banked
  1403  0009D2  51BF               	movf	main@length& (0+255),w,b
  1404  0009D4  EC19  F00A         	call	_uart_trans
  1405                           
  1406                           ;main.c: 428: break;
  1407  0009D8  D013               	goto	l3899
  1408  0009DA                     l3897:
  1409  0009DA  0101               	movlb	1	; () banked
  1410  0009DC  0101               	movlb	1	; () banked
  1411  0009DE  51BE               	movf	main@msgtype& (0+255),w,b
  1412                           
  1413                           ; Switch size 1, requested type "space"
  1414                           ; Number of cases is 6, Range of values is 10 to 46
  1415                           ; switch strategies available:
  1416                           ; Name         Instructions Cycles
  1417                           ; simple_byte           19    10 (average)
  1418                           ;	Chosen strategy is simple_byte
  1419  0009E0  0A0A               	xorlw	10	; case 10
  1420  0009E2  B4D8               	btfsc	status,2,c
  1421  0009E4  D7AE               	goto	l3889
  1422  0009E6  0A2A               	xorlw	42	; case 32
  1423  0009E8  B4D8               	btfsc	status,2,c
  1424  0009EA  D7E7               	goto	l3893
  1425  0009EC  0A08               	xorlw	8	; case 40
  1426  0009EE  B4D8               	btfsc	status,2,c
  1427  0009F0  D7D1               	goto	l132
  1428  0009F2  0A01               	xorlw	1	; case 41
  1429  0009F4  B4D8               	btfsc	status,2,c
  1430  0009F6  D7CE               	goto	l132
  1431  0009F8  0A04               	xorlw	4	; case 45
  1432  0009FA  B4D8               	btfsc	status,2,c
  1433  0009FC  D7CE               	goto	l3891
  1434  0009FE  0A03               	xorlw	3	; case 46
  1435  000A00                     l3899:
  1436                           
  1437                           ;main.c: 436: }
  1438                           ;main.c: 439: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1439  000A00  0101               	movlb	1	; () banked
  1440  000A02  0E01               	movlw	high main@msgtype
  1441  000A04  0101               	movlb	1	; () banked
  1442  000A06  0101               	movlb	1	; () banked
  1443  000A08  6F9F               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1444  000A0A  0101               	movlb	1	; () banked
  1445  000A0C  0EBE               	movlw	low main@msgtype
  1446  000A0E  0101               	movlb	1	; () banked
  1447  000A10  0101               	movlb	1	; () banked
  1448  000A12  6F9E               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1449  000A14  0101               	movlb	1	; () banked
  1450  000A16  0E01               	movlw	high main@msgbuffer
  1451  000A18  0101               	movlb	1	; () banked
  1452  000A1A  0101               	movlb	1	; () banked
  1453  000A1C  6FA1               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1454  000A1E  0101               	movlb	1	; () banked
  1455  000A20  0EAF               	movlw	low main@msgbuffer
  1456  000A22  0101               	movlb	1	; () banked
  1457  000A24  0101               	movlb	1	; () banked
  1458  000A26  6FA0               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1459  000A28  0E0A               	movlw	10
  1460  000A2A  EC6B  F00E         	call	_ToMainLow_recvmsg
  1461  000A2E  0101               	movlb	1	; () banked
  1462  000A30  0101               	movlb	1	; () banked
  1463  000A32  6FBF               	movwf	main@length& (0+255),b
  1464                           
  1465                           ; BSR set to: 1
  1466                           ;main.c: 440: if (length < 0) {
  1467  000A34  0101               	movlb	1	; () banked
  1468  000A36  0101               	movlb	1	; () banked
  1469  000A38  BFBF               	btfsc	main@length& (0+255),7,b
  1470  000A3A  D762               	goto	l3881
  1471  000A3C  D043               	goto	l3913
  1472  000A3E                     l3905:
  1473                           
  1474                           ; BSR set to: 1
  1475                           ;main.c: 448: {
  1476                           ;main.c: 449: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1477  000A3E  0101               	movlb	1	; () banked
  1478  000A40  0E01               	movlw	high main@t1thread_data
  1479  000A42  0101               	movlb	1	; () banked
  1480  000A44  0101               	movlb	1	; () banked
  1481  000A46  6FA1               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1482  000A48  0101               	movlb	1	; () banked
  1483  000A4A  0EBC               	movlw	low main@t1thread_data
  1484  000A4C  0101               	movlb	1	; () banked
  1485  000A4E  0101               	movlb	1	; () banked
  1486  000A50  6FA0               	movwf	timer1_lthread@tptr& (0+255),b
  1487  000A52  0101               	movlb	1	; () banked
  1488  000A54  0101               	movlb	1	; () banked
  1489  000A56  C1BE  F1A2         	movff	main@msgtype,timer1_lthread@msgtype
  1490  000A5A  0101               	movlb	1	; () banked
  1491  000A5C  0101               	movlb	1	; () banked
  1492  000A5E  6BA3               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1493  000A60  0101               	movlb	1	; () banked
  1494  000A62  0101               	movlb	1	; () banked
  1495  000A64  51BF               	movf	main@length& (0+255),w,b
  1496  000A66  0101               	movlb	1	; () banked
  1497  000A68  0101               	movlb	1	; () banked
  1498  000A6A  6FA4               	movwf	timer1_lthread@length& (0+255),b
  1499  000A6C  0101               	movlb	1	; () banked
  1500  000A6E  6BA5               	clrf	(timer1_lthread@length+1)& (0+255),b
  1501  000A70  0101               	movlb	1	; () banked
  1502  000A72  BFA4               	btfsc	timer1_lthread@length& (0+255),7,b
  1503  000A74  07A5               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1504  000A76  0101               	movlb	1	; () banked
  1505  000A78  0E01               	movlw	high main@msgbuffer
  1506  000A7A  0101               	movlb	1	; () banked
  1507  000A7C  0101               	movlb	1	; () banked
  1508  000A7E  6FA7               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1509  000A80  0101               	movlb	1	; () banked
  1510  000A82  0EAF               	movlw	low main@msgbuffer
  1511  000A84  0101               	movlb	1	; () banked
  1512  000A86  0101               	movlb	1	; () banked
  1513  000A88  6FA6               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1514  000A8A  ECD3  F00C         	call	_timer1_lthread	;wreg free
  1515                           
  1516                           ;main.c: 450: break;
  1517  000A8E  D738               	goto	l3881
  1518  000A90                     l144:
  1519                           
  1520                           ;main.c: 453: case 31:
  1521                           ;main.c: 454: {
  1522                           ;main.c: 455: LATBbits.LATB2 = 1;
  1523  000A90  848A               	bsf	3978,2,c	;volatile
  1524                           
  1525                           ;main.c: 456: FromMainLow_sendmsg(length, 31, msgbuffer);
  1526  000A92  0101               	movlb	1	; () banked
  1527  000A94  6FAA               	movwf	??_main& (0+255),b
  1528  000A96  0E1F               	movlw	31
  1529  000A98  0101               	movlb	1	; () banked
  1530  000A9A  0101               	movlb	1	; () banked
  1531  000A9C  6F9C               	movwf	FromMainLow_sendmsg@msgtype& (0+255),b
  1532  000A9E  0101               	movlb	1	; () banked
  1533  000AA0  51AA               	movf	??_main& (0+255),w,b
  1534  000AA2  0101               	movlb	1	; () banked
  1535  000AA4  0E01               	movlw	high main@msgbuffer
  1536  000AA6  0101               	movlb	1	; () banked
  1537  000AA8  0101               	movlb	1	; () banked
  1538  000AAA  6F9E               	movwf	(FromMainLow_sendmsg@data+1)& (0+255),b
  1539  000AAC  0101               	movlb	1	; () banked
  1540  000AAE  0EAF               	movlw	low main@msgbuffer
  1541  000AB0  0101               	movlb	1	; () banked
  1542  000AB2  0101               	movlb	1	; () banked
  1543  000AB4  6F9D               	movwf	FromMainLow_sendmsg@data& (0+255),b
  1544  000AB6  0101               	movlb	1	; () banked
  1545  000AB8  0101               	movlb	1	; () banked
  1546  000ABA  51BF               	movf	main@length& (0+255),w,b
  1547  000ABC  EC60  F00F         	call	_FromMainLow_sendmsg
  1548                           
  1549                           ;main.c: 457: LATBbits.LATB2 = 0;
  1550  000AC0  948A               	bcf	3978,2,c	;volatile
  1551                           
  1552                           ;main.c: 459: break;
  1553  000AC2  D71E               	goto	l3881
  1554  000AC4                     l3913:
  1555  000AC4  0101               	movlb	1	; () banked
  1556  000AC6  0101               	movlb	1	; () banked
  1557  000AC8  51BE               	movf	main@msgtype& (0+255),w,b
  1558                           
  1559                           ; Switch size 1, requested type "space"
  1560                           ; Number of cases is 3, Range of values is 11 to 31
  1561                           ; switch strategies available:
  1562                           ; Name         Instructions Cycles
  1563                           ; simple_byte           10     6 (average)
  1564                           ;	Chosen strategy is simple_byte
  1565  000ACA  0A0B               	xorlw	11	; case 11
  1566  000ACC  B4D8               	btfsc	status,2,c
  1567  000ACE  D7B7               	goto	l3905
  1568  000AD0  0A15               	xorlw	21	; case 30
  1569  000AD2  B4D8               	btfsc	status,2,c
  1570  000AD4  D7DD               	goto	l144
  1571  000AD6  0A01               	xorlw	1	; case 31
  1572  000AD8  B4D8               	btfsc	status,2,c
  1573  000ADA  D7DA               	goto	l144
  1574  000ADC  D711               	goto	l3881
  1575  000ADE                     __end_of_main:
  1576                           	opt stack 0
  1577                           tblptru	equ	0xFF8
  1578                           tblptrh	equ	0xFF7
  1579                           tblptrl	equ	0xFF6
  1580                           tablat	equ	0xFF5
  1581                           postinc0	equ	0xFEE
  1582                           wreg	equ	0xFE8
  1583                           postdec1	equ	0xFE5
  1584                           fsr1l	equ	0xFE1
  1585                           status	equ	0xFD8
  1586                           
  1587 ;; *************** function _uart_trans *****************
  1588 ;; Defined at:
  1589 ;;		line 60 in file "../src/my_uart.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  length          1    wreg     unsigned char 
  1592 ;;  data            2    0[BANK1 ] PTR unsigned char 
  1593 ;;		 -> main@msgbuffer(11), 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  length          1    4[BANK1 ] unsigned char 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;		None               void
  1598 ;; Registers used:
  1599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1605 ;;      Params:         0       0       2       0       0
  1606 ;;      Locals:         0       0       1       0       0
  1607 ;;      Temps:          0       0       2       0       0
  1608 ;;      Totals:         0       0       5       0       0
  1609 ;;Total ram usage:        5 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; Hardware stack levels required when called:   11
  1612 ;; This function calls:
  1613 ;;		Nothing
  1614 ;; This function is called by:
  1615 ;;		_main
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           	psect	text1
  1620  001432                     __ptext1:
  1621                           	opt stack 0
  1622  001432                     _uart_trans:
  1623                           	opt stack 19
  1624                           
  1625                           ; BSR set to: 1
  1626                           ;incstack = 0
  1627                           ;uart_trans@length stored from wreg
  1628  001432  CFE8 F18A          	movff	wreg,uart_trans@length
  1629                           
  1630                           ;my_uart.c: 62: for (uc_ptr->txBuflen = 0; uc_ptr->txBuflen < length; uc_ptr->txBuflen++
      +                          ) {
  1631  001436  EE20 F00B          	lfsr	2,11
  1632  00143A  5052               	movf	_uc_ptr,w,c
  1633  00143C  26D9               	addwf	fsr2l,f,c
  1634  00143E  5053               	movf	_uc_ptr+1,w,c
  1635  001440  22DA               	addwfc	fsr2h,f,c
  1636  001442  0E00               	movlw	0
  1637  001444  6EDF               	movwf	indf2,c
  1638  001446  D035               	goto	l4085
  1639  001448                     l4081:
  1640                           
  1641                           ;my_uart.c: 64: uc_ptr->txBuff[uc_ptr->txBuflen] = data[uc_ptr->txBuflen];
  1642  001448  EE20 F00B          	lfsr	2,11
  1643  00144C  5052               	movf	_uc_ptr,w,c
  1644  00144E  26D9               	addwf	fsr2l,f,c
  1645  001450  5053               	movf	_uc_ptr+1,w,c
  1646  001452  22DA               	addwfc	fsr2h,f,c
  1647  001454  50DF               	movf	indf2,w,c
  1648  001456  0101               	movlb	1	; () banked
  1649  001458  6F88               	movwf	??_uart_trans& (0+255),b
  1650  00145A  0101               	movlb	1	; () banked
  1651  00145C  5188               	movf	??_uart_trans& (0+255),w,b
  1652  00145E  0D01               	mullw	1
  1653  001460  50F3               	movf	prodl,w,c
  1654  001462  0101               	movlb	1	; () banked
  1655  001464  0101               	movlb	1	; () banked
  1656  001466  2586               	addwf	uart_trans@data& (0+255),w,b
  1657  001468  6ED9               	movwf	fsr2l,c
  1658  00146A  50F4               	movf	prodh,w,c
  1659  00146C  0101               	movlb	1	; () banked
  1660  00146E  0101               	movlb	1	; () banked
  1661  001470  2187               	addwfc	(uart_trans@data+1)& (0+255),w,b
  1662  001472  6EDA               	movwf	fsr2h,c
  1663  001474  EE10 F00B          	lfsr	1,11
  1664  001478  5052               	movf	_uc_ptr,w,c
  1665  00147A  26E1               	addwf	fsr1l,f,c
  1666  00147C  5053               	movf	_uc_ptr+1,w,c
  1667  00147E  22E2               	addwfc	fsr1h,f,c
  1668  001480  50E7               	movf	indf1,w,c
  1669  001482  0101               	movlb	1	; () banked
  1670  001484  6F89               	movwf	(??_uart_trans+1)& (0+255),b
  1671  001486  0101               	movlb	1	; () banked
  1672  001488  5189               	movf	(??_uart_trans+1)& (0+255),w,b
  1673  00148A  0D01               	mullw	1
  1674  00148C  0E06               	movlw	6
  1675  00148E  26F3               	addwf	prodl,f,c
  1676  001490  0E00               	movlw	0
  1677  001492  22F4               	addwfc	prodh,f,c
  1678  001494  50F3               	movf	prodl,w,c
  1679  001496  2452               	addwf	_uc_ptr,w,c
  1680  001498  6EE1               	movwf	fsr1l,c
  1681  00149A  50F4               	movf	prodh,w,c
  1682  00149C  2053               	addwfc	_uc_ptr+1,w,c
  1683  00149E  6EE2               	movwf	fsr1h,c
  1684  0014A0  CFDF FFE7          	movff	indf2,indf1
  1685                           
  1686                           ; BSR set to: 1
  1687  0014A4  EE20 F00B          	lfsr	2,11
  1688  0014A8  5052               	movf	_uc_ptr,w,c
  1689  0014AA  26D9               	addwf	fsr2l,f,c
  1690  0014AC  5053               	movf	_uc_ptr+1,w,c
  1691  0014AE  22DA               	addwfc	fsr2h,f,c
  1692  0014B0  2ADF               	incf	indf2,f,c
  1693  0014B2                     l4085:
  1694  0014B2  EE20 F00B          	lfsr	2,11
  1695  0014B6  5052               	movf	_uc_ptr,w,c
  1696  0014B8  26D9               	addwf	fsr2l,f,c
  1697  0014BA  5053               	movf	_uc_ptr+1,w,c
  1698  0014BC  22DA               	addwfc	fsr2h,f,c
  1699  0014BE  50DF               	movf	indf2,w,c
  1700  0014C0  0101               	movlb	1	; () banked
  1701  0014C2  6F88               	movwf	??_uart_trans& (0+255),b
  1702  0014C4  0101               	movlb	1	; () banked
  1703  0014C6  0101               	movlb	1	; () banked
  1704  0014C8  518A               	movf	uart_trans@length& (0+255),w,b
  1705  0014CA  0101               	movlb	1	; () banked
  1706  0014CC  5D88               	subwf	??_uart_trans& (0+255),w,b
  1707  0014CE  A0D8               	btfss	status,0,c
  1708  0014D0  D7BB               	goto	l4081
  1709                           
  1710                           ; BSR set to: 1
  1711                           ;my_uart.c: 66: }
  1712                           ;my_uart.c: 67: uc_ptr->txBufind = 0;
  1713                           
  1714                           ; BSR set to: 1
  1715  0014D2  EE20 F00C          	lfsr	2,12
  1716  0014D6  5052               	movf	_uc_ptr,w,c
  1717  0014D8  26D9               	addwf	fsr2l,f,c
  1718  0014DA  5053               	movf	_uc_ptr+1,w,c
  1719  0014DC  22DA               	addwfc	fsr2h,f,c
  1720  0014DE  0E00               	movlw	0
  1721  0014E0  6EDF               	movwf	indf2,c
  1722                           
  1723                           ; BSR set to: 1
  1724                           ;my_uart.c: 68: PIE1bits.TX1IE = 1;
  1725  0014E2  889D               	bsf	3997,4,c	;volatile
  1726                           
  1727                           ; BSR set to: 1
  1728  0014E4  0012               	return	
  1729  0014E6                     __end_of_uart_trans:
  1730                           	opt stack 0
  1731                           tblptru	equ	0xFF8
  1732                           tblptrh	equ	0xFF7
  1733                           tblptrl	equ	0xFF6
  1734                           tablat	equ	0xFF5
  1735                           prodh	equ	0xFF4
  1736                           prodl	equ	0xFF3
  1737                           postinc0	equ	0xFEE
  1738                           wreg	equ	0xFE8
  1739                           indf1	equ	0xFE7
  1740                           postdec1	equ	0xFE5
  1741                           fsr1h	equ	0xFE2
  1742                           fsr1l	equ	0xFE1
  1743                           indf2	equ	0xFDF
  1744                           fsr2h	equ	0xFDA
  1745                           fsr2l	equ	0xFD9
  1746                           status	equ	0xFD8
  1747                           
  1748 ;; *************** function _timer1_lthread *****************
  1749 ;; Defined at:
  1750 ;;		line 14 in file "../src/timer1_thread.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  1753 ;;		 -> main@t1thread_data(2), 
  1754 ;;  msgtype         2   28[BANK1 ] int 
  1755 ;;  length          2   30[BANK1 ] int 
  1756 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1757 ;;		 -> main@msgbuffer(11), 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  retval          1   35[BANK1 ] char 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  2   26[BANK1 ] int 
  1762 ;; Registers used:
  1763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1769 ;;      Params:         0       0       8       0       0
  1770 ;;      Locals:         0       0       1       0       0
  1771 ;;      Temps:          0       0       1       0       0
  1772 ;;      Totals:         0       0      10       0       0
  1773 ;;Total ram usage:       10 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:   14
  1776 ;; This function calls:
  1777 ;;		_FromMainHigh_sendmsg
  1778 ;;		___lwmod
  1779 ;; This function is called by:
  1780 ;;		_main
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text2
  1785  0019A6                     __ptext2:
  1786                           	opt stack 0
  1787  0019A6                     _timer1_lthread:
  1788                           	opt stack 16
  1789                           
  1790                           ;timer1_thread.c: 15: signed char retval;
  1791                           ;timer1_thread.c: 17: tptr->msgcount++;
  1792                           
  1793                           ; BSR set to: 1
  1794                           ;incstack = 0
  1795  0019A6  C1A0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1796  0019AA  C1A1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1797  0019AE  2ADE               	incf	postinc2,f,c
  1798  0019B0  0E00               	movlw	0
  1799  0019B2  22DD               	addwfc	postdec2,f,c
  1800                           
  1801                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1802  0019B4  C1A0  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1803  0019B8  C1A1  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1804  0019BC  0101               	movlb	1	; () banked
  1805  0019BE  CFDE F186          	movff	postinc2,___lwmod@dividend
  1806  0019C2  0101               	movlb	1	; () banked
  1807  0019C4  CFDD F187          	movff	postdec2,___lwmod@dividend+1
  1808  0019C8  0E00               	movlw	0
  1809  0019CA  0101               	movlb	1	; () banked
  1810  0019CC  0101               	movlb	1	; () banked
  1811  0019CE  6F89               	movwf	(___lwmod@divisor+1)& (0+255),b
  1812  0019D0  0E0A               	movlw	10
  1813  0019D2  0101               	movlb	1	; () banked
  1814  0019D4  6F88               	movwf	___lwmod@divisor& (0+255),b
  1815  0019D6  EC56  F00B         	call	___lwmod	;wreg free
  1816  0019DA  0101               	movlb	1	; () banked
  1817  0019DC  0101               	movlb	1	; () banked
  1818  0019DE  5186               	movf	?___lwmod& (0+255),w,b
  1819  0019E0  0A09               	xorlw	9
  1820  0019E2  0101               	movlb	1	; () banked
  1821  0019E4  1187               	iorwf	(?___lwmod+1)& (0+255),w,b
  1822  0019E6  A4D8               	btfss	status,2,c
  1823  0019E8  0012               	return	
  1824                           
  1825                           ; BSR set to: 1
  1826                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1827  0019EA  0101               	movlb	1	; () banked
  1828  0019EC  6FA8               	movwf	??_timer1_lthread& (0+255),b
  1829  0019EE  0E14               	movlw	20
  1830  0019F0  0101               	movlb	1	; () banked
  1831  0019F2  0101               	movlb	1	; () banked
  1832  0019F4  6F9C               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1833  0019F6  0101               	movlb	1	; () banked
  1834  0019F8  51A8               	movf	??_timer1_lthread& (0+255),w,b
  1835  0019FA  0101               	movlb	1	; () banked
  1836  0019FC  0101               	movlb	1	; () banked
  1837  0019FE  C1A1  F19E         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1838  001A02  0101               	movlb	1	; () banked
  1839  001A04  0101               	movlb	1	; () banked
  1840  001A06  C1A0  F19D         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1841  001A0A  0E02               	movlw	2
  1842  001A0C  EC2A  F00F         	call	_FromMainHigh_sendmsg
  1843  001A10  0101               	movlb	1	; () banked
  1844  001A12  0101               	movlb	1	; () banked
  1845  001A14  6FA9               	movwf	timer1_lthread@retval& (0+255),b
  1846  001A16  0012               	return	
  1847  001A18                     __end_of_timer1_lthread:
  1848                           	opt stack 0
  1849                           tblptru	equ	0xFF8
  1850                           tblptrh	equ	0xFF7
  1851                           tblptrl	equ	0xFF6
  1852                           tablat	equ	0xFF5
  1853                           prodh	equ	0xFF4
  1854                           prodl	equ	0xFF3
  1855                           postinc0	equ	0xFEE
  1856                           wreg	equ	0xFE8
  1857                           indf1	equ	0xFE7
  1858                           postdec1	equ	0xFE5
  1859                           fsr1h	equ	0xFE2
  1860                           fsr1l	equ	0xFE1
  1861                           indf2	equ	0xFDF
  1862                           postinc2	equ	0xFDE
  1863                           postdec2	equ	0xFDD
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           status	equ	0xFD8
  1867                           
  1868 ;; *************** function ___lwmod *****************
  1869 ;; Defined at:
  1870 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  dividend        2    0[BANK1 ] unsigned int 
  1873 ;;  divisor         2    2[BANK1 ] unsigned int 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  counter         1    5[BANK1 ] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  2    0[BANK1 ] unsigned int 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1885 ;;      Params:         0       0       4       0       0
  1886 ;;      Locals:         0       0       1       0       0
  1887 ;;      Temps:          0       0       1       0       0
  1888 ;;      Totals:         0       0       6       0       0
  1889 ;;Total ram usage:        6 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:   11
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_timer1_lthread
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text3
  1900  0016AC                     __ptext3:
  1901                           	opt stack 0
  1902  0016AC                     ___lwmod:
  1903                           	opt stack 18
  1904                           
  1905                           ; BSR set to: 1
  1906                           ;incstack = 0
  1907  0016AC  0101               	movlb	1	; () banked
  1908  0016AE  0101               	movlb	1	; () banked
  1909  0016B0  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1910  0016B2  1188               	iorwf	___lwmod@divisor& (0+255),w,b
  1911  0016B4  B4D8               	btfsc	status,2,c
  1912  0016B6  D03A               	goto	l1123
  1913                           
  1914                           ; BSR set to: 1
  1915  0016B8  0101               	movlb	1	; () banked
  1916  0016BA  6F8A               	movwf	??___lwmod& (0+255),b
  1917  0016BC  0E01               	movlw	1
  1918  0016BE  0101               	movlb	1	; () banked
  1919  0016C0  0101               	movlb	1	; () banked
  1920  0016C2  6F8B               	movwf	___lwmod@counter& (0+255),b
  1921  0016C4  0101               	movlb	1	; () banked
  1922  0016C6  518A               	movf	??___lwmod& (0+255),w,b
  1923  0016C8  D009               	goto	l4531
  1924  0016CA                     l4529:
  1925                           
  1926                           ; BSR set to: 1
  1927  0016CA  0101               	movlb	1	; () banked
  1928  0016CC  0101               	movlb	1	; () banked
  1929  0016CE  0101               	movlb	1	; () banked
  1930  0016D0  90D8               	bcf	status,0,c
  1931  0016D2  3788               	rlcf	___lwmod@divisor& (0+255),f,b
  1932  0016D4  3789               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1933  0016D6  0101               	movlb	1	; () banked
  1934  0016D8  0101               	movlb	1	; () banked
  1935  0016DA  2B8B               	incf	___lwmod@counter& (0+255),f,b
  1936  0016DC                     l4531:
  1937                           
  1938                           ; BSR set to: 1
  1939  0016DC  0101               	movlb	1	; () banked
  1940  0016DE  0101               	movlb	1	; () banked
  1941  0016E0  AF89               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1942  0016E2  D7F3               	goto	l4529
  1943  0016E4                     l4533:
  1944                           
  1945                           ; BSR set to: 1
  1946  0016E4  0101               	movlb	1	; () banked
  1947  0016E6  0101               	movlb	1	; () banked
  1948  0016E8  5188               	movf	___lwmod@divisor& (0+255),w,b
  1949  0016EA  0101               	movlb	1	; () banked
  1950  0016EC  0101               	movlb	1	; () banked
  1951  0016EE  5D86               	subwf	___lwmod@dividend& (0+255),w,b
  1952  0016F0  0101               	movlb	1	; () banked
  1953  0016F2  0101               	movlb	1	; () banked
  1954  0016F4  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1955  0016F6  0101               	movlb	1	; () banked
  1956  0016F8  0101               	movlb	1	; () banked
  1957  0016FA  5987               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1958  0016FC  A0D8               	btfss	status,0,c
  1959  0016FE  D00C               	goto	l4537
  1960                           
  1961                           ; BSR set to: 1
  1962  001700  0101               	movlb	1	; () banked
  1963  001702  0101               	movlb	1	; () banked
  1964  001704  5188               	movf	___lwmod@divisor& (0+255),w,b
  1965  001706  0101               	movlb	1	; () banked
  1966  001708  0101               	movlb	1	; () banked
  1967  00170A  5F86               	subwf	___lwmod@dividend& (0+255),f,b
  1968  00170C  0101               	movlb	1	; () banked
  1969  00170E  0101               	movlb	1	; () banked
  1970  001710  5189               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1971  001712  0101               	movlb	1	; () banked
  1972  001714  0101               	movlb	1	; () banked
  1973  001716  5B87               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1974  001718                     l4537:
  1975                           
  1976                           ; BSR set to: 1
  1977  001718  0101               	movlb	1	; () banked
  1978  00171A  0101               	movlb	1	; () banked
  1979  00171C  0101               	movlb	1	; () banked
  1980  00171E  90D8               	bcf	status,0,c
  1981  001720  3389               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1982  001722  3388               	rrcf	___lwmod@divisor& (0+255),f,b
  1983                           
  1984                           ; BSR set to: 1
  1985  001724  0101               	movlb	1	; () banked
  1986  001726  0101               	movlb	1	; () banked
  1987  001728  2F8B               	decfsz	___lwmod@counter& (0+255),f,b
  1988  00172A  D7DC               	goto	l4533
  1989  00172C                     l1123:
  1990                           
  1991                           ; BSR set to: 1
  1992  00172C  C186  F186         	movff	___lwmod@dividend,?___lwmod
  1993  001730  C187  F187         	movff	___lwmod@dividend+1,?___lwmod+1
  1994                           
  1995                           ; BSR set to: 1
  1996  001734  0012               	return	
  1997  001736                     __end_of___lwmod:
  1998                           	opt stack 0
  1999                           tblptru	equ	0xFF8
  2000                           tblptrh	equ	0xFF7
  2001                           tblptrl	equ	0xFF6
  2002                           tablat	equ	0xFF5
  2003                           prodh	equ	0xFF4
  2004                           prodl	equ	0xFF3
  2005                           postinc0	equ	0xFEE
  2006                           wreg	equ	0xFE8
  2007                           indf1	equ	0xFE7
  2008                           postdec1	equ	0xFE5
  2009                           fsr1h	equ	0xFE2
  2010                           fsr1l	equ	0xFE1
  2011                           indf2	equ	0xFDF
  2012                           postinc2	equ	0xFDE
  2013                           postdec2	equ	0xFDD
  2014                           fsr2h	equ	0xFDA
  2015                           fsr2l	equ	0xFD9
  2016                           status	equ	0xFD8
  2017                           
  2018 ;; *************** function _FromMainHigh_sendmsg *****************
  2019 ;; Defined at:
  2020 ;;		line 174 in file "../src/messages.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  length          1    wreg     unsigned char 
  2023 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2024 ;;  data            2   23[BANK1 ] PTR void 
  2025 ;;		 -> main@t1thread_data(2), 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  length          1   25[BANK1 ] unsigned char 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      char 
  2030 ;; Registers used:
  2031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2037 ;;      Params:         0       0       3       0       0
  2038 ;;      Locals:         0       0       1       0       0
  2039 ;;      Temps:          0       0       0       0       0
  2040 ;;      Totals:         0       0       4       0       0
  2041 ;;Total ram usage:        4 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:   13
  2044 ;; This function calls:
  2045 ;;		_send_msg
  2046 ;; This function is called by:
  2047 ;;		_timer1_lthread
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           	psect	text4
  2052  001E54                     __ptext4:
  2053                           	opt stack 0
  2054  001E54                     _FromMainHigh_sendmsg:
  2055                           	opt stack 16
  2056                           
  2057                           ; BSR set to: 1
  2058                           ;incstack = 0
  2059                           ;FromMainHigh_sendmsg@length stored from wreg
  2060  001E54  CFE8 F19F          	movff	wreg,FromMainHigh_sendmsg@length
  2061                           
  2062                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2063  001E58  0102               	movlb	2	; () banked
  2064  001E5A  0E02               	movlw	high _FromMainHigh_MQ
  2065  001E5C  0101               	movlb	1	; () banked
  2066  001E5E  0101               	movlb	1	; () banked
  2067  001E60  6F91               	movwf	(send_msg@qptr+1)& (0+255),b
  2068  001E62  0102               	movlb	2	; () banked
  2069  001E64  0E00               	movlw	low _FromMainHigh_MQ
  2070  001E66  0101               	movlb	1	; () banked
  2071  001E68  0101               	movlb	1	; () banked
  2072  001E6A  6F90               	movwf	send_msg@qptr& (0+255),b
  2073  001E6C  C19F  F192         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2074  001E70  C19C  F193         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2075  001E74  0101               	movlb	1	; () banked
  2076  001E76  0101               	movlb	1	; () banked
  2077  001E78  C19E  F195         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2078  001E7C  0101               	movlb	1	; () banked
  2079  001E7E  0101               	movlb	1	; () banked
  2080  001E80  C19D  F194         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2081  001E84  ECCD  F006         	call	_send_msg	;wreg free
  2082  001E88  0012               	return	
  2083  001E8A                     __end_of_FromMainHigh_sendmsg:
  2084                           	opt stack 0
  2085                           tblptru	equ	0xFF8
  2086                           tblptrh	equ	0xFF7
  2087                           tblptrl	equ	0xFF6
  2088                           tablat	equ	0xFF5
  2089                           prodh	equ	0xFF4
  2090                           prodl	equ	0xFF3
  2091                           postinc0	equ	0xFEE
  2092                           wreg	equ	0xFE8
  2093                           indf1	equ	0xFE7
  2094                           postdec1	equ	0xFE5
  2095                           fsr1h	equ	0xFE2
  2096                           fsr1l	equ	0xFE1
  2097                           indf2	equ	0xFDF
  2098                           postinc2	equ	0xFDE
  2099                           postdec2	equ	0xFDD
  2100                           fsr2h	equ	0xFDA
  2101                           fsr2l	equ	0xFD9
  2102                           status	equ	0xFD8
  2103                           
  2104 ;; *************** function _timer0_lthread *****************
  2105 ;; Defined at:
  2106 ;;		line 9 in file "../src/timer0_thread.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2109 ;;		 -> main@t0thread_data(2), 
  2110 ;;  msgtype         2    2[BANK1 ] int 
  2111 ;;  length          2    4[BANK1 ] int 
  2112 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2113 ;;		 -> main@msgbuffer(11), 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2116 ;;		 -> main@msgbuffer(11), 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  2    0[BANK1 ] int 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2, status,0
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2126 ;;      Params:         0       0       8       0       0
  2127 ;;      Locals:         0       0       2       0       0
  2128 ;;      Temps:          0       0       0       0       0
  2129 ;;      Totals:         0       0      10       0       0
  2130 ;;Total ram usage:       10 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:   11
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_main
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text5
  2141  00205C                     __ptext5:
  2142                           	opt stack 0
  2143  00205C                     _timer0_lthread:
  2144                           	opt stack 19
  2145                           
  2146                           ;timer0_thread.c: 10: unsigned int *msgval;
  2147                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2148                           
  2149                           ;incstack = 0
  2150  00205C  0101               	movlb	1	; () banked
  2151  00205E  0101               	movlb	1	; () banked
  2152  002060  C18D  F18F         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2153  002064  0101               	movlb	1	; () banked
  2154  002066  0101               	movlb	1	; () banked
  2155  002068  C18C  F18E         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2156                           
  2157                           ; BSR set to: 1
  2158  00206C  0012               	return	
  2159  00206E                     __end_of_timer0_lthread:
  2160                           	opt stack 0
  2161                           tblptru	equ	0xFF8
  2162                           tblptrh	equ	0xFF7
  2163                           tblptrl	equ	0xFF6
  2164                           tablat	equ	0xFF5
  2165                           prodh	equ	0xFF4
  2166                           prodl	equ	0xFF3
  2167                           postinc0	equ	0xFEE
  2168                           wreg	equ	0xFE8
  2169                           indf1	equ	0xFE7
  2170                           postdec1	equ	0xFE5
  2171                           fsr1h	equ	0xFE2
  2172                           fsr1l	equ	0xFE1
  2173                           indf2	equ	0xFDF
  2174                           postinc2	equ	0xFDE
  2175                           postdec2	equ	0xFDD
  2176                           fsr2h	equ	0xFDA
  2177                           fsr2l	equ	0xFD9
  2178                           status	equ	0xFD8
  2179                           
  2180 ;; *************** function _init_uart_recv *****************
  2181 ;; Defined at:
  2182 ;;		line 53 in file "../src/my_uart.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2185 ;;		 -> main@uc(13), 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;		None               void
  2190 ;; Registers used:
  2191 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2197 ;;      Params:         0       0       2       0       0
  2198 ;;      Locals:         0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0
  2200 ;;      Totals:         0       0       2       0       0
  2201 ;;Total ram usage:        2 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:   11
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_main
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text6
  2212  00200A                     __ptext6:
  2213                           	opt stack 0
  2214  00200A                     _init_uart_recv:
  2215                           	opt stack 19
  2216                           
  2217                           ;my_uart.c: 56: uc_ptr = uc;
  2218                           
  2219                           ; BSR set to: 1
  2220                           ;incstack = 0
  2221  00200A  0101               	movlb	1	; () banked
  2222  00200C  C187  F053         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2223  002010  0101               	movlb	1	; () banked
  2224  002012  C186  F052         	movff	init_uart_recv@uc,_uc_ptr
  2225                           
  2226                           ; BSR set to: 1
  2227                           ;my_uart.c: 57: uc_ptr->buflen = 0;
  2228  002016  EE20 F005          	lfsr	2,5
  2229  00201A  5052               	movf	_uc_ptr,w,c
  2230  00201C  26D9               	addwf	fsr2l,f,c
  2231  00201E  5053               	movf	_uc_ptr+1,w,c
  2232  002020  22DA               	addwfc	fsr2h,f,c
  2233  002022  0E00               	movlw	0
  2234  002024  6EDF               	movwf	indf2,c
  2235                           
  2236                           ; BSR set to: 1
  2237  002026  0012               	return	
  2238  002028                     __end_of_init_uart_recv:
  2239                           	opt stack 0
  2240                           tblptru	equ	0xFF8
  2241                           tblptrh	equ	0xFF7
  2242                           tblptrl	equ	0xFF6
  2243                           tablat	equ	0xFF5
  2244                           prodh	equ	0xFF4
  2245                           prodl	equ	0xFF3
  2246                           postinc0	equ	0xFEE
  2247                           wreg	equ	0xFE8
  2248                           indf1	equ	0xFE7
  2249                           postdec1	equ	0xFE5
  2250                           fsr1h	equ	0xFE2
  2251                           fsr1l	equ	0xFE1
  2252                           indf2	equ	0xFDF
  2253                           postinc2	equ	0xFDE
  2254                           postdec2	equ	0xFDD
  2255                           fsr2h	equ	0xFDA
  2256                           fsr2l	equ	0xFD9
  2257                           status	equ	0xFD8
  2258                           
  2259 ;; *************** function _init_timer1_lthread *****************
  2260 ;; Defined at:
  2261 ;;		line 6 in file "../src/timer1_thread.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2264 ;;		 -> main@t1thread_data(2), 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;		None               void
  2269 ;; Registers used:
  2270 ;;		wreg, fsr2l, fsr2h
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2276 ;;      Params:         0       0       2       0       0
  2277 ;;      Locals:         0       0       0       0       0
  2278 ;;      Temps:          0       0       0       0       0
  2279 ;;      Totals:         0       0       2       0       0
  2280 ;;Total ram usage:        2 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:   11
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_main
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text7
  2291  00206E                     __ptext7:
  2292                           	opt stack 0
  2293  00206E                     _init_timer1_lthread:
  2294                           	opt stack 19
  2295                           
  2296                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2297                           
  2298                           ; BSR set to: 1
  2299                           ;incstack = 0
  2300  00206E  C186  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2301  002072  C187  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2302  002076  0E00               	movlw	0
  2303  002078  6EDE               	movwf	postinc2,c
  2304  00207A  0E00               	movlw	0
  2305  00207C  6EDD               	movwf	postdec2,c
  2306  00207E  0012               	return	
  2307  002080                     __end_of_init_timer1_lthread:
  2308                           	opt stack 0
  2309                           tblptru	equ	0xFF8
  2310                           tblptrh	equ	0xFF7
  2311                           tblptrl	equ	0xFF6
  2312                           tablat	equ	0xFF5
  2313                           prodh	equ	0xFF4
  2314                           prodl	equ	0xFF3
  2315                           postinc0	equ	0xFEE
  2316                           wreg	equ	0xFE8
  2317                           indf1	equ	0xFE7
  2318                           postdec1	equ	0xFE5
  2319                           fsr1h	equ	0xFE2
  2320                           fsr1l	equ	0xFE1
  2321                           indf2	equ	0xFDF
  2322                           postinc2	equ	0xFDE
  2323                           postdec2	equ	0xFDD
  2324                           fsr2h	equ	0xFDA
  2325                           fsr2l	equ	0xFD9
  2326                           status	equ	0xFD8
  2327                           
  2328 ;; *************** function _init_queues *****************
  2329 ;; Defined at:
  2330 ;;		line 194 in file "../src/messages.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;		None               void
  2337 ;; Registers used:
  2338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2344 ;;      Params:         0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0
  2346 ;;      Temps:          0       0       1       0       0
  2347 ;;      Totals:         0       0       1       0       0
  2348 ;;Total ram usage:        1 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:   12
  2351 ;; This function calls:
  2352 ;;		_init_queue
  2353 ;; This function is called by:
  2354 ;;		_main
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text8
  2359  001A18                     __ptext8:
  2360                           	opt stack 0
  2361  001A18                     _init_queues:
  2362                           	opt stack 18
  2363                           
  2364                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2365                           
  2366                           ;incstack = 0
  2367  001A18  0101               	movlb	1	; () banked
  2368  001A1A  6F8A               	movwf	??_init_queues& (0+255),b
  2369  001A1C  0E00               	movlw	0
  2370  001A1E  6E4E               	movwf	_MQ_Main_Willing_to_block,c
  2371  001A20  0101               	movlb	1	; () banked
  2372  001A22  518A               	movf	??_init_queues& (0+255),w,b
  2373                           
  2374                           ; BSR set to: 1
  2375                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2376  001A24  0101               	movlb	1	; () banked
  2377  001A26  0E01               	movlw	high _ToMainLow_MQ
  2378  001A28  0101               	movlb	1	; () banked
  2379  001A2A  0101               	movlb	1	; () banked
  2380  001A2C  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2381  001A2E  0101               	movlb	1	; () banked
  2382  001A30  0E43               	movlw	low _ToMainLow_MQ
  2383  001A32  0101               	movlb	1	; () banked
  2384  001A34  0101               	movlb	1	; () banked
  2385  001A36  6F86               	movwf	init_queue@qptr& (0+255),b
  2386  001A38  EC5D  F00C         	call	_init_queue	;wreg free
  2387                           
  2388                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2389  001A3C  0101               	movlb	1	; () banked
  2390  001A3E  0E01               	movlw	high _ToMainHigh_MQ
  2391  001A40  0101               	movlb	1	; () banked
  2392  001A42  0101               	movlb	1	; () banked
  2393  001A44  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2394  001A46  0101               	movlb	1	; () banked
  2395  001A48  0E00               	movlw	low _ToMainHigh_MQ
  2396  001A4A  0101               	movlb	1	; () banked
  2397  001A4C  0101               	movlb	1	; () banked
  2398  001A4E  6F86               	movwf	init_queue@qptr& (0+255),b
  2399  001A50  EC5D  F00C         	call	_init_queue	;wreg free
  2400                           
  2401                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2402  001A54  0102               	movlb	2	; () banked
  2403  001A56  0E02               	movlw	high _FromMainLow_MQ
  2404  001A58  0101               	movlb	1	; () banked
  2405  001A5A  0101               	movlb	1	; () banked
  2406  001A5C  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2407  001A5E  0102               	movlb	2	; () banked
  2408  001A60  0E43               	movlw	low _FromMainLow_MQ
  2409  001A62  0101               	movlb	1	; () banked
  2410  001A64  0101               	movlb	1	; () banked
  2411  001A66  6F86               	movwf	init_queue@qptr& (0+255),b
  2412  001A68  EC5D  F00C         	call	_init_queue	;wreg free
  2413                           
  2414                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2415  001A6C  0102               	movlb	2	; () banked
  2416  001A6E  0E02               	movlw	high _FromMainHigh_MQ
  2417  001A70  0101               	movlb	1	; () banked
  2418  001A72  0101               	movlb	1	; () banked
  2419  001A74  6F87               	movwf	(init_queue@qptr+1)& (0+255),b
  2420  001A76  0102               	movlb	2	; () banked
  2421  001A78  0E00               	movlw	low _FromMainHigh_MQ
  2422  001A7A  0101               	movlb	1	; () banked
  2423  001A7C  0101               	movlb	1	; () banked
  2424  001A7E  6F86               	movwf	init_queue@qptr& (0+255),b
  2425  001A80  EC5D  F00C         	call	_init_queue	;wreg free
  2426  001A84  0012               	return	
  2427  001A86                     __end_of_init_queues:
  2428                           	opt stack 0
  2429                           tblptru	equ	0xFF8
  2430                           tblptrh	equ	0xFF7
  2431                           tblptrl	equ	0xFF6
  2432                           tablat	equ	0xFF5
  2433                           prodh	equ	0xFF4
  2434                           prodl	equ	0xFF3
  2435                           postinc0	equ	0xFEE
  2436                           wreg	equ	0xFE8
  2437                           indf1	equ	0xFE7
  2438                           postdec1	equ	0xFE5
  2439                           fsr1h	equ	0xFE2
  2440                           fsr1l	equ	0xFE1
  2441                           indf2	equ	0xFDF
  2442                           postinc2	equ	0xFDE
  2443                           postdec2	equ	0xFDD
  2444                           fsr2h	equ	0xFDA
  2445                           fsr2l	equ	0xFD9
  2446                           status	equ	0xFD8
  2447                           
  2448 ;; *************** function _init_queue *****************
  2449 ;; Defined at:
  2450 ;;		line 14 in file "../src/messages.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2453 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  i               1    3[BANK1 ] unsigned char 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;		None               void
  2458 ;; Registers used:
  2459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2465 ;;      Params:         0       0       2       0       0
  2466 ;;      Locals:         0       0       1       0       0
  2467 ;;      Temps:          0       0       1       0       0
  2468 ;;      Totals:         0       0       4       0       0
  2469 ;;Total ram usage:        4 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:   11
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_init_queues
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text9
  2480  0018BA                     __ptext9:
  2481                           	opt stack 0
  2482  0018BA                     _init_queue:
  2483                           	opt stack 18
  2484                           
  2485                           ;messages.c: 15: unsigned char i;
  2486                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2487                           
  2488                           ;incstack = 0
  2489  0018BA  0101               	movlb	1	; () banked
  2490  0018BC  EE20 F041          	lfsr	2,65
  2491  0018C0  0101               	movlb	1	; () banked
  2492  0018C2  5186               	movf	init_queue@qptr& (0+255),w,b
  2493  0018C4  26D9               	addwf	fsr2l,f,c
  2494  0018C6  0101               	movlb	1	; () banked
  2495  0018C8  5187               	movf	(init_queue@qptr+1)& (0+255),w,b
  2496  0018CA  22DA               	addwfc	fsr2h,f,c
  2497  0018CC  0E00               	movlw	0
  2498  0018CE  6EDF               	movwf	indf2,c
  2499                           
  2500                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2501  0018D0  0101               	movlb	1	; () banked
  2502  0018D2  EE20 F042          	lfsr	2,66
  2503  0018D6  0101               	movlb	1	; () banked
  2504  0018D8  5186               	movf	init_queue@qptr& (0+255),w,b
  2505  0018DA  26D9               	addwf	fsr2l,f,c
  2506  0018DC  0101               	movlb	1	; () banked
  2507  0018DE  5187               	movf	(init_queue@qptr+1)& (0+255),w,b
  2508  0018E0  22DA               	addwfc	fsr2h,f,c
  2509  0018E2  0E00               	movlw	0
  2510  0018E4  6EDF               	movwf	indf2,c
  2511                           
  2512                           ; BSR set to: 1
  2513                           ;messages.c: 19: for (i = 0; i < 5; i++) {
  2514  0018E6  0101               	movlb	1	; () banked
  2515  0018E8  6F88               	movwf	??_init_queue& (0+255),b
  2516  0018EA  0E00               	movlw	0
  2517  0018EC  0101               	movlb	1	; () banked
  2518  0018EE  0101               	movlb	1	; () banked
  2519  0018F0  6F89               	movwf	init_queue@i& (0+255),b
  2520  0018F2  0101               	movlb	1	; () banked
  2521  0018F4  5188               	movf	??_init_queue& (0+255),w,b
  2522                           
  2523                           ; BSR set to: 1
  2524  0018F6  0E04               	movlw	4
  2525  0018F8  0101               	movlb	1	; () banked
  2526  0018FA  0101               	movlb	1	; () banked
  2527  0018FC  6589               	cpfsgt	init_queue@i& (0+255),b
  2528  0018FE  D001               	goto	l4115
  2529  001900  0012               	return	
  2530  001902                     l4115:
  2531                           
  2532                           ; BSR set to: 1
  2533                           ;messages.c: 20: qptr->queue[i].full = 0;
  2534  001902  0101               	movlb	1	; () banked
  2535  001904  0101               	movlb	1	; () banked
  2536  001906  5189               	movf	init_queue@i& (0+255),w,b
  2537  001908  0D0D               	mullw	13
  2538  00190A  50F3               	movf	prodl,w,c
  2539  00190C  0101               	movlb	1	; () banked
  2540  00190E  0101               	movlb	1	; () banked
  2541  001910  2586               	addwf	init_queue@qptr& (0+255),w,b
  2542  001912  6ED9               	movwf	fsr2l,c
  2543  001914  50F4               	movf	prodh,w,c
  2544  001916  0101               	movlb	1	; () banked
  2545  001918  0101               	movlb	1	; () banked
  2546  00191A  2187               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2547  00191C  6EDA               	movwf	fsr2h,c
  2548  00191E  0E00               	movlw	0
  2549  001920  6EDF               	movwf	indf2,c
  2550                           
  2551                           ; BSR set to: 1
  2552  001922  0101               	movlb	1	; () banked
  2553  001924  0101               	movlb	1	; () banked
  2554  001926  2B89               	incf	init_queue@i& (0+255),f,b
  2555                           
  2556                           ; BSR set to: 1
  2557  001928  0E04               	movlw	4
  2558  00192A  0101               	movlb	1	; () banked
  2559  00192C  0101               	movlb	1	; () banked
  2560  00192E  6589               	cpfsgt	init_queue@i& (0+255),b
  2561  001930  D7E8               	goto	l4115
  2562  001932  0012               	return	
  2563  001934                     __end_of_init_queue:
  2564                           	opt stack 0
  2565                           tblptru	equ	0xFF8
  2566                           tblptrh	equ	0xFF7
  2567                           tblptrl	equ	0xFF6
  2568                           tablat	equ	0xFF5
  2569                           prodh	equ	0xFF4
  2570                           prodl	equ	0xFF3
  2571                           postinc0	equ	0xFEE
  2572                           wreg	equ	0xFE8
  2573                           indf1	equ	0xFE7
  2574                           postdec1	equ	0xFE5
  2575                           fsr1h	equ	0xFE2
  2576                           fsr1l	equ	0xFE1
  2577                           indf2	equ	0xFDF
  2578                           postinc2	equ	0xFDE
  2579                           postdec2	equ	0xFDD
  2580                           fsr2h	equ	0xFDA
  2581                           fsr2l	equ	0xFD9
  2582                           status	equ	0xFD8
  2583                           
  2584 ;; *************** function _init_i2c *****************
  2585 ;; Defined at:
  2586 ;;		line 453 in file "../src/my_i2c.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  2589 ;;		 -> main@ic(29), 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;		None               void
  2594 ;; Registers used:
  2595 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2601 ;;      Params:         0       0       2       0       0
  2602 ;;      Locals:         0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0
  2604 ;;      Totals:         0       0       2       0       0
  2605 ;;Total ram usage:        2 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:   11
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text10
  2616  001BFE                     __ptext10:
  2617                           	opt stack 0
  2618  001BFE                     _init_i2c:
  2619                           	opt stack 19
  2620                           
  2621                           ;my_i2c.c: 454: ic_ptr = ic;
  2622                           
  2623                           ; BSR set to: 1
  2624                           ;incstack = 0
  2625  001BFE  0101               	movlb	1	; () banked
  2626  001C00  C187  F051         	movff	init_i2c@ic+1,_ic_ptr+1
  2627  001C04  0101               	movlb	1	; () banked
  2628  001C06  C186  F050         	movff	init_i2c@ic,_ic_ptr
  2629                           
  2630                           ; BSR set to: 1
  2631                           ;my_i2c.c: 455: ic_ptr->buflen = 0;
  2632  001C0A  EE20 F00A          	lfsr	2,10
  2633  001C0E  5050               	movf	_ic_ptr,w,c
  2634  001C10  26D9               	addwf	fsr2l,f,c
  2635  001C12  5051               	movf	_ic_ptr+1,w,c
  2636  001C14  22DA               	addwfc	fsr2h,f,c
  2637  001C16  0E00               	movlw	0
  2638  001C18  6EDF               	movwf	indf2,c
  2639                           
  2640                           ; BSR set to: 1
  2641                           ;my_i2c.c: 456: ic_ptr->event_count = 0;
  2642  001C1A  EE20 F00C          	lfsr	2,12
  2643  001C1E  5050               	movf	_ic_ptr,w,c
  2644  001C20  26D9               	addwf	fsr2l,f,c
  2645  001C22  5051               	movf	_ic_ptr+1,w,c
  2646  001C24  22DA               	addwfc	fsr2h,f,c
  2647  001C26  0E00               	movlw	0
  2648  001C28  6EDF               	movwf	indf2,c
  2649                           
  2650                           ; BSR set to: 1
  2651                           ;my_i2c.c: 457: ic_ptr->status = 0x5;
  2652  001C2A  EE20 F00D          	lfsr	2,13
  2653  001C2E  5050               	movf	_ic_ptr,w,c
  2654  001C30  26D9               	addwf	fsr2l,f,c
  2655  001C32  5051               	movf	_ic_ptr+1,w,c
  2656  001C34  22DA               	addwfc	fsr2h,f,c
  2657  001C36  0E05               	movlw	5
  2658  001C38  6EDF               	movwf	indf2,c
  2659                           
  2660                           ; BSR set to: 1
  2661                           ;my_i2c.c: 458: ic_ptr->error_count = 0;
  2662  001C3A  EE20 F00F          	lfsr	2,15
  2663  001C3E  5050               	movf	_ic_ptr,w,c
  2664  001C40  26D9               	addwf	fsr2l,f,c
  2665  001C42  5051               	movf	_ic_ptr+1,w,c
  2666  001C44  22DA               	addwfc	fsr2h,f,c
  2667  001C46  0E00               	movlw	0
  2668  001C48  6EDF               	movwf	indf2,c
  2669                           
  2670                           ; BSR set to: 1
  2671  001C4A  0012               	return	
  2672  001C4C                     __end_of_init_i2c:
  2673                           	opt stack 0
  2674                           tblptru	equ	0xFF8
  2675                           tblptrh	equ	0xFF7
  2676                           tblptrl	equ	0xFF6
  2677                           tablat	equ	0xFF5
  2678                           prodh	equ	0xFF4
  2679                           prodl	equ	0xFF3
  2680                           postinc0	equ	0xFEE
  2681                           wreg	equ	0xFE8
  2682                           indf1	equ	0xFE7
  2683                           postdec1	equ	0xFE5
  2684                           fsr1h	equ	0xFE2
  2685                           fsr1l	equ	0xFE1
  2686                           indf2	equ	0xFDF
  2687                           postinc2	equ	0xFDE
  2688                           postdec2	equ	0xFDD
  2689                           fsr2h	equ	0xFDA
  2690                           fsr2l	equ	0xFD9
  2691                           status	equ	0xFD8
  2692                           
  2693 ;; *************** function _i2c_configure_slave *****************
  2694 ;; Defined at:
  2695 ;;		line 464 in file "../src/my_i2c.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  addr            1    wreg     unsigned char 
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;  addr            1    0[BANK1 ] unsigned char 
  2700 ;; Return value:  Size  Location     Type
  2701 ;;		None               void
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/0
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2709 ;;      Params:         0       0       0       0       0
  2710 ;;      Locals:         0       0       1       0       0
  2711 ;;      Temps:          0       0       0       0       0
  2712 ;;      Totals:         0       0       1       0       0
  2713 ;;Total ram usage:        1 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:   11
  2716 ;; This function calls:
  2717 ;;		Nothing
  2718 ;; This function is called by:
  2719 ;;		_main
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text11
  2724  001F56                     __ptext11:
  2725                           	opt stack 0
  2726  001F56                     _i2c_configure_slave:
  2727                           	opt stack 19
  2728                           
  2729                           ; BSR set to: 1
  2730                           ;incstack = 0
  2731                           ;i2c_configure_slave@addr stored from wreg
  2732  001F56  CFE8 F186          	movff	wreg,i2c_configure_slave@addr
  2733                           
  2734                           ;my_i2c.c: 476: TRISCbits.TRISC3 = 1;
  2735  001F5A  8694               	bsf	3988,3,c	;volatile
  2736                           
  2737                           ;my_i2c.c: 477: TRISCbits.TRISC4 = 1;
  2738  001F5C  8894               	bsf	3988,4,c	;volatile
  2739                           
  2740                           ;my_i2c.c: 482: SSPADD = addr;
  2741  001F5E  C186  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  2742                           
  2743                           ;my_i2c.c: 484: SSPSTAT = 0x0;
  2744  001F62  0E00               	movlw	0
  2745  001F64  6EC7               	movwf	4039,c	;volatile
  2746                           
  2747                           ;my_i2c.c: 485: SSPCON1 = 0x0;
  2748  001F66  0E00               	movlw	0
  2749  001F68  6EC6               	movwf	4038,c	;volatile
  2750                           
  2751                           ;my_i2c.c: 486: SSPCON2 = 0x0;
  2752  001F6A  0E00               	movlw	0
  2753  001F6C  6EC5               	movwf	4037,c	;volatile
  2754                           
  2755                           ;my_i2c.c: 487: SSPCON1 |= 0x0E;
  2756  001F6E  0E0E               	movlw	14
  2757  001F70  12C6               	iorwf	4038,f,c	;volatile
  2758                           
  2759                           ;my_i2c.c: 488: SSPSTAT |= 0b10000000;
  2760  001F72  8EC7               	bsf	4039,7,c	;volatile
  2761                           
  2762                           ;my_i2c.c: 491: TRISCbits.TRISC3 = 1;
  2763  001F74  8694               	bsf	3988,3,c	;volatile
  2764                           
  2765                           ;my_i2c.c: 492: TRISCbits.TRISC4 = 1;
  2766  001F76  8894               	bsf	3988,4,c	;volatile
  2767                           
  2768                           ;my_i2c.c: 513: SSPCON2bits.SEN = 1;
  2769  001F78  80C5               	bsf	4037,0,c	;volatile
  2770                           
  2771                           ;my_i2c.c: 514: SSPCON1 |= 0b00100000;
  2772  001F7A  8AC6               	bsf	4038,5,c	;volatile
  2773  001F7C  0012               	return	
  2774  001F7E                     __end_of_i2c_configure_slave:
  2775                           	opt stack 0
  2776                           tblptru	equ	0xFF8
  2777                           tblptrh	equ	0xFF7
  2778                           tblptrl	equ	0xFF6
  2779                           tablat	equ	0xFF5
  2780                           prodh	equ	0xFF4
  2781                           prodl	equ	0xFF3
  2782                           postinc0	equ	0xFEE
  2783                           wreg	equ	0xFE8
  2784                           indf1	equ	0xFE7
  2785                           postdec1	equ	0xFE5
  2786                           fsr1h	equ	0xFE2
  2787                           fsr1l	equ	0xFE1
  2788                           indf2	equ	0xFDF
  2789                           postinc2	equ	0xFDE
  2790                           postdec2	equ	0xFDD
  2791                           fsr2h	equ	0xFDA
  2792                           fsr2l	equ	0xFD9
  2793                           status	equ	0xFD8
  2794                           
  2795 ;; *************** function _enable_interrupts *****************
  2796 ;; Defined at:
  2797 ;;		line 15 in file "../src/interrupts.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;		None               void
  2804 ;; Registers used:
  2805 ;;		None
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2811 ;;      Params:         0       0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0
  2814 ;;      Totals:         0       0       0       0       0
  2815 ;;Total ram usage:        0 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:   11
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_main
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text12
  2826  0020EE                     __ptext12:
  2827                           	opt stack 0
  2828  0020EE                     _enable_interrupts:
  2829                           	opt stack 19
  2830                           
  2831                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  2832                           
  2833                           ;incstack = 0
  2834  0020EE  8ED0               	bsf	4048,7,c	;volatile
  2835                           
  2836                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  2837  0020F0  8EF2               	bsf	intcon,7,c	;volatile
  2838                           
  2839                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  2840  0020F2  8CF2               	bsf	intcon,6,c	;volatile
  2841  0020F4  0012               	return	
  2842  0020F6                     __end_of_enable_interrupts:
  2843                           	opt stack 0
  2844                           tblptru	equ	0xFF8
  2845                           tblptrh	equ	0xFF7
  2846                           tblptrl	equ	0xFF6
  2847                           tablat	equ	0xFF5
  2848                           prodh	equ	0xFF4
  2849                           prodl	equ	0xFF3
  2850                           intcon	equ	0xFF2
  2851                           postinc0	equ	0xFEE
  2852                           wreg	equ	0xFE8
  2853                           indf1	equ	0xFE7
  2854                           postdec1	equ	0xFE5
  2855                           fsr1h	equ	0xFE2
  2856                           fsr1l	equ	0xFE1
  2857                           indf2	equ	0xFDF
  2858                           postinc2	equ	0xFDE
  2859                           postdec2	equ	0xFDD
  2860                           fsr2h	equ	0xFDA
  2861                           fsr2l	equ	0xFD9
  2862                           status	equ	0xFD8
  2863                           
  2864 ;; *************** function _block_on_To_msgqueues *****************
  2865 ;; Defined at:
  2866 ;;		line 258 in file "../src/messages.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;		None               void
  2873 ;; Registers used:
  2874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2880 ;;      Params:         0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0
  2882 ;;      Temps:          0       0       1       0       0
  2883 ;;      Totals:         0       0       1       0       0
  2884 ;;Total ram usage:        1 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:   14
  2887 ;; This function calls:
  2888 ;;		_Delay1KTCYx
  2889 ;;		_check_msg
  2890 ;;		_in_main
  2891 ;; This function is called by:
  2892 ;;		_main
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text13
  2897  00183C                     __ptext13:
  2898                           	opt stack 0
  2899  00183C                     _block_on_To_msgqueues:
  2900                           	opt stack 16
  2901                           
  2902                           ;messages.c: 259: if (!in_main()) {
  2903                           
  2904                           ;incstack = 0
  2905  00183C  EC49  F00E         	call	_in_main	;wreg free
  2906  001840  0101               	movlb	1	; () banked
  2907  001842  0101               	movlb	1	; () banked
  2908  001844  518B               	movf	(?_in_main+1)& (0+255),w,b
  2909  001846  0101               	movlb	1	; () banked
  2910  001848  118A               	iorwf	?_in_main& (0+255),w,b
  2911  00184A  B4D8               	btfsc	status,2,c
  2912  00184C  0012               	return	
  2913                           
  2914                           ; BSR set to: 1
  2915                           ;messages.c: 261: }
  2916                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  2917                           
  2918                           ; BSR set to: 1
  2919                           
  2920                           ; BSR set to: 1
  2921                           ;messages.c: 260: return;
  2922  00184E  0101               	movlb	1	; () banked
  2923  001850  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  2924  001852  0E01               	movlw	1
  2925  001854  6E4E               	movwf	_MQ_Main_Willing_to_block,c
  2926  001856  0101               	movlb	1	; () banked
  2927  001858  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2928  00185A                     l4059:
  2929                           
  2930                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  2931  00185A  0101               	movlb	1	; () banked
  2932  00185C  0E01               	movlw	high _ToMainHigh_MQ
  2933  00185E  0101               	movlb	1	; () banked
  2934  001860  0101               	movlb	1	; () banked
  2935  001862  6F87               	movwf	(check_msg@qptr+1)& (0+255),b
  2936  001864  0101               	movlb	1	; () banked
  2937  001866  0E00               	movlw	low _ToMainHigh_MQ
  2938  001868  0101               	movlb	1	; () banked
  2939  00186A  0101               	movlb	1	; () banked
  2940  00186C  6F86               	movwf	check_msg@qptr& (0+255),b
  2941  00186E  EC45  F00F         	call	_check_msg	;wreg free
  2942  001872  0900               	iorlw	0
  2943  001874  B4D8               	btfsc	status,2,c
  2944  001876  D007               	goto	l4065
  2945                           
  2946                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  2947  001878  0101               	movlb	1	; () banked
  2948  00187A  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  2949  00187C  0E00               	movlw	0
  2950  00187E  6E4E               	movwf	_MQ_Main_Willing_to_block,c
  2951  001880  0101               	movlb	1	; () banked
  2952  001882  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2953  001884  0012               	return	
  2954  001886                     l4065:
  2955                           
  2956                           ;messages.c: 271: }
  2957                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  2958  001886  0101               	movlb	1	; () banked
  2959  001888  0E01               	movlw	high _ToMainLow_MQ
  2960  00188A  0101               	movlb	1	; () banked
  2961  00188C  0101               	movlb	1	; () banked
  2962  00188E  6F87               	movwf	(check_msg@qptr+1)& (0+255),b
  2963  001890  0101               	movlb	1	; () banked
  2964  001892  0E43               	movlw	low _ToMainLow_MQ
  2965  001894  0101               	movlb	1	; () banked
  2966  001896  0101               	movlb	1	; () banked
  2967  001898  6F86               	movwf	check_msg@qptr& (0+255),b
  2968  00189A  EC45  F00F         	call	_check_msg	;wreg free
  2969  00189E  0900               	iorlw	0
  2970  0018A0  B4D8               	btfsc	status,2,c
  2971  0018A2  D007               	goto	l4071
  2972                           
  2973                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  2974  0018A4  0101               	movlb	1	; () banked
  2975  0018A6  6F8C               	movwf	??_block_on_To_msgqueues& (0+255),b
  2976  0018A8  0E00               	movlw	0
  2977  0018AA  6E4E               	movwf	_MQ_Main_Willing_to_block,c
  2978  0018AC  0101               	movlb	1	; () banked
  2979  0018AE  518C               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2980  0018B0  0012               	return	
  2981  0018B2                     l4071:
  2982                           
  2983                           ;messages.c: 278: }
  2984                           ;messages.c: 279: Delay1KTCYx(10);
  2985  0018B2  0E0A               	movlw	10
  2986  0018B4  EC23  F010         	call	_Delay1KTCYx
  2987  0018B8  D7D0               	goto	l4059
  2988  0018BA                     __end_of_block_on_To_msgqueues:
  2989                           	opt stack 0
  2990                           tblptru	equ	0xFF8
  2991                           tblptrh	equ	0xFF7
  2992                           tblptrl	equ	0xFF6
  2993                           tablat	equ	0xFF5
  2994                           prodh	equ	0xFF4
  2995                           prodl	equ	0xFF3
  2996                           intcon	equ	0xFF2
  2997                           postinc0	equ	0xFEE
  2998                           wreg	equ	0xFE8
  2999                           indf1	equ	0xFE7
  3000                           postdec1	equ	0xFE5
  3001                           fsr1h	equ	0xFE2
  3002                           fsr1l	equ	0xFE1
  3003                           indf2	equ	0xFDF
  3004                           postinc2	equ	0xFDE
  3005                           postdec2	equ	0xFDD
  3006                           fsr2h	equ	0xFDA
  3007                           fsr2l	equ	0xFD9
  3008                           status	equ	0xFD8
  3009                           
  3010 ;; *************** function _in_main *****************
  3011 ;; Defined at:
  3012 ;;		line 41 in file "../src/interrupts.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;		None
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  2    4[BANK1 ] int 
  3019 ;; Registers used:
  3020 ;;		wreg, status,2, status,0, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3026 ;;      Params:         0       0       2       0       0
  3027 ;;      Locals:         0       0       0       0       0
  3028 ;;      Temps:          0       0       0       0       0
  3029 ;;      Totals:         0       0       2       0       0
  3030 ;;Total ram usage:        2 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:   13
  3033 ;; This function calls:
  3034 ;;		_in_high_int
  3035 ;;		_in_low_int
  3036 ;; This function is called by:
  3037 ;;		_block_on_To_msgqueues
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text14
  3042  001C92                     __ptext14:
  3043                           	opt stack 0
  3044  001C92                     _in_main:
  3045                           	opt stack 16
  3046                           
  3047                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  3048                           
  3049                           ;incstack = 0
  3050  001C92  EC26  F00E         	call	_in_low_int	;wreg free
  3051  001C96  0101               	movlb	1	; () banked
  3052  001C98  0101               	movlb	1	; () banked
  3053  001C9A  5189               	movf	(?_in_low_int+1)& (0+255),w,b
  3054  001C9C  0101               	movlb	1	; () banked
  3055  001C9E  1188               	iorwf	?_in_low_int& (0+255),w,b
  3056  001CA0  A4D8               	btfss	status,2,c
  3057  001CA2  D011               	goto	l3779
  3058                           
  3059                           ; BSR set to: 1
  3060  001CA4  EC40  F010         	call	_in_high_int	;wreg free
  3061  001CA8  0101               	movlb	1	; () banked
  3062  001CAA  0101               	movlb	1	; () banked
  3063  001CAC  5187               	movf	(?_in_high_int+1)& (0+255),w,b
  3064  001CAE  0101               	movlb	1	; () banked
  3065  001CB0  1186               	iorwf	?_in_high_int& (0+255),w,b
  3066  001CB2  A4D8               	btfss	status,2,c
  3067  001CB4  D008               	goto	l3779
  3068                           
  3069                           ; BSR set to: 1
  3070                           ;interrupts.c: 43: return (1);
  3071  001CB6  0E00               	movlw	0
  3072  001CB8  0101               	movlb	1	; () banked
  3073  001CBA  0101               	movlb	1	; () banked
  3074  001CBC  6F8B               	movwf	(?_in_main+1)& (0+255),b
  3075  001CBE  0E01               	movlw	1
  3076  001CC0  0101               	movlb	1	; () banked
  3077  001CC2  6F8A               	movwf	?_in_main& (0+255),b
  3078  001CC4  0012               	return	
  3079  001CC6                     l3779:
  3080                           
  3081                           ; BSR set to: 1
  3082                           ;interrupts.c: 45: return (0);
  3083  001CC6  0E00               	movlw	0
  3084  001CC8  0101               	movlb	1	; () banked
  3085  001CCA  0101               	movlb	1	; () banked
  3086  001CCC  6F8B               	movwf	(?_in_main+1)& (0+255),b
  3087  001CCE  0E00               	movlw	0
  3088  001CD0  0101               	movlb	1	; () banked
  3089  001CD2  6F8A               	movwf	?_in_main& (0+255),b
  3090  001CD4  0012               	return	
  3091  001CD6                     __end_of_in_main:
  3092                           	opt stack 0
  3093                           tblptru	equ	0xFF8
  3094                           tblptrh	equ	0xFF7
  3095                           tblptrl	equ	0xFF6
  3096                           tablat	equ	0xFF5
  3097                           prodh	equ	0xFF4
  3098                           prodl	equ	0xFF3
  3099                           intcon	equ	0xFF2
  3100                           postinc0	equ	0xFEE
  3101                           wreg	equ	0xFE8
  3102                           indf1	equ	0xFE7
  3103                           postdec1	equ	0xFE5
  3104                           fsr1h	equ	0xFE2
  3105                           fsr1l	equ	0xFE1
  3106                           indf2	equ	0xFDF
  3107                           postinc2	equ	0xFDE
  3108                           postdec2	equ	0xFDD
  3109                           fsr2h	equ	0xFDA
  3110                           fsr2l	equ	0xFD9
  3111                           status	equ	0xFD8
  3112                           
  3113 ;; *************** function _in_low_int *****************
  3114 ;; Defined at:
  3115 ;;		line 31 in file "../src/interrupts.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  2    2[BANK1 ] int 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3129 ;;      Params:         0       0       2       0       0
  3130 ;;      Locals:         0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0
  3132 ;;      Totals:         0       0       2       0       0
  3133 ;;Total ram usage:        2 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:   12
  3136 ;; This function calls:
  3137 ;;		_in_high_int
  3138 ;; This function is called by:
  3139 ;;		_in_main
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text15
  3144  001C4C                     __ptext15:
  3145                           	opt stack 0
  3146  001C4C                     _in_low_int:
  3147                           	opt stack 16
  3148                           
  3149                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  3150                           
  3151                           ; BSR set to: 1
  3152                           ;incstack = 0
  3153  001C4C  ACF2               	btfss	intcon,6,c	;volatile
  3154  001C4E  D008               	goto	l3757
  3155                           
  3156                           ;interrupts.c: 33: return (0);
  3157  001C50  0E00               	movlw	0
  3158  001C52  0101               	movlb	1	; () banked
  3159  001C54  0101               	movlb	1	; () banked
  3160  001C56  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3161  001C58  0E00               	movlw	0
  3162  001C5A  0101               	movlb	1	; () banked
  3163  001C5C  6F88               	movwf	?_in_low_int& (0+255),b
  3164  001C5E  0012               	return	
  3165  001C60                     l3757:
  3166  001C60  EC40  F010         	call	_in_high_int	;wreg free
  3167  001C64  0101               	movlb	1	; () banked
  3168  001C66  0101               	movlb	1	; () banked
  3169  001C68  5187               	movf	(?_in_high_int+1)& (0+255),w,b
  3170  001C6A  0101               	movlb	1	; () banked
  3171  001C6C  1186               	iorwf	?_in_high_int& (0+255),w,b
  3172  001C6E  B4D8               	btfsc	status,2,c
  3173  001C70  D008               	goto	l3765
  3174                           
  3175                           ; BSR set to: 1
  3176                           ;interrupts.c: 35: return (0);
  3177  001C72  0E00               	movlw	0
  3178  001C74  0101               	movlb	1	; () banked
  3179  001C76  0101               	movlb	1	; () banked
  3180  001C78  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3181  001C7A  0E00               	movlw	0
  3182  001C7C  0101               	movlb	1	; () banked
  3183  001C7E  6F88               	movwf	?_in_low_int& (0+255),b
  3184  001C80  0012               	return	
  3185  001C82                     l3765:
  3186                           
  3187                           ; BSR set to: 1
  3188                           ;interrupts.c: 37: return (1);
  3189  001C82  0E00               	movlw	0
  3190  001C84  0101               	movlb	1	; () banked
  3191  001C86  0101               	movlb	1	; () banked
  3192  001C88  6F89               	movwf	(?_in_low_int+1)& (0+255),b
  3193  001C8A  0E01               	movlw	1
  3194  001C8C  0101               	movlb	1	; () banked
  3195  001C8E  6F88               	movwf	?_in_low_int& (0+255),b
  3196  001C90  0012               	return	
  3197  001C92                     __end_of_in_low_int:
  3198                           	opt stack 0
  3199                           tblptru	equ	0xFF8
  3200                           tblptrh	equ	0xFF7
  3201                           tblptrl	equ	0xFF6
  3202                           tablat	equ	0xFF5
  3203                           prodh	equ	0xFF4
  3204                           prodl	equ	0xFF3
  3205                           intcon	equ	0xFF2
  3206                           postinc0	equ	0xFEE
  3207                           wreg	equ	0xFE8
  3208                           indf1	equ	0xFE7
  3209                           postdec1	equ	0xFE5
  3210                           fsr1h	equ	0xFE2
  3211                           fsr1l	equ	0xFE1
  3212                           indf2	equ	0xFDF
  3213                           postinc2	equ	0xFDE
  3214                           postdec2	equ	0xFDD
  3215                           fsr2h	equ	0xFDA
  3216                           fsr2l	equ	0xFD9
  3217                           status	equ	0xFD8
  3218                           
  3219 ;; *************** function _in_high_int *****************
  3220 ;; Defined at:
  3221 ;;		line 23 in file "../src/interrupts.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;		None
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;		None
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  2    0[BANK1 ] int 
  3228 ;; Registers used:
  3229 ;;		wreg, status,2
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3235 ;;      Params:         0       0       2       0       0
  3236 ;;      Locals:         0       0       0       0       0
  3237 ;;      Temps:          0       0       0       0       0
  3238 ;;      Totals:         0       0       2       0       0
  3239 ;;Total ram usage:        2 bytes
  3240 ;; Hardware stack levels used:    1
  3241 ;; Hardware stack levels required when called:   11
  3242 ;; This function calls:
  3243 ;;		Nothing
  3244 ;; This function is called by:
  3245 ;;		_in_low_int
  3246 ;;		_in_main
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           	psect	text16
  3251  002080                     __ptext16:
  3252                           	opt stack 0
  3253  002080                     _in_high_int:
  3254                           	opt stack 16
  3255                           
  3256                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  3257                           
  3258                           ; BSR set to: 1
  3259                           ;incstack = 0
  3260  002080  0E00               	movlw	0
  3261  002082  AEF2               	btfss	intcon,7,c	;volatile
  3262  002084  0E01               	movlw	1
  3263  002086  0101               	movlb	1	; () banked
  3264  002088  0101               	movlb	1	; () banked
  3265  00208A  6F86               	movwf	?_in_high_int& (0+255),b
  3266  00208C  0101               	movlb	1	; () banked
  3267  00208E  6B87               	clrf	(?_in_high_int+1)& (0+255),b
  3268  002090  0012               	return	
  3269  002092                     __end_of_in_high_int:
  3270                           	opt stack 0
  3271                           tblptru	equ	0xFF8
  3272                           tblptrh	equ	0xFF7
  3273                           tblptrl	equ	0xFF6
  3274                           tablat	equ	0xFF5
  3275                           prodh	equ	0xFF4
  3276                           prodl	equ	0xFF3
  3277                           intcon	equ	0xFF2
  3278                           postinc0	equ	0xFEE
  3279                           wreg	equ	0xFE8
  3280                           indf1	equ	0xFE7
  3281                           postdec1	equ	0xFE5
  3282                           fsr1h	equ	0xFE2
  3283                           fsr1l	equ	0xFE1
  3284                           indf2	equ	0xFDF
  3285                           postinc2	equ	0xFDE
  3286                           postdec2	equ	0xFDD
  3287                           fsr2h	equ	0xFDA
  3288                           fsr2l	equ	0xFD9
  3289                           status	equ	0xFD8
  3290                           
  3291 ;; *************** function _check_msg *****************
  3292 ;; Defined at:
  3293 ;;		line 222 in file "../src/messages.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3296 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      unsigned char 
  3301 ;; Registers used:
  3302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3308 ;;      Params:         0       0       2       0       0
  3309 ;;      Locals:         0       0       0       0       0
  3310 ;;      Temps:          0       0       1       0       0
  3311 ;;      Totals:         0       0       3       0       0
  3312 ;;Total ram usage:        3 bytes
  3313 ;; Hardware stack levels used:    1
  3314 ;; Hardware stack levels required when called:   11
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_block_on_To_msgqueues
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           	psect	text17
  3323  001E8A                     __ptext17:
  3324                           	opt stack 0
  3325  001E8A                     _check_msg:
  3326                           	opt stack 18
  3327                           
  3328                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3329                           
  3330                           ; BSR set to: 1
  3331                           ;incstack = 0
  3332  001E8A  0101               	movlb	1	; () banked
  3333  001E8C  EE20 F042          	lfsr	2,66
  3334  001E90  0101               	movlb	1	; () banked
  3335  001E92  5186               	movf	check_msg@qptr& (0+255),w,b
  3336  001E94  26D9               	addwf	fsr2l,f,c
  3337  001E96  0101               	movlb	1	; () banked
  3338  001E98  5187               	movf	(check_msg@qptr+1)& (0+255),w,b
  3339  001E9A  22DA               	addwfc	fsr2h,f,c
  3340  001E9C  50DF               	movf	indf2,w,c
  3341  001E9E  0101               	movlb	1	; () banked
  3342  001EA0  6F88               	movwf	??_check_msg& (0+255),b
  3343  001EA2  0101               	movlb	1	; () banked
  3344  001EA4  5188               	movf	??_check_msg& (0+255),w,b
  3345  001EA6  0D0D               	mullw	13
  3346  001EA8  50F3               	movf	prodl,w,c
  3347  001EAA  0101               	movlb	1	; () banked
  3348  001EAC  0101               	movlb	1	; () banked
  3349  001EAE  2586               	addwf	check_msg@qptr& (0+255),w,b
  3350  001EB0  6ED9               	movwf	fsr2l,c
  3351  001EB2  50F4               	movf	prodh,w,c
  3352  001EB4  0101               	movlb	1	; () banked
  3353  001EB6  0101               	movlb	1	; () banked
  3354  001EB8  2187               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3355  001EBA  6EDA               	movwf	fsr2h,c
  3356  001EBC  50DF               	movf	indf2,w,c
  3357  001EBE  0012               	return	
  3358  001EC0                     __end_of_check_msg:
  3359                           	opt stack 0
  3360                           tblptru	equ	0xFF8
  3361                           tblptrh	equ	0xFF7
  3362                           tblptrl	equ	0xFF6
  3363                           tablat	equ	0xFF5
  3364                           prodh	equ	0xFF4
  3365                           prodl	equ	0xFF3
  3366                           intcon	equ	0xFF2
  3367                           postinc0	equ	0xFEE
  3368                           wreg	equ	0xFE8
  3369                           indf1	equ	0xFE7
  3370                           postdec1	equ	0xFE5
  3371                           fsr1h	equ	0xFE2
  3372                           fsr1l	equ	0xFE1
  3373                           indf2	equ	0xFDF
  3374                           postinc2	equ	0xFDE
  3375                           postdec2	equ	0xFDD
  3376                           fsr2h	equ	0xFDA
  3377                           fsr2l	equ	0xFD9
  3378                           status	equ	0xFD8
  3379                           
  3380 ;; *************** function _Delay1KTCYx *****************
  3381 ;; Defined at:
  3382 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  unit            1    wreg     unsigned char 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  unit            1    0[BANK1 ] unsigned char 
  3387 ;; Return value:  Size  Location     Type
  3388 ;;		None               void
  3389 ;; Registers used:
  3390 ;;		wreg
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3396 ;;      Params:         0       0       0       0       0
  3397 ;;      Locals:         0       0       1       0       0
  3398 ;;      Temps:          0       0       0       0       0
  3399 ;;      Totals:         0       0       1       0       0
  3400 ;;Total ram usage:        1 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; Hardware stack levels required when called:   11
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_block_on_To_msgqueues
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text18
  3411  002046                     __ptext18:
  3412                           	opt stack 0
  3413  002046                     _Delay1KTCYx:
  3414                           	opt stack 18
  3415                           
  3416                           ; BSR set to: 1
  3417                           ;incstack = 0
  3418                           ;Delay1KTCYx@unit stored from wreg
  3419  002046  CFE8 F186          	movff	wreg,Delay1KTCYx@unit
  3420  00204A                     l811:
  3421  00204A  0EFA               	movlw	250
  3422  00204C                     u4007:
  3423  00204C  F000               	nop	
  3424  00204E  2EE8               	decfsz	wreg,f,c
  3425  002050  D7FD               	goto	u4007
  3426  002052  0101               	movlb	1	; () banked
  3427  002054  0101               	movlb	1	; () banked
  3428  002056  2F86               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3429  002058  D7F8               	goto	l811
  3430  00205A  0012               	return	
  3431  00205C                     __end_of_Delay1KTCYx:
  3432                           	opt stack 0
  3433                           tblptru	equ	0xFF8
  3434                           tblptrh	equ	0xFF7
  3435                           tblptrl	equ	0xFF6
  3436                           tablat	equ	0xFF5
  3437                           prodh	equ	0xFF4
  3438                           prodl	equ	0xFF3
  3439                           intcon	equ	0xFF2
  3440                           postinc0	equ	0xFEE
  3441                           wreg	equ	0xFE8
  3442                           indf1	equ	0xFE7
  3443                           postdec1	equ	0xFE5
  3444                           fsr1h	equ	0xFE2
  3445                           fsr1l	equ	0xFE1
  3446                           indf2	equ	0xFDF
  3447                           postinc2	equ	0xFDE
  3448                           postdec2	equ	0xFDD
  3449                           fsr2h	equ	0xFDA
  3450                           fsr2l	equ	0xFD9
  3451                           status	equ	0xFD8
  3452                           
  3453 ;; *************** function _ToMainLow_recvmsg *****************
  3454 ;; Defined at:
  3455 ;;		line 112 in file "../src/messages.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  maxlength       1    wreg     unsigned char 
  3458 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3459 ;;		 -> main@msgtype(1), 
  3460 ;;  data            2   26[BANK1 ] PTR void 
  3461 ;;		 -> main@msgbuffer(11), 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  1    wreg      char 
  3466 ;; Registers used:
  3467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3473 ;;      Params:         0       0       4       0       0
  3474 ;;      Locals:         0       0       1       0       0
  3475 ;;      Temps:          0       0       0       0       0
  3476 ;;      Totals:         0       0       5       0       0
  3477 ;;Total ram usage:        5 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:   13
  3480 ;; This function calls:
  3481 ;;		_recv_msg
  3482 ;; This function is called by:
  3483 ;;		_main
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           	psect	text19
  3488  001CD6                     __ptext19:
  3489                           	opt stack 0
  3490  001CD6                     _ToMainLow_recvmsg:
  3491                           	opt stack 17
  3492                           
  3493                           ; BSR set to: 1
  3494                           ;incstack = 0
  3495                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3496  001CD6  CFE8 F1A2          	movff	wreg,ToMainLow_recvmsg@maxlength
  3497                           
  3498                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3499  001CDA  0101               	movlb	1	; () banked
  3500  001CDC  0E01               	movlw	high _ToMainLow_MQ
  3501  001CDE  0101               	movlb	1	; () banked
  3502  001CE0  0101               	movlb	1	; () banked
  3503  001CE2  6F91               	movwf	(recv_msg@qptr+1)& (0+255),b
  3504  001CE4  0101               	movlb	1	; () banked
  3505  001CE6  0E43               	movlw	low _ToMainLow_MQ
  3506  001CE8  0101               	movlb	1	; () banked
  3507  001CEA  0101               	movlb	1	; () banked
  3508  001CEC  6F90               	movwf	recv_msg@qptr& (0+255),b
  3509  001CEE  C1A2  F192         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3510  001CF2  0101               	movlb	1	; () banked
  3511  001CF4  0101               	movlb	1	; () banked
  3512  001CF6  C19F  F194         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3513  001CFA  0101               	movlb	1	; () banked
  3514  001CFC  0101               	movlb	1	; () banked
  3515  001CFE  C19E  F193         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3516  001D02  0101               	movlb	1	; () banked
  3517  001D04  0101               	movlb	1	; () banked
  3518  001D06  C1A1  F196         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3519  001D0A  0101               	movlb	1	; () banked
  3520  001D0C  0101               	movlb	1	; () banked
  3521  001D0E  C1A0  F195         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3522  001D12  EC6F  F005         	call	_recv_msg	;wreg free
  3523  001D16  0012               	return	
  3524  001D18                     __end_of_ToMainLow_recvmsg:
  3525                           	opt stack 0
  3526                           tblptru	equ	0xFF8
  3527                           tblptrh	equ	0xFF7
  3528                           tblptrl	equ	0xFF6
  3529                           tablat	equ	0xFF5
  3530                           prodh	equ	0xFF4
  3531                           prodl	equ	0xFF3
  3532                           intcon	equ	0xFF2
  3533                           postinc0	equ	0xFEE
  3534                           wreg	equ	0xFE8
  3535                           indf1	equ	0xFE7
  3536                           postdec1	equ	0xFE5
  3537                           fsr1h	equ	0xFE2
  3538                           fsr1l	equ	0xFE1
  3539                           indf2	equ	0xFDF
  3540                           postinc2	equ	0xFDE
  3541                           postdec2	equ	0xFDD
  3542                           fsr2h	equ	0xFDA
  3543                           fsr2l	equ	0xFD9
  3544                           status	equ	0xFD8
  3545                           
  3546 ;; *************** function _ToMainHigh_recvmsg *****************
  3547 ;; Defined at:
  3548 ;;		line 135 in file "../src/messages.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;  maxlength       1    wreg     unsigned char 
  3551 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3552 ;;		 -> main@msgtype(1), 
  3553 ;;  data            2   26[BANK1 ] PTR void 
  3554 ;;		 -> main@msgbuffer(11), 
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      char 
  3559 ;; Registers used:
  3560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3566 ;;      Params:         0       0       4       0       0
  3567 ;;      Locals:         0       0       1       0       0
  3568 ;;      Temps:          0       0       0       0       0
  3569 ;;      Totals:         0       0       5       0       0
  3570 ;;Total ram usage:        5 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:   13
  3573 ;; This function calls:
  3574 ;;		_recv_msg
  3575 ;; This function is called by:
  3576 ;;		_main
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text20
  3581  001D18                     __ptext20:
  3582                           	opt stack 0
  3583  001D18                     _ToMainHigh_recvmsg:
  3584                           	opt stack 17
  3585                           
  3586                           ;incstack = 0
  3587                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3588  001D18  CFE8 F1A2          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3589                           
  3590                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3591  001D1C  0101               	movlb	1	; () banked
  3592  001D1E  0E01               	movlw	high _ToMainHigh_MQ
  3593  001D20  0101               	movlb	1	; () banked
  3594  001D22  0101               	movlb	1	; () banked
  3595  001D24  6F91               	movwf	(recv_msg@qptr+1)& (0+255),b
  3596  001D26  0101               	movlb	1	; () banked
  3597  001D28  0E00               	movlw	low _ToMainHigh_MQ
  3598  001D2A  0101               	movlb	1	; () banked
  3599  001D2C  0101               	movlb	1	; () banked
  3600  001D2E  6F90               	movwf	recv_msg@qptr& (0+255),b
  3601  001D30  C1A2  F192         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3602  001D34  0101               	movlb	1	; () banked
  3603  001D36  0101               	movlb	1	; () banked
  3604  001D38  C19F  F194         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3605  001D3C  0101               	movlb	1	; () banked
  3606  001D3E  0101               	movlb	1	; () banked
  3607  001D40  C19E  F193         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3608  001D44  0101               	movlb	1	; () banked
  3609  001D46  0101               	movlb	1	; () banked
  3610  001D48  C1A1  F196         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3611  001D4C  0101               	movlb	1	; () banked
  3612  001D4E  0101               	movlb	1	; () banked
  3613  001D50  C1A0  F195         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3614  001D54  EC6F  F005         	call	_recv_msg	;wreg free
  3615  001D58  0012               	return	
  3616  001D5A                     __end_of_ToMainHigh_recvmsg:
  3617                           	opt stack 0
  3618                           tblptru	equ	0xFF8
  3619                           tblptrh	equ	0xFF7
  3620                           tblptrl	equ	0xFF6
  3621                           tablat	equ	0xFF5
  3622                           prodh	equ	0xFF4
  3623                           prodl	equ	0xFF3
  3624                           intcon	equ	0xFF2
  3625                           postinc0	equ	0xFEE
  3626                           wreg	equ	0xFE8
  3627                           indf1	equ	0xFE7
  3628                           postdec1	equ	0xFE5
  3629                           fsr1h	equ	0xFE2
  3630                           fsr1l	equ	0xFE1
  3631                           indf2	equ	0xFDF
  3632                           postinc2	equ	0xFDE
  3633                           postdec2	equ	0xFDD
  3634                           fsr2h	equ	0xFDA
  3635                           fsr2l	equ	0xFD9
  3636                           status	equ	0xFD8
  3637                           
  3638 ;; *************** function _recv_msg *****************
  3639 ;; Defined at:
  3640 ;;		line 63 in file "../src/messages.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  3643 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3644 ;;  maxlength       1   12[BANK1 ] unsigned char 
  3645 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  3646 ;;		 -> i2c_slave_int_handler@msgtype_1508(2), i2c_slave_int_handler@msgtype(2), main@msgtype(1), 
  3647 ;;  data            2   15[BANK1 ] PTR void 
  3648 ;;		 -> i2c_slave_int_handler@motorData(5), i2c_slave_int_handler@sensorData(5), main@msgbuffer(11), 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  3651 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  3652 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  3653 ;;  tlength         2   20[BANK1 ] unsigned int 
  3654 ;;  slot            1   19[BANK1 ] unsigned char 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      char 
  3657 ;; Registers used:
  3658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3664 ;;      Params:         0       0       7       0       0
  3665 ;;      Locals:         0       0       5       0       0
  3666 ;;      Temps:          0       0       2       0       0
  3667 ;;      Totals:         0       0      14       0       0
  3668 ;;Total ram usage:       14 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:   12
  3671 ;; This function calls:
  3672 ;;		___awmod
  3673 ;;		_memcpy
  3674 ;; This function is called by:
  3675 ;;		_ToMainLow_recvmsg
  3676 ;;		_ToMainHigh_recvmsg
  3677 ;;		_FromMainHigh_recvmsg
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           	psect	text21
  3682  000ADE                     __ptext21:
  3683                           	opt stack 0
  3684  000ADE                     _recv_msg:
  3685                           	opt stack 17
  3686                           
  3687                           ;messages.c: 64: unsigned char slot;
  3688                           ;messages.c: 68: msg *qmsg;
  3689                           ;messages.c: 69: size_t tlength;
  3690                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3691                           
  3692                           ;incstack = 0
  3693  000ADE  0101               	movlb	1	; () banked
  3694  000AE0  EE20 F042          	lfsr	2,66
  3695  000AE4  0101               	movlb	1	; () banked
  3696  000AE6  5190               	movf	recv_msg@qptr& (0+255),w,b
  3697  000AE8  26D9               	addwf	fsr2l,f,c
  3698  000AEA  0101               	movlb	1	; () banked
  3699  000AEC  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3700  000AEE  22DA               	addwfc	fsr2h,f,c
  3701  000AF0  50DF               	movf	indf2,w,c
  3702  000AF2  0101               	movlb	1	; () banked
  3703  000AF4  0101               	movlb	1	; () banked
  3704  000AF6  6F99               	movwf	recv_msg@slot& (0+255),b
  3705                           
  3706                           ; BSR set to: 1
  3707                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3708  000AF8  0101               	movlb	1	; () banked
  3709  000AFA  0101               	movlb	1	; () banked
  3710  000AFC  5199               	movf	recv_msg@slot& (0+255),w,b
  3711  000AFE  0D0D               	mullw	13
  3712  000B00  50F3               	movf	prodl,w,c
  3713  000B02  0101               	movlb	1	; () banked
  3714  000B04  0101               	movlb	1	; () banked
  3715  000B06  2590               	addwf	recv_msg@qptr& (0+255),w,b
  3716  000B08  0101               	movlb	1	; () banked
  3717  000B0A  0101               	movlb	1	; () banked
  3718  000B0C  6F9C               	movwf	recv_msg@qmsg& (0+255),b
  3719  000B0E  50F4               	movf	prodh,w,c
  3720  000B10  0101               	movlb	1	; () banked
  3721  000B12  0101               	movlb	1	; () banked
  3722  000B14  2191               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3723  000B16  0101               	movlb	1	; () banked
  3724  000B18  6F9D               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3725                           
  3726                           ; BSR set to: 1
  3727                           ;messages.c: 74: if (qmsg->full == 1) {
  3728  000B1A  0E01               	movlw	1
  3729  000B1C  C19C  FFD9         	movff	recv_msg@qmsg,fsr2l
  3730  000B20  C19D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3731  000B24  62DF               	cpfseq	indf2,c
  3732  000B26  D088               	goto	l4183
  3733                           
  3734                           ; BSR set to: 1
  3735                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3736  000B28  0101               	movlb	1	; () banked
  3737  000B2A  EE20 F001          	lfsr	2,1
  3738  000B2E  0101               	movlb	1	; () banked
  3739  000B30  519C               	movf	recv_msg@qmsg& (0+255),w,b
  3740  000B32  26D9               	addwf	fsr2l,f,c
  3741  000B34  0101               	movlb	1	; () banked
  3742  000B36  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3743  000B38  22DA               	addwfc	fsr2h,f,c
  3744  000B3A  50DF               	movf	indf2,w,c
  3745  000B3C  0101               	movlb	1	; () banked
  3746  000B3E  0101               	movlb	1	; () banked
  3747  000B40  5D92               	subwf	recv_msg@maxlength& (0+255),w,b
  3748  000B42  B0D8               	btfsc	status,0,c
  3749  000B44  D002               	goto	l4167
  3750                           
  3751                           ; BSR set to: 1
  3752                           ;messages.c: 77: return (-3);
  3753  000B46  0EFD               	movlw	253
  3754  000B48  0012               	return	
  3755  000B4A                     l4167:
  3756                           
  3757                           ; BSR set to: 1
  3758                           ;messages.c: 78: }
  3759                           ;messages.c: 80: tlength = qmsg->length;
  3760  000B4A  0101               	movlb	1	; () banked
  3761  000B4C  EE20 F001          	lfsr	2,1
  3762  000B50  0101               	movlb	1	; () banked
  3763  000B52  519C               	movf	recv_msg@qmsg& (0+255),w,b
  3764  000B54  26D9               	addwf	fsr2l,f,c
  3765  000B56  0101               	movlb	1	; () banked
  3766  000B58  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3767  000B5A  22DA               	addwfc	fsr2h,f,c
  3768  000B5C  50DF               	movf	indf2,w,c
  3769  000B5E  0101               	movlb	1	; () banked
  3770  000B60  6F97               	movwf	??_recv_msg& (0+255),b
  3771  000B62  0101               	movlb	1	; () banked
  3772  000B64  5197               	movf	??_recv_msg& (0+255),w,b
  3773  000B66  0101               	movlb	1	; () banked
  3774  000B68  0101               	movlb	1	; () banked
  3775  000B6A  6F9A               	movwf	recv_msg@tlength& (0+255),b
  3776  000B6C  0101               	movlb	1	; () banked
  3777  000B6E  6B9B               	clrf	(recv_msg@tlength+1)& (0+255),b
  3778                           
  3779                           ; BSR set to: 1
  3780                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3781  000B70  0101               	movlb	1	; () banked
  3782  000B72  0101               	movlb	1	; () banked
  3783  000B74  C196  F187         	movff	recv_msg@data+1,memcpy@d1+1
  3784  000B78  0101               	movlb	1	; () banked
  3785  000B7A  0101               	movlb	1	; () banked
  3786  000B7C  C195  F186         	movff	recv_msg@data,memcpy@d1
  3787  000B80  0E03               	movlw	3
  3788  000B82  0101               	movlb	1	; () banked
  3789  000B84  0101               	movlb	1	; () banked
  3790  000B86  259C               	addwf	recv_msg@qmsg& (0+255),w,b
  3791  000B88  0101               	movlb	1	; () banked
  3792  000B8A  6F97               	movwf	??_recv_msg& (0+255),b
  3793  000B8C  0E00               	movlw	0
  3794  000B8E  0101               	movlb	1	; () banked
  3795  000B90  0101               	movlb	1	; () banked
  3796  000B92  219D               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3797  000B94  0101               	movlb	1	; () banked
  3798  000B96  6F98               	movwf	(??_recv_msg+1)& (0+255),b
  3799  000B98  C197  F188         	movff	??_recv_msg,memcpy@s1
  3800  000B9C  C198  F189         	movff	??_recv_msg+1,memcpy@s1+1
  3801  000BA0  C19A  F18A         	movff	recv_msg@tlength,memcpy@n
  3802  000BA4  C19B  F18B         	movff	recv_msg@tlength+1,memcpy@n+1
  3803  000BA8  EC77  F00D         	call	_memcpy	;wreg free
  3804                           
  3805                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  3806  000BAC  0101               	movlb	1	; () banked
  3807  000BAE  EE20 F042          	lfsr	2,66
  3808  000BB2  0101               	movlb	1	; () banked
  3809  000BB4  5190               	movf	recv_msg@qptr& (0+255),w,b
  3810  000BB6  26D9               	addwf	fsr2l,f,c
  3811  000BB8  0101               	movlb	1	; () banked
  3812  000BBA  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3813  000BBC  22DA               	addwfc	fsr2h,f,c
  3814  000BBE  0101               	movlb	1	; () banked
  3815  000BC0  EE10 F042          	lfsr	1,66
  3816  000BC4  0101               	movlb	1	; () banked
  3817  000BC6  5190               	movf	recv_msg@qptr& (0+255),w,b
  3818  000BC8  26E1               	addwf	fsr1l,f,c
  3819  000BCA  0101               	movlb	1	; () banked
  3820  000BCC  5191               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3821  000BCE  22E2               	addwfc	fsr1h,f,c
  3822  000BD0  50E7               	movf	indf1,w,c
  3823  000BD2  0101               	movlb	1	; () banked
  3824  000BD4  6F97               	movwf	??_recv_msg& (0+255),b
  3825  000BD6  0E01               	movlw	1
  3826  000BD8  0101               	movlb	1	; () banked
  3827  000BDA  2597               	addwf	??_recv_msg& (0+255),w,b
  3828  000BDC  0101               	movlb	1	; () banked
  3829  000BDE  0101               	movlb	1	; () banked
  3830  000BE0  6F86               	movwf	___awmod@dividend& (0+255),b
  3831  000BE2  0101               	movlb	1	; () banked
  3832  000BE4  0101               	movlb	1	; () banked
  3833  000BE6  6B87               	clrf	(___awmod@dividend+1)& (0+255),b
  3834  000BE8  0E00               	movlw	0
  3835  000BEA  2387               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  3836  000BEC  0E00               	movlw	0
  3837  000BEE  0101               	movlb	1	; () banked
  3838  000BF0  0101               	movlb	1	; () banked
  3839  000BF2  6F89               	movwf	(___awmod@divisor+1)& (0+255),b
  3840  000BF4  0E05               	movlw	5
  3841  000BF6  0101               	movlb	1	; () banked
  3842  000BF8  6F88               	movwf	___awmod@divisor& (0+255),b
  3843  000BFA  ECF9  F007         	call	___awmod	;wreg free
  3844  000BFE  0101               	movlb	1	; () banked
  3845  000C00  0101               	movlb	1	; () banked
  3846  000C02  5186               	movf	?___awmod& (0+255),w,b
  3847  000C04  6EDF               	movwf	indf2,c
  3848                           
  3849                           ; BSR set to: 1
  3850                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3851  000C06  0101               	movlb	1	; () banked
  3852  000C08  EE20 F002          	lfsr	2,2
  3853  000C0C  0101               	movlb	1	; () banked
  3854  000C0E  519C               	movf	recv_msg@qmsg& (0+255),w,b
  3855  000C10  26D9               	addwf	fsr2l,f,c
  3856  000C12  0101               	movlb	1	; () banked
  3857  000C14  519D               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3858  000C16  22DA               	addwfc	fsr2h,f,c
  3859  000C18  C193  FFE1         	movff	recv_msg@msgtype,fsr1l
  3860  000C1C  C194  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3861  000C20  CFDF FFE7          	movff	indf2,indf1
  3862                           
  3863                           ; BSR set to: 1
  3864                           ;messages.c: 91: qmsg->full = 0;
  3865  000C24  C19C  FFD9         	movff	recv_msg@qmsg,fsr2l
  3866  000C28  C19D  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3867  000C2C  0E00               	movlw	0
  3868  000C2E  6EDF               	movwf	indf2,c
  3869                           
  3870                           ; BSR set to: 1
  3871                           ;messages.c: 92: return (tlength);
  3872  000C30  0101               	movlb	1	; () banked
  3873  000C32  0101               	movlb	1	; () banked
  3874  000C34  519A               	movf	recv_msg@tlength& (0+255),w,b
  3875  000C36  0012               	return	
  3876  000C38                     l4183:
  3877                           
  3878                           ; BSR set to: 1
  3879                           ;messages.c: 94: return (-4);
  3880  000C38  0EFC               	movlw	252
  3881  000C3A  0012               	return	
  3882  000C3C                     __end_of_recv_msg:
  3883                           	opt stack 0
  3884                           tblptru	equ	0xFF8
  3885                           tblptrh	equ	0xFF7
  3886                           tblptrl	equ	0xFF6
  3887                           tablat	equ	0xFF5
  3888                           prodh	equ	0xFF4
  3889                           prodl	equ	0xFF3
  3890                           intcon	equ	0xFF2
  3891                           postinc0	equ	0xFEE
  3892                           wreg	equ	0xFE8
  3893                           indf1	equ	0xFE7
  3894                           postdec1	equ	0xFE5
  3895                           fsr1h	equ	0xFE2
  3896                           fsr1l	equ	0xFE1
  3897                           indf2	equ	0xFDF
  3898                           postinc2	equ	0xFDE
  3899                           postdec2	equ	0xFDD
  3900                           fsr2h	equ	0xFDA
  3901                           fsr2l	equ	0xFD9
  3902                           status	equ	0xFD8
  3903                           
  3904 ;; *************** function _SetChanADC *****************
  3905 ;; Defined at:
  3906 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;  channel         1    wreg     unsigned char 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;  channel         1    1[BANK1 ] unsigned char 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;		None               void
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3920 ;;      Params:         0       0       0       0       0
  3921 ;;      Locals:         0       0       1       0       0
  3922 ;;      Temps:          0       0       1       0       0
  3923 ;;      Totals:         0       0       2       0       0
  3924 ;;Total ram usage:        2 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:   11
  3927 ;; This function calls:
  3928 ;;		Nothing
  3929 ;; This function is called by:
  3930 ;;		_main
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text22
  3935  001FEA                     __ptext22:
  3936                           	opt stack 0
  3937  001FEA                     _SetChanADC:
  3938                           	opt stack 19
  3939                           
  3940                           ; BSR set to: 1
  3941                           ;incstack = 0
  3942                           ;SetChanADC@channel stored from wreg
  3943  001FEA  CFE8 F187          	movff	wreg,SetChanADC@channel
  3944  001FEE  CFC2 F186          	movff	4034,??_SetChanADC	;volatile
  3945  001FF2  0EC3               	movlw	195
  3946  001FF4  0101               	movlb	1	; () banked
  3947  001FF6  1786               	andwf	??_SetChanADC& (0+255),f,b
  3948  001FF8  0101               	movlb	1	; () banked
  3949  001FFA  0101               	movlb	1	; () banked
  3950  001FFC  90D8               	bcf	status,0,c
  3951  001FFE  3187               	rrcf	SetChanADC@channel& (0+255),w,b
  3952  002000  0B3C               	andlw	60
  3953  002002  0101               	movlb	1	; () banked
  3954  002004  1186               	iorwf	??_SetChanADC& (0+255),w,b
  3955  002006  6EC2               	movwf	4034,c	;volatile
  3956                           
  3957                           ; BSR set to: 1
  3958  002008  0012               	return	
  3959  00200A                     __end_of_SetChanADC:
  3960                           	opt stack 0
  3961                           tblptru	equ	0xFF8
  3962                           tblptrh	equ	0xFF7
  3963                           tblptrl	equ	0xFF6
  3964                           tablat	equ	0xFF5
  3965                           prodh	equ	0xFF4
  3966                           prodl	equ	0xFF3
  3967                           intcon	equ	0xFF2
  3968                           postinc0	equ	0xFEE
  3969                           wreg	equ	0xFE8
  3970                           indf1	equ	0xFE7
  3971                           postdec1	equ	0xFE5
  3972                           fsr1h	equ	0xFE2
  3973                           fsr1l	equ	0xFE1
  3974                           indf2	equ	0xFDF
  3975                           postinc2	equ	0xFDE
  3976                           postdec2	equ	0xFDD
  3977                           fsr2h	equ	0xFDA
  3978                           fsr2l	equ	0xFD9
  3979                           status	equ	0xFD8
  3980                           
  3981 ;; *************** function _OpenUSART *****************
  3982 ;; Defined at:
  3983 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  config          1    wreg     unsigned char 
  3986 ;;  spbrg           2    0[BANK1 ] unsigned int 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  config          1    5[BANK1 ] unsigned char 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;		None               void
  3991 ;; Registers used:
  3992 ;;		wreg, status,2
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3998 ;;      Params:         0       0       2       0       0
  3999 ;;      Locals:         0       0       1       0       0
  4000 ;;      Temps:          0       0       3       0       0
  4001 ;;      Totals:         0       0       6       0       0
  4002 ;;Total ram usage:        6 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:   11
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_main
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           	psect	text23
  4013  00161A                     __ptext23:
  4014                           	opt stack 0
  4015  00161A                     _OpenUSART:
  4016                           	opt stack 19
  4017                           
  4018                           ; BSR set to: 1
  4019                           ;incstack = 0
  4020                           ;OpenUSART@config stored from wreg
  4021  00161A  CFE8 F18B          	movff	wreg,OpenUSART@config
  4022  00161E  0E00               	movlw	0
  4023  001620  6EAC               	movwf	4012,c	;volatile
  4024  001622  0E00               	movlw	0
  4025  001624  6EAB               	movwf	4011,c	;volatile
  4026  001626  0101               	movlb	1	; () banked
  4027  001628  0101               	movlb	1	; () banked
  4028  00162A  B18B               	btfsc	OpenUSART@config& (0+255),0,b
  4029                           
  4030                           ; BSR set to: 1
  4031  00162C  88AC               	bsf	4012,4,c	;volatile
  4032                           
  4033                           ; BSR set to: 1
  4034                           
  4035                           ; BSR set to: 1
  4036  00162E  0101               	movlb	1	; () banked
  4037  001630  0101               	movlb	1	; () banked
  4038  001632  A38B               	btfss	OpenUSART@config& (0+255),1,b
  4039  001634  D002               	goto	l3999
  4040                           
  4041                           ; BSR set to: 1
  4042  001636  8CAC               	bsf	4012,6,c	;volatile
  4043  001638  8CAB               	bsf	4011,6,c	;volatile
  4044  00163A                     l3999:
  4045                           
  4046                           ; BSR set to: 1
  4047  00163A  0101               	movlb	1	; () banked
  4048  00163C  0101               	movlb	1	; () banked
  4049  00163E  B58B               	btfsc	OpenUSART@config& (0+255),2,b
  4050                           
  4051                           ; BSR set to: 1
  4052  001640  8EAC               	bsf	4012,7,c	;volatile
  4053                           
  4054                           ; BSR set to: 1
  4055                           
  4056                           ; BSR set to: 1
  4057  001642  0101               	movlb	1	; () banked
  4058  001644  0101               	movlb	1	; () banked
  4059  001646  A78B               	btfss	OpenUSART@config& (0+255),3,b
  4060  001648  D002               	goto	l578
  4061                           
  4062                           ; BSR set to: 1
  4063  00164A  88AB               	bsf	4011,4,c	;volatile
  4064  00164C  D001               	goto	l4007
  4065  00164E                     l578:
  4066                           
  4067                           ; BSR set to: 1
  4068  00164E  8AAB               	bsf	4011,5,c	;volatile
  4069  001650                     l4007:
  4070                           
  4071                           ; BSR set to: 1
  4072  001650  0101               	movlb	1	; () banked
  4073  001652  0101               	movlb	1	; () banked
  4074  001654  B98B               	btfsc	OpenUSART@config& (0+255),4,b
  4075                           
  4076                           ; BSR set to: 1
  4077  001656  84AC               	bsf	4012,2,c	;volatile
  4078                           
  4079                           ; BSR set to: 1
  4080  001658  989E               	bcf	3998,4,c	;volatile
  4081                           
  4082                           ; BSR set to: 1
  4083  00165A  0101               	movlb	1	; () banked
  4084  00165C  0101               	movlb	1	; () banked
  4085  00165E  BB8B               	btfsc	OpenUSART@config& (0+255),5,b
  4086                           
  4087                           ; BSR set to: 1
  4088  001660  86AB               	bsf	4011,3,c	;volatile
  4089                           
  4090                           ; BSR set to: 1
  4091                           
  4092                           ; BSR set to: 1
  4093  001662  0101               	movlb	1	; () banked
  4094  001664  0101               	movlb	1	; () banked
  4095  001666  AD8B               	btfss	OpenUSART@config& (0+255),6,b
  4096  001668  D002               	goto	l582
  4097                           
  4098                           ; BSR set to: 1
  4099  00166A  8A9D               	bsf	3997,5,c	;volatile
  4100  00166C  D001               	goto	l583
  4101  00166E                     l582:
  4102                           
  4103                           ; BSR set to: 1
  4104  00166E  9A9D               	bcf	3997,5,c	;volatile
  4105  001670                     l583:
  4106                           
  4107                           ; BSR set to: 1
  4108  001670  9A9E               	bcf	3998,5,c	;volatile
  4109                           
  4110                           ; BSR set to: 1
  4111  001672  0101               	movlb	1	; () banked
  4112  001674  0101               	movlb	1	; () banked
  4113  001676  AF8B               	btfss	OpenUSART@config& (0+255),7,b
  4114  001678  D002               	goto	l584
  4115                           
  4116                           ; BSR set to: 1
  4117  00167A  889D               	bsf	3997,4,c	;volatile
  4118  00167C  D001               	goto	l585
  4119  00167E                     l584:
  4120                           
  4121                           ; BSR set to: 1
  4122  00167E  989D               	bcf	3997,4,c	;volatile
  4123  001680                     l585:
  4124                           
  4125                           ; BSR set to: 1
  4126  001680  C186  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4127                           
  4128                           ; BSR set to: 1
  4129  001684  0101               	movlb	1	; () banked
  4130  001686  C187  F188         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4131  00168A  C188  F189         	movff	??_OpenUSART,??_OpenUSART+1
  4132  00168E  0101               	movlb	1	; () banked
  4133  001690  6B8A               	clrf	(??_OpenUSART+2)& (0+255),b
  4134  001692  0101               	movlb	1	; () banked
  4135  001694  5189               	movf	(??_OpenUSART+1)& (0+255),w,b
  4136  001696  6EB0               	movwf	4016,c	;volatile
  4137                           
  4138                           ; BSR set to: 1
  4139  001698  8AAC               	bsf	4012,5,c	;volatile
  4140                           
  4141                           ; BSR set to: 1
  4142  00169A  8EAB               	bsf	4011,7,c	;volatile
  4143                           
  4144                           ; BSR set to: 1
  4145  00169C  9C94               	bcf	3988,6,c	;volatile
  4146                           
  4147                           ; BSR set to: 1
  4148  00169E  8E94               	bsf	3988,7,c	;volatile
  4149                           
  4150                           ; BSR set to: 1
  4151  0016A0  A8AC               	btfss	4012,4,c	;volatile
  4152  0016A2  0012               	return	
  4153                           
  4154                           ; BSR set to: 1
  4155  0016A4  BEAC               	btfsc	4012,7,c	;volatile
  4156  0016A6  0012               	return	
  4157                           
  4158                           ; BSR set to: 1
  4159  0016A8  8C94               	bsf	3988,6,c	;volatile
  4160  0016AA  0012               	return	
  4161  0016AC                     __end_of_OpenUSART:
  4162                           	opt stack 0
  4163                           tblptru	equ	0xFF8
  4164                           tblptrh	equ	0xFF7
  4165                           tblptrl	equ	0xFF6
  4166                           tablat	equ	0xFF5
  4167                           prodh	equ	0xFF4
  4168                           prodl	equ	0xFF3
  4169                           intcon	equ	0xFF2
  4170                           postinc0	equ	0xFEE
  4171                           wreg	equ	0xFE8
  4172                           indf1	equ	0xFE7
  4173                           postdec1	equ	0xFE5
  4174                           fsr1h	equ	0xFE2
  4175                           fsr1l	equ	0xFE1
  4176                           indf2	equ	0xFDF
  4177                           postinc2	equ	0xFDE
  4178                           postdec2	equ	0xFDD
  4179                           fsr2h	equ	0xFDA
  4180                           fsr2l	equ	0xFD9
  4181                           status	equ	0xFD8
  4182                           
  4183 ;; *************** function _OpenTimer1 *****************
  4184 ;; Defined at:
  4185 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  config          1    wreg     unsigned char 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;  config          1    0[BANK1 ] unsigned char 
  4190 ;; Return value:  Size  Location     Type
  4191 ;;		None               void
  4192 ;; Registers used:
  4193 ;;		wreg, status,2, status,0
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4199 ;;      Params:         0       0       0       0       0
  4200 ;;      Locals:         0       0       1       0       0
  4201 ;;      Temps:          0       0       0       0       0
  4202 ;;      Totals:         0       0       1       0       0
  4203 ;;Total ram usage:        1 bytes
  4204 ;; Hardware stack levels used:    1
  4205 ;; Hardware stack levels required when called:   11
  4206 ;; This function calls:
  4207 ;;		Nothing
  4208 ;; This function is called by:
  4209 ;;		_main
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           	psect	text24
  4214  001E1C                     __ptext24:
  4215                           	opt stack 0
  4216  001E1C                     _OpenTimer1:
  4217                           	opt stack 19
  4218                           
  4219                           ; BSR set to: 1
  4220                           ;incstack = 0
  4221                           ;OpenTimer1@config stored from wreg
  4222  001E1C  CFE8 F186          	movff	wreg,OpenTimer1@config
  4223  001E20  0101               	movlb	1	; () banked
  4224  001E22  0101               	movlb	1	; () banked
  4225  001E24  5186               	movf	OpenTimer1@config& (0+255),w,b
  4226  001E26  0B7E               	andlw	126
  4227  001E28  6ECD               	movwf	4045,c	;volatile
  4228                           
  4229                           ; BSR set to: 1
  4230  001E2A  0101               	movlb	1	; () banked
  4231  001E2C  0101               	movlb	1	; () banked
  4232  001E2E  AD86               	btfss	OpenTimer1@config& (0+255),6,b
  4233  001E30  D002               	goto	l541
  4234                           
  4235                           ; BSR set to: 1
  4236  001E32  8ECD               	bsf	4045,7,c	;volatile
  4237  001E34  D001               	goto	l3959
  4238  001E36                     l541:
  4239                           
  4240                           ; BSR set to: 1
  4241  001E36  9ECD               	bcf	4045,7,c	;volatile
  4242  001E38                     l3959:
  4243                           
  4244                           ; BSR set to: 1
  4245  001E38  0E00               	movlw	0
  4246  001E3A  6ECF               	movwf	4047,c	;volatile
  4247  001E3C  0E00               	movlw	0
  4248  001E3E  6ECE               	movwf	4046,c	;volatile
  4249                           
  4250                           ; BSR set to: 1
  4251  001E40  909E               	bcf	3998,0,c	;volatile
  4252                           
  4253                           ; BSR set to: 1
  4254  001E42  0101               	movlb	1	; () banked
  4255  001E44  0101               	movlb	1	; () banked
  4256  001E46  AF86               	btfss	OpenTimer1@config& (0+255),7,b
  4257  001E48  D002               	goto	l543
  4258                           
  4259                           ; BSR set to: 1
  4260  001E4A  809D               	bsf	3997,0,c	;volatile
  4261  001E4C  D001               	goto	l544
  4262  001E4E                     l543:
  4263                           
  4264                           ; BSR set to: 1
  4265  001E4E  909D               	bcf	3997,0,c	;volatile
  4266  001E50                     l544:
  4267                           
  4268                           ; BSR set to: 1
  4269  001E50  80CD               	bsf	4045,0,c	;volatile
  4270                           
  4271                           ; BSR set to: 1
  4272  001E52  0012               	return	
  4273  001E54                     __end_of_OpenTimer1:
  4274                           	opt stack 0
  4275                           tblptru	equ	0xFF8
  4276                           tblptrh	equ	0xFF7
  4277                           tblptrl	equ	0xFF6
  4278                           tablat	equ	0xFF5
  4279                           prodh	equ	0xFF4
  4280                           prodl	equ	0xFF3
  4281                           intcon	equ	0xFF2
  4282                           postinc0	equ	0xFEE
  4283                           wreg	equ	0xFE8
  4284                           indf1	equ	0xFE7
  4285                           postdec1	equ	0xFE5
  4286                           fsr1h	equ	0xFE2
  4287                           fsr1l	equ	0xFE1
  4288                           indf2	equ	0xFDF
  4289                           postinc2	equ	0xFDE
  4290                           postdec2	equ	0xFDD
  4291                           fsr2h	equ	0xFDA
  4292                           fsr2l	equ	0xFD9
  4293                           status	equ	0xFD8
  4294                           
  4295 ;; *************** function _OpenTimer0 *****************
  4296 ;; Defined at:
  4297 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  config          1    wreg     unsigned char 
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;  config          1    0[BANK1 ] unsigned char 
  4302 ;; Return value:  Size  Location     Type
  4303 ;;		None               void
  4304 ;; Registers used:
  4305 ;;		wreg, status,2, status,0
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4311 ;;      Params:         0       0       0       0       0
  4312 ;;      Locals:         0       0       1       0       0
  4313 ;;      Temps:          0       0       0       0       0
  4314 ;;      Totals:         0       0       1       0       0
  4315 ;;Total ram usage:        1 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:   11
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_main
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text25
  4326  001F2C                     __ptext25:
  4327                           	opt stack 0
  4328  001F2C                     _OpenTimer0:
  4329                           	opt stack 19
  4330                           
  4331                           ; BSR set to: 1
  4332                           ;incstack = 0
  4333                           ;OpenTimer0@config stored from wreg
  4334  001F2C  CFE8 F186          	movff	wreg,OpenTimer0@config
  4335  001F30  0101               	movlb	1	; () banked
  4336  001F32  0101               	movlb	1	; () banked
  4337  001F34  5186               	movf	OpenTimer0@config& (0+255),w,b
  4338  001F36  0B7F               	andlw	127
  4339  001F38  6ED5               	movwf	4053,c	;volatile
  4340                           
  4341                           ; BSR set to: 1
  4342  001F3A  0E00               	movlw	0
  4343  001F3C  6ED7               	movwf	4055,c	;volatile
  4344                           
  4345                           ; BSR set to: 1
  4346  001F3E  0E00               	movlw	0
  4347  001F40  6ED6               	movwf	4054,c	;volatile
  4348                           
  4349                           ; BSR set to: 1
  4350  001F42  94F2               	bcf	intcon,2,c	;volatile
  4351                           
  4352                           ; BSR set to: 1
  4353  001F44  0101               	movlb	1	; () banked
  4354  001F46  0101               	movlb	1	; () banked
  4355  001F48  AF86               	btfss	OpenTimer0@config& (0+255),7,b
  4356  001F4A  D002               	goto	l517
  4357                           
  4358                           ; BSR set to: 1
  4359  001F4C  8AF2               	bsf	intcon,5,c	;volatile
  4360  001F4E  D001               	goto	l518
  4361  001F50                     l517:
  4362                           
  4363                           ; BSR set to: 1
  4364  001F50  9AF2               	bcf	intcon,5,c	;volatile
  4365  001F52                     l518:
  4366                           
  4367                           ; BSR set to: 1
  4368  001F52  8ED5               	bsf	4053,7,c	;volatile
  4369                           
  4370                           ; BSR set to: 1
  4371  001F54  0012               	return	
  4372  001F56                     __end_of_OpenTimer0:
  4373                           	opt stack 0
  4374                           tblptru	equ	0xFF8
  4375                           tblptrh	equ	0xFF7
  4376                           tblptrl	equ	0xFF6
  4377                           tablat	equ	0xFF5
  4378                           prodh	equ	0xFF4
  4379                           prodl	equ	0xFF3
  4380                           intcon	equ	0xFF2
  4381                           postinc0	equ	0xFEE
  4382                           wreg	equ	0xFE8
  4383                           indf1	equ	0xFE7
  4384                           postdec1	equ	0xFE5
  4385                           fsr1h	equ	0xFE2
  4386                           fsr1l	equ	0xFE1
  4387                           indf2	equ	0xFDF
  4388                           postinc2	equ	0xFDE
  4389                           postdec2	equ	0xFDD
  4390                           fsr2h	equ	0xFDA
  4391                           fsr2l	equ	0xFD9
  4392                           status	equ	0xFD8
  4393                           
  4394 ;; *************** function _OpenADC *****************
  4395 ;; Defined at:
  4396 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;  config          1    wreg     unsigned char 
  4399 ;;  config2         1    0[BANK1 ] unsigned char 
  4400 ;;  portconfig      1    1[BANK1 ] unsigned char 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  config          1    4[BANK1 ] unsigned char 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;		None               void
  4405 ;; Registers used:
  4406 ;;		wreg, status,2, status,0
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4412 ;;      Params:         0       0       2       0       0
  4413 ;;      Locals:         0       0       1       0       0
  4414 ;;      Temps:          0       0       2       0       0
  4415 ;;      Totals:         0       0       5       0       0
  4416 ;;Total ram usage:        5 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:   11
  4419 ;; This function calls:
  4420 ;;		Nothing
  4421 ;; This function is called by:
  4422 ;;		_main
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text26
  4427  001736                     __ptext26:
  4428                           	opt stack 0
  4429  001736                     _OpenADC:
  4430                           	opt stack 19
  4431                           
  4432                           ; BSR set to: 1
  4433                           ;incstack = 0
  4434                           ;OpenADC@config stored from wreg
  4435  001736  CFE8 F18A          	movff	wreg,OpenADC@config
  4436  00173A  0E00               	movlw	0
  4437  00173C  6EC2               	movwf	4034,c	;volatile
  4438  00173E  0E00               	movlw	0
  4439  001740  6EC0               	movwf	4032,c	;volatile
  4440  001742  0101               	movlb	1	; () banked
  4441  001744  0101               	movlb	1	; () banked
  4442  001746  90D8               	bcf	status,0,c
  4443  001748  3186               	rrcf	OpenADC@config2& (0+255),w,b
  4444  00174A  0B3C               	andlw	60
  4445  00174C  6EC2               	movwf	4034,c	;volatile
  4446                           
  4447                           ; BSR set to: 1
  4448  00174E  C186  F188         	movff	OpenADC@config2,??_OpenADC
  4449  001752  0101               	movlb	1	; () banked
  4450  001754  3B88               	swapf	??_OpenADC& (0+255),f,b
  4451  001756  0EF0               	movlw	240
  4452  001758  1788               	andwf	??_OpenADC& (0+255),f,b
  4453  00175A  0E30               	movlw	48
  4454  00175C  0101               	movlb	1	; () banked
  4455  00175E  1788               	andwf	??_OpenADC& (0+255),f,b
  4456  001760  0101               	movlb	1	; () banked
  4457  001762  0101               	movlb	1	; () banked
  4458  001764  5187               	movf	OpenADC@portconfig& (0+255),w,b
  4459  001766  0B0F               	andlw	15
  4460  001768  0101               	movlb	1	; () banked
  4461  00176A  1188               	iorwf	??_OpenADC& (0+255),w,b
  4462  00176C  6EC1               	movwf	4033,c	;volatile
  4463                           
  4464                           ; BSR set to: 1
  4465  00176E  C18A  F188         	movff	OpenADC@config,??_OpenADC
  4466  001772  0101               	movlb	1	; () banked
  4467  001774  90D8               	bcf	status,0,c
  4468  001776  3788               	rlcf	??_OpenADC& (0+255),f,b
  4469  001778  0101               	movlb	1	; () banked
  4470  00177A  90D8               	bcf	status,0,c
  4471  00177C  3788               	rlcf	??_OpenADC& (0+255),f,b
  4472  00177E  0E38               	movlw	56
  4473  001780  0101               	movlb	1	; () banked
  4474  001782  1788               	andwf	??_OpenADC& (0+255),f,b
  4475  001784  C18A  F189         	movff	OpenADC@config,??_OpenADC+1
  4476  001788  0101               	movlb	1	; () banked
  4477  00178A  3B89               	swapf	(??_OpenADC+1)& (0+255),f,b
  4478  00178C  0E0F               	movlw	15
  4479  00178E  1789               	andwf	(??_OpenADC+1)& (0+255),f,b
  4480  001790  0E07               	movlw	7
  4481  001792  0101               	movlb	1	; () banked
  4482  001794  1789               	andwf	(??_OpenADC+1)& (0+255),f,b
  4483  001796  0101               	movlb	1	; () banked
  4484  001798  0101               	movlb	1	; () banked
  4485  00179A  518A               	movf	OpenADC@config& (0+255),w,b
  4486  00179C  0B80               	andlw	128
  4487  00179E  0101               	movlb	1	; () banked
  4488  0017A0  1189               	iorwf	(??_OpenADC+1)& (0+255),w,b
  4489  0017A2  0101               	movlb	1	; () banked
  4490  0017A4  1188               	iorwf	??_OpenADC& (0+255),w,b
  4491  0017A6  6EC0               	movwf	4032,c	;volatile
  4492                           
  4493                           ; BSR set to: 1
  4494  0017A8  0101               	movlb	1	; () banked
  4495  0017AA  0101               	movlb	1	; () banked
  4496  0017AC  AF86               	btfss	OpenADC@config2& (0+255),7,b
  4497  0017AE  D003               	goto	l498
  4498                           
  4499                           ; BSR set to: 1
  4500  0017B0  9C9E               	bcf	3998,6,c	;volatile
  4501  0017B2  8C9D               	bsf	3997,6,c	;volatile
  4502  0017B4  8CF2               	bsf	intcon,6,c	;volatile
  4503  0017B6                     l498:
  4504                           
  4505                           ; BSR set to: 1
  4506  0017B6  80C2               	bsf	4034,0,c	;volatile
  4507                           
  4508                           ; BSR set to: 1
  4509  0017B8  0012               	return	
  4510  0017BA                     __end_of_OpenADC:
  4511                           	opt stack 0
  4512                           tblptru	equ	0xFF8
  4513                           tblptrh	equ	0xFF7
  4514                           tblptrl	equ	0xFF6
  4515                           tablat	equ	0xFF5
  4516                           prodh	equ	0xFF4
  4517                           prodl	equ	0xFF3
  4518                           intcon	equ	0xFF2
  4519                           postinc0	equ	0xFEE
  4520                           wreg	equ	0xFE8
  4521                           indf1	equ	0xFE7
  4522                           postdec1	equ	0xFE5
  4523                           fsr1h	equ	0xFE2
  4524                           fsr1l	equ	0xFE1
  4525                           indf2	equ	0xFDF
  4526                           postinc2	equ	0xFDE
  4527                           postdec2	equ	0xFDD
  4528                           fsr2h	equ	0xFDA
  4529                           fsr2l	equ	0xFD9
  4530                           status	equ	0xFD8
  4531                           
  4532 ;; *************** function _FromMainLow_sendmsg *****************
  4533 ;; Defined at:
  4534 ;;		line 150 in file "../src/messages.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  length          1    wreg     unsigned char 
  4537 ;;  msgtype         1   22[BANK1 ] unsigned char 
  4538 ;;  data            2   23[BANK1 ] PTR void 
  4539 ;;		 -> main@msgbuffer(11), 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  length          1   25[BANK1 ] unsigned char 
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      char 
  4544 ;; Registers used:
  4545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4551 ;;      Params:         0       0       3       0       0
  4552 ;;      Locals:         0       0       1       0       0
  4553 ;;      Temps:          0       0       0       0       0
  4554 ;;      Totals:         0       0       4       0       0
  4555 ;;Total ram usage:        4 bytes
  4556 ;; Hardware stack levels used:    1
  4557 ;; Hardware stack levels required when called:   13
  4558 ;; This function calls:
  4559 ;;		_send_msg
  4560 ;; This function is called by:
  4561 ;;		_main
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           	psect	text27
  4566  001EC0                     __ptext27:
  4567                           	opt stack 0
  4568  001EC0                     _FromMainLow_sendmsg:
  4569                           	opt stack 17
  4570                           
  4571                           ; BSR set to: 1
  4572                           ;incstack = 0
  4573                           ;FromMainLow_sendmsg@length stored from wreg
  4574  001EC0  CFE8 F19F          	movff	wreg,FromMainLow_sendmsg@length
  4575                           
  4576                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  4577                           ;	Return value of _FromMainLow_sendmsg is never used
  4578  001EC4  0102               	movlb	2	; () banked
  4579  001EC6  0E02               	movlw	high _FromMainLow_MQ
  4580  001EC8  0101               	movlb	1	; () banked
  4581  001ECA  0101               	movlb	1	; () banked
  4582  001ECC  6F91               	movwf	(send_msg@qptr+1)& (0+255),b
  4583  001ECE  0102               	movlb	2	; () banked
  4584  001ED0  0E43               	movlw	low _FromMainLow_MQ
  4585  001ED2  0101               	movlb	1	; () banked
  4586  001ED4  0101               	movlb	1	; () banked
  4587  001ED6  6F90               	movwf	send_msg@qptr& (0+255),b
  4588  001ED8  C19F  F192         	movff	FromMainLow_sendmsg@length,send_msg@length
  4589  001EDC  C19C  F193         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  4590  001EE0  0101               	movlb	1	; () banked
  4591  001EE2  0101               	movlb	1	; () banked
  4592  001EE4  C19E  F195         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  4593  001EE8  0101               	movlb	1	; () banked
  4594  001EEA  0101               	movlb	1	; () banked
  4595  001EEC  C19D  F194         	movff	FromMainLow_sendmsg@data,send_msg@data
  4596  001EF0  ECCD  F006         	call	_send_msg	;wreg free
  4597  001EF4  0012               	return	
  4598  001EF6                     __end_of_FromMainLow_sendmsg:
  4599                           	opt stack 0
  4600                           tblptru	equ	0xFF8
  4601                           tblptrh	equ	0xFF7
  4602                           tblptrl	equ	0xFF6
  4603                           tablat	equ	0xFF5
  4604                           prodh	equ	0xFF4
  4605                           prodl	equ	0xFF3
  4606                           intcon	equ	0xFF2
  4607                           postinc0	equ	0xFEE
  4608                           wreg	equ	0xFE8
  4609                           indf1	equ	0xFE7
  4610                           postdec1	equ	0xFE5
  4611                           fsr1h	equ	0xFE2
  4612                           fsr1l	equ	0xFE1
  4613                           indf2	equ	0xFDF
  4614                           postinc2	equ	0xFDE
  4615                           postdec2	equ	0xFDD
  4616                           fsr2h	equ	0xFDA
  4617                           fsr2l	equ	0xFD9
  4618                           status	equ	0xFD8
  4619                           
  4620 ;; *************** function _send_msg *****************
  4621 ;; Defined at:
  4622 ;;		line 24 in file "../src/messages.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4625 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4626 ;;  length          1   12[BANK1 ] unsigned char 
  4627 ;;  msgtype         1   13[BANK1 ] unsigned char 
  4628 ;;  data            2   14[BANK1 ] PTR void 
  4629 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), 
  4630 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  4633 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4634 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  4635 ;;  tlength         2   17[BANK1 ] unsigned int 
  4636 ;;  slot            1   19[BANK1 ] unsigned char 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      char 
  4639 ;; Registers used:
  4640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4646 ;;      Params:         0       0       6       0       0
  4647 ;;      Locals:         0       0       5       0       0
  4648 ;;      Temps:          0       0       1       0       0
  4649 ;;      Totals:         0       0      12       0       0
  4650 ;;Total ram usage:       12 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:   12
  4653 ;; This function calls:
  4654 ;;		___awmod
  4655 ;;		_memcpy
  4656 ;; This function is called by:
  4657 ;;		_FromMainLow_sendmsg
  4658 ;;		_FromMainHigh_sendmsg
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text28
  4663  000D9A                     __ptext28:
  4664                           	opt stack 0
  4665  000D9A                     _send_msg:
  4666                           	opt stack 16
  4667                           
  4668                           ;messages.c: 25: unsigned char slot;
  4669                           ;messages.c: 27: msg *qmsg;
  4670                           ;messages.c: 28: size_t tlength = length;
  4671                           
  4672                           ;incstack = 0
  4673  000D9A  0101               	movlb	1	; () banked
  4674  000D9C  0101               	movlb	1	; () banked
  4675  000D9E  C192  F197         	movff	send_msg@length,send_msg@tlength
  4676  000DA2  0101               	movlb	1	; () banked
  4677  000DA4  0101               	movlb	1	; () banked
  4678  000DA6  6B98               	clrf	(send_msg@tlength+1)& (0+255),b
  4679                           
  4680                           ; BSR set to: 1
  4681                           ;messages.c: 38: slot = qptr->cur_write_ind;
  4682  000DA8  0101               	movlb	1	; () banked
  4683  000DAA  EE20 F041          	lfsr	2,65
  4684  000DAE  0101               	movlb	1	; () banked
  4685  000DB0  5190               	movf	send_msg@qptr& (0+255),w,b
  4686  000DB2  26D9               	addwf	fsr2l,f,c
  4687  000DB4  0101               	movlb	1	; () banked
  4688  000DB6  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  4689  000DB8  22DA               	addwfc	fsr2h,f,c
  4690  000DBA  50DF               	movf	indf2,w,c
  4691  000DBC  0101               	movlb	1	; () banked
  4692  000DBE  0101               	movlb	1	; () banked
  4693  000DC0  6F99               	movwf	send_msg@slot& (0+255),b
  4694                           
  4695                           ; BSR set to: 1
  4696                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  4697  000DC2  0101               	movlb	1	; () banked
  4698  000DC4  0101               	movlb	1	; () banked
  4699  000DC6  5199               	movf	send_msg@slot& (0+255),w,b
  4700  000DC8  0D0D               	mullw	13
  4701  000DCA  50F3               	movf	prodl,w,c
  4702  000DCC  0101               	movlb	1	; () banked
  4703  000DCE  0101               	movlb	1	; () banked
  4704  000DD0  2590               	addwf	send_msg@qptr& (0+255),w,b
  4705  000DD2  0101               	movlb	1	; () banked
  4706  000DD4  0101               	movlb	1	; () banked
  4707  000DD6  6F9A               	movwf	send_msg@qmsg& (0+255),b
  4708  000DD8  50F4               	movf	prodh,w,c
  4709  000DDA  0101               	movlb	1	; () banked
  4710  000DDC  0101               	movlb	1	; () banked
  4711  000DDE  2191               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  4712  000DE0  0101               	movlb	1	; () banked
  4713  000DE2  6F9B               	movwf	(send_msg@qmsg+1)& (0+255),b
  4714                           
  4715                           ; BSR set to: 1
  4716                           ;messages.c: 41: if (qmsg->full != 0) {
  4717  000DE4  C19A  FFD9         	movff	send_msg@qmsg,fsr2l
  4718  000DE8  C19B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4719  000DEC  50DF               	movf	indf2,w,c
  4720  000DEE  B4D8               	btfsc	status,2,c
  4721  000DF0  D002               	goto	l4133
  4722                           
  4723                           ; BSR set to: 1
  4724                           ;messages.c: 42: return (-1);
  4725  000DF2  0EFF               	movlw	255
  4726  000DF4  0012               	return	
  4727  000DF6                     l4133:
  4728                           
  4729                           ; BSR set to: 1
  4730                           ;messages.c: 43: }
  4731                           ;messages.c: 46: qmsg->length = length;
  4732  000DF6  0101               	movlb	1	; () banked
  4733  000DF8  EE20 F001          	lfsr	2,1
  4734  000DFC  0101               	movlb	1	; () banked
  4735  000DFE  519A               	movf	send_msg@qmsg& (0+255),w,b
  4736  000E00  26D9               	addwf	fsr2l,f,c
  4737  000E02  0101               	movlb	1	; () banked
  4738  000E04  519B               	movf	(send_msg@qmsg+1)& (0+255),w,b
  4739  000E06  22DA               	addwfc	fsr2h,f,c
  4740  000E08  0101               	movlb	1	; () banked
  4741  000E0A  C192  FFDF         	movff	send_msg@length,indf2
  4742                           
  4743                           ;messages.c: 47: qmsg->msgtype = msgtype;
  4744  000E0E  0101               	movlb	1	; () banked
  4745  000E10  EE20 F002          	lfsr	2,2
  4746  000E14  0101               	movlb	1	; () banked
  4747  000E16  519A               	movf	send_msg@qmsg& (0+255),w,b
  4748  000E18  26D9               	addwf	fsr2l,f,c
  4749  000E1A  0101               	movlb	1	; () banked
  4750  000E1C  519B               	movf	(send_msg@qmsg+1)& (0+255),w,b
  4751  000E1E  22DA               	addwfc	fsr2h,f,c
  4752  000E20  0101               	movlb	1	; () banked
  4753  000E22  C193  FFDF         	movff	send_msg@msgtype,indf2
  4754                           
  4755                           ; BSR set to: 1
  4756                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  4757  000E26  0E03               	movlw	3
  4758  000E28  0101               	movlb	1	; () banked
  4759  000E2A  0101               	movlb	1	; () banked
  4760  000E2C  259A               	addwf	send_msg@qmsg& (0+255),w,b
  4761  000E2E  0101               	movlb	1	; () banked
  4762  000E30  0101               	movlb	1	; () banked
  4763  000E32  6F86               	movwf	memcpy@d1& (0+255),b
  4764  000E34  0E00               	movlw	0
  4765  000E36  0101               	movlb	1	; () banked
  4766  000E38  0101               	movlb	1	; () banked
  4767  000E3A  219B               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  4768  000E3C  0101               	movlb	1	; () banked
  4769  000E3E  6F87               	movwf	(memcpy@d1+1)& (0+255),b
  4770  000E40  0101               	movlb	1	; () banked
  4771  000E42  0101               	movlb	1	; () banked
  4772  000E44  C195  F189         	movff	send_msg@data+1,memcpy@s1+1
  4773  000E48  0101               	movlb	1	; () banked
  4774  000E4A  0101               	movlb	1	; () banked
  4775  000E4C  C194  F188         	movff	send_msg@data,memcpy@s1
  4776  000E50  C197  F18A         	movff	send_msg@tlength,memcpy@n
  4777  000E54  C198  F18B         	movff	send_msg@tlength+1,memcpy@n+1
  4778  000E58  EC77  F00D         	call	_memcpy	;wreg free
  4779                           
  4780                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  4781  000E5C  0101               	movlb	1	; () banked
  4782  000E5E  EE20 F041          	lfsr	2,65
  4783  000E62  0101               	movlb	1	; () banked
  4784  000E64  5190               	movf	send_msg@qptr& (0+255),w,b
  4785  000E66  26D9               	addwf	fsr2l,f,c
  4786  000E68  0101               	movlb	1	; () banked
  4787  000E6A  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  4788  000E6C  22DA               	addwfc	fsr2h,f,c
  4789  000E6E  0101               	movlb	1	; () banked
  4790  000E70  EE10 F041          	lfsr	1,65
  4791  000E74  0101               	movlb	1	; () banked
  4792  000E76  5190               	movf	send_msg@qptr& (0+255),w,b
  4793  000E78  26E1               	addwf	fsr1l,f,c
  4794  000E7A  0101               	movlb	1	; () banked
  4795  000E7C  5191               	movf	(send_msg@qptr+1)& (0+255),w,b
  4796  000E7E  22E2               	addwfc	fsr1h,f,c
  4797  000E80  50E7               	movf	indf1,w,c
  4798  000E82  0101               	movlb	1	; () banked
  4799  000E84  6F96               	movwf	??_send_msg& (0+255),b
  4800  000E86  0E01               	movlw	1
  4801  000E88  0101               	movlb	1	; () banked
  4802  000E8A  2596               	addwf	??_send_msg& (0+255),w,b
  4803  000E8C  0101               	movlb	1	; () banked
  4804  000E8E  0101               	movlb	1	; () banked
  4805  000E90  6F86               	movwf	___awmod@dividend& (0+255),b
  4806  000E92  0101               	movlb	1	; () banked
  4807  000E94  0101               	movlb	1	; () banked
  4808  000E96  6B87               	clrf	(___awmod@dividend+1)& (0+255),b
  4809  000E98  0E00               	movlw	0
  4810  000E9A  2387               	addwfc	(___awmod@dividend+1)& (0+255),f,b
  4811  000E9C  0E00               	movlw	0
  4812  000E9E  0101               	movlb	1	; () banked
  4813  000EA0  0101               	movlb	1	; () banked
  4814  000EA2  6F89               	movwf	(___awmod@divisor+1)& (0+255),b
  4815  000EA4  0E05               	movlw	5
  4816  000EA6  0101               	movlb	1	; () banked
  4817  000EA8  6F88               	movwf	___awmod@divisor& (0+255),b
  4818  000EAA  ECF9  F007         	call	___awmod	;wreg free
  4819  000EAE  0101               	movlb	1	; () banked
  4820  000EB0  0101               	movlb	1	; () banked
  4821  000EB2  5186               	movf	?___awmod& (0+255),w,b
  4822  000EB4  6EDF               	movwf	indf2,c
  4823                           
  4824                           ; BSR set to: 1
  4825                           ;messages.c: 59: qmsg->full = 1;
  4826  000EB6  C19A  FFD9         	movff	send_msg@qmsg,fsr2l
  4827  000EBA  C19B  FFDA         	movff	send_msg@qmsg+1,fsr2h
  4828  000EBE  0E01               	movlw	1
  4829  000EC0  6EDF               	movwf	indf2,c
  4830                           
  4831                           ; BSR set to: 1
  4832                           ;messages.c: 60: return (1);
  4833  000EC2  0E01               	movlw	1
  4834  000EC4  0012               	return	
  4835  000EC6                     __end_of_send_msg:
  4836                           	opt stack 0
  4837                           tblptru	equ	0xFF8
  4838                           tblptrh	equ	0xFF7
  4839                           tblptrl	equ	0xFF6
  4840                           tablat	equ	0xFF5
  4841                           prodh	equ	0xFF4
  4842                           prodl	equ	0xFF3
  4843                           intcon	equ	0xFF2
  4844                           postinc0	equ	0xFEE
  4845                           wreg	equ	0xFE8
  4846                           indf1	equ	0xFE7
  4847                           postdec1	equ	0xFE5
  4848                           fsr1h	equ	0xFE2
  4849                           fsr1l	equ	0xFE1
  4850                           indf2	equ	0xFDF
  4851                           postinc2	equ	0xFDE
  4852                           postdec2	equ	0xFDD
  4853                           fsr2h	equ	0xFDA
  4854                           fsr2l	equ	0xFD9
  4855                           status	equ	0xFD8
  4856                           
  4857 ;; *************** function _memcpy *****************
  4858 ;; Defined at:
  4859 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  d1              2    0[BANK1 ] PTR void 
  4862 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4863 ;;		 -> i2c_slave_int_handler@motorData(5), i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67)
      +, 
  4864 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  4865 ;;  s1              2    2[BANK1 ] PTR const void 
  4866 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4867 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4868 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  4869 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  4870 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  4871 ;;  n               2    4[BANK1 ] unsigned int 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4874 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4875 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4876 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  4877 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  4878 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  4879 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4880 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  4881 ;;		 -> i2c_slave_int_handler@motorData(5), i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67)
      +, 
  4882 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  2    0[BANK1 ] PTR void 
  4885 ;; Registers used:
  4886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4892 ;;      Params:         0       0       6       0       0
  4893 ;;      Locals:         0       0       4       0       0
  4894 ;;      Temps:          0       0       0       0       0
  4895 ;;      Totals:         0       0      10       0       0
  4896 ;;Total ram usage:       10 bytes
  4897 ;; Hardware stack levels used:    1
  4898 ;; Hardware stack levels required when called:   11
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_send_msg
  4903 ;;		_recv_msg
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text29
  4908  001AEE                     __ptext29:
  4909                           	opt stack 0
  4910  001AEE                     _memcpy:
  4911                           	opt stack 16
  4912                           
  4913                           ; BSR set to: 1
  4914                           ;incstack = 0
  4915  001AEE  0101               	movlb	1	; () banked
  4916  001AF0  0101               	movlb	1	; () banked
  4917  001AF2  C189  F18F         	movff	memcpy@s1+1,memcpy@s+1
  4918  001AF6  0101               	movlb	1	; () banked
  4919  001AF8  0101               	movlb	1	; () banked
  4920  001AFA  C188  F18E         	movff	memcpy@s1,memcpy@s
  4921  001AFE  0101               	movlb	1	; () banked
  4922  001B00  0101               	movlb	1	; () banked
  4923  001B02  C187  F18D         	movff	memcpy@d1+1,memcpy@d+1
  4924  001B06  0101               	movlb	1	; () banked
  4925  001B08  0101               	movlb	1	; () banked
  4926  001B0A  C186  F18C         	movff	memcpy@d1,memcpy@d
  4927  001B0E  D012               	goto	l4153
  4928  001B10                     l4147:
  4929                           
  4930                           ; BSR set to: 1
  4931  001B10  C18E  FFD9         	movff	memcpy@s,fsr2l
  4932  001B14  C18F  FFDA         	movff	memcpy@s+1,fsr2h
  4933  001B18  C18C  FFE1         	movff	memcpy@d,fsr1l
  4934  001B1C  C18D  FFE2         	movff	memcpy@d+1,fsr1h
  4935  001B20  CFDF FFE7          	movff	indf2,indf1
  4936                           
  4937                           ; BSR set to: 1
  4938  001B24  0101               	movlb	1	; () banked
  4939  001B26  0101               	movlb	1	; () banked
  4940  001B28  4B8E               	infsnz	memcpy@s& (0+255),f,b
  4941  001B2A  2B8F               	incf	(memcpy@s+1)& (0+255),f,b
  4942                           
  4943                           ; BSR set to: 1
  4944  001B2C  0101               	movlb	1	; () banked
  4945  001B2E  0101               	movlb	1	; () banked
  4946  001B30  4B8C               	infsnz	memcpy@d& (0+255),f,b
  4947  001B32  2B8D               	incf	(memcpy@d+1)& (0+255),f,b
  4948  001B34                     l4153:
  4949                           
  4950                           ; BSR set to: 1
  4951  001B34  0101               	movlb	1	; () banked
  4952  001B36  0101               	movlb	1	; () banked
  4953  001B38  078A               	decf	memcpy@n& (0+255),f,b
  4954  001B3A  A0D8               	btfss	status,0,c
  4955  001B3C  078B               	decf	(memcpy@n+1)& (0+255),f,b
  4956  001B3E  0101               	movlb	1	; () banked
  4957  001B40  298A               	incf	memcpy@n& (0+255),w,b
  4958  001B42  B4D8               	btfsc	status,2,c
  4959  001B44  298B               	incf	(memcpy@n+1)& (0+255),w,b
  4960  001B46  B4D8               	btfsc	status,2,c
  4961                           
  4962                           ; BSR set to: 1
  4963                           
  4964                           ; BSR set to: 1
  4965                           ;	Return value of _memcpy is never used
  4966  001B48  0012               	return	
  4967  001B4A  D7E2               	goto	l4147
  4968  001B4C                     __end_of_memcpy:
  4969                           	opt stack 0
  4970                           tblptru	equ	0xFF8
  4971                           tblptrh	equ	0xFF7
  4972                           tblptrl	equ	0xFF6
  4973                           tablat	equ	0xFF5
  4974                           prodh	equ	0xFF4
  4975                           prodl	equ	0xFF3
  4976                           intcon	equ	0xFF2
  4977                           postinc0	equ	0xFEE
  4978                           wreg	equ	0xFE8
  4979                           indf1	equ	0xFE7
  4980                           postdec1	equ	0xFE5
  4981                           fsr1h	equ	0xFE2
  4982                           fsr1l	equ	0xFE1
  4983                           indf2	equ	0xFDF
  4984                           postinc2	equ	0xFDE
  4985                           postdec2	equ	0xFDD
  4986                           fsr2h	equ	0xFDA
  4987                           fsr2l	equ	0xFD9
  4988                           status	equ	0xFD8
  4989                           
  4990 ;; *************** function ___awmod *****************
  4991 ;; Defined at:
  4992 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  dividend        2    0[BANK1 ] int 
  4995 ;;  divisor         2    2[BANK1 ] int 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  sign            1    6[BANK1 ] unsigned char 
  4998 ;;  counter         1    5[BANK1 ] unsigned char 
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  2    0[BANK1 ] int 
  5001 ;; Registers used:
  5002 ;;		wreg, status,2, status,0, prodl
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5008 ;;      Params:         0       0       4       0       0
  5009 ;;      Locals:         0       0       2       0       0
  5010 ;;      Temps:          0       0       1       0       0
  5011 ;;      Totals:         0       0       7       0       0
  5012 ;;Total ram usage:        7 bytes
  5013 ;; Hardware stack levels used:    1
  5014 ;; Hardware stack levels required when called:   11
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_send_msg
  5019 ;;		_recv_msg
  5020 ;;		i1_send_msg
  5021 ;;		i2_send_msg
  5022 ;;		i2_recv_msg
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text30
  5027  000FF2                     __ptext30:
  5028                           	opt stack 0
  5029  000FF2                     ___awmod:
  5030                           	opt stack 16
  5031                           
  5032                           ; BSR set to: 1
  5033                           ;incstack = 0
  5034  000FF2  0101               	movlb	1	; () banked
  5035  000FF4  6F8A               	movwf	??___awmod& (0+255),b
  5036  000FF6  0E00               	movlw	0
  5037  000FF8  0101               	movlb	1	; () banked
  5038  000FFA  0101               	movlb	1	; () banked
  5039  000FFC  6F8C               	movwf	___awmod@sign& (0+255),b
  5040  000FFE  0101               	movlb	1	; () banked
  5041  001000  518A               	movf	??___awmod& (0+255),w,b
  5042                           
  5043                           ; BSR set to: 1
  5044  001002  0101               	movlb	1	; () banked
  5045  001004  0101               	movlb	1	; () banked
  5046  001006  5187               	movf	(___awmod@dividend+1)& (0+255),w,b
  5047  001008  0A80               	xorlw	128
  5048  00100A  6EF3               	movwf	prodl,c
  5049  00100C  0E80               	movlw	128
  5050  00100E  5CF3               	subwf	prodl,w,c
  5051  001010  0E00               	movlw	0
  5052  001012  B4D8               	btfsc	status,2,c
  5053  001014  5D86               	subwf	___awmod@dividend& (0+255),w,b
  5054  001016  B0D8               	btfsc	status,0,c
  5055  001018  D00F               	goto	l4497
  5056                           
  5057                           ; BSR set to: 1
  5058  00101A  0101               	movlb	1	; () banked
  5059  00101C  0101               	movlb	1	; () banked
  5060  00101E  6D86               	negf	___awmod@dividend& (0+255),b
  5061  001020  0101               	movlb	1	; () banked
  5062  001022  1F87               	comf	(___awmod@dividend+1)& (0+255),f,b
  5063  001024  B0D8               	btfsc	status,0,c
  5064  001026  2B87               	incf	(___awmod@dividend+1)& (0+255),f,b
  5065                           
  5066                           ; BSR set to: 1
  5067  001028  0101               	movlb	1	; () banked
  5068  00102A  6F8A               	movwf	??___awmod& (0+255),b
  5069  00102C  0E01               	movlw	1
  5070  00102E  0101               	movlb	1	; () banked
  5071  001030  0101               	movlb	1	; () banked
  5072  001032  6F8C               	movwf	___awmod@sign& (0+255),b
  5073  001034  0101               	movlb	1	; () banked
  5074  001036  518A               	movf	??___awmod& (0+255),w,b
  5075  001038                     l4497:
  5076                           
  5077                           ; BSR set to: 1
  5078  001038  0101               	movlb	1	; () banked
  5079  00103A  0101               	movlb	1	; () banked
  5080  00103C  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  5081  00103E  0A80               	xorlw	128
  5082  001040  6EF3               	movwf	prodl,c
  5083  001042  0E80               	movlw	128
  5084  001044  5CF3               	subwf	prodl,w,c
  5085  001046  0E00               	movlw	0
  5086  001048  B4D8               	btfsc	status,2,c
  5087  00104A  5D88               	subwf	___awmod@divisor& (0+255),w,b
  5088  00104C  B0D8               	btfsc	status,0,c
  5089  00104E  D007               	goto	l4501
  5090                           
  5091                           ; BSR set to: 1
  5092  001050  0101               	movlb	1	; () banked
  5093  001052  0101               	movlb	1	; () banked
  5094  001054  6D88               	negf	___awmod@divisor& (0+255),b
  5095  001056  0101               	movlb	1	; () banked
  5096  001058  1F89               	comf	(___awmod@divisor+1)& (0+255),f,b
  5097  00105A  B0D8               	btfsc	status,0,c
  5098  00105C  2B89               	incf	(___awmod@divisor+1)& (0+255),f,b
  5099  00105E                     l4501:
  5100                           
  5101                           ; BSR set to: 1
  5102  00105E  0101               	movlb	1	; () banked
  5103  001060  0101               	movlb	1	; () banked
  5104  001062  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  5105  001064  1188               	iorwf	___awmod@divisor& (0+255),w,b
  5106  001066  B4D8               	btfsc	status,2,c
  5107  001068  D03A               	goto	l4517
  5108                           
  5109                           ; BSR set to: 1
  5110  00106A  0101               	movlb	1	; () banked
  5111  00106C  6F8A               	movwf	??___awmod& (0+255),b
  5112  00106E  0E01               	movlw	1
  5113  001070  0101               	movlb	1	; () banked
  5114  001072  0101               	movlb	1	; () banked
  5115  001074  6F8B               	movwf	___awmod@counter& (0+255),b
  5116  001076  0101               	movlb	1	; () banked
  5117  001078  518A               	movf	??___awmod& (0+255),w,b
  5118  00107A  D009               	goto	l4507
  5119  00107C                     l4505:
  5120                           
  5121                           ; BSR set to: 1
  5122  00107C  0101               	movlb	1	; () banked
  5123  00107E  0101               	movlb	1	; () banked
  5124  001080  0101               	movlb	1	; () banked
  5125  001082  90D8               	bcf	status,0,c
  5126  001084  3788               	rlcf	___awmod@divisor& (0+255),f,b
  5127  001086  3789               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  5128  001088  0101               	movlb	1	; () banked
  5129  00108A  0101               	movlb	1	; () banked
  5130  00108C  2B8B               	incf	___awmod@counter& (0+255),f,b
  5131  00108E                     l4507:
  5132                           
  5133                           ; BSR set to: 1
  5134  00108E  0101               	movlb	1	; () banked
  5135  001090  0101               	movlb	1	; () banked
  5136  001092  AF89               	btfss	(___awmod@divisor+1)& (0+255),7,b
  5137  001094  D7F3               	goto	l4505
  5138  001096                     l4509:
  5139                           
  5140                           ; BSR set to: 1
  5141  001096  0101               	movlb	1	; () banked
  5142  001098  0101               	movlb	1	; () banked
  5143  00109A  5188               	movf	___awmod@divisor& (0+255),w,b
  5144  00109C  0101               	movlb	1	; () banked
  5145  00109E  0101               	movlb	1	; () banked
  5146  0010A0  5D86               	subwf	___awmod@dividend& (0+255),w,b
  5147  0010A2  0101               	movlb	1	; () banked
  5148  0010A4  0101               	movlb	1	; () banked
  5149  0010A6  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  5150  0010A8  0101               	movlb	1	; () banked
  5151  0010AA  0101               	movlb	1	; () banked
  5152  0010AC  5987               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  5153  0010AE  A0D8               	btfss	status,0,c
  5154  0010B0  D00C               	goto	l4513
  5155                           
  5156                           ; BSR set to: 1
  5157  0010B2  0101               	movlb	1	; () banked
  5158  0010B4  0101               	movlb	1	; () banked
  5159  0010B6  5188               	movf	___awmod@divisor& (0+255),w,b
  5160  0010B8  0101               	movlb	1	; () banked
  5161  0010BA  0101               	movlb	1	; () banked
  5162  0010BC  5F86               	subwf	___awmod@dividend& (0+255),f,b
  5163  0010BE  0101               	movlb	1	; () banked
  5164  0010C0  0101               	movlb	1	; () banked
  5165  0010C2  5189               	movf	(___awmod@divisor+1)& (0+255),w,b
  5166  0010C4  0101               	movlb	1	; () banked
  5167  0010C6  0101               	movlb	1	; () banked
  5168  0010C8  5B87               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  5169  0010CA                     l4513:
  5170                           
  5171                           ; BSR set to: 1
  5172  0010CA  0101               	movlb	1	; () banked
  5173  0010CC  0101               	movlb	1	; () banked
  5174  0010CE  0101               	movlb	1	; () banked
  5175  0010D0  90D8               	bcf	status,0,c
  5176  0010D2  3389               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  5177  0010D4  3388               	rrcf	___awmod@divisor& (0+255),f,b
  5178                           
  5179                           ; BSR set to: 1
  5180  0010D6  0101               	movlb	1	; () banked
  5181  0010D8  0101               	movlb	1	; () banked
  5182  0010DA  2F8B               	decfsz	___awmod@counter& (0+255),f,b
  5183  0010DC  D7DC               	goto	l4509
  5184  0010DE                     l4517:
  5185                           
  5186                           ; BSR set to: 1
  5187  0010DE  0101               	movlb	1	; () banked
  5188  0010E0  0101               	movlb	1	; () banked
  5189  0010E2  518C               	movf	___awmod@sign& (0+255),w,b
  5190  0010E4  B4D8               	btfsc	status,2,c
  5191  0010E6  D007               	goto	l4521
  5192                           
  5193                           ; BSR set to: 1
  5194  0010E8  0101               	movlb	1	; () banked
  5195  0010EA  0101               	movlb	1	; () banked
  5196  0010EC  6D86               	negf	___awmod@dividend& (0+255),b
  5197  0010EE  0101               	movlb	1	; () banked
  5198  0010F0  1F87               	comf	(___awmod@dividend+1)& (0+255),f,b
  5199  0010F2  B0D8               	btfsc	status,0,c
  5200  0010F4  2B87               	incf	(___awmod@dividend+1)& (0+255),f,b
  5201  0010F6                     l4521:
  5202                           
  5203                           ; BSR set to: 1
  5204  0010F6  C186  F186         	movff	___awmod@dividend,?___awmod
  5205  0010FA  C187  F187         	movff	___awmod@dividend+1,?___awmod+1
  5206  0010FE  0012               	return	
  5207  001100                     __end_of___awmod:
  5208                           	opt stack 0
  5209                           tblptru	equ	0xFF8
  5210                           tblptrh	equ	0xFF7
  5211                           tblptrl	equ	0xFF6
  5212                           tablat	equ	0xFF5
  5213                           prodh	equ	0xFF4
  5214                           prodl	equ	0xFF3
  5215                           intcon	equ	0xFF2
  5216                           postinc0	equ	0xFEE
  5217                           wreg	equ	0xFE8
  5218                           indf1	equ	0xFE7
  5219                           postdec1	equ	0xFE5
  5220                           fsr1h	equ	0xFE2
  5221                           fsr1l	equ	0xFE1
  5222                           indf2	equ	0xFDF
  5223                           postinc2	equ	0xFDE
  5224                           postdec2	equ	0xFDD
  5225                           fsr2h	equ	0xFDA
  5226                           fsr2l	equ	0xFD9
  5227                           status	equ	0xFD8
  5228                           
  5229 ;; *************** function _InterruptHandlerLow *****************
  5230 ;; Defined at:
  5231 ;;		line 126 in file "../src/interrupts.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;		None
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;		None
  5236 ;; Return value:  Size  Location     Type
  5237 ;;		None               void
  5238 ;; Registers used:
  5239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5245 ;;      Params:         0       0       0       0       0
  5246 ;;      Locals:         0       0       0       0       0
  5247 ;;      Temps:         17       0       0       0       0
  5248 ;;      Totals:        17       0       0       0       0
  5249 ;;Total ram usage:       17 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; Hardware stack levels required when called:   10
  5252 ;; This function calls:
  5253 ;;		_adc_int_handler
  5254 ;;		_timer1_int_handler
  5255 ;;		_uart_recv_int_handler
  5256 ;;		_uart_trans_int_handler
  5257 ;; This function is called by:
  5258 ;;		Interrupt level 1
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           	psect	intcodelo
  5263  000018                     __pintcodelo:
  5264                           	opt stack 0
  5265  000018                     _InterruptHandlerLow:
  5266                           	opt stack 16
  5267                           
  5268                           ; BSR set to: 1
  5269                           ;incstack = 0
  5270  000018  CFD8 F01C          	movff	status,??_InterruptHandlerLow
  5271  00001C  CFE8 F01D          	movff	wreg,??_InterruptHandlerLow+1
  5272  000020  CFE0 F01E          	movff	bsr,??_InterruptHandlerLow+2
  5273  000024  CFFA F01F          	movff	pclath,??_InterruptHandlerLow+3
  5274  000028  CFFB F020          	movff	pclatu,??_InterruptHandlerLow+4
  5275  00002C  CFE9 F021          	movff	fsr0l,??_InterruptHandlerLow+5
  5276  000030  CFEA F022          	movff	fsr0h,??_InterruptHandlerLow+6
  5277  000034  CFE1 F023          	movff	fsr1l,??_InterruptHandlerLow+7
  5278  000038  CFE2 F024          	movff	fsr1h,??_InterruptHandlerLow+8
  5279  00003C  CFD9 F025          	movff	fsr2l,??_InterruptHandlerLow+9
  5280  000040  CFDA F026          	movff	fsr2h,??_InterruptHandlerLow+10
  5281  000044  CFF3 F027          	movff	prodl,??_InterruptHandlerLow+11
  5282  000048  CFF4 F028          	movff	prodh,??_InterruptHandlerLow+12
  5283  00004C  CFF6 F029          	movff	tblptrl,??_InterruptHandlerLow+13
  5284  000050  CFF7 F02A          	movff	tblptrh,??_InterruptHandlerLow+14
  5285  000054  CFF8 F02B          	movff	tblptru,??_InterruptHandlerLow+15
  5286  000058  CFF5 F02C          	movff	tablat,??_InterruptHandlerLow+16
  5287                           
  5288                           ;interrupts.c: 128: if(PIR1bits.ADIF){
  5289  00005C  AC9E               	btfss	3998,6,c	;volatile
  5290  00005E  D003               	goto	i1l4721
  5291                           
  5292                           ;interrupts.c: 130: PIR1bits.ADIF = 0;
  5293  000060  9C9E               	bcf	3998,6,c	;volatile
  5294                           
  5295                           ;interrupts.c: 131: adc_int_handler();
  5296  000062  ECE4  F00F         	call	_adc_int_handler	;wreg free
  5297  000066                     i1l4721:
  5298                           
  5299                           ;interrupts.c: 132: }
  5300                           ;interrupts.c: 135: if (PIR1bits.TMR1IF) {
  5301  000066  A09E               	btfss	3998,0,c	;volatile
  5302  000068  D003               	goto	i1l4727
  5303                           
  5304                           ;interrupts.c: 136: PIR1bits.TMR1IF = 0;
  5305  00006A  909E               	bcf	3998,0,c	;volatile
  5306                           
  5307                           ;interrupts.c: 137: timer1_int_handler();
  5308  00006C  EC64  F010         	call	_timer1_int_handler	;wreg free
  5309  000070                     i1l4727:
  5310                           
  5311                           ;interrupts.c: 139: }
  5312                           ;interrupts.c: 141: if (PIR1bits.TXIF) {
  5313  000070  B89E               	btfsc	3998,4,c	;volatile
  5314                           
  5315                           ;interrupts.c: 143: uart_trans_int_handler();
  5316  000072  EC43  F00D         	call	_uart_trans_int_handler	;wreg free
  5317                           
  5318                           ;interrupts.c: 144: }
  5319                           ;interrupts.c: 146: if (PIR1bits.RCIF) {
  5320  000076  AA9E               	btfss	3998,5,c	;volatile
  5321  000078  D003               	goto	i1l57
  5322                           
  5323                           ;interrupts.c: 147: PIR1bits.RCIF = 0;
  5324  00007A  9A9E               	bcf	3998,5,c	;volatile
  5325                           
  5326                           ;interrupts.c: 149: uart_recv_int_handler();
  5327  00007C  EC59  F009         	call	_uart_recv_int_handler	;wreg free
  5328  000080                     i1l57:
  5329  000080  C02C  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5330  000084  C02B  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5331  000088  C02A  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5332  00008C  C029  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5333  000090  C028  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5334  000094  C027  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5335  000098  C026  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5336  00009C  C025  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5337  0000A0  C024  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5338  0000A4  C023  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5339  0000A8  C022  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5340  0000AC  C021  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5341  0000B0  C020  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5342  0000B4  C01F  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5343  0000B8  C01E  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5344  0000BC  C01D  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5345  0000C0  C01C  FFD8         	movff	??_InterruptHandlerLow,status
  5346  0000C4  0010               	retfie	
  5347  0000C6                     __end_of_InterruptHandlerLow:
  5348                           	opt stack 0
  5349                           pclatu	equ	0xFFB
  5350                           pclath	equ	0xFFA
  5351                           tblptru	equ	0xFF8
  5352                           tblptrh	equ	0xFF7
  5353                           tblptrl	equ	0xFF6
  5354                           tablat	equ	0xFF5
  5355                           prodh	equ	0xFF4
  5356                           prodl	equ	0xFF3
  5357                           intcon	equ	0xFF2
  5358                           postinc0	equ	0xFEE
  5359                           fsr0h	equ	0xFEA
  5360                           fsr0l	equ	0xFE9
  5361                           wreg	equ	0xFE8
  5362                           indf1	equ	0xFE7
  5363                           postdec1	equ	0xFE5
  5364                           fsr1h	equ	0xFE2
  5365                           fsr1l	equ	0xFE1
  5366                           bsr	equ	0xFE0
  5367                           indf2	equ	0xFDF
  5368                           postinc2	equ	0xFDE
  5369                           postdec2	equ	0xFDD
  5370                           fsr2h	equ	0xFDA
  5371                           fsr2l	equ	0xFD9
  5372                           status	equ	0xFD8
  5373                           
  5374 ;; *************** function _uart_trans_int_handler *****************
  5375 ;; Defined at:
  5376 ;;		line 72 in file "../src/my_uart.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;		None
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;		None
  5381 ;; Return value:  Size  Location     Type
  5382 ;;		None               void
  5383 ;; Registers used:
  5384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5390 ;;      Params:         0       0       0       0       0
  5391 ;;      Locals:         0       0       0       0       0
  5392 ;;      Temps:          1       0       0       0       0
  5393 ;;      Totals:         1       0       0       0       0
  5394 ;;Total ram usage:        1 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:    6
  5397 ;; This function calls:
  5398 ;;		Nothing
  5399 ;; This function is called by:
  5400 ;;		_InterruptHandlerLow
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           	psect	text32
  5405  001A86                     __ptext32:
  5406                           	opt stack 0
  5407  001A86                     _uart_trans_int_handler:
  5408                           	opt stack 19
  5409                           
  5410                           ;my_uart.c: 74: if(TXSTAbits.TRMT){
  5411                           
  5412                           ;incstack = 0
  5413  001A86  A2AC               	btfss	4012,1,c	;volatile
  5414  001A88  0012               	return	
  5415                           
  5416                           ;my_uart.c: 75: if(uc_ptr->txBufind < uc_ptr->txBuflen){
  5417  001A8A  EE20 F00C          	lfsr	2,12
  5418  001A8E  5052               	movf	_uc_ptr,w,c
  5419  001A90  26D9               	addwf	fsr2l,f,c
  5420  001A92  5053               	movf	_uc_ptr+1,w,c
  5421  001A94  22DA               	addwfc	fsr2h,f,c
  5422  001A96  50DF               	movf	indf2,w,c
  5423  001A98  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5424  001A9A  EE20 F00B          	lfsr	2,11
  5425  001A9E  5052               	movf	_uc_ptr,w,c
  5426  001AA0  26D9               	addwf	fsr2l,f,c
  5427  001AA2  5053               	movf	_uc_ptr+1,w,c
  5428  001AA4  22DA               	addwfc	fsr2h,f,c
  5429  001AA6  50DF               	movf	indf2,w,c
  5430  001AA8  5C01               	subwf	??_uart_trans_int_handler,w,c
  5431  001AAA  B0D8               	btfsc	status,0,c
  5432  001AAC  D01E               	goto	i1l438
  5433                           
  5434                           ;my_uart.c: 76: TXREG = uc_ptr->txBuff[uc_ptr->txBufind];
  5435  001AAE  EE20 F00C          	lfsr	2,12
  5436  001AB2  5052               	movf	_uc_ptr,w,c
  5437  001AB4  26D9               	addwf	fsr2l,f,c
  5438  001AB6  5053               	movf	_uc_ptr+1,w,c
  5439  001AB8  22DA               	addwfc	fsr2h,f,c
  5440  001ABA  50DF               	movf	indf2,w,c
  5441  001ABC  6E01               	movwf	??_uart_trans_int_handler& (0+255),c
  5442  001ABE  5001               	movf	??_uart_trans_int_handler,w,c
  5443  001AC0  0D01               	mullw	1
  5444  001AC2  0E06               	movlw	6
  5445  001AC4  26F3               	addwf	prodl,f,c
  5446  001AC6  0E00               	movlw	0
  5447  001AC8  22F4               	addwfc	prodh,f,c
  5448  001ACA  50F3               	movf	prodl,w,c
  5449  001ACC  2452               	addwf	_uc_ptr,w,c
  5450  001ACE  6ED9               	movwf	fsr2l,c
  5451  001AD0  50F4               	movf	prodh,w,c
  5452  001AD2  2053               	addwfc	_uc_ptr+1,w,c
  5453  001AD4  6EDA               	movwf	fsr2h,c
  5454  001AD6  50DF               	movf	indf2,w,c
  5455  001AD8  6EAD               	movwf	4013,c	;volatile
  5456                           
  5457                           ;my_uart.c: 78: uc_ptr->txBufind++;
  5458  001ADA  EE20 F00C          	lfsr	2,12
  5459  001ADE  5052               	movf	_uc_ptr,w,c
  5460  001AE0  26D9               	addwf	fsr2l,f,c
  5461  001AE2  5053               	movf	_uc_ptr+1,w,c
  5462  001AE4  22DA               	addwfc	fsr2h,f,c
  5463  001AE6  2ADF               	incf	indf2,f,c
  5464                           
  5465                           ;my_uart.c: 79: } else
  5466  001AE8  0012               	return	
  5467  001AEA                     i1l438:
  5468                           
  5469                           ;my_uart.c: 80: PIE1bits.TX1IE = 0;
  5470  001AEA  989D               	bcf	3997,4,c	;volatile
  5471  001AEC  0012               	return	
  5472  001AEE                     __end_of_uart_trans_int_handler:
  5473                           	opt stack 0
  5474                           pclatu	equ	0xFFB
  5475                           pclath	equ	0xFFA
  5476                           tblptru	equ	0xFF8
  5477                           tblptrh	equ	0xFF7
  5478                           tblptrl	equ	0xFF6
  5479                           tablat	equ	0xFF5
  5480                           prodh	equ	0xFF4
  5481                           prodl	equ	0xFF3
  5482                           intcon	equ	0xFF2
  5483                           postinc0	equ	0xFEE
  5484                           fsr0h	equ	0xFEA
  5485                           fsr0l	equ	0xFE9
  5486                           wreg	equ	0xFE8
  5487                           indf1	equ	0xFE7
  5488                           postdec1	equ	0xFE5
  5489                           fsr1h	equ	0xFE2
  5490                           fsr1l	equ	0xFE1
  5491                           bsr	equ	0xFE0
  5492                           indf2	equ	0xFDF
  5493                           postinc2	equ	0xFDE
  5494                           postdec2	equ	0xFDD
  5495                           fsr2h	equ	0xFDA
  5496                           fsr2l	equ	0xFD9
  5497                           status	equ	0xFD8
  5498                           
  5499 ;; *************** function _uart_recv_int_handler *****************
  5500 ;; Defined at:
  5501 ;;		line 11 in file "../src/my_uart.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;		None
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;		None
  5506 ;; Return value:  Size  Location     Type
  5507 ;;		None               void
  5508 ;; Registers used:
  5509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5515 ;;      Params:         0       0       0       0       0
  5516 ;;      Locals:         0       0       0       0       0
  5517 ;;      Temps:          1       0       0       0       0
  5518 ;;      Totals:         1       0       0       0       0
  5519 ;;Total ram usage:        1 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    9
  5522 ;; This function calls:
  5523 ;;		_ReadUSART
  5524 ;;		_ToMainLow_sendmsg
  5525 ;; This function is called by:
  5526 ;;		_InterruptHandlerLow
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           	psect	text33
  5531  0012B2                     __ptext33:
  5532                           	opt stack 0
  5533  0012B2                     _uart_recv_int_handler:
  5534                           	opt stack 16
  5535                           
  5536                           ;my_uart.c: 20: if ((PIR1bits.RCIF)) {
  5537                           
  5538                           ;incstack = 0
  5539  0012B2  AA9E               	btfss	3998,5,c	;volatile
  5540  0012B4  D04E               	goto	i1l4709
  5541                           
  5542                           ;my_uart.c: 21: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  5543  0012B6  EE20 F005          	lfsr	2,5
  5544  0012BA  5052               	movf	_uc_ptr,w,c
  5545  0012BC  26D9               	addwf	fsr2l,f,c
  5546  0012BE  5053               	movf	_uc_ptr+1,w,c
  5547  0012C0  22DA               	addwfc	fsr2h,f,c
  5548  0012C2  50DF               	movf	indf2,w,c
  5549  0012C4  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5550  0012C6  501B               	movf	??_uart_recv_int_handler,w,c
  5551  0012C8  0D01               	mullw	1
  5552  0012CA  50F3               	movf	prodl,w,c
  5553  0012CC  2452               	addwf	_uc_ptr,w,c
  5554  0012CE  6ED9               	movwf	fsr2l,c
  5555  0012D0  50F4               	movf	prodh,w,c
  5556  0012D2  2053               	addwfc	_uc_ptr+1,w,c
  5557  0012D4  6EDA               	movwf	fsr2h,c
  5558  0012D6  EC14  F010         	call	_ReadUSART	;wreg free
  5559  0012DA  6EDF               	movwf	indf2,c
  5560                           
  5561                           ;my_uart.c: 25: uc_ptr->buflen++;
  5562  0012DC  EE20 F005          	lfsr	2,5
  5563  0012E0  5052               	movf	_uc_ptr,w,c
  5564  0012E2  26D9               	addwf	fsr2l,f,c
  5565  0012E4  5053               	movf	_uc_ptr+1,w,c
  5566  0012E6  22DA               	addwfc	fsr2h,f,c
  5567  0012E8  2ADF               	incf	indf2,f,c
  5568                           
  5569                           ;my_uart.c: 26: if(uartTimeOut > 200) {
  5570  0012EA  0EC9               	movlw	201
  5571  0012EC  5C4C               	subwf	_uartTimeOut,w,c
  5572  0012EE  0E00               	movlw	0
  5573  0012F0  584D               	subwfb	_uartTimeOut+1,w,c
  5574  0012F2  A0D8               	btfss	status,0,c
  5575  0012F4  D00C               	goto	i1l4703
  5576                           
  5577                           ;my_uart.c: 27: uc_ptr->buflen = 1;
  5578  0012F6  EE20 F005          	lfsr	2,5
  5579  0012FA  5052               	movf	_uc_ptr,w,c
  5580  0012FC  26D9               	addwf	fsr2l,f,c
  5581  0012FE  5053               	movf	_uc_ptr+1,w,c
  5582  001300  22DA               	addwfc	fsr2h,f,c
  5583  001302  0E01               	movlw	1
  5584  001304  6EDF               	movwf	indf2,c
  5585                           
  5586                           ;my_uart.c: 28: uartTimeOut = 0;
  5587  001306  0E00               	movlw	0
  5588  001308  6E4D               	movwf	_uartTimeOut+1,c
  5589  00130A  0E00               	movlw	0
  5590  00130C  6E4C               	movwf	_uartTimeOut,c
  5591  00130E                     i1l4703:
  5592                           
  5593                           ;my_uart.c: 29: }
  5594                           ;my_uart.c: 31: if (uc_ptr->buflen == 5) {
  5595  00130E  EE20 F005          	lfsr	2,5
  5596  001312  5052               	movf	_uc_ptr,w,c
  5597  001314  26D9               	addwf	fsr2l,f,c
  5598  001316  5053               	movf	_uc_ptr+1,w,c
  5599  001318  22DA               	addwfc	fsr2h,f,c
  5600  00131A  0E05               	movlw	5
  5601  00131C  62DF               	cpfseq	indf2,c
  5602  00131E  D019               	goto	i1l4709
  5603                           
  5604                           ;my_uart.c: 32: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
  5605  001320  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5606  001322  0E1F               	movlw	31
  5607  001324  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5608  001326  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5609  001328  C053  F019         	movff	_uc_ptr+1,ToMainLow_sendmsg@data+1
  5610  00132C  C052  F018         	movff	_uc_ptr,ToMainLow_sendmsg@data
  5611  001330  EE20 F005          	lfsr	2,5
  5612  001334  5052               	movf	_uc_ptr,w,c
  5613  001336  26D9               	addwf	fsr2l,f,c
  5614  001338  5053               	movf	_uc_ptr+1,w,c
  5615  00133A  22DA               	addwfc	fsr2h,f,c
  5616  00133C  50DF               	movf	indf2,w,c
  5617  00133E  ECBF  F00F         	call	_ToMainLow_sendmsg
  5618                           
  5619                           ;my_uart.c: 33: uc_ptr->buflen = 0;
  5620  001342  EE20 F005          	lfsr	2,5
  5621  001346  5052               	movf	_uc_ptr,w,c
  5622  001348  26D9               	addwf	fsr2l,f,c
  5623  00134A  5053               	movf	_uc_ptr+1,w,c
  5624  00134C  22DA               	addwfc	fsr2h,f,c
  5625  00134E  0E00               	movlw	0
  5626  001350  6EDF               	movwf	indf2,c
  5627  001352                     i1l4709:
  5628                           
  5629                           ;my_uart.c: 34: }
  5630                           ;my_uart.c: 35: }
  5631                           ;my_uart.c: 42: if (USART_Status.OVERRUN_ERROR == 1) {
  5632  001352  A64F               	btfss	_USART_Status,3,c
  5633  001354  0012               	return	
  5634                           
  5635                           ;my_uart.c: 47: RCSTAbits.CREN = 0;
  5636  001356  98AB               	bcf	4011,4,c	;volatile
  5637                           
  5638                           ;my_uart.c: 48: RCSTAbits.CREN = 1;
  5639  001358  88AB               	bsf	4011,4,c	;volatile
  5640                           
  5641                           ;my_uart.c: 49: ToMainLow_sendmsg(0, 30, (void *) 0);
  5642  00135A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5643  00135C  0E1E               	movlw	30
  5644  00135E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5645  001360  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5646  001362  0E00               	movlw	0
  5647  001364  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5648  001366  0E00               	movlw	0
  5649  001368  6E18               	movwf	ToMainLow_sendmsg@data,c
  5650  00136A  0E00               	movlw	0
  5651  00136C  ECBF  F00F         	call	_ToMainLow_sendmsg
  5652  001370  0012               	return	
  5653  001372                     __end_of_uart_recv_int_handler:
  5654                           	opt stack 0
  5655                           pclatu	equ	0xFFB
  5656                           pclath	equ	0xFFA
  5657                           tblptru	equ	0xFF8
  5658                           tblptrh	equ	0xFF7
  5659                           tblptrl	equ	0xFF6
  5660                           tablat	equ	0xFF5
  5661                           prodh	equ	0xFF4
  5662                           prodl	equ	0xFF3
  5663                           intcon	equ	0xFF2
  5664                           postinc0	equ	0xFEE
  5665                           fsr0h	equ	0xFEA
  5666                           fsr0l	equ	0xFE9
  5667                           wreg	equ	0xFE8
  5668                           indf1	equ	0xFE7
  5669                           postdec1	equ	0xFE5
  5670                           fsr1h	equ	0xFE2
  5671                           fsr1l	equ	0xFE1
  5672                           bsr	equ	0xFE0
  5673                           indf2	equ	0xFDF
  5674                           postinc2	equ	0xFDE
  5675                           postdec2	equ	0xFDD
  5676                           fsr2h	equ	0xFDA
  5677                           fsr2l	equ	0xFD9
  5678                           status	equ	0xFD8
  5679                           
  5680 ;; *************** function _ToMainLow_sendmsg *****************
  5681 ;; Defined at:
  5682 ;;		line 103 in file "../src/messages.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  length          1    wreg     unsigned char 
  5685 ;;  msgtype         1   22[COMRAM] unsigned char 
  5686 ;;  data            2   23[COMRAM] PTR void 
  5687 ;;		 -> NULL(0), main@uc(13), 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  length          1   25[COMRAM] unsigned char 
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  1    wreg      char 
  5692 ;; Registers used:
  5693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5699 ;;      Params:         3       0       0       0       0
  5700 ;;      Locals:         1       0       0       0       0
  5701 ;;      Temps:          0       0       0       0       0
  5702 ;;      Totals:         4       0       0       0       0
  5703 ;;Total ram usage:        4 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; Hardware stack levels required when called:    8
  5706 ;; This function calls:
  5707 ;;		i1_send_msg
  5708 ;; This function is called by:
  5709 ;;		_uart_recv_int_handler
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           
  5713                           	psect	text34
  5714  001F7E                     __ptext34:
  5715                           	opt stack 0
  5716  001F7E                     _ToMainLow_sendmsg:
  5717                           	opt stack 16
  5718                           
  5719                           ;incstack = 0
  5720                           ;ToMainLow_sendmsg@length stored from wreg
  5721  001F7E  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5722                           
  5723                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5724                           ;	Return value of _ToMainLow_sendmsg is never used
  5725  001F82  0101               	movlb	1	; () banked
  5726  001F84  0E01               	movlw	high _ToMainLow_MQ
  5727  001F86  6E0C               	movwf	i1send_msg@qptr+1,c
  5728  001F88  0101               	movlb	1	; () banked
  5729  001F8A  0E43               	movlw	low _ToMainLow_MQ
  5730  001F8C  6E0B               	movwf	i1send_msg@qptr,c
  5731  001F8E  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5732  001F92  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5733  001F96  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  5734  001F9A  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5735  001F9E  ECB9  F009         	call	i1_send_msg	;wreg free
  5736  001FA2  0012               	return	
  5737  001FA4                     __end_of_ToMainLow_sendmsg:
  5738                           	opt stack 0
  5739                           pclatu	equ	0xFFB
  5740                           pclath	equ	0xFFA
  5741                           tblptru	equ	0xFF8
  5742                           tblptrh	equ	0xFF7
  5743                           tblptrl	equ	0xFF6
  5744                           tablat	equ	0xFF5
  5745                           prodh	equ	0xFF4
  5746                           prodl	equ	0xFF3
  5747                           intcon	equ	0xFF2
  5748                           postinc0	equ	0xFEE
  5749                           fsr0h	equ	0xFEA
  5750                           fsr0l	equ	0xFE9
  5751                           wreg	equ	0xFE8
  5752                           indf1	equ	0xFE7
  5753                           postdec1	equ	0xFE5
  5754                           fsr1h	equ	0xFE2
  5755                           fsr1l	equ	0xFE1
  5756                           bsr	equ	0xFE0
  5757                           indf2	equ	0xFDF
  5758                           postinc2	equ	0xFDE
  5759                           postdec2	equ	0xFDD
  5760                           fsr2h	equ	0xFDA
  5761                           fsr2l	equ	0xFD9
  5762                           status	equ	0xFD8
  5763                           
  5764 ;; *************** function i1_send_msg *****************
  5765 ;; Defined at:
  5766 ;;		line 24 in file "../src/messages.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5769 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5770 ;;  length          1   12[COMRAM] unsigned char 
  5771 ;;  msgtype         1   13[COMRAM] unsigned char 
  5772 ;;  data            2   14[COMRAM] PTR void 
  5773 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), 
  5774 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5777 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  5778 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  5779 ;;  send_msg        2   17[COMRAM] unsigned int 
  5780 ;;  send_msg        1   19[COMRAM] unsigned char 
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  1    wreg      char 
  5783 ;; Registers used:
  5784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5790 ;;      Params:         6       0       0       0       0
  5791 ;;      Locals:         5       0       0       0       0
  5792 ;;      Temps:          1       0       0       0       0
  5793 ;;      Totals:        12       0       0       0       0
  5794 ;;Total ram usage:       12 bytes
  5795 ;; Hardware stack levels used:    1
  5796 ;; Hardware stack levels required when called:    7
  5797 ;; This function calls:
  5798 ;;		i1___awmod
  5799 ;;		i1_memcpy
  5800 ;; This function is called by:
  5801 ;;		_ToMainLow_sendmsg
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           	psect	text35
  5806  001372                     __ptext35:
  5807                           	opt stack 0
  5808  001372                     i1_send_msg:
  5809                           	opt stack 16
  5810                           
  5811                           ;messages.c: 25: unsigned char slot;
  5812                           ;messages.c: 27: msg *qmsg;
  5813                           ;messages.c: 28: size_t tlength = length;
  5814                           
  5815                           ;incstack = 0
  5816  001372  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5817  001376  6A13               	clrf	i1send_msg@tlength+1,c
  5818                           
  5819                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5820  001378  EE20 F041          	lfsr	2,65
  5821  00137C  500B               	movf	i1send_msg@qptr,w,c
  5822  00137E  26D9               	addwf	fsr2l,f,c
  5823  001380  500C               	movf	i1send_msg@qptr+1,w,c
  5824  001382  22DA               	addwfc	fsr2h,f,c
  5825  001384  50DF               	movf	indf2,w,c
  5826  001386  6E14               	movwf	i1send_msg@slot,c
  5827                           
  5828                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5829  001388  5014               	movf	i1send_msg@slot,w,c
  5830  00138A  0D0D               	mullw	13
  5831  00138C  50F3               	movf	prodl,w,c
  5832  00138E  240B               	addwf	i1send_msg@qptr,w,c
  5833  001390  6E15               	movwf	i1send_msg@qmsg,c
  5834  001392  50F4               	movf	prodh,w,c
  5835  001394  200C               	addwfc	i1send_msg@qptr+1,w,c
  5836  001396  6E16               	movwf	i1send_msg@qmsg+1,c
  5837                           
  5838                           ;messages.c: 41: if (qmsg->full != 0) {
  5839  001398  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5840  00139C  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5841  0013A0  50DF               	movf	indf2,w,c
  5842  0013A2  B4D8               	btfsc	status,2,c
  5843  0013A4  D002               	goto	i1l4675
  5844                           
  5845                           ;messages.c: 42: return (-1);
  5846  0013A6  0EFF               	movlw	255
  5847  0013A8  0012               	return	
  5848  0013AA                     i1l4675:
  5849                           
  5850                           ;messages.c: 43: }
  5851                           ;messages.c: 46: qmsg->length = length;
  5852  0013AA  EE20 F001          	lfsr	2,1
  5853  0013AE  5015               	movf	i1send_msg@qmsg,w,c
  5854  0013B0  26D9               	addwf	fsr2l,f,c
  5855  0013B2  5016               	movf	i1send_msg@qmsg+1,w,c
  5856  0013B4  22DA               	addwfc	fsr2h,f,c
  5857  0013B6  C00D  FFDF         	movff	i1send_msg@length,indf2
  5858                           
  5859                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5860  0013BA  EE20 F002          	lfsr	2,2
  5861  0013BE  5015               	movf	i1send_msg@qmsg,w,c
  5862  0013C0  26D9               	addwf	fsr2l,f,c
  5863  0013C2  5016               	movf	i1send_msg@qmsg+1,w,c
  5864  0013C4  22DA               	addwfc	fsr2h,f,c
  5865  0013C6  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5866                           
  5867                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5868  0013CA  0E03               	movlw	3
  5869  0013CC  2415               	addwf	i1send_msg@qmsg,w,c
  5870  0013CE  6E01               	movwf	i1memcpy@d1,c
  5871  0013D0  0E00               	movlw	0
  5872  0013D2  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5873  0013D4  6E02               	movwf	i1memcpy@d1+1,c
  5874  0013D6  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5875  0013DA  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5876  0013DE  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5877  0013E2  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5878  0013E6  ECCE  F00E         	call	i1_memcpy	;wreg free
  5879                           
  5880                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  5881  0013EA  EE20 F041          	lfsr	2,65
  5882  0013EE  500B               	movf	i1send_msg@qptr,w,c
  5883  0013F0  26D9               	addwf	fsr2l,f,c
  5884  0013F2  500C               	movf	i1send_msg@qptr+1,w,c
  5885  0013F4  22DA               	addwfc	fsr2h,f,c
  5886  0013F6  EE10 F041          	lfsr	1,65
  5887  0013FA  500B               	movf	i1send_msg@qptr,w,c
  5888  0013FC  26E1               	addwf	fsr1l,f,c
  5889  0013FE  500C               	movf	i1send_msg@qptr+1,w,c
  5890  001400  22E2               	addwfc	fsr1h,f,c
  5891  001402  50E7               	movf	indf1,w,c
  5892  001404  6E11               	movwf	??i1_send_msg& (0+255),c
  5893  001406  0E01               	movlw	1
  5894  001408  2411               	addwf	??i1_send_msg,w,c
  5895  00140A  6E01               	movwf	i1___awmod@dividend,c
  5896  00140C  6A02               	clrf	i1___awmod@dividend+1,c
  5897  00140E  0E00               	movlw	0
  5898  001410  2202               	addwfc	i1___awmod@dividend+1,f,c
  5899  001412  0E00               	movlw	0
  5900  001414  6E04               	movwf	i1___awmod@divisor+1,c
  5901  001416  0E05               	movlw	5
  5902  001418  6E03               	movwf	i1___awmod@divisor,c
  5903  00141A  EC73  F00A         	call	i1___awmod	;wreg free
  5904  00141E  5001               	movf	?i1___awmod,w,c
  5905  001420  6EDF               	movwf	indf2,c
  5906                           
  5907                           ;messages.c: 59: qmsg->full = 1;
  5908  001422  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5909  001426  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5910  00142A  0E01               	movlw	1
  5911  00142C  6EDF               	movwf	indf2,c
  5912                           
  5913                           ;messages.c: 60: return (1);
  5914  00142E  0E01               	movlw	1
  5915  001430  0012               	return	
  5916  001432                     __end_ofi1_send_msg:
  5917                           	opt stack 0
  5918                           pclatu	equ	0xFFB
  5919                           pclath	equ	0xFFA
  5920                           tblptru	equ	0xFF8
  5921                           tblptrh	equ	0xFF7
  5922                           tblptrl	equ	0xFF6
  5923                           tablat	equ	0xFF5
  5924                           prodh	equ	0xFF4
  5925                           prodl	equ	0xFF3
  5926                           intcon	equ	0xFF2
  5927                           postinc0	equ	0xFEE
  5928                           fsr0h	equ	0xFEA
  5929                           fsr0l	equ	0xFE9
  5930                           wreg	equ	0xFE8
  5931                           indf1	equ	0xFE7
  5932                           postdec1	equ	0xFE5
  5933                           fsr1h	equ	0xFE2
  5934                           fsr1l	equ	0xFE1
  5935                           bsr	equ	0xFE0
  5936                           indf2	equ	0xFDF
  5937                           postinc2	equ	0xFDE
  5938                           postdec2	equ	0xFDD
  5939                           fsr2h	equ	0xFDA
  5940                           fsr2l	equ	0xFD9
  5941                           status	equ	0xFD8
  5942                           
  5943 ;; *************** function i1_memcpy *****************
  5944 ;; Defined at:
  5945 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  d1              2    0[COMRAM] PTR void 
  5948 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  5949 ;;		 -> i2c_slave_int_handler@motorData(5), i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67)
      +, 
  5950 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  5951 ;;  s1              2    2[COMRAM] PTR const void 
  5952 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5953 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5954 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  5955 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  5956 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  5957 ;;  n               2    4[COMRAM] unsigned int 
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5960 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5961 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5962 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  5963 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  5964 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  5965 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5966 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  5967 ;;		 -> i2c_slave_int_handler@motorData(5), i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67)
      +, 
  5968 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  2    0[COMRAM] PTR void 
  5971 ;; Registers used:
  5972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5978 ;;      Params:         6       0       0       0       0
  5979 ;;      Locals:         4       0       0       0       0
  5980 ;;      Temps:          0       0       0       0       0
  5981 ;;      Totals:        10       0       0       0       0
  5982 ;;Total ram usage:       10 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    6
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		i1_send_msg
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text36
  5993  001D9C                     __ptext36:
  5994                           	opt stack 0
  5995  001D9C                     i1_memcpy:
  5996                           	opt stack 16
  5997                           
  5998                           ;incstack = 0
  5999  001D9C  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6000  001DA0  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6001  001DA4  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6002  001DA8  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6003  001DAC  D00E               	goto	i1l3573
  6004  001DAE                     i1l3567:
  6005  001DAE  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6006  001DB2  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6007  001DB6  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6008  001DBA  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6009  001DBE  CFDF FFE7          	movff	indf2,indf1
  6010  001DC2  4A09               	infsnz	i1memcpy@s,f,c
  6011  001DC4  2A0A               	incf	i1memcpy@s+1,f,c
  6012  001DC6  4A07               	infsnz	i1memcpy@d,f,c
  6013  001DC8  2A08               	incf	i1memcpy@d+1,f,c
  6014  001DCA                     i1l3573:
  6015  001DCA  0605               	decf	i1memcpy@n,f,c
  6016  001DCC  A0D8               	btfss	status,0,c
  6017  001DCE  0606               	decf	i1memcpy@n+1,f,c
  6018  001DD0  2805               	incf	i1memcpy@n& (0+255),w,c
  6019  001DD2  B4D8               	btfsc	status,2,c
  6020  001DD4  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6021  001DD6  B4D8               	btfsc	status,2,c
  6022                           
  6023                           ;	Return value of i1_memcpy is never used
  6024  001DD8  0012               	return	
  6025  001DDA  D7E9               	goto	i1l3567
  6026  001DDC                     __end_ofi1_memcpy:
  6027                           	opt stack 0
  6028                           pclatu	equ	0xFFB
  6029                           pclath	equ	0xFFA
  6030                           tblptru	equ	0xFF8
  6031                           tblptrh	equ	0xFF7
  6032                           tblptrl	equ	0xFF6
  6033                           tablat	equ	0xFF5
  6034                           prodh	equ	0xFF4
  6035                           prodl	equ	0xFF3
  6036                           intcon	equ	0xFF2
  6037                           postinc0	equ	0xFEE
  6038                           fsr0h	equ	0xFEA
  6039                           fsr0l	equ	0xFE9
  6040                           wreg	equ	0xFE8
  6041                           indf1	equ	0xFE7
  6042                           postdec1	equ	0xFE5
  6043                           fsr1h	equ	0xFE2
  6044                           fsr1l	equ	0xFE1
  6045                           bsr	equ	0xFE0
  6046                           indf2	equ	0xFDF
  6047                           postinc2	equ	0xFDE
  6048                           postdec2	equ	0xFDD
  6049                           fsr2h	equ	0xFDA
  6050                           fsr2l	equ	0xFD9
  6051                           status	equ	0xFD8
  6052                           
  6053 ;; *************** function i1___awmod *****************
  6054 ;; Defined at:
  6055 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;  dividend        2    0[COMRAM] int 
  6058 ;;  divisor         2    2[COMRAM] int 
  6059 ;; Auto vars:     Size  Location     Type
  6060 ;;  __awmod         1    6[COMRAM] unsigned char 
  6061 ;;  __awmod         1    5[COMRAM] unsigned char 
  6062 ;; Return value:  Size  Location     Type
  6063 ;;                  2    0[COMRAM] int 
  6064 ;; Registers used:
  6065 ;;		wreg, status,2, status,0, prodl
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6071 ;;      Params:         4       0       0       0       0
  6072 ;;      Locals:         2       0       0       0       0
  6073 ;;      Temps:          1       0       0       0       0
  6074 ;;      Totals:         7       0       0       0       0
  6075 ;;Total ram usage:        7 bytes
  6076 ;; Hardware stack levels used:    1
  6077 ;; Hardware stack levels required when called:    6
  6078 ;; This function calls:
  6079 ;;		Nothing
  6080 ;; This function is called by:
  6081 ;;		i1_send_msg
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084                           
  6085                           	psect	text37
  6086  0014E6                     __ptext37:
  6087                           	opt stack 0
  6088  0014E6                     i1___awmod:
  6089                           	opt stack 16
  6090                           
  6091                           ;incstack = 0
  6092  0014E6  6E05               	movwf	??i1___awmod& (0+255),c
  6093  0014E8  0E00               	movlw	0
  6094  0014EA  6E07               	movwf	i1___awmod@sign,c
  6095  0014EC  5005               	movf	??i1___awmod& (0+255),w,c
  6096  0014EE  5002               	movf	i1___awmod@dividend+1,w,c
  6097  0014F0  0A80               	xorlw	128
  6098  0014F2  6EF3               	movwf	prodl,c
  6099  0014F4  0E80               	movlw	128
  6100  0014F6  5CF3               	subwf	prodl,w,c
  6101  0014F8  0E00               	movlw	0
  6102  0014FA  B4D8               	btfsc	status,2,c
  6103  0014FC  5C01               	subwf	i1___awmod@dividend,w,c
  6104  0014FE  B0D8               	btfsc	status,0,c
  6105  001500  D008               	goto	i1l3593
  6106  001502  6C01               	negf	i1___awmod@dividend,c
  6107  001504  1E02               	comf	i1___awmod@dividend+1,f,c
  6108  001506  B0D8               	btfsc	status,0,c
  6109  001508  2A02               	incf	i1___awmod@dividend+1,f,c
  6110  00150A  6E05               	movwf	??i1___awmod& (0+255),c
  6111  00150C  0E01               	movlw	1
  6112  00150E  6E07               	movwf	i1___awmod@sign,c
  6113  001510  5005               	movf	??i1___awmod& (0+255),w,c
  6114  001512                     i1l3593:
  6115  001512  5004               	movf	i1___awmod@divisor+1,w,c
  6116  001514  0A80               	xorlw	128
  6117  001516  6EF3               	movwf	prodl,c
  6118  001518  0E80               	movlw	128
  6119  00151A  5CF3               	subwf	prodl,w,c
  6120  00151C  0E00               	movlw	0
  6121  00151E  B4D8               	btfsc	status,2,c
  6122  001520  5C03               	subwf	i1___awmod@divisor,w,c
  6123  001522  B0D8               	btfsc	status,0,c
  6124  001524  D004               	goto	i1l3597
  6125  001526  6C03               	negf	i1___awmod@divisor,c
  6126  001528  1E04               	comf	i1___awmod@divisor+1,f,c
  6127  00152A  B0D8               	btfsc	status,0,c
  6128  00152C  2A04               	incf	i1___awmod@divisor+1,f,c
  6129  00152E                     i1l3597:
  6130  00152E  5004               	movf	i1___awmod@divisor+1,w,c
  6131  001530  1003               	iorwf	i1___awmod@divisor,w,c
  6132  001532  B4D8               	btfsc	status,2,c
  6133  001534  D01A               	goto	i1l3613
  6134  001536  6E05               	movwf	??i1___awmod& (0+255),c
  6135  001538  0E01               	movlw	1
  6136  00153A  6E06               	movwf	i1___awmod@counter,c
  6137  00153C  5005               	movf	??i1___awmod& (0+255),w,c
  6138  00153E  D004               	goto	i1l3603
  6139  001540                     i1l3601:
  6140  001540  90D8               	bcf	status,0,c
  6141  001542  3603               	rlcf	i1___awmod@divisor,f,c
  6142  001544  3604               	rlcf	i1___awmod@divisor+1,f,c
  6143  001546  2A06               	incf	i1___awmod@counter,f,c
  6144  001548                     i1l3603:
  6145  001548  AE04               	btfss	i1___awmod@divisor+1,7,c
  6146  00154A  D7FA               	goto	i1l3601
  6147  00154C                     i1l3605:
  6148  00154C  5003               	movf	i1___awmod@divisor,w,c
  6149  00154E  5C01               	subwf	i1___awmod@dividend,w,c
  6150  001550  5004               	movf	i1___awmod@divisor+1,w,c
  6151  001552  5802               	subwfb	i1___awmod@dividend+1,w,c
  6152  001554  A0D8               	btfss	status,0,c
  6153  001556  D004               	goto	i1l3609
  6154  001558  5003               	movf	i1___awmod@divisor,w,c
  6155  00155A  5E01               	subwf	i1___awmod@dividend,f,c
  6156  00155C  5004               	movf	i1___awmod@divisor+1,w,c
  6157  00155E  5A02               	subwfb	i1___awmod@dividend+1,f,c
  6158  001560                     i1l3609:
  6159  001560  90D8               	bcf	status,0,c
  6160  001562  3204               	rrcf	i1___awmod@divisor+1,f,c
  6161  001564  3203               	rrcf	i1___awmod@divisor,f,c
  6162  001566  2E06               	decfsz	i1___awmod@counter,f,c
  6163  001568  D7F1               	goto	i1l3605
  6164  00156A                     i1l3613:
  6165  00156A  5007               	movf	i1___awmod@sign,w,c
  6166  00156C  B4D8               	btfsc	status,2,c
  6167  00156E  D004               	goto	i1l3617
  6168  001570  6C01               	negf	i1___awmod@dividend,c
  6169  001572  1E02               	comf	i1___awmod@dividend+1,f,c
  6170  001574  B0D8               	btfsc	status,0,c
  6171  001576  2A02               	incf	i1___awmod@dividend+1,f,c
  6172  001578                     i1l3617:
  6173  001578  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  6174  00157C  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  6175  001580  0012               	return	
  6176  001582                     __end_ofi1___awmod:
  6177                           	opt stack 0
  6178                           pclatu	equ	0xFFB
  6179                           pclath	equ	0xFFA
  6180                           tblptru	equ	0xFF8
  6181                           tblptrh	equ	0xFF7
  6182                           tblptrl	equ	0xFF6
  6183                           tablat	equ	0xFF5
  6184                           prodh	equ	0xFF4
  6185                           prodl	equ	0xFF3
  6186                           intcon	equ	0xFF2
  6187                           postinc0	equ	0xFEE
  6188                           fsr0h	equ	0xFEA
  6189                           fsr0l	equ	0xFE9
  6190                           wreg	equ	0xFE8
  6191                           indf1	equ	0xFE7
  6192                           postdec1	equ	0xFE5
  6193                           fsr1h	equ	0xFE2
  6194                           fsr1l	equ	0xFE1
  6195                           bsr	equ	0xFE0
  6196                           indf2	equ	0xFDF
  6197                           postinc2	equ	0xFDE
  6198                           postdec2	equ	0xFDD
  6199                           fsr2h	equ	0xFDA
  6200                           fsr2l	equ	0xFD9
  6201                           status	equ	0xFD8
  6202                           
  6203 ;; *************** function _ReadUSART *****************
  6204 ;; Defined at:
  6205 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;		None
  6208 ;; Auto vars:     Size  Location     Type
  6209 ;;  data            1    0[COMRAM] unsigned char 
  6210 ;; Return value:  Size  Location     Type
  6211 ;;                  1    wreg      unsigned char 
  6212 ;; Registers used:
  6213 ;;		wreg, status,2, status,0
  6214 ;; Tracked objects:
  6215 ;;		On entry : 0/0
  6216 ;;		On exit  : 0/0
  6217 ;;		Unchanged: 0/0
  6218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6219 ;;      Params:         0       0       0       0       0
  6220 ;;      Locals:         1       0       0       0       0
  6221 ;;      Temps:          0       0       0       0       0
  6222 ;;      Totals:         1       0       0       0       0
  6223 ;;Total ram usage:        1 bytes
  6224 ;; Hardware stack levels used:    1
  6225 ;; Hardware stack levels required when called:    6
  6226 ;; This function calls:
  6227 ;;		Nothing
  6228 ;; This function is called by:
  6229 ;;		_uart_recv_int_handler
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           	psect	text38
  6234  002028                     __ptext38:
  6235                           	opt stack 0
  6236  002028                     _ReadUSART:
  6237                           	opt stack 18
  6238                           
  6239                           ;incstack = 0
  6240  002028  0EF2               	movlw	242
  6241  00202A  164F               	andwf	_USART_Status,f,c
  6242  00202C  ACAB               	btfss	4011,6,c	;volatile
  6243  00202E  D003               	goto	i1l596
  6244  002030  904F               	bcf	_USART_Status,0,c
  6245  002032  B0AB               	btfsc	4011,0,c	;volatile
  6246  002034  804F               	bsf	_USART_Status,0,c
  6247  002036                     i1l596:
  6248  002036  B4AB               	btfsc	4011,2,c	;volatile
  6249  002038  844F               	bsf	_USART_Status,2,c
  6250  00203A  B2AB               	btfsc	4011,1,c	;volatile
  6251  00203C  864F               	bsf	_USART_Status,3,c
  6252  00203E  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6253  002042  5001               	movf	ReadUSART@data,w,c
  6254  002044  0012               	return	
  6255  002046                     __end_of_ReadUSART:
  6256                           	opt stack 0
  6257                           pclatu	equ	0xFFB
  6258                           pclath	equ	0xFFA
  6259                           tblptru	equ	0xFF8
  6260                           tblptrh	equ	0xFF7
  6261                           tblptrl	equ	0xFF6
  6262                           tablat	equ	0xFF5
  6263                           prodh	equ	0xFF4
  6264                           prodl	equ	0xFF3
  6265                           intcon	equ	0xFF2
  6266                           postinc0	equ	0xFEE
  6267                           fsr0h	equ	0xFEA
  6268                           fsr0l	equ	0xFE9
  6269                           wreg	equ	0xFE8
  6270                           indf1	equ	0xFE7
  6271                           postdec1	equ	0xFE5
  6272                           fsr1h	equ	0xFE2
  6273                           fsr1l	equ	0xFE1
  6274                           bsr	equ	0xFE0
  6275                           indf2	equ	0xFDF
  6276                           postinc2	equ	0xFDE
  6277                           postdec2	equ	0xFDD
  6278                           fsr2h	equ	0xFDA
  6279                           fsr2l	equ	0xFD9
  6280                           status	equ	0xFD8
  6281                           
  6282 ;; *************** function _timer1_int_handler *****************
  6283 ;; Defined at:
  6284 ;;		line 46 in file "../src/user_interrupts.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;		None
  6287 ;; Auto vars:     Size  Location     Type
  6288 ;;		None
  6289 ;; Return value:  Size  Location     Type
  6290 ;;		None               void
  6291 ;; Registers used:
  6292 ;;		wreg, status,2, cstack
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6298 ;;      Params:         0       0       0       0       0
  6299 ;;      Locals:         0       0       0       0       0
  6300 ;;      Temps:          0       0       0       0       0
  6301 ;;      Totals:         0       0       0       0       0
  6302 ;;Total ram usage:        0 bytes
  6303 ;; Hardware stack levels used:    1
  6304 ;; Hardware stack levels required when called:    7
  6305 ;; This function calls:
  6306 ;;		_WriteTimer1
  6307 ;; This function is called by:
  6308 ;;		_InterruptHandlerLow
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           	psect	text39
  6313  0020C8                     __ptext39:
  6314                           	opt stack 0
  6315  0020C8                     _timer1_int_handler:
  6316                           	opt stack 18
  6317                           
  6318                           ;user_interrupts.c: 58: WriteTimer1(0);
  6319                           
  6320                           ;incstack = 0
  6321  0020C8  0E00               	movlw	0
  6322  0020CA  6E02               	movwf	WriteTimer1@timer1+1,c
  6323  0020CC  0E00               	movlw	0
  6324  0020CE  6E01               	movwf	WriteTimer1@timer1,c
  6325  0020D0  EC49  F010         	call	_WriteTimer1	;wreg free
  6326  0020D4  0012               	return	
  6327  0020D6                     __end_of_timer1_int_handler:
  6328                           	opt stack 0
  6329                           pclatu	equ	0xFFB
  6330                           pclath	equ	0xFFA
  6331                           tblptru	equ	0xFF8
  6332                           tblptrh	equ	0xFF7
  6333                           tblptrl	equ	0xFF6
  6334                           tablat	equ	0xFF5
  6335                           prodh	equ	0xFF4
  6336                           prodl	equ	0xFF3
  6337                           intcon	equ	0xFF2
  6338                           postinc0	equ	0xFEE
  6339                           fsr0h	equ	0xFEA
  6340                           fsr0l	equ	0xFE9
  6341                           wreg	equ	0xFE8
  6342                           indf1	equ	0xFE7
  6343                           postdec1	equ	0xFE5
  6344                           fsr1h	equ	0xFE2
  6345                           fsr1l	equ	0xFE1
  6346                           bsr	equ	0xFE0
  6347                           indf2	equ	0xFDF
  6348                           postinc2	equ	0xFDE
  6349                           postdec2	equ	0xFDD
  6350                           fsr2h	equ	0xFDA
  6351                           fsr2l	equ	0xFD9
  6352                           status	equ	0xFD8
  6353                           
  6354 ;; *************** function _WriteTimer1 *****************
  6355 ;; Defined at:
  6356 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;  timer1          2    0[COMRAM] unsigned int 
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;  timer           2    2[COMRAM] struct Timers
  6361 ;; Return value:  Size  Location     Type
  6362 ;;		None               void
  6363 ;; Registers used:
  6364 ;;		None
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6370 ;;      Params:         2       0       0       0       0
  6371 ;;      Locals:         2       0       0       0       0
  6372 ;;      Temps:          0       0       0       0       0
  6373 ;;      Totals:         4       0       0       0       0
  6374 ;;Total ram usage:        4 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:    6
  6377 ;; This function calls:
  6378 ;;		Nothing
  6379 ;; This function is called by:
  6380 ;;		_timer1_int_handler
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           	psect	text40
  6385  002092                     __ptext40:
  6386                           	opt stack 0
  6387  002092                     _WriteTimer1:
  6388                           	opt stack 18
  6389                           
  6390                           ;incstack = 0
  6391  002092  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6392  002096  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6393  00209A  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6394  00209E  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6395  0020A2  0012               	return	
  6396  0020A4                     __end_of_WriteTimer1:
  6397                           	opt stack 0
  6398                           pclatu	equ	0xFFB
  6399                           pclath	equ	0xFFA
  6400                           tblptru	equ	0xFF8
  6401                           tblptrh	equ	0xFF7
  6402                           tblptrl	equ	0xFF6
  6403                           tablat	equ	0xFF5
  6404                           prodh	equ	0xFF4
  6405                           prodl	equ	0xFF3
  6406                           intcon	equ	0xFF2
  6407                           postinc0	equ	0xFEE
  6408                           fsr0h	equ	0xFEA
  6409                           fsr0l	equ	0xFE9
  6410                           wreg	equ	0xFE8
  6411                           indf1	equ	0xFE7
  6412                           postdec1	equ	0xFE5
  6413                           fsr1h	equ	0xFE2
  6414                           fsr1l	equ	0xFE1
  6415                           bsr	equ	0xFE0
  6416                           indf2	equ	0xFDF
  6417                           postinc2	equ	0xFDE
  6418                           postdec2	equ	0xFDD
  6419                           fsr2h	equ	0xFDA
  6420                           fsr2l	equ	0xFD9
  6421                           status	equ	0xFD8
  6422                           
  6423 ;; *************** function _adc_int_handler *****************
  6424 ;; Defined at:
  6425 ;;		line 61 in file "../src/user_interrupts.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;		None
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;		None
  6430 ;; Return value:  Size  Location     Type
  6431 ;;		None               void
  6432 ;; Registers used:
  6433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6439 ;;      Params:         0       0       0       0       0
  6440 ;;      Locals:         0       0       0       0       0
  6441 ;;      Temps:          0       0       0       0       0
  6442 ;;      Totals:         0       0       0       0       0
  6443 ;;Total ram usage:        0 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:    6
  6446 ;; This function calls:
  6447 ;;		Nothing
  6448 ;; This function is called by:
  6449 ;;		_InterruptHandlerLow
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           	psect	text41
  6454  001FC8                     __ptext41:
  6455                           	opt stack 0
  6456  001FC8                     _adc_int_handler:
  6457                           	opt stack 19
  6458                           
  6459                           ;user_interrupts.c: 63: if(adcbuffer[0] < 27)
  6460                           
  6461                           ;incstack = 0
  6462  001FC8  0E1B               	movlw	27
  6463  001FCA  5C30               	subwf	_adcbuffer,w,c
  6464  001FCC  B0D8               	btfsc	status,0,c
  6465  001FCE  D002               	goto	i1l1375
  6466                           
  6467                           ;user_interrupts.c: 64: adcbuffer[0] = adcbuffer[0] + 1;
  6468  001FD0  2830               	incf	_adcbuffer,w,c
  6469  001FD2  6E30               	movwf	_adcbuffer,c
  6470  001FD4                     i1l1375:
  6471                           
  6472                           ;user_interrupts.c: 71: adcbuffer[adcbuffer[0]] = ADRESH;
  6473  001FD4  5030               	movf	_adcbuffer,w,c
  6474  001FD6  0D01               	mullw	1
  6475  001FD8  0E30               	movlw	low _adcbuffer
  6476  001FDA  24F3               	addwf	prodl,w,c
  6477  001FDC  6ED9               	movwf	fsr2l,c
  6478  001FDE  0E00               	movlw	high _adcbuffer
  6479  001FE0  20F4               	addwfc	prodh,w,c
  6480  001FE2  6EDA               	movwf	fsr2h,c
  6481  001FE4  CFC4 FFDF          	movff	4036,indf2	;volatile
  6482  001FE8  0012               	return	
  6483  001FEA                     __end_of_adc_int_handler:
  6484                           	opt stack 0
  6485                           pclatu	equ	0xFFB
  6486                           pclath	equ	0xFFA
  6487                           tblptru	equ	0xFF8
  6488                           tblptrh	equ	0xFF7
  6489                           tblptrl	equ	0xFF6
  6490                           tablat	equ	0xFF5
  6491                           prodh	equ	0xFF4
  6492                           prodl	equ	0xFF3
  6493                           intcon	equ	0xFF2
  6494                           postinc0	equ	0xFEE
  6495                           fsr0h	equ	0xFEA
  6496                           fsr0l	equ	0xFE9
  6497                           wreg	equ	0xFE8
  6498                           indf1	equ	0xFE7
  6499                           postdec1	equ	0xFE5
  6500                           fsr1h	equ	0xFE2
  6501                           fsr1l	equ	0xFE1
  6502                           bsr	equ	0xFE0
  6503                           indf2	equ	0xFDF
  6504                           postinc2	equ	0xFDE
  6505                           postdec2	equ	0xFDD
  6506                           fsr2h	equ	0xFDA
  6507                           fsr2l	equ	0xFD9
  6508                           status	equ	0xFD8
  6509                           
  6510 ;; *************** function _InterruptHandlerHigh *****************
  6511 ;; Defined at:
  6512 ;;		line 84 in file "../src/interrupts.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;		None
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;		None
  6517 ;; Return value:  Size  Location     Type
  6518 ;;		None               void
  6519 ;; Registers used:
  6520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6521 ;; Tracked objects:
  6522 ;;		On entry : 0/0
  6523 ;;		On exit  : 0/0
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6526 ;;      Params:         0       0       0       0       0
  6527 ;;      Locals:         0       0       0       0       0
  6528 ;;      Temps:          0      14       0       0       0
  6529 ;;      Totals:         0      14       0       0       0
  6530 ;;Total ram usage:       14 bytes
  6531 ;; Hardware stack levels used:    1
  6532 ;; Hardware stack levels required when called:    5
  6533 ;; This function calls:
  6534 ;;		_SleepIfOkay
  6535 ;;		_i2c_int_handler
  6536 ;;		_timer0_int_handler
  6537 ;; This function is called by:
  6538 ;;		Interrupt level 2
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	intcode
  6543  000008                     __pintcode:
  6544                           	opt stack 0
  6545  000008                     _InterruptHandlerHigh:
  6546                           	opt stack 16
  6547                           
  6548                           ;incstack = 0
  6549  000008  CFFA F0CD          	movff	pclath,??_InterruptHandlerHigh
  6550  00000C  CFFB F0CE          	movff	pclatu,??_InterruptHandlerHigh+1
  6551  000010  EFDD  F00B         	goto	int_func
  6552                           pclatu	equ	0xFFB
  6553                           pclath	equ	0xFFA
  6554                           tblptru	equ	0xFF8
  6555                           tblptrh	equ	0xFF7
  6556                           tblptrl	equ	0xFF6
  6557                           tablat	equ	0xFF5
  6558                           prodh	equ	0xFF4
  6559                           prodl	equ	0xFF3
  6560                           intcon	equ	0xFF2
  6561                           postinc0	equ	0xFEE
  6562                           fsr0h	equ	0xFEA
  6563                           fsr0l	equ	0xFE9
  6564                           wreg	equ	0xFE8
  6565                           indf1	equ	0xFE7
  6566                           postdec1	equ	0xFE5
  6567                           fsr1h	equ	0xFE2
  6568                           fsr1l	equ	0xFE1
  6569                           bsr	equ	0xFE0
  6570                           indf2	equ	0xFDF
  6571                           postinc2	equ	0xFDE
  6572                           postdec2	equ	0xFDD
  6573                           fsr2h	equ	0xFDA
  6574                           fsr2l	equ	0xFD9
  6575                           status	equ	0xFD8
  6576                           
  6577                           	psect	intcode_body
  6578  0017BA                     __pintcode_body:
  6579                           	opt stack 16
  6580  0017BA                     int_func:
  6581                           	opt stack 16
  6582  0017BA  CFE9 F0CF          	movff	fsr0l,??_InterruptHandlerHigh+2
  6583  0017BE  CFEA F0D0          	movff	fsr0h,??_InterruptHandlerHigh+3
  6584  0017C2  CFE1 F0D1          	movff	fsr1l,??_InterruptHandlerHigh+4
  6585  0017C6  CFE2 F0D2          	movff	fsr1h,??_InterruptHandlerHigh+5
  6586  0017CA  CFD9 F0D3          	movff	fsr2l,??_InterruptHandlerHigh+6
  6587  0017CE  CFDA F0D4          	movff	fsr2h,??_InterruptHandlerHigh+7
  6588  0017D2  CFF3 F0D5          	movff	prodl,??_InterruptHandlerHigh+8
  6589  0017D6  CFF4 F0D6          	movff	prodh,??_InterruptHandlerHigh+9
  6590  0017DA  CFF6 F0D7          	movff	tblptrl,??_InterruptHandlerHigh+10
  6591  0017DE  CFF7 F0D8          	movff	tblptrh,??_InterruptHandlerHigh+11
  6592  0017E2  CFF8 F0D9          	movff	tblptru,??_InterruptHandlerHigh+12
  6593  0017E6  CFF5 F0DA          	movff	tablat,??_InterruptHandlerHigh+13
  6594                           
  6595                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  6596  0017EA  A69E               	btfss	3998,3,c	;volatile
  6597  0017EC  D003               	goto	i2l3789
  6598                           
  6599                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  6600  0017EE  969E               	bcf	3998,3,c	;volatile
  6601                           
  6602                           ;interrupts.c: 94: i2c_int_handler();
  6603  0017F0  EC7B  F010         	call	_i2c_int_handler	;wreg free
  6604  0017F4                     i2l3789:
  6605                           
  6606                           ;interrupts.c: 96: }
  6607                           ;interrupts.c: 100: if (INTCONbits.TMR0IF) {
  6608  0017F4  A4F2               	btfss	intcon,2,c	;volatile
  6609  0017F6  D003               	goto	i2l3795
  6610                           
  6611                           ;interrupts.c: 101: INTCONbits.TMR0IF = 0;
  6612  0017F8  94F2               	bcf	intcon,2,c	;volatile
  6613                           
  6614                           ;interrupts.c: 103: timer0_int_handler();
  6615  0017FA  EC52  F010         	call	_timer0_int_handler	;wreg free
  6616  0017FE                     i2l3795:
  6617                           
  6618                           ;interrupts.c: 104: }
  6619                           ;interrupts.c: 113: SleepIfOkay();
  6620  0017FE  ECD5  F00D         	call	_SleepIfOkay	;wreg free
  6621  001802  C0DA  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6622  001806  C0D9  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6623  00180A  C0D8  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6624  00180E  C0D7  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6625  001812  C0D6  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6626  001816  C0D5  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6627  00181A  C0D4  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6628  00181E  C0D3  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6629  001822  C0D2  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6630  001826  C0D1  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6631  00182A  C0D0  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6632  00182E  C0CF  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6633  001832  C0CE  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6634  001836  C0CD  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6635  00183A  0011               	retfie		f
  6636  00183C                     __end_of_InterruptHandlerHigh:
  6637                           	opt stack 0
  6638                           pclatu	equ	0xFFB
  6639                           pclath	equ	0xFFA
  6640                           tblptru	equ	0xFF8
  6641                           tblptrh	equ	0xFF7
  6642                           tblptrl	equ	0xFF6
  6643                           tablat	equ	0xFF5
  6644                           prodh	equ	0xFF4
  6645                           prodl	equ	0xFF3
  6646                           intcon	equ	0xFF2
  6647                           postinc0	equ	0xFEE
  6648                           fsr0h	equ	0xFEA
  6649                           fsr0l	equ	0xFE9
  6650                           wreg	equ	0xFE8
  6651                           indf1	equ	0xFE7
  6652                           postdec1	equ	0xFE5
  6653                           fsr1h	equ	0xFE2
  6654                           fsr1l	equ	0xFE1
  6655                           bsr	equ	0xFE0
  6656                           indf2	equ	0xFDF
  6657                           postinc2	equ	0xFDE
  6658                           postdec2	equ	0xFDD
  6659                           fsr2h	equ	0xFDA
  6660                           fsr2l	equ	0xFD9
  6661                           status	equ	0xFD8
  6662                           
  6663 ;; *************** function _timer0_int_handler *****************
  6664 ;; Defined at:
  6665 ;;		line 16 in file "../src/user_interrupts.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;		None
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;		None
  6670 ;; Return value:  Size  Location     Type
  6671 ;;		None               void
  6672 ;; Registers used:
  6673 ;;		wreg, status,2, status,0, cstack
  6674 ;; Tracked objects:
  6675 ;;		On entry : 0/0
  6676 ;;		On exit  : 0/0
  6677 ;;		Unchanged: 0/0
  6678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6679 ;;      Params:         0       0       0       0       0
  6680 ;;      Locals:         0       0       0       0       0
  6681 ;;      Temps:          0       0       0       0       0
  6682 ;;      Totals:         0       0       0       0       0
  6683 ;;Total ram usage:        0 bytes
  6684 ;; Hardware stack levels used:    1
  6685 ;; Hardware stack levels required when called:    1
  6686 ;; This function calls:
  6687 ;;		_WriteTimer0
  6688 ;; This function is called by:
  6689 ;;		_InterruptHandlerHigh
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           	psect	text43
  6694  0020A4                     __ptext43:
  6695                           	opt stack 0
  6696  0020A4                     _timer0_int_handler:
  6697                           	opt stack 19
  6698                           
  6699                           ;user_interrupts.c: 17: WriteTimer0(0);
  6700                           
  6701                           ;incstack = 0
  6702  0020A4  0E00               	movlw	0
  6703  0020A6  6E2E               	movwf	WriteTimer0@timer0+1,c
  6704  0020A8  0E00               	movlw	0
  6705  0020AA  6E2D               	movwf	WriteTimer0@timer0,c
  6706  0020AC  EC5B  F010         	call	_WriteTimer0	;wreg free
  6707                           
  6708                           ;user_interrupts.c: 33: uartTimeOut++;
  6709  0020B0  4A4C               	infsnz	_uartTimeOut,f,c
  6710  0020B2  2A4D               	incf	_uartTimeOut+1,f,c
  6711  0020B4  0012               	return	
  6712  0020B6                     __end_of_timer0_int_handler:
  6713                           	opt stack 0
  6714                           pclatu	equ	0xFFB
  6715                           pclath	equ	0xFFA
  6716                           tblptru	equ	0xFF8
  6717                           tblptrh	equ	0xFF7
  6718                           tblptrl	equ	0xFF6
  6719                           tablat	equ	0xFF5
  6720                           prodh	equ	0xFF4
  6721                           prodl	equ	0xFF3
  6722                           intcon	equ	0xFF2
  6723                           postinc0	equ	0xFEE
  6724                           fsr0h	equ	0xFEA
  6725                           fsr0l	equ	0xFE9
  6726                           wreg	equ	0xFE8
  6727                           indf1	equ	0xFE7
  6728                           postdec1	equ	0xFE5
  6729                           fsr1h	equ	0xFE2
  6730                           fsr1l	equ	0xFE1
  6731                           bsr	equ	0xFE0
  6732                           indf2	equ	0xFDF
  6733                           postinc2	equ	0xFDE
  6734                           postdec2	equ	0xFDD
  6735                           fsr2h	equ	0xFDA
  6736                           fsr2l	equ	0xFD9
  6737                           status	equ	0xFD8
  6738                           
  6739 ;; *************** function _WriteTimer0 *****************
  6740 ;; Defined at:
  6741 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;  timer0          2   44[COMRAM] unsigned int 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  timer           2    0[BANK0 ] struct Timers
  6746 ;; Return value:  Size  Location     Type
  6747 ;;		None               void
  6748 ;; Registers used:
  6749 ;;		None
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6755 ;;      Params:         2       0       0       0       0
  6756 ;;      Locals:         0       2       0       0       0
  6757 ;;      Temps:          0       0       0       0       0
  6758 ;;      Totals:         2       2       0       0       0
  6759 ;;Total ram usage:        4 bytes
  6760 ;; Hardware stack levels used:    1
  6761 ;; This function calls:
  6762 ;;		Nothing
  6763 ;; This function is called by:
  6764 ;;		_timer0_int_handler
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           	psect	text44
  6769  0020B6                     __ptext44:
  6770                           	opt stack 0
  6771  0020B6                     _WriteTimer0:
  6772                           	opt stack 19
  6773                           
  6774                           ;incstack = 0
  6775  0020B6  C02D  F080         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6776  0020BA  C02E  F081         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6777  0020BE  C081  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6778  0020C2  C080  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6779  0020C6  0012               	return	
  6780  0020C8                     __end_of_WriteTimer0:
  6781                           	opt stack 0
  6782                           pclatu	equ	0xFFB
  6783                           pclath	equ	0xFFA
  6784                           tblptru	equ	0xFF8
  6785                           tblptrh	equ	0xFF7
  6786                           tblptrl	equ	0xFF6
  6787                           tablat	equ	0xFF5
  6788                           prodh	equ	0xFF4
  6789                           prodl	equ	0xFF3
  6790                           intcon	equ	0xFF2
  6791                           postinc0	equ	0xFEE
  6792                           fsr0h	equ	0xFEA
  6793                           fsr0l	equ	0xFE9
  6794                           wreg	equ	0xFE8
  6795                           indf1	equ	0xFE7
  6796                           postdec1	equ	0xFE5
  6797                           fsr1h	equ	0xFE2
  6798                           fsr1l	equ	0xFE1
  6799                           bsr	equ	0xFE0
  6800                           indf2	equ	0xFDF
  6801                           postinc2	equ	0xFDE
  6802                           postdec2	equ	0xFDD
  6803                           fsr2h	equ	0xFDA
  6804                           fsr2l	equ	0xFD9
  6805                           status	equ	0xFD8
  6806                           
  6807 ;; *************** function _i2c_int_handler *****************
  6808 ;; Defined at:
  6809 ;;		line 139 in file "../src/my_i2c.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;		None
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;		None
  6814 ;; Return value:  Size  Location     Type
  6815 ;;		None               void
  6816 ;; Registers used:
  6817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/0
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6823 ;;      Params:         0       0       0       0       0
  6824 ;;      Locals:         0       0       0       0       0
  6825 ;;      Temps:          0       0       0       0       0
  6826 ;;      Totals:         0       0       0       0       0
  6827 ;;Total ram usage:        0 bytes
  6828 ;; Hardware stack levels used:    1
  6829 ;; Hardware stack levels required when called:    4
  6830 ;; This function calls:
  6831 ;;		_i2c_slave_int_handler
  6832 ;; This function is called by:
  6833 ;;		_InterruptHandlerHigh
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           	psect	text45
  6838  0020F6                     __ptext45:
  6839                           	opt stack 0
  6840  0020F6                     _i2c_int_handler:
  6841                           	opt stack 16
  6842                           
  6843                           ;my_i2c.c: 143: i2c_slave_int_handler();
  6844                           
  6845                           ;incstack = 0
  6846  0020F6  EC65  F000         	call	_i2c_slave_int_handler	;wreg free
  6847  0020FA  0012               	return	
  6848  0020FC                     __end_of_i2c_int_handler:
  6849                           	opt stack 0
  6850                           pclatu	equ	0xFFB
  6851                           pclath	equ	0xFFA
  6852                           tblptru	equ	0xFF8
  6853                           tblptrh	equ	0xFF7
  6854                           tblptrl	equ	0xFF6
  6855                           tablat	equ	0xFF5
  6856                           prodh	equ	0xFF4
  6857                           prodl	equ	0xFF3
  6858                           intcon	equ	0xFF2
  6859                           postinc0	equ	0xFEE
  6860                           fsr0h	equ	0xFEA
  6861                           fsr0l	equ	0xFE9
  6862                           wreg	equ	0xFE8
  6863                           indf1	equ	0xFE7
  6864                           postdec1	equ	0xFE5
  6865                           fsr1h	equ	0xFE2
  6866                           fsr1l	equ	0xFE1
  6867                           bsr	equ	0xFE0
  6868                           indf2	equ	0xFDF
  6869                           postinc2	equ	0xFDE
  6870                           postdec2	equ	0xFDD
  6871                           fsr2h	equ	0xFDA
  6872                           fsr2l	equ	0xFD9
  6873                           status	equ	0xFD8
  6874                           
  6875 ;; *************** function _i2c_slave_int_handler *****************
  6876 ;; Defined at:
  6877 ;;		line 248 in file "../src/my_i2c.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;		None
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;  noData          5   57[BANK0 ] unsigned char [5]
  6882 ;;  motorData       5   47[BANK0 ] unsigned char [5]
  6883 ;;  msgtype         2   72[BANK0 ] int 
  6884 ;;  movecomAck      3   39[BANK0 ] unsigned char [3]
  6885 ;;  noData          5   52[BANK0 ] unsigned char [5]
  6886 ;;  sensorData      5   42[BANK0 ] unsigned char [5]
  6887 ;;  msgtype         2   70[BANK0 ] int 
  6888 ;;  reply           5   31[BANK0 ] unsigned char [5]
  6889 ;;  gatherAck       3   36[BANK0 ] unsigned char [3]
  6890 ;;  length          2   75[BANK0 ] int 
  6891 ;;  error_buf       3   62[BANK0 ] unsigned char [3]
  6892 ;;  data_read       1   74[BANK0 ] unsigned char 
  6893 ;;  msg_ready       1   69[BANK0 ] unsigned char 
  6894 ;;  msg_to_send     1   68[BANK0 ] unsigned char 
  6895 ;;  i2c_data        1   67[BANK0 ] unsigned char 
  6896 ;;  overrun_erro    1   66[BANK0 ] unsigned char 
  6897 ;;  data_written    1   65[BANK0 ] unsigned char 
  6898 ;; Return value:  Size  Location     Type
  6899 ;;		None               void
  6900 ;; Registers used:
  6901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/0
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6907 ;;      Params:         0       0       0       0       0
  6908 ;;      Locals:         0      46       0       0       0
  6909 ;;      Temps:          0       2       0       0       0
  6910 ;;      Totals:         0      48       0       0       0
  6911 ;;Total ram usage:       48 bytes
  6912 ;; Hardware stack levels used:    1
  6913 ;; Hardware stack levels required when called:    3
  6914 ;; This function calls:
  6915 ;;		_FromMainLow_recvmsg
  6916 ;;		_ToMainHigh_sendmsg
  6917 ;;		_handle_start
  6918 ;;		_start_i2c_slave_reply
  6919 ;; This function is called by:
  6920 ;;		_i2c_int_handler
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text46
  6925  0000CA                     __ptext46:
  6926                           	opt stack 0
  6927  0000CA                     _i2c_slave_int_handler:
  6928                           	opt stack 16
  6929                           
  6930                           ;my_i2c.c: 249: unsigned char i2c_data;
  6931                           ;my_i2c.c: 250: unsigned char data_read = 0;
  6932                           
  6933                           ;incstack = 0
  6934  0000CA  0100               	movlb	0	; () banked
  6935  0000CC  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  6936  0000CE  0E00               	movlw	0
  6937  0000D0  0100               	movlb	0	; () banked
  6938  0000D2  0100               	movlb	0	; () banked
  6939  0000D4  6FCA               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  6940  0000D6  0100               	movlb	0	; () banked
  6941  0000D8  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6942                           
  6943                           ;my_i2c.c: 251: unsigned char data_written = 0;
  6944  0000DA  0100               	movlb	0	; () banked
  6945  0000DC  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  6946  0000DE  0E00               	movlw	0
  6947  0000E0  0100               	movlb	0	; () banked
  6948  0000E2  0100               	movlb	0	; () banked
  6949  0000E4  6FC1               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  6950  0000E6  0100               	movlb	0	; () banked
  6951  0000E8  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6952                           
  6953                           ;my_i2c.c: 252: unsigned char msg_ready = 0;
  6954  0000EA  0100               	movlb	0	; () banked
  6955  0000EC  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  6956  0000EE  0E00               	movlw	0
  6957  0000F0  0100               	movlb	0	; () banked
  6958  0000F2  0100               	movlb	0	; () banked
  6959  0000F4  6FC5               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  6960  0000F6  0100               	movlb	0	; () banked
  6961  0000F8  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6962                           
  6963                           ;my_i2c.c: 253: unsigned char msg_to_send = 0;
  6964  0000FA  0100               	movlb	0	; () banked
  6965  0000FC  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  6966  0000FE  0E00               	movlw	0
  6967  000100  0100               	movlb	0	; () banked
  6968  000102  0100               	movlb	0	; () banked
  6969  000104  6FC4               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  6970  000106  0100               	movlb	0	; () banked
  6971  000108  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6972                           
  6973                           ;my_i2c.c: 254: unsigned char overrun_error = 0;
  6974  00010A  0100               	movlb	0	; () banked
  6975  00010C  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  6976  00010E  0E00               	movlw	0
  6977  000110  0100               	movlb	0	; () banked
  6978  000112  0100               	movlb	0	; () banked
  6979  000114  6FC2               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  6980  000116  0100               	movlb	0	; () banked
  6981  000118  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;my_i2c.c: 255: unsigned char error_buf[3];
  6985                           ;my_i2c.c: 258: if (SSPCON1bits.SSPOV == 1) {
  6986  00011A  ACC6               	btfss	4038,6,c	;volatile
  6987  00011C  D020               	goto	i2l4237
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;my_i2c.c: 259: SSPCON1bits.SSPOV = 0;
  6991  00011E  9CC6               	bcf	4038,6,c	;volatile
  6992                           
  6993                           ; BSR set to: 0
  6994                           ;my_i2c.c: 263: ic_ptr->status = 0x5;
  6995  000120  EE20 F00D          	lfsr	2,13
  6996  000124  5050               	movf	_ic_ptr,w,c
  6997  000126  26D9               	addwf	fsr2l,f,c
  6998  000128  5051               	movf	_ic_ptr+1,w,c
  6999  00012A  22DA               	addwfc	fsr2h,f,c
  7000  00012C  0E05               	movlw	5
  7001  00012E  6EDF               	movwf	indf2,c
  7002                           
  7003                           ; BSR set to: 0
  7004                           ;my_i2c.c: 264: overrun_error = 1;
  7005  000130  0100               	movlb	0	; () banked
  7006  000132  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7007  000134  0E01               	movlw	1
  7008  000136  0100               	movlb	0	; () banked
  7009  000138  0100               	movlb	0	; () banked
  7010  00013A  6FC2               	movwf	i2c_slave_int_handler@overrun_error& (0+255),b
  7011  00013C  0100               	movlb	0	; () banked
  7012  00013E  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;my_i2c.c: 265: ic_ptr->error_count++;
  7016  000140  EE20 F00F          	lfsr	2,15
  7017  000144  5050               	movf	_ic_ptr,w,c
  7018  000146  26D9               	addwf	fsr2l,f,c
  7019  000148  5051               	movf	_ic_ptr+1,w,c
  7020  00014A  22DA               	addwfc	fsr2h,f,c
  7021  00014C  2ADF               	incf	indf2,f,c
  7022                           
  7023                           ; BSR set to: 0
  7024                           ;my_i2c.c: 266: ic_ptr->error_code = 0x4;
  7025  00014E  EE20 F00E          	lfsr	2,14
  7026  000152  5050               	movf	_ic_ptr,w,c
  7027  000154  26D9               	addwf	fsr2l,f,c
  7028  000156  5051               	movf	_ic_ptr+1,w,c
  7029  000158  22DA               	addwfc	fsr2h,f,c
  7030  00015A  0E04               	movlw	4
  7031  00015C  6EDF               	movwf	indf2,c
  7032  00015E                     i2l4237:
  7033                           
  7034                           ; BSR set to: 0
  7035                           ;my_i2c.c: 267: }
  7036                           ;my_i2c.c: 269: if (SSPSTATbits.BF == 1) {
  7037  00015E  A0C7               	btfss	4039,0,c	;volatile
  7038  000160  D00A               	goto	i2l4243
  7039                           
  7040                           ; BSR set to: 0
  7041                           ;my_i2c.c: 270: i2c_data = SSPBUF;
  7042  000162  CFC9 F0C3          	movff	4041,i2c_slave_int_handler@i2c_data	;volatile
  7043                           
  7044                           ; BSR set to: 0
  7045                           ;my_i2c.c: 271: data_read = 1;
  7046  000166  0100               	movlb	0	; () banked
  7047  000168  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7048  00016A  0E01               	movlw	1
  7049  00016C  0100               	movlb	0	; () banked
  7050  00016E  0100               	movlb	0	; () banked
  7051  000170  6FCA               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7052  000172  0100               	movlb	0	; () banked
  7053  000174  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7054  000176                     i2l4243:
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;my_i2c.c: 272: }
  7058                           ;my_i2c.c: 274: if (!overrun_error) {
  7059  000176  0100               	movlb	0	; () banked
  7060  000178  0100               	movlb	0	; () banked
  7061  00017A  67C2               	tstfsz	i2c_slave_int_handler@overrun_error& (0+255),b
  7062  00017C  D174               	goto	i2l330
  7063  00017E  D160               	goto	i2l4331
  7064  000180                     i2l332:
  7065                           
  7066                           ; BSR set to: 0
  7067                           ;my_i2c.c: 277: {
  7068                           ;my_i2c.c: 279: if (SSPSTATbits.S == 1) {
  7069  000180  A6C7               	btfss	4039,3,c	;volatile
  7070  000182  D171               	goto	i2l330
  7071                           
  7072                           ; BSR set to: 0
  7073                           ;my_i2c.c: 280: handle_start(data_read);
  7074  000184  0100               	movlb	0	; () banked
  7075  000186  0100               	movlb	0	; () banked
  7076  000188  51CA               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7077  00018A  ECC1  F00A         	call	_handle_start
  7078                           
  7079                           ;my_i2c.c: 282: if (ic_ptr->status == 0x8) {
  7080  00018E  EE20 F00D          	lfsr	2,13
  7081  000192  5050               	movf	_ic_ptr,w,c
  7082  000194  26D9               	addwf	fsr2l,f,c
  7083  000196  5051               	movf	_ic_ptr+1,w,c
  7084  000198  22DA               	addwfc	fsr2h,f,c
  7085  00019A  0E08               	movlw	8
  7086  00019C  62DF               	cpfseq	indf2,c
  7087  00019E  D163               	goto	i2l330
  7088                           
  7089                           ;my_i2c.c: 283: data_read = 0;
  7090  0001A0  0100               	movlb	0	; () banked
  7091  0001A2  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7092  0001A4  0E00               	movlw	0
  7093  0001A6  0100               	movlb	0	; () banked
  7094  0001A8  0100               	movlb	0	; () banked
  7095  0001AA  6FCA               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7096  0001AC  0100               	movlb	0	; () banked
  7097  0001AE  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7098                           
  7099                           ;my_i2c.c: 284: msg_to_send = 1;
  7100  0001B0  0100               	movlb	0	; () banked
  7101  0001B2  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7102  0001B4  0E01               	movlw	1
  7103  0001B6  0100               	movlb	0	; () banked
  7104  0001B8  0100               	movlb	0	; () banked
  7105  0001BA  6FC4               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7106  0001BC  D136               	goto	L6
  7107  0001BE                     i2l336:
  7108                           
  7109                           ; BSR set to: 0
  7110                           ;my_i2c.c: 290: {
  7111                           ;my_i2c.c: 292: if (SSPSTATbits.P == 1) {
  7112  0001BE  A8C7               	btfss	4039,4,c	;volatile
  7113  0001C0  D027               	goto	i2l4263
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;my_i2c.c: 295: ic_ptr->event_count++;
  7117  0001C2  EE20 F00C          	lfsr	2,12
  7118  0001C6  5050               	movf	_ic_ptr,w,c
  7119  0001C8  26D9               	addwf	fsr2l,f,c
  7120  0001CA  5051               	movf	_ic_ptr+1,w,c
  7121  0001CC  22DA               	addwfc	fsr2h,f,c
  7122  0001CE  2ADF               	incf	indf2,f,c
  7123                           
  7124                           ; BSR set to: 0
  7125                           ;my_i2c.c: 296: if (data_read) {
  7126  0001D0  0100               	movlb	0	; () banked
  7127  0001D2  0100               	movlb	0	; () banked
  7128  0001D4  51CA               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7129  0001D6  B4D8               	btfsc	status,2,c
  7130  0001D8  D12B               	goto	L8
  7131                           
  7132                           ; BSR set to: 0
  7133                           ;my_i2c.c: 297: if (SSPSTATbits.D_A == 0) {
  7134  0001DA  BAC7               	btfsc	4039,5,c	;volatile
  7135  0001DC  D009               	goto	i2l4261
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;my_i2c.c: 298: msg_ready = 1;
  7139  0001DE  0100               	movlb	0	; () banked
  7140  0001E0  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7141  0001E2  0E01               	movlw	1
  7142  0001E4  0100               	movlb	0	; () banked
  7143  0001E6  0100               	movlb	0	; () banked
  7144  0001E8  6FC5               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7145  0001EA  0100               	movlb	0	; () banked
  7146  0001EC  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7147                           
  7148                           ;my_i2c.c: 299: } else {
  7149  0001EE  D120               	goto	L8
  7150  0001F0                     i2l4261:
  7151                           
  7152                           ; BSR set to: 0
  7153                           ;my_i2c.c: 300: ic_ptr->error_count++;
  7154  0001F0  EE20 F00F          	lfsr	2,15
  7155  0001F4  5050               	movf	_ic_ptr,w,c
  7156  0001F6  26D9               	addwf	fsr2l,f,c
  7157  0001F8  5051               	movf	_ic_ptr+1,w,c
  7158  0001FA  22DA               	addwfc	fsr2h,f,c
  7159  0001FC  2ADF               	incf	indf2,f,c
  7160                           
  7161                           ;my_i2c.c: 301: ic_ptr->error_code = 0x6;
  7162  0001FE  EE20 F00E          	lfsr	2,14
  7163  000202  5050               	movf	_ic_ptr,w,c
  7164  000204  26D9               	addwf	fsr2l,f,c
  7165  000206  5051               	movf	_ic_ptr+1,w,c
  7166  000208  22DA               	addwfc	fsr2h,f,c
  7167  00020A  0E06               	movlw	6
  7168  00020C  6EDF               	movwf	indf2,c
  7169                           
  7170                           ; BSR set to: 0
  7171  00020E  D110               	goto	L8
  7172  000210                     i2l4263:
  7173                           
  7174                           ; BSR set to: 0
  7175  000210  0100               	movlb	0	; () banked
  7176  000212  0100               	movlb	0	; () banked
  7177  000214  51CA               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7178  000216  B4D8               	btfsc	status,2,c
  7179  000218  D126               	goto	i2l330
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;my_i2c.c: 306: ic_ptr->event_count++;
  7183  00021A  EE20 F00C          	lfsr	2,12
  7184  00021E  5050               	movf	_ic_ptr,w,c
  7185  000220  26D9               	addwf	fsr2l,f,c
  7186  000222  5051               	movf	_ic_ptr+1,w,c
  7187  000224  22DA               	addwfc	fsr2h,f,c
  7188  000226  2ADF               	incf	indf2,f,c
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;my_i2c.c: 307: if (SSPSTATbits.D_A == 0) {
  7192  000228  BAC7               	btfsc	4039,5,c	;volatile
  7193  00022A  D013               	goto	i2l4279
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;my_i2c.c: 308: if (SSPSTATbits.R_W == 0) {
  7197  00022C  B4C7               	btfsc	4039,2,c	;volatile
  7198  00022E  D008               	goto	i2l4273
  7199                           
  7200                           ; BSR set to: 0
  7201                           ;my_i2c.c: 309: ic_ptr->status = 0x7;
  7202  000230  EE20 F00D          	lfsr	2,13
  7203  000234  5050               	movf	_ic_ptr,w,c
  7204  000236  26D9               	addwf	fsr2l,f,c
  7205  000238  5051               	movf	_ic_ptr+1,w,c
  7206  00023A  22DA               	addwfc	fsr2h,f,c
  7207  00023C  0E07               	movlw	7
  7208  00023E  D05A               	goto	L5
  7209  000240                     i2l4273:
  7210                           
  7211                           ; BSR set to: 0
  7212                           ;my_i2c.c: 311: ic_ptr->status = 0x8;
  7213  000240  EE20 F00D          	lfsr	2,13
  7214  000244  5050               	movf	_ic_ptr,w,c
  7215  000246  26D9               	addwf	fsr2l,f,c
  7216  000248  5051               	movf	_ic_ptr+1,w,c
  7217  00024A  22DA               	addwfc	fsr2h,f,c
  7218  00024C  0E08               	movlw	8
  7219  00024E  6EDF               	movwf	indf2,c
  7220  000250  D0DE               	goto	L9
  7221  000252                     i2l4279:
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;my_i2c.c: 317: ic_ptr->error_count++;
  7225  000252  EE20 F00F          	lfsr	2,15
  7226  000256  5050               	movf	_ic_ptr,w,c
  7227  000258  26D9               	addwf	fsr2l,f,c
  7228  00025A  5051               	movf	_ic_ptr+1,w,c
  7229  00025C  22DA               	addwfc	fsr2h,f,c
  7230  00025E  2ADF               	incf	indf2,f,c
  7231                           
  7232                           ;my_i2c.c: 318: ic_ptr->status = 0x5;
  7233  000260  EE20 F00D          	lfsr	2,13
  7234  000264  5050               	movf	_ic_ptr,w,c
  7235  000266  26D9               	addwf	fsr2l,f,c
  7236  000268  5051               	movf	_ic_ptr+1,w,c
  7237  00026A  22DA               	addwfc	fsr2h,f,c
  7238  00026C  0E05               	movlw	5
  7239  00026E  6EDF               	movwf	indf2,c
  7240                           
  7241                           ;my_i2c.c: 319: ic_ptr->error_code = 0x6;
  7242  000270  EE20 F00E          	lfsr	2,14
  7243  000274  5050               	movf	_ic_ptr,w,c
  7244  000276  26D9               	addwf	fsr2l,f,c
  7245  000278  5051               	movf	_ic_ptr+1,w,c
  7246  00027A  22DA               	addwfc	fsr2h,f,c
  7247  00027C  0E06               	movlw	6
  7248  00027E  D03A               	goto	L5
  7249  000280                     i2l4281:
  7250                           
  7251                           ; BSR set to: 0
  7252                           ;my_i2c.c: 325: {
  7253                           ;my_i2c.c: 326: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7254  000280  EE20 F01B          	lfsr	2,27
  7255  000284  5050               	movf	_ic_ptr,w,c
  7256  000286  26D9               	addwf	fsr2l,f,c
  7257  000288  5051               	movf	_ic_ptr+1,w,c
  7258  00028A  22DA               	addwfc	fsr2h,f,c
  7259  00028C  50DF               	movf	indf2,w,c
  7260  00028E  0100               	movlb	0	; () banked
  7261  000290  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7262  000292  EE20 F01A          	lfsr	2,26
  7263  000296  5050               	movf	_ic_ptr,w,c
  7264  000298  26D9               	addwf	fsr2l,f,c
  7265  00029A  5051               	movf	_ic_ptr+1,w,c
  7266  00029C  22DA               	addwfc	fsr2h,f,c
  7267  00029E  50DF               	movf	indf2,w,c
  7268  0002A0  0100               	movlb	0	; () banked
  7269  0002A2  5D9D               	subwf	??_i2c_slave_int_handler& (0+255),w,b
  7270  0002A4  B0D8               	btfsc	status,0,c
  7271  0002A6  D0C4               	goto	L8
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;my_i2c.c: 327: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7275  0002A8  EE20 F01B          	lfsr	2,27
  7276  0002AC  5050               	movf	_ic_ptr,w,c
  7277  0002AE  26D9               	addwf	fsr2l,f,c
  7278  0002B0  5051               	movf	_ic_ptr+1,w,c
  7279  0002B2  22DA               	addwfc	fsr2h,f,c
  7280  0002B4  50DF               	movf	indf2,w,c
  7281  0002B6  0100               	movlb	0	; () banked
  7282  0002B8  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7283  0002BA  0100               	movlb	0	; () banked
  7284  0002BC  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7285  0002BE  0D01               	mullw	1
  7286  0002C0  0E10               	movlw	16
  7287  0002C2  26F3               	addwf	prodl,f,c
  7288  0002C4  0E00               	movlw	0
  7289  0002C6  22F4               	addwfc	prodh,f,c
  7290  0002C8  50F3               	movf	prodl,w,c
  7291  0002CA  2450               	addwf	_ic_ptr,w,c
  7292  0002CC  6ED9               	movwf	fsr2l,c
  7293  0002CE  50F4               	movf	prodh,w,c
  7294  0002D0  2051               	addwfc	_ic_ptr+1,w,c
  7295  0002D2  6EDA               	movwf	fsr2h,c
  7296  0002D4  50DF               	movf	indf2,w,c
  7297  0002D6  6EC9               	movwf	4041,c	;volatile
  7298                           
  7299                           ; BSR set to: 0
  7300                           ;my_i2c.c: 328: ic_ptr->outbufind++;
  7301  0002D8  EE20 F01B          	lfsr	2,27
  7302  0002DC  5050               	movf	_ic_ptr,w,c
  7303  0002DE  26D9               	addwf	fsr2l,f,c
  7304  0002E0  5051               	movf	_ic_ptr+1,w,c
  7305  0002E2  22DA               	addwfc	fsr2h,f,c
  7306  0002E4  2ADF               	incf	indf2,f,c
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;my_i2c.c: 329: data_written = 1;
  7310  0002E6  0100               	movlb	0	; () banked
  7311  0002E8  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7312  0002EA  0E01               	movlw	1
  7313  0002EC  0100               	movlb	0	; () banked
  7314  0002EE  0100               	movlb	0	; () banked
  7315  0002F0  6FC1               	movwf	i2c_slave_int_handler@data_written& (0+255),b
  7316  0002F2  D09B               	goto	L6
  7317  0002F4                     L5:
  7318  0002F4  6EDF               	movwf	indf2,c
  7319  0002F6  D0B7               	goto	i2l330
  7320  0002F8                     i2l350:
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;my_i2c.c: 337: {
  7324                           ;my_i2c.c: 339: if (SSPSTATbits.P == 1) {
  7325  0002F8  A8C7               	btfss	4039,4,c	;volatile
  7326  0002FA  D04C               	goto	i2l4309
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;my_i2c.c: 341: ic_ptr->event_count++;
  7330  0002FC  EE20 F00C          	lfsr	2,12
  7331  000300  5050               	movf	_ic_ptr,w,c
  7332  000302  26D9               	addwf	fsr2l,f,c
  7333  000304  5051               	movf	_ic_ptr+1,w,c
  7334  000306  22DA               	addwfc	fsr2h,f,c
  7335  000308  2ADF               	incf	indf2,f,c
  7336                           
  7337                           ; BSR set to: 0
  7338                           ;my_i2c.c: 342: if (data_read) {
  7339  00030A  0100               	movlb	0	; () banked
  7340  00030C  0100               	movlb	0	; () banked
  7341  00030E  51CA               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7342  000310  B4D8               	btfsc	status,2,c
  7343  000312  D037               	goto	i2l4305
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;my_i2c.c: 343: if (SSPSTATbits.D_A == 1) {
  7347  000314  AAC7               	btfss	4039,5,c	;volatile
  7348  000316  D01D               	goto	i2l4303
  7349                           
  7350                           ; BSR set to: 0
  7351                           ;my_i2c.c: 344: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7352  000318  EE20 F00A          	lfsr	2,10
  7353  00031C  5050               	movf	_ic_ptr,w,c
  7354  00031E  26D9               	addwf	fsr2l,f,c
  7355  000320  5051               	movf	_ic_ptr+1,w,c
  7356  000322  22DA               	addwfc	fsr2h,f,c
  7357  000324  50DF               	movf	indf2,w,c
  7358  000326  0100               	movlb	0	; () banked
  7359  000328  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7360  00032A  0100               	movlb	0	; () banked
  7361  00032C  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7362  00032E  0D01               	mullw	1
  7363  000330  50F3               	movf	prodl,w,c
  7364  000332  2450               	addwf	_ic_ptr,w,c
  7365  000334  6ED9               	movwf	fsr2l,c
  7366  000336  50F4               	movf	prodh,w,c
  7367  000338  2051               	addwfc	_ic_ptr+1,w,c
  7368  00033A  6EDA               	movwf	fsr2h,c
  7369  00033C  0100               	movlb	0	; () banked
  7370  00033E  C0C3  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;my_i2c.c: 345: ic_ptr->buflen++;
  7374  000342  EE20 F00A          	lfsr	2,10
  7375  000346  5050               	movf	_ic_ptr,w,c
  7376  000348  26D9               	addwf	fsr2l,f,c
  7377  00034A  5051               	movf	_ic_ptr+1,w,c
  7378  00034C  22DA               	addwfc	fsr2h,f,c
  7379  00034E  2ADF               	incf	indf2,f,c
  7380  000350  D018               	goto	i2l4305
  7381  000352                     i2l4303:
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;my_i2c.c: 348: ic_ptr->error_count++;
  7385  000352  EE20 F00F          	lfsr	2,15
  7386  000356  5050               	movf	_ic_ptr,w,c
  7387  000358  26D9               	addwf	fsr2l,f,c
  7388  00035A  5051               	movf	_ic_ptr+1,w,c
  7389  00035C  22DA               	addwfc	fsr2h,f,c
  7390  00035E  2ADF               	incf	indf2,f,c
  7391                           
  7392                           ;my_i2c.c: 349: ic_ptr->error_code = 0x6;
  7393  000360  EE20 F00E          	lfsr	2,14
  7394  000364  5050               	movf	_ic_ptr,w,c
  7395  000366  26D9               	addwf	fsr2l,f,c
  7396  000368  5051               	movf	_ic_ptr+1,w,c
  7397  00036A  22DA               	addwfc	fsr2h,f,c
  7398  00036C  0E06               	movlw	6
  7399  00036E  6EDF               	movwf	indf2,c
  7400                           
  7401                           ;my_i2c.c: 350: ic_ptr->status = 0x5;
  7402  000370  EE20 F00D          	lfsr	2,13
  7403  000374  5050               	movf	_ic_ptr,w,c
  7404  000376  26D9               	addwf	fsr2l,f,c
  7405  000378  5051               	movf	_ic_ptr+1,w,c
  7406  00037A  22DA               	addwfc	fsr2h,f,c
  7407  00037C  0E05               	movlw	5
  7408  00037E  6EDF               	movwf	indf2,c
  7409  000380  D057               	goto	L8
  7410  000382                     i2l4305:
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;my_i2c.c: 353: msg_ready = 1;
  7414  000382  0100               	movlb	0	; () banked
  7415  000384  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7416  000386  0E01               	movlw	1
  7417  000388  0100               	movlb	0	; () banked
  7418  00038A  0100               	movlb	0	; () banked
  7419  00038C  6FC5               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7420  00038E  0100               	movlb	0	; () banked
  7421  000390  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7422                           
  7423                           ; BSR set to: 0
  7424  000392  D04E               	goto	L8
  7425  000394                     i2l4309:
  7426                           
  7427                           ; BSR set to: 0
  7428  000394  0100               	movlb	0	; () banked
  7429  000396  0100               	movlb	0	; () banked
  7430  000398  51CA               	movf	i2c_slave_int_handler@data_read& (0+255),w,b
  7431  00039A  B4D8               	btfsc	status,2,c
  7432  00039C  D064               	goto	i2l330
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;my_i2c.c: 357: ic_ptr->event_count++;
  7436  00039E  EE20 F00C          	lfsr	2,12
  7437  0003A2  5050               	movf	_ic_ptr,w,c
  7438  0003A4  26D9               	addwf	fsr2l,f,c
  7439  0003A6  5051               	movf	_ic_ptr+1,w,c
  7440  0003A8  22DA               	addwfc	fsr2h,f,c
  7441  0003AA  2ADF               	incf	indf2,f,c
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;my_i2c.c: 358: if (SSPSTATbits.D_A == 1) {
  7445  0003AC  AAC7               	btfss	4039,5,c	;volatile
  7446  0003AE  D01D               	goto	i2l358
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;my_i2c.c: 359: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7450  0003B0  EE20 F00A          	lfsr	2,10
  7451  0003B4  5050               	movf	_ic_ptr,w,c
  7452  0003B6  26D9               	addwf	fsr2l,f,c
  7453  0003B8  5051               	movf	_ic_ptr+1,w,c
  7454  0003BA  22DA               	addwfc	fsr2h,f,c
  7455  0003BC  50DF               	movf	indf2,w,c
  7456  0003BE  0100               	movlb	0	; () banked
  7457  0003C0  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7458  0003C2  0100               	movlb	0	; () banked
  7459  0003C4  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7460  0003C6  0D01               	mullw	1
  7461  0003C8  50F3               	movf	prodl,w,c
  7462  0003CA  2450               	addwf	_ic_ptr,w,c
  7463  0003CC  6ED9               	movwf	fsr2l,c
  7464  0003CE  50F4               	movf	prodh,w,c
  7465  0003D0  2051               	addwfc	_ic_ptr+1,w,c
  7466  0003D2  6EDA               	movwf	fsr2h,c
  7467  0003D4  0100               	movlb	0	; () banked
  7468  0003D6  C0C3  FFDF         	movff	i2c_slave_int_handler@i2c_data,indf2
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;my_i2c.c: 360: ic_ptr->buflen++;
  7472  0003DA  EE20 F00A          	lfsr	2,10
  7473  0003DE  5050               	movf	_ic_ptr,w,c
  7474  0003E0  26D9               	addwf	fsr2l,f,c
  7475  0003E2  5051               	movf	_ic_ptr+1,w,c
  7476  0003E4  22DA               	addwfc	fsr2h,f,c
  7477  0003E6  2ADF               	incf	indf2,f,c
  7478                           
  7479                           ;my_i2c.c: 361: } else {
  7480  0003E8  D03E               	goto	i2l330
  7481  0003EA                     i2l358:
  7482                           
  7483                           ; BSR set to: 0
  7484                           ;my_i2c.c: 362: if (SSPSTATbits.R_W == 1) {
  7485  0003EA  A4C7               	btfss	4039,2,c	;volatile
  7486  0003EC  D701               	goto	i2l4261
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;my_i2c.c: 363: ic_ptr->status = 0x8;
  7490  0003EE  EE20 F00D          	lfsr	2,13
  7491  0003F2  5050               	movf	_ic_ptr,w,c
  7492  0003F4  26D9               	addwf	fsr2l,f,c
  7493  0003F6  5051               	movf	_ic_ptr+1,w,c
  7494  0003F8  22DA               	addwfc	fsr2h,f,c
  7495  0003FA  0E08               	movlw	8
  7496  0003FC  6EDF               	movwf	indf2,c
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;my_i2c.c: 364: msg_ready = 1;
  7500  0003FE  0100               	movlb	0	; () banked
  7501  000400  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7502  000402  0E01               	movlw	1
  7503  000404  0100               	movlb	0	; () banked
  7504  000406  0100               	movlb	0	; () banked
  7505  000408  6FC5               	movwf	i2c_slave_int_handler@msg_ready& (0+255),b
  7506  00040A  0100               	movlb	0	; () banked
  7507  00040C  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7508  00040E                     L9:
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;my_i2c.c: 365: msg_to_send = 1;
  7512  00040E  0100               	movlb	0	; () banked
  7513  000410  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7514  000412  0E01               	movlw	1
  7515  000414  0100               	movlb	0	; () banked
  7516  000416  0100               	movlb	0	; () banked
  7517  000418  6FC4               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  7518  00041A  0100               	movlb	0	; () banked
  7519  00041C  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;my_i2c.c: 367: data_read = 0;
  7523  00041E  0100               	movlb	0	; () banked
  7524  000420  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7525  000422  0E00               	movlw	0
  7526  000424  0100               	movlb	0	; () banked
  7527  000426  0100               	movlb	0	; () banked
  7528  000428  6FCA               	movwf	i2c_slave_int_handler@data_read& (0+255),b
  7529  00042A                     L6:
  7530  00042A  0100               	movlb	0	; () banked
  7531  00042C  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7532                           
  7533                           ;my_i2c.c: 368: } else {
  7534  00042E  D01B               	goto	i2l330
  7535  000430                     L8:
  7536                           
  7537                           ;my_i2c.c: 371: ic_ptr->status = 0x5;
  7538  000430  EE20 F00D          	lfsr	2,13
  7539  000434  5050               	movf	_ic_ptr,w,c
  7540  000436  26D9               	addwf	fsr2l,f,c
  7541  000438  5051               	movf	_ic_ptr+1,w,c
  7542  00043A  22DA               	addwfc	fsr2h,f,c
  7543  00043C  0E05               	movlw	5
  7544  00043E  D75A               	goto	L5
  7545  000440                     i2l4331:
  7546                           
  7547                           ; BSR set to: 0
  7548  000440  EE20 F00D          	lfsr	2,13
  7549  000444  5050               	movf	_ic_ptr,w,c
  7550  000446  26D9               	addwf	fsr2l,f,c
  7551  000448  5051               	movf	_ic_ptr+1,w,c
  7552  00044A  22DA               	addwfc	fsr2h,f,c
  7553  00044C  50DF               	movf	indf2,w,c
  7554                           
  7555                           ; Switch size 1, requested type "space"
  7556                           ; Number of cases is 4, Range of values is 5 to 8
  7557                           ; switch strategies available:
  7558                           ; Name         Instructions Cycles
  7559                           ; simple_byte           13     7 (average)
  7560                           ;	Chosen strategy is simple_byte
  7561  00044E  0A05               	xorlw	5	; case 5
  7562  000450  B4D8               	btfsc	status,2,c
  7563  000452  D696               	goto	i2l332
  7564  000454  0A03               	xorlw	3	; case 6
  7565  000456  B4D8               	btfsc	status,2,c
  7566  000458  D6B2               	goto	i2l336
  7567  00045A  0A01               	xorlw	1	; case 7
  7568  00045C  B4D8               	btfsc	status,2,c
  7569  00045E  D74C               	goto	i2l350
  7570  000460  0A0F               	xorlw	15	; case 8
  7571  000462  B4D8               	btfsc	status,2,c
  7572  000464  D70D               	goto	i2l4281
  7573  000466                     i2l330:
  7574                           
  7575                           ;my_i2c.c: 378: }
  7576                           ;my_i2c.c: 381: if (data_read || data_written) {
  7577  000466  0100               	movlb	0	; () banked
  7578  000468  0100               	movlb	0	; () banked
  7579  00046A  67CA               	tstfsz	i2c_slave_int_handler@data_read& (0+255),b
  7580  00046C  D005               	goto	i2l364
  7581                           
  7582                           ; BSR set to: 0
  7583  00046E  0100               	movlb	0	; () banked
  7584  000470  0100               	movlb	0	; () banked
  7585  000472  51C1               	movf	i2c_slave_int_handler@data_written& (0+255),w,b
  7586  000474  B4D8               	btfsc	status,2,c
  7587  000476  D002               	goto	i2l4337
  7588  000478                     i2l364:
  7589                           
  7590                           ; BSR set to: 0
  7591                           ;my_i2c.c: 383: if (SSPCON1bits.CKP == 0) {
  7592  000478  A8C6               	btfss	4038,4,c	;volatile
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;my_i2c.c: 384: SSPCON1bits.CKP = 1;
  7596  00047A  88C6               	bsf	4038,4,c	;volatile
  7597  00047C                     i2l4337:
  7598                           
  7599                           ; BSR set to: 0
  7600                           ;my_i2c.c: 385: }
  7601                           ;my_i2c.c: 386: }
  7602                           ;my_i2c.c: 389: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7603  00047C  EE20 F00A          	lfsr	2,10
  7604  000480  5050               	movf	_ic_ptr,w,c
  7605  000482  26D9               	addwf	fsr2l,f,c
  7606  000484  5051               	movf	_ic_ptr+1,w,c
  7607  000486  22DA               	addwfc	fsr2h,f,c
  7608  000488  0E08               	movlw	8
  7609  00048A  64DF               	cpfsgt	indf2,c
  7610  00048C  D01B               	goto	i2l4343
  7611                           
  7612                           ; BSR set to: 0
  7613  00048E  0100               	movlb	0	; () banked
  7614  000490  0100               	movlb	0	; () banked
  7615  000492  67C5               	tstfsz	i2c_slave_int_handler@msg_ready& (0+255),b
  7616  000494  D017               	goto	i2l4343
  7617                           
  7618                           ; BSR set to: 0
  7619                           ;my_i2c.c: 390: ic_ptr->status = 0x5;
  7620  000496  EE20 F00D          	lfsr	2,13
  7621  00049A  5050               	movf	_ic_ptr,w,c
  7622  00049C  26D9               	addwf	fsr2l,f,c
  7623  00049E  5051               	movf	_ic_ptr+1,w,c
  7624  0004A0  22DA               	addwfc	fsr2h,f,c
  7625  0004A2  0E05               	movlw	5
  7626  0004A4  6EDF               	movwf	indf2,c
  7627                           
  7628                           ;my_i2c.c: 391: ic_ptr->error_count++;
  7629  0004A6  EE20 F00F          	lfsr	2,15
  7630  0004AA  5050               	movf	_ic_ptr,w,c
  7631  0004AC  26D9               	addwf	fsr2l,f,c
  7632  0004AE  5051               	movf	_ic_ptr+1,w,c
  7633  0004B0  22DA               	addwfc	fsr2h,f,c
  7634  0004B2  2ADF               	incf	indf2,f,c
  7635                           
  7636                           ;my_i2c.c: 392: ic_ptr->error_code = 0x7;
  7637  0004B4  EE20 F00E          	lfsr	2,14
  7638  0004B8  5050               	movf	_ic_ptr,w,c
  7639  0004BA  26D9               	addwf	fsr2l,f,c
  7640  0004BC  5051               	movf	_ic_ptr+1,w,c
  7641  0004BE  22DA               	addwfc	fsr2h,f,c
  7642  0004C0  0E07               	movlw	7
  7643  0004C2  6EDF               	movwf	indf2,c
  7644  0004C4                     i2l4343:
  7645                           
  7646                           ; BSR set to: 0
  7647                           ;my_i2c.c: 393: }
  7648                           ;my_i2c.c: 395: if (msg_ready) {
  7649  0004C4  0100               	movlb	0	; () banked
  7650  0004C6  0100               	movlb	0	; () banked
  7651  0004C8  51C5               	movf	i2c_slave_int_handler@msg_ready& (0+255),w,b
  7652  0004CA  B4D8               	btfsc	status,2,c
  7653  0004CC  D038               	goto	i2l4351
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;my_i2c.c: 396: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7657  0004CE  EE20 F00C          	lfsr	2,12
  7658  0004D2  5050               	movf	_ic_ptr,w,c
  7659  0004D4  26D9               	addwf	fsr2l,f,c
  7660  0004D6  5051               	movf	_ic_ptr+1,w,c
  7661  0004D8  22DA               	addwfc	fsr2h,f,c
  7662  0004DA  EE10 F00A          	lfsr	1,10
  7663  0004DE  5050               	movf	_ic_ptr,w,c
  7664  0004E0  26E1               	addwf	fsr1l,f,c
  7665  0004E2  5051               	movf	_ic_ptr+1,w,c
  7666  0004E4  22E2               	addwfc	fsr1h,f,c
  7667  0004E6  50E7               	movf	indf1,w,c
  7668  0004E8  0100               	movlb	0	; () banked
  7669  0004EA  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7670  0004EC  0100               	movlb	0	; () banked
  7671  0004EE  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7672  0004F0  0D01               	mullw	1
  7673  0004F2  50F3               	movf	prodl,w,c
  7674  0004F4  2450               	addwf	_ic_ptr,w,c
  7675  0004F6  6EE1               	movwf	fsr1l,c
  7676  0004F8  50F4               	movf	prodh,w,c
  7677  0004FA  2051               	addwfc	_ic_ptr+1,w,c
  7678  0004FC  6EE2               	movwf	fsr1h,c
  7679  0004FE  CFDF FFE7          	movff	indf2,indf1
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;my_i2c.c: 397: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7683  000502  0100               	movlb	0	; () banked
  7684  000504  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7685  000506  0E28               	movlw	40
  7686  000508  0100               	movlb	0	; () banked
  7687  00050A  0100               	movlb	0	; () banked
  7688  00050C  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7689  00050E  0100               	movlb	0	; () banked
  7690  000510  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7691  000512  0100               	movlb	0	; () banked
  7692  000514  C051  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7693  000518  0100               	movlb	0	; () banked
  7694  00051A  C050  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7695  00051E  EE20 F00A          	lfsr	2,10
  7696  000522  5050               	movf	_ic_ptr,w,c
  7697  000524  26D9               	addwf	fsr2l,f,c
  7698  000526  5051               	movf	_ic_ptr+1,w,c
  7699  000528  22DA               	addwfc	fsr2h,f,c
  7700  00052A  50DF               	movf	indf2,w,c
  7701  00052C  0100               	movlb	0	; () banked
  7702  00052E  6F9E               	movwf	(??_i2c_slave_int_handler+1)& (0+255),b
  7703  000530  0100               	movlb	0	; () banked
  7704  000532  299E               	incf	(??_i2c_slave_int_handler+1)& (0+255),w,b
  7705  000534  EC7B  F00F         	call	_ToMainHigh_sendmsg
  7706                           
  7707                           ;my_i2c.c: 398: ic_ptr->buflen = 0;
  7708  000538  EE20 F00A          	lfsr	2,10
  7709  00053C  D03E               	goto	L7
  7710  00053E                     i2l4351:
  7711  00053E  EE20 F00F          	lfsr	2,15
  7712  000542  5050               	movf	_ic_ptr,w,c
  7713  000544  26D9               	addwf	fsr2l,f,c
  7714  000546  5051               	movf	_ic_ptr+1,w,c
  7715  000548  22DA               	addwfc	fsr2h,f,c
  7716  00054A  50DF               	movf	indf2,w,c
  7717  00054C  B4D8               	btfsc	status,2,c
  7718  00054E  D03B               	goto	i2l4359
  7719                           
  7720                           ;my_i2c.c: 400: error_buf[0] = ic_ptr->error_count;
  7721  000550  EE20 F00F          	lfsr	2,15
  7722  000554  5050               	movf	_ic_ptr,w,c
  7723  000556  26D9               	addwf	fsr2l,f,c
  7724  000558  5051               	movf	_ic_ptr+1,w,c
  7725  00055A  22DA               	addwfc	fsr2h,f,c
  7726  00055C  50DF               	movf	indf2,w,c
  7727  00055E  0100               	movlb	0	; () banked
  7728  000560  0100               	movlb	0	; () banked
  7729  000562  6FBE               	movwf	i2c_slave_int_handler@error_buf& (0+255),b
  7730                           
  7731                           ;my_i2c.c: 401: error_buf[1] = ic_ptr->error_code;
  7732  000564  EE20 F00E          	lfsr	2,14
  7733  000568  5050               	movf	_ic_ptr,w,c
  7734  00056A  26D9               	addwf	fsr2l,f,c
  7735  00056C  5051               	movf	_ic_ptr+1,w,c
  7736  00056E  22DA               	addwfc	fsr2h,f,c
  7737  000570  50DF               	movf	indf2,w,c
  7738  000572  0100               	movlb	0	; () banked
  7739  000574  0100               	movlb	0	; () banked
  7740  000576  6FBF               	movwf	(i2c_slave_int_handler@error_buf+1)& (0+255),b
  7741                           
  7742                           ;my_i2c.c: 402: error_buf[2] = ic_ptr->event_count;
  7743  000578  EE20 F00C          	lfsr	2,12
  7744  00057C  5050               	movf	_ic_ptr,w,c
  7745  00057E  26D9               	addwf	fsr2l,f,c
  7746  000580  5051               	movf	_ic_ptr+1,w,c
  7747  000582  22DA               	addwfc	fsr2h,f,c
  7748  000584  50DF               	movf	indf2,w,c
  7749  000586  0100               	movlb	0	; () banked
  7750  000588  0100               	movlb	0	; () banked
  7751  00058A  6FC0               	movwf	(i2c_slave_int_handler@error_buf+2)& (0+255),b
  7752                           
  7753                           ; BSR set to: 0
  7754                           ;my_i2c.c: 403: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7755  00058C  0100               	movlb	0	; () banked
  7756  00058E  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7757  000590  0E29               	movlw	41
  7758  000592  0100               	movlb	0	; () banked
  7759  000594  0100               	movlb	0	; () banked
  7760  000596  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7761  000598  0100               	movlb	0	; () banked
  7762  00059A  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7763  00059C  0100               	movlb	0	; () banked
  7764  00059E  0E00               	movlw	high i2c_slave_int_handler@error_buf
  7765  0005A0  0100               	movlb	0	; () banked
  7766  0005A2  0100               	movlb	0	; () banked
  7767  0005A4  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7768  0005A6  0100               	movlb	0	; () banked
  7769  0005A8  0EBE               	movlw	low i2c_slave_int_handler@error_buf
  7770  0005AA  0100               	movlb	0	; () banked
  7771  0005AC  0100               	movlb	0	; () banked
  7772  0005AE  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7773  0005B0  0E03               	movlw	3
  7774  0005B2  EC7B  F00F         	call	_ToMainHigh_sendmsg
  7775                           
  7776                           ;my_i2c.c: 404: ic_ptr->error_count = 0;
  7777  0005B6  EE20 F00F          	lfsr	2,15
  7778  0005BA                     L7:
  7779  0005BA  5050               	movf	_ic_ptr,w,c
  7780  0005BC  26D9               	addwf	fsr2l,f,c
  7781  0005BE  5051               	movf	_ic_ptr+1,w,c
  7782  0005C0  22DA               	addwfc	fsr2h,f,c
  7783  0005C2  0E00               	movlw	0
  7784  0005C4  6EDF               	movwf	indf2,c
  7785  0005C6                     i2l4359:
  7786                           
  7787                           ;my_i2c.c: 405: }
  7788                           ;my_i2c.c: 406: if (msg_to_send) {
  7789  0005C6  0100               	movlb	0	; () banked
  7790  0005C8  0100               	movlb	0	; () banked
  7791  0005CA  51C4               	movf	i2c_slave_int_handler@msg_to_send& (0+255),w,b
  7792  0005CC  B4D8               	btfsc	status,2,c
  7793  0005CE  0012               	return	
  7794                           
  7795                           ; BSR set to: 0
  7796                           ;my_i2c.c: 407: int length = 0;
  7797  0005D0  0E00               	movlw	0
  7798  0005D2  0100               	movlb	0	; () banked
  7799  0005D4  0100               	movlb	0	; () banked
  7800  0005D6  6FCC               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  7801  0005D8  0E00               	movlw	0
  7802  0005DA  0100               	movlb	0	; () banked
  7803  0005DC  6FCB               	movwf	i2c_slave_int_handler@length& (0+255),b
  7804                           
  7805                           ; BSR set to: 0
  7806                           ;my_i2c.c: 411: if(ic_ptr->buffer[0] == 0xAA){
  7807  0005DE  0EAA               	movlw	170
  7808  0005E0  C050  FFD9         	movff	_ic_ptr,fsr2l
  7809  0005E4  C051  FFDA         	movff	_ic_ptr+1,fsr2h
  7810  0005E8  62DF               	cpfseq	indf2,c
  7811  0005EA  D037               	goto	i2l4375
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;my_i2c.c: 412: length = 3;
  7815  0005EC  0E00               	movlw	0
  7816  0005EE  0100               	movlb	0	; () banked
  7817  0005F0  0100               	movlb	0	; () banked
  7818  0005F2  6FCC               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  7819  0005F4  0E03               	movlw	3
  7820  0005F6  0100               	movlb	0	; () banked
  7821  0005F8  6FCB               	movwf	i2c_slave_int_handler@length& (0+255),b
  7822                           
  7823                           ; BSR set to: 0
  7824                           ;my_i2c.c: 413: unsigned char gatherAck[3] = {0x00, 0x01, 0x01};
  7825  0005FA  C0E0  F0A4         	movff	i2c_slave_int_handler@F5128,i2c_slave_int_handler@gatherAck
  7826  0005FE  C0E1  F0A5         	movff	i2c_slave_int_handler@F5128+1,i2c_slave_int_handler@gatherAck+1
  7827  000602  C0E2  F0A6         	movff	i2c_slave_int_handler@F5128+2,i2c_slave_int_handler@gatherAck+2
  7828                           
  7829                           ; BSR set to: 0
  7830                           ;my_i2c.c: 414: start_i2c_slave_reply(length, gatherAck);
  7831  000606  0100               	movlb	0	; () banked
  7832  000608  0E00               	movlw	high i2c_slave_int_handler@gatherAck
  7833  00060A  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  7834  00060C  0100               	movlb	0	; () banked
  7835  00060E  0EA4               	movlw	low i2c_slave_int_handler@gatherAck
  7836  000610  6E2D               	movwf	start_i2c_slave_reply@msg,c
  7837  000612  0100               	movlb	0	; () banked
  7838  000614  0100               	movlb	0	; () banked
  7839  000616  51CB               	movf	i2c_slave_int_handler@length& (0+255),w,b
  7840  000618  ECF5  F008         	call	_start_i2c_slave_reply
  7841                           
  7842                           ;my_i2c.c: 415: unsigned char reply[5] = {0xAA, 0x00, 0x00, 0x00, 0x00};
  7843  00061C  EE20  F0DB         	lfsr	2,i2c_slave_int_handler@F5130
  7844  000620  EE10  F09F         	lfsr	1,i2c_slave_int_handler@reply
  7845  000624  0E05               	movlw	5
  7846  000626                     i2u352_41:
  7847  000626  CFDE FFE6          	movff	postinc2,postinc1
  7848  00062A  2EE8               	decfsz	wreg,f,c
  7849  00062C  D7FC               	goto	i2u352_41
  7850                           
  7851                           ;my_i2c.c: 416: ToMainHigh_sendmsg(5, 32, reply);
  7852  00062E  0100               	movlb	0	; () banked
  7853  000630  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  7854  000632  0E20               	movlw	32
  7855  000634  0100               	movlb	0	; () banked
  7856  000636  0100               	movlb	0	; () banked
  7857  000638  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7858  00063A  0100               	movlb	0	; () banked
  7859  00063C  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  7860  00063E  0100               	movlb	0	; () banked
  7861  000640  0E00               	movlw	high i2c_slave_int_handler@reply
  7862  000642  0100               	movlb	0	; () banked
  7863  000644  0100               	movlb	0	; () banked
  7864  000646  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7865  000648  0100               	movlb	0	; () banked
  7866  00064A  0E9F               	movlw	low i2c_slave_int_handler@reply
  7867  00064C  0100               	movlb	0	; () banked
  7868  00064E  0100               	movlb	0	; () banked
  7869  000650  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7870  000652  0E05               	movlw	5
  7871  000654  EC7B  F00F         	call	_ToMainHigh_sendmsg
  7872                           
  7873                           ;my_i2c.c: 417: } else if(ic_ptr->buffer[0] == 0xAB){
  7874  000658  D0DF               	goto	i2l4421
  7875  00065A                     i2l4375:
  7876  00065A  0EAB               	movlw	171
  7877  00065C  C050  FFD9         	movff	_ic_ptr,fsr2l
  7878  000660  C051  FFDA         	movff	_ic_ptr+1,fsr2h
  7879  000664  62DF               	cpfseq	indf2,c
  7880  000666  D050               	goto	i2l4393
  7881                           
  7882                           ;my_i2c.c: 418: int msgtype;
  7883                           ;my_i2c.c: 419: unsigned char sensorData[5];
  7884                           ;my_i2c.c: 420: unsigned char noData[5] = {0x00,0x00,0x00,0x00,0x00};
  7885  000668  EE20  F0E6         	lfsr	2,i2c_slave_int_handler@F5134
  7886  00066C  EE10  F0B4         	lfsr	1,i2c_slave_int_handler@noData
  7887  000670  0E05               	movlw	5
  7888  000672                     i2u354_41:
  7889  000672  CFDE FFE6          	movff	postinc2,postinc1
  7890  000676  2EE8               	decfsz	wreg,f,c
  7891  000678  D7FC               	goto	i2u354_41
  7892                           
  7893                           ;my_i2c.c: 421: length = FromMainLow_recvmsg(5, (unsigned char *)&msgtype, sensorData);
  7894  00067A  0100               	movlb	0	; () banked
  7895  00067C  0E00               	movlw	high i2c_slave_int_handler@msgtype
  7896  00067E  0100               	movlb	0	; () banked
  7897  000680  0100               	movlb	0	; () banked
  7898  000682  6F99               	movwf	(FromMainLow_recvmsg@msgtype+1)& (0+255),b
  7899  000684  0100               	movlb	0	; () banked
  7900  000686  0EC6               	movlw	low i2c_slave_int_handler@msgtype
  7901  000688  0100               	movlb	0	; () banked
  7902  00068A  0100               	movlb	0	; () banked
  7903  00068C  6F98               	movwf	FromMainLow_recvmsg@msgtype& (0+255),b
  7904  00068E  0100               	movlb	0	; () banked
  7905  000690  0E00               	movlw	high i2c_slave_int_handler@sensorData
  7906  000692  0100               	movlb	0	; () banked
  7907  000694  0100               	movlb	0	; () banked
  7908  000696  6F9B               	movwf	(FromMainLow_recvmsg@data+1)& (0+255),b
  7909  000698  0100               	movlb	0	; () banked
  7910  00069A  0EAA               	movlw	low i2c_slave_int_handler@sensorData
  7911  00069C  0100               	movlb	0	; () banked
  7912  00069E  0100               	movlb	0	; () banked
  7913  0006A0  6F9A               	movwf	FromMainLow_recvmsg@data& (0+255),b
  7914  0006A2  0E05               	movlw	5
  7915  0006A4  ECAD  F00E         	call	_FromMainLow_recvmsg
  7916  0006A8  0100               	movlb	0	; () banked
  7917  0006AA  0100               	movlb	0	; () banked
  7918  0006AC  6FCB               	movwf	i2c_slave_int_handler@length& (0+255),b
  7919  0006AE  0100               	movlb	0	; () banked
  7920  0006B0  6BCC               	clrf	(i2c_slave_int_handler@length+1)& (0+255),b
  7921  0006B2  0100               	movlb	0	; () banked
  7922  0006B4  BFCB               	btfsc	i2c_slave_int_handler@length& (0+255),7,b
  7923  0006B6  07CC               	decf	(i2c_slave_int_handler@length+1)& (0+255),f,b
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;my_i2c.c: 422: noData[1] = length;
  7927  0006B8  C0CB  F0B5         	movff	i2c_slave_int_handler@length,i2c_slave_int_handler@noData+1
  7928                           
  7929                           ; BSR set to: 0
  7930                           ;my_i2c.c: 423: noData[2] = msgtype;
  7931  0006BC  C0C6  F0B6         	movff	i2c_slave_int_handler@msgtype,i2c_slave_int_handler@noData+2
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;my_i2c.c: 424: if(length == 5 && msgtype == 31) {
  7935  0006C0  0100               	movlb	0	; () banked
  7936  0006C2  0100               	movlb	0	; () banked
  7937  0006C4  51CB               	movf	i2c_slave_int_handler@length& (0+255),w,b
  7938  0006C6  0A05               	xorlw	5
  7939  0006C8  11CC               	iorwf	(i2c_slave_int_handler@length+1)& (0+255),w,b
  7940  0006CA  A4D8               	btfss	status,2,c
  7941  0006CC  D013               	goto	i2l4391
  7942                           
  7943                           ; BSR set to: 0
  7944  0006CE  0100               	movlb	0	; () banked
  7945  0006D0  0100               	movlb	0	; () banked
  7946  0006D2  51C6               	movf	i2c_slave_int_handler@msgtype& (0+255),w,b
  7947  0006D4  0A1F               	xorlw	31
  7948  0006D6  11C7               	iorwf	(i2c_slave_int_handler@msgtype+1)& (0+255),w,b
  7949  0006D8  A4D8               	btfss	status,2,c
  7950  0006DA  D00C               	goto	i2l4391
  7951                           
  7952                           ; BSR set to: 0
  7953                           ;my_i2c.c: 425: start_i2c_slave_reply(length, sensorData);
  7954  0006DC  0100               	movlb	0	; () banked
  7955  0006DE  0E00               	movlw	high i2c_slave_int_handler@sensorData
  7956  0006E0  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  7957  0006E2  0100               	movlb	0	; () banked
  7958  0006E4  0EAA               	movlw	low i2c_slave_int_handler@sensorData
  7959  0006E6  6E2D               	movwf	start_i2c_slave_reply@msg,c
  7960  0006E8  0100               	movlb	0	; () banked
  7961  0006EA  0100               	movlb	0	; () banked
  7962  0006EC  51CB               	movf	i2c_slave_int_handler@length& (0+255),w,b
  7963  0006EE  ECF5  F008         	call	_start_i2c_slave_reply
  7964                           
  7965                           ;my_i2c.c: 426: } else {
  7966  0006F2  D092               	goto	i2l4421
  7967  0006F4                     i2l4391:
  7968                           
  7969                           ;my_i2c.c: 427: start_i2c_slave_reply(5, noData);
  7970  0006F4  0100               	movlb	0	; () banked
  7971  0006F6  0E00               	movlw	high i2c_slave_int_handler@noData
  7972  0006F8  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  7973  0006FA  0100               	movlb	0	; () banked
  7974  0006FC  0EB4               	movlw	low i2c_slave_int_handler@noData
  7975  0006FE  6E2D               	movwf	start_i2c_slave_reply@msg,c
  7976  000700  0E05               	movlw	5
  7977  000702  ECF5  F008         	call	_start_i2c_slave_reply
  7978  000706  D088               	goto	i2l4421
  7979  000708                     i2l4393:
  7980  000708  0EBA               	movlw	186
  7981  00070A  C050  FFD9         	movff	_ic_ptr,fsr2l
  7982  00070E  C051  FFDA         	movff	_ic_ptr+1,fsr2h
  7983  000712  62DF               	cpfseq	indf2,c
  7984  000714  D02A               	goto	i2l4403
  7985                           
  7986                           ;my_i2c.c: 430: length = 3;
  7987  000716  0E00               	movlw	0
  7988  000718  0100               	movlb	0	; () banked
  7989  00071A  0100               	movlb	0	; () banked
  7990  00071C  6FCC               	movwf	(i2c_slave_int_handler@length+1)& (0+255),b
  7991  00071E  0E03               	movlw	3
  7992  000720  0100               	movlb	0	; () banked
  7993  000722  6FCB               	movwf	i2c_slave_int_handler@length& (0+255),b
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;my_i2c.c: 431: unsigned char movecomAck[3] = {0x02, 0x01, 0x01};
  7997  000724  C0E3  F0A7         	movff	i2c_slave_int_handler@F5137,i2c_slave_int_handler@movecomAck
  7998  000728  C0E4  F0A8         	movff	i2c_slave_int_handler@F5137+1,i2c_slave_int_handler@movecomAck+1
  7999  00072C  C0E5  F0A9         	movff	i2c_slave_int_handler@F5137+2,i2c_slave_int_handler@movecomAck+2
  8000                           
  8001                           ; BSR set to: 0
  8002                           ;my_i2c.c: 432: start_i2c_slave_reply(length, movecomAck);
  8003  000730  0100               	movlb	0	; () banked
  8004  000732  0E00               	movlw	high i2c_slave_int_handler@movecomAck
  8005  000734  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  8006  000736  0100               	movlb	0	; () banked
  8007  000738  0EA7               	movlw	low i2c_slave_int_handler@movecomAck
  8008  00073A  6E2D               	movwf	start_i2c_slave_reply@msg,c
  8009  00073C  0100               	movlb	0	; () banked
  8010  00073E  0100               	movlb	0	; () banked
  8011  000740  51CB               	movf	i2c_slave_int_handler@length& (0+255),w,b
  8012  000742  ECF5  F008         	call	_start_i2c_slave_reply
  8013                           
  8014                           ;my_i2c.c: 433: ToMainHigh_sendmsg(5, 32, ic_ptr->buffer);
  8015  000746  0100               	movlb	0	; () banked
  8016  000748  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  8017  00074A  0E20               	movlw	32
  8018  00074C  0100               	movlb	0	; () banked
  8019  00074E  0100               	movlb	0	; () banked
  8020  000750  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8021  000752  0100               	movlb	0	; () banked
  8022  000754  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8023  000756  0100               	movlb	0	; () banked
  8024  000758  C051  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8025  00075C  0100               	movlb	0	; () banked
  8026  00075E  C050  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8027  000762  0E05               	movlw	5
  8028  000764  EC7B  F00F         	call	_ToMainHigh_sendmsg
  8029                           
  8030                           ;my_i2c.c: 434: } else if(ic_ptr->buffer[0] == 0xBB) {
  8031  000768  D057               	goto	i2l4421
  8032  00076A                     i2l4403:
  8033  00076A  0EBB               	movlw	187
  8034  00076C  C050  FFD9         	movff	_ic_ptr,fsr2l
  8035  000770  C051  FFDA         	movff	_ic_ptr+1,fsr2h
  8036  000774  62DF               	cpfseq	indf2,c
  8037  000776  D050               	goto	i2l4421
  8038                           
  8039                           ;my_i2c.c: 435: int msgtype;
  8040                           ;my_i2c.c: 436: unsigned char motorData[5];
  8041                           ;my_i2c.c: 437: unsigned char noData[5] = {0x00,0x00,0x00};
  8042  000778  EE20  F0EB         	lfsr	2,i2c_slave_int_handler@F5141
  8043  00077C  EE10  F0B9         	lfsr	1,i2c_slave_int_handler@noData_1511
  8044  000780  0E05               	movlw	5
  8045  000782                     i2u359_41:
  8046  000782  CFDE FFE6          	movff	postinc2,postinc1
  8047  000786  2EE8               	decfsz	wreg,f,c
  8048  000788  D7FC               	goto	i2u359_41
  8049                           
  8050                           ;my_i2c.c: 438: length = FromMainLow_recvmsg(5, (unsigned char *)&msgtype, motorData);
  8051  00078A  0100               	movlb	0	; () banked
  8052  00078C  0E00               	movlw	high i2c_slave_int_handler@msgtype_1508
  8053  00078E  0100               	movlb	0	; () banked
  8054  000790  0100               	movlb	0	; () banked
  8055  000792  6F99               	movwf	(FromMainLow_recvmsg@msgtype+1)& (0+255),b
  8056  000794  0100               	movlb	0	; () banked
  8057  000796  0EC8               	movlw	low i2c_slave_int_handler@msgtype_1508
  8058  000798  0100               	movlb	0	; () banked
  8059  00079A  0100               	movlb	0	; () banked
  8060  00079C  6F98               	movwf	FromMainLow_recvmsg@msgtype& (0+255),b
  8061  00079E  0100               	movlb	0	; () banked
  8062  0007A0  0E00               	movlw	high i2c_slave_int_handler@motorData
  8063  0007A2  0100               	movlb	0	; () banked
  8064  0007A4  0100               	movlb	0	; () banked
  8065  0007A6  6F9B               	movwf	(FromMainLow_recvmsg@data+1)& (0+255),b
  8066  0007A8  0100               	movlb	0	; () banked
  8067  0007AA  0EAF               	movlw	low i2c_slave_int_handler@motorData
  8068  0007AC  0100               	movlb	0	; () banked
  8069  0007AE  0100               	movlb	0	; () banked
  8070  0007B0  6F9A               	movwf	FromMainLow_recvmsg@data& (0+255),b
  8071  0007B2  0E05               	movlw	5
  8072  0007B4  ECAD  F00E         	call	_FromMainLow_recvmsg
  8073  0007B8  0100               	movlb	0	; () banked
  8074  0007BA  0100               	movlb	0	; () banked
  8075  0007BC  6FCB               	movwf	i2c_slave_int_handler@length& (0+255),b
  8076  0007BE  0100               	movlb	0	; () banked
  8077  0007C0  6BCC               	clrf	(i2c_slave_int_handler@length+1)& (0+255),b
  8078  0007C2  0100               	movlb	0	; () banked
  8079  0007C4  BFCB               	btfsc	i2c_slave_int_handler@length& (0+255),7,b
  8080  0007C6  07CC               	decf	(i2c_slave_int_handler@length+1)& (0+255),f,b
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;my_i2c.c: 439: noData[1] = length;
  8084  0007C8  C0CB  F0BA         	movff	i2c_slave_int_handler@length,i2c_slave_int_handler@noData_1511+1
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;my_i2c.c: 440: noData[2] = msgtype;
  8088  0007CC  C0C8  F0BB         	movff	i2c_slave_int_handler@msgtype_1508,i2c_slave_int_handler@noData_1511+2
  8089                           
  8090                           ; BSR set to: 0
  8091                           ;my_i2c.c: 441: if((length == 5) && (msgtype == 31))
  8092  0007D0  0100               	movlb	0	; () banked
  8093  0007D2  0100               	movlb	0	; () banked
  8094  0007D4  51CB               	movf	i2c_slave_int_handler@length& (0+255),w,b
  8095  0007D6  0A05               	xorlw	5
  8096  0007D8  11CC               	iorwf	(i2c_slave_int_handler@length+1)& (0+255),w,b
  8097  0007DA  A4D8               	btfss	status,2,c
  8098  0007DC  D014               	goto	i2l4419
  8099                           
  8100                           ; BSR set to: 0
  8101  0007DE  0100               	movlb	0	; () banked
  8102  0007E0  0100               	movlb	0	; () banked
  8103  0007E2  51C8               	movf	i2c_slave_int_handler@msgtype_1508& (0+255),w,b
  8104  0007E4  0A1F               	xorlw	31
  8105  0007E6  11C9               	iorwf	(i2c_slave_int_handler@msgtype_1508+1)& (0+255),w,b
  8106  0007E8  A4D8               	btfss	status,2,c
  8107  0007EA  D00D               	goto	i2l4419
  8108                           
  8109                           ; BSR set to: 0
  8110                           ;my_i2c.c: 442: start_i2c_slave_reply(length-2, motorData);
  8111  0007EC  0100               	movlb	0	; () banked
  8112  0007EE  0E00               	movlw	high i2c_slave_int_handler@motorData
  8113  0007F0  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  8114  0007F2  0100               	movlb	0	; () banked
  8115  0007F4  0EAF               	movlw	low i2c_slave_int_handler@motorData
  8116  0007F6  6E2D               	movwf	start_i2c_slave_reply@msg,c
  8117  0007F8  0100               	movlb	0	; () banked
  8118  0007FA  0100               	movlb	0	; () banked
  8119  0007FC  51CB               	movf	i2c_slave_int_handler@length& (0+255),w,b
  8120  0007FE  0FFE               	addlw	254
  8121  000800  ECF5  F008         	call	_start_i2c_slave_reply
  8122  000804  D009               	goto	i2l4421
  8123  000806                     i2l4419:
  8124                           
  8125                           ;my_i2c.c: 443: else
  8126                           ;my_i2c.c: 444: start_i2c_slave_reply(3, noData);
  8127  000806  0100               	movlb	0	; () banked
  8128  000808  0E00               	movlw	high i2c_slave_int_handler@noData_1511
  8129  00080A  6E2E               	movwf	start_i2c_slave_reply@msg+1,c
  8130  00080C  0100               	movlb	0	; () banked
  8131  00080E  0EB9               	movlw	low i2c_slave_int_handler@noData_1511
  8132  000810  6E2D               	movwf	start_i2c_slave_reply@msg,c
  8133  000812  0E03               	movlw	3
  8134  000814  ECF5  F008         	call	_start_i2c_slave_reply
  8135  000818                     i2l4421:
  8136                           
  8137                           ;my_i2c.c: 445: }
  8138                           ;my_i2c.c: 446: msg_to_send = 0;
  8139  000818  0100               	movlb	0	; () banked
  8140  00081A  6F9D               	movwf	??_i2c_slave_int_handler& (0+255),b
  8141  00081C  0E00               	movlw	0
  8142  00081E  0100               	movlb	0	; () banked
  8143  000820  0100               	movlb	0	; () banked
  8144  000822  6FC4               	movwf	i2c_slave_int_handler@msg_to_send& (0+255),b
  8145  000824  0100               	movlb	0	; () banked
  8146  000826  519D               	movf	??_i2c_slave_int_handler& (0+255),w,b
  8147  000828  0012               	return	
  8148  00082A                     __end_of_i2c_slave_int_handler:
  8149                           	opt stack 0
  8150                           pclatu	equ	0xFFB
  8151                           pclath	equ	0xFFA
  8152                           tblptru	equ	0xFF8
  8153                           tblptrh	equ	0xFF7
  8154                           tblptrl	equ	0xFF6
  8155                           tablat	equ	0xFF5
  8156                           prodh	equ	0xFF4
  8157                           prodl	equ	0xFF3
  8158                           intcon	equ	0xFF2
  8159                           postinc0	equ	0xFEE
  8160                           fsr0h	equ	0xFEA
  8161                           fsr0l	equ	0xFE9
  8162                           wreg	equ	0xFE8
  8163                           indf1	equ	0xFE7
  8164                           postinc1	equ	0xFE6
  8165                           postdec1	equ	0xFE5
  8166                           fsr1h	equ	0xFE2
  8167                           fsr1l	equ	0xFE1
  8168                           bsr	equ	0xFE0
  8169                           indf2	equ	0xFDF
  8170                           postinc2	equ	0xFDE
  8171                           postdec2	equ	0xFDD
  8172                           fsr2h	equ	0xFDA
  8173                           fsr2l	equ	0xFD9
  8174                           status	equ	0xFD8
  8175                           
  8176 ;; *************** function _start_i2c_slave_reply *****************
  8177 ;; Defined at:
  8178 ;;		line 92 in file "../src/my_i2c.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;  length          1    wreg     unsigned char 
  8181 ;;  msg             2   44[COMRAM] PTR unsigned char 
  8182 ;;		 -> i2c_slave_int_handler@motorData(5), i2c_slave_int_handler@noData_1511(5), i2c_slave_int_handler@movecomAck(3), i
      +2c_slave_int_handler@sensorData(5), 
  8183 ;;		 -> i2c_slave_int_handler@noData(5), i2c_slave_int_handler@gatherAck(3), 
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;  length          1   46[COMRAM] unsigned char 
  8186 ;; Return value:  Size  Location     Type
  8187 ;;		None               void
  8188 ;; Registers used:
  8189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8190 ;; Tracked objects:
  8191 ;;		On entry : 0/0
  8192 ;;		On exit  : 0/0
  8193 ;;		Unchanged: 0/0
  8194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8195 ;;      Params:         2       0       0       0       0
  8196 ;;      Locals:         1       0       0       0       0
  8197 ;;      Temps:          0       2       0       0       0
  8198 ;;      Totals:         3       2       0       0       0
  8199 ;;Total ram usage:        5 bytes
  8200 ;; Hardware stack levels used:    1
  8201 ;; This function calls:
  8202 ;;		Nothing
  8203 ;; This function is called by:
  8204 ;;		_i2c_slave_int_handler
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           	psect	text47
  8209  0011EA                     __ptext47:
  8210                           	opt stack 0
  8211  0011EA                     _start_i2c_slave_reply:
  8212                           	opt stack 18
  8213                           
  8214                           ; BSR set to: 0
  8215                           ;incstack = 0
  8216                           ;start_i2c_slave_reply@length stored from wreg
  8217  0011EA  CFE8 F02F          	movff	wreg,start_i2c_slave_reply@length
  8218                           
  8219                           ;my_i2c.c: 94: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  8220  0011EE  EE20 F01A          	lfsr	2,26
  8221  0011F2  5050               	movf	_ic_ptr,w,c
  8222  0011F4  26D9               	addwf	fsr2l,f,c
  8223  0011F6  5051               	movf	_ic_ptr+1,w,c
  8224  0011F8  22DA               	addwfc	fsr2h,f,c
  8225  0011FA  0E00               	movlw	0
  8226  0011FC  6EDF               	movwf	indf2,c
  8227  0011FE  D031               	goto	i2l4217
  8228  001200                     i2l4213:
  8229                           
  8230                           ;my_i2c.c: 95: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  8231  001200  EE20 F01A          	lfsr	2,26
  8232  001204  5050               	movf	_ic_ptr,w,c
  8233  001206  26D9               	addwf	fsr2l,f,c
  8234  001208  5051               	movf	_ic_ptr+1,w,c
  8235  00120A  22DA               	addwfc	fsr2h,f,c
  8236  00120C  50DF               	movf	indf2,w,c
  8237  00120E  0100               	movlb	0	; () banked
  8238  001210  6F80               	movwf	??_start_i2c_slave_reply& (0+255),b
  8239  001212  0100               	movlb	0	; () banked
  8240  001214  5180               	movf	??_start_i2c_slave_reply& (0+255),w,b
  8241  001216  0D01               	mullw	1
  8242  001218  50F3               	movf	prodl,w,c
  8243  00121A  242D               	addwf	start_i2c_slave_reply@msg,w,c
  8244  00121C  6ED9               	movwf	fsr2l,c
  8245  00121E  50F4               	movf	prodh,w,c
  8246  001220  202E               	addwfc	start_i2c_slave_reply@msg+1,w,c
  8247  001222  6EDA               	movwf	fsr2h,c
  8248  001224  EE10 F01A          	lfsr	1,26
  8249  001228  5050               	movf	_ic_ptr,w,c
  8250  00122A  26E1               	addwf	fsr1l,f,c
  8251  00122C  5051               	movf	_ic_ptr+1,w,c
  8252  00122E  22E2               	addwfc	fsr1h,f,c
  8253  001230  50E7               	movf	indf1,w,c
  8254  001232  0100               	movlb	0	; () banked
  8255  001234  6F81               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  8256  001236  0100               	movlb	0	; () banked
  8257  001238  5181               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  8258  00123A  0D01               	mullw	1
  8259  00123C  0E10               	movlw	16
  8260  00123E  26F3               	addwf	prodl,f,c
  8261  001240  0E00               	movlw	0
  8262  001242  22F4               	addwfc	prodh,f,c
  8263  001244  50F3               	movf	prodl,w,c
  8264  001246  2450               	addwf	_ic_ptr,w,c
  8265  001248  6EE1               	movwf	fsr1l,c
  8266  00124A  50F4               	movf	prodh,w,c
  8267  00124C  2051               	addwfc	_ic_ptr+1,w,c
  8268  00124E  6EE2               	movwf	fsr1h,c
  8269  001250  CFDF FFE7          	movff	indf2,indf1
  8270                           
  8271                           ; BSR set to: 0
  8272  001254  EE20 F01A          	lfsr	2,26
  8273  001258  5050               	movf	_ic_ptr,w,c
  8274  00125A  26D9               	addwf	fsr2l,f,c
  8275  00125C  5051               	movf	_ic_ptr+1,w,c
  8276  00125E  22DA               	addwfc	fsr2h,f,c
  8277  001260  2ADF               	incf	indf2,f,c
  8278  001262                     i2l4217:
  8279  001262  EE20 F01A          	lfsr	2,26
  8280  001266  5050               	movf	_ic_ptr,w,c
  8281  001268  26D9               	addwf	fsr2l,f,c
  8282  00126A  5051               	movf	_ic_ptr+1,w,c
  8283  00126C  22DA               	addwfc	fsr2h,f,c
  8284  00126E  50DF               	movf	indf2,w,c
  8285  001270  0100               	movlb	0	; () banked
  8286  001272  6F80               	movwf	??_start_i2c_slave_reply& (0+255),b
  8287  001274  502F               	movf	start_i2c_slave_reply@length,w,c
  8288  001276  0100               	movlb	0	; () banked
  8289  001278  5D80               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  8290  00127A  A0D8               	btfss	status,0,c
  8291  00127C  D7C1               	goto	i2l4213
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;my_i2c.c: 96: }
  8295                           ;my_i2c.c: 97: ic_ptr->outbuflen = length;
  8296                           
  8297                           ; BSR set to: 0
  8298  00127E  EE20 F01A          	lfsr	2,26
  8299  001282  5050               	movf	_ic_ptr,w,c
  8300  001284  26D9               	addwf	fsr2l,f,c
  8301  001286  5051               	movf	_ic_ptr+1,w,c
  8302  001288  22DA               	addwfc	fsr2h,f,c
  8303  00128A  C02F  FFDF         	movff	start_i2c_slave_reply@length,indf2
  8304                           
  8305                           ;my_i2c.c: 98: ic_ptr->outbufind = 1;
  8306  00128E  EE20 F01B          	lfsr	2,27
  8307  001292  5050               	movf	_ic_ptr,w,c
  8308  001294  26D9               	addwf	fsr2l,f,c
  8309  001296  5051               	movf	_ic_ptr+1,w,c
  8310  001298  22DA               	addwfc	fsr2h,f,c
  8311  00129A  0E01               	movlw	1
  8312  00129C  6EDF               	movwf	indf2,c
  8313                           
  8314                           ;my_i2c.c: 101: SSPBUF = ic_ptr->outbuffer[0];
  8315  00129E  EE20 F010          	lfsr	2,16
  8316  0012A2  5050               	movf	_ic_ptr,w,c
  8317  0012A4  26D9               	addwf	fsr2l,f,c
  8318  0012A6  5051               	movf	_ic_ptr+1,w,c
  8319  0012A8  22DA               	addwfc	fsr2h,f,c
  8320  0012AA  50DF               	movf	indf2,w,c
  8321  0012AC  6EC9               	movwf	4041,c	;volatile
  8322                           
  8323                           ; BSR set to: 0
  8324                           ;my_i2c.c: 104: SSPCON1bits.CKP = 1;
  8325  0012AE  88C6               	bsf	4038,4,c	;volatile
  8326                           
  8327                           ; BSR set to: 0
  8328  0012B0  0012               	return	
  8329  0012B2                     __end_of_start_i2c_slave_reply:
  8330                           	opt stack 0
  8331                           pclatu	equ	0xFFB
  8332                           pclath	equ	0xFFA
  8333                           tblptru	equ	0xFF8
  8334                           tblptrh	equ	0xFF7
  8335                           tblptrl	equ	0xFF6
  8336                           tablat	equ	0xFF5
  8337                           prodh	equ	0xFF4
  8338                           prodl	equ	0xFF3
  8339                           intcon	equ	0xFF2
  8340                           postinc0	equ	0xFEE
  8341                           fsr0h	equ	0xFEA
  8342                           fsr0l	equ	0xFE9
  8343                           wreg	equ	0xFE8
  8344                           indf1	equ	0xFE7
  8345                           postinc1	equ	0xFE6
  8346                           postdec1	equ	0xFE5
  8347                           fsr1h	equ	0xFE2
  8348                           fsr1l	equ	0xFE1
  8349                           bsr	equ	0xFE0
  8350                           indf2	equ	0xFDF
  8351                           postinc2	equ	0xFDE
  8352                           postdec2	equ	0xFDD
  8353                           fsr2h	equ	0xFDA
  8354                           fsr2l	equ	0xFD9
  8355                           status	equ	0xFD8
  8356                           
  8357 ;; *************** function _handle_start *****************
  8358 ;; Defined at:
  8359 ;;		line 110 in file "../src/my_i2c.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;  data_read       1    wreg     unsigned char 
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;  data_read       1   44[COMRAM] unsigned char 
  8364 ;; Return value:  Size  Location     Type
  8365 ;;		None               void
  8366 ;; Registers used:
  8367 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8368 ;; Tracked objects:
  8369 ;;		On entry : 0/0
  8370 ;;		On exit  : 0/0
  8371 ;;		Unchanged: 0/0
  8372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8373 ;;      Params:         0       0       0       0       0
  8374 ;;      Locals:         1       0       0       0       0
  8375 ;;      Temps:          0       0       0       0       0
  8376 ;;      Totals:         1       0       0       0       0
  8377 ;;Total ram usage:        1 bytes
  8378 ;; Hardware stack levels used:    1
  8379 ;; This function calls:
  8380 ;;		Nothing
  8381 ;; This function is called by:
  8382 ;;		_i2c_slave_int_handler
  8383 ;; This function uses a non-reentrant model
  8384 ;;
  8385                           
  8386                           	psect	text48
  8387  001582                     __ptext48:
  8388                           	opt stack 0
  8389  001582                     _handle_start:
  8390                           	opt stack 18
  8391                           
  8392                           ; BSR set to: 0
  8393                           ;incstack = 0
  8394                           ;handle_start@data_read stored from wreg
  8395  001582  CFE8 F02D          	movff	wreg,handle_start@data_read
  8396                           
  8397                           ;my_i2c.c: 111: ic_ptr->event_count = 1;
  8398  001586  EE20 F00C          	lfsr	2,12
  8399  00158A  5050               	movf	_ic_ptr,w,c
  8400  00158C  26D9               	addwf	fsr2l,f,c
  8401  00158E  5051               	movf	_ic_ptr+1,w,c
  8402  001590  22DA               	addwfc	fsr2h,f,c
  8403  001592  0E01               	movlw	1
  8404  001594  6EDF               	movwf	indf2,c
  8405                           
  8406                           ;my_i2c.c: 112: ic_ptr->buflen = 0;
  8407  001596  EE20 F00A          	lfsr	2,10
  8408  00159A  5050               	movf	_ic_ptr,w,c
  8409  00159C  26D9               	addwf	fsr2l,f,c
  8410  00159E  5051               	movf	_ic_ptr+1,w,c
  8411  0015A0  22DA               	addwfc	fsr2h,f,c
  8412  0015A2  0E00               	movlw	0
  8413  0015A4  6EDF               	movwf	indf2,c
  8414                           
  8415                           ;my_i2c.c: 114: if (data_read) {
  8416  0015A6  502D               	movf	handle_start@data_read,w,c
  8417  0015A8  B4D8               	btfsc	status,2,c
  8418  0015AA  D02E               	goto	i2l3147
  8419                           
  8420                           ;my_i2c.c: 115: if (SSPSTATbits.D_A == 1) {
  8421  0015AC  AAC7               	btfss	4039,5,c	;volatile
  8422  0015AE  D018               	goto	i2l293
  8423                           
  8424                           ;my_i2c.c: 118: ic_ptr->status = 0x5;
  8425  0015B0  EE20 F00D          	lfsr	2,13
  8426  0015B4  5050               	movf	_ic_ptr,w,c
  8427  0015B6  26D9               	addwf	fsr2l,f,c
  8428  0015B8  5051               	movf	_ic_ptr+1,w,c
  8429  0015BA  22DA               	addwfc	fsr2h,f,c
  8430  0015BC  0E05               	movlw	5
  8431  0015BE  6EDF               	movwf	indf2,c
  8432                           
  8433                           ;my_i2c.c: 119: ic_ptr->error_count++;
  8434  0015C0  EE20 F00F          	lfsr	2,15
  8435  0015C4  5050               	movf	_ic_ptr,w,c
  8436  0015C6  26D9               	addwf	fsr2l,f,c
  8437  0015C8  5051               	movf	_ic_ptr+1,w,c
  8438  0015CA  22DA               	addwfc	fsr2h,f,c
  8439  0015CC  2ADF               	incf	indf2,f,c
  8440                           
  8441                           ;my_i2c.c: 120: ic_ptr->error_code = 0x5;
  8442  0015CE  EE20 F00E          	lfsr	2,14
  8443  0015D2  5050               	movf	_ic_ptr,w,c
  8444  0015D4  26D9               	addwf	fsr2l,f,c
  8445  0015D6  5051               	movf	_ic_ptr+1,w,c
  8446  0015D8  22DA               	addwfc	fsr2h,f,c
  8447  0015DA  0E05               	movlw	5
  8448  0015DC  6EDF               	movwf	indf2,c
  8449                           
  8450                           ;my_i2c.c: 121: } else {
  8451  0015DE  0012               	return	
  8452  0015E0                     i2l293:
  8453                           
  8454                           ;my_i2c.c: 122: if (SSPSTATbits.R_W == 1) {
  8455  0015E0  A4C7               	btfss	4039,2,c	;volatile
  8456  0015E2  D009               	goto	i2l3145
  8457                           
  8458                           ;my_i2c.c: 123: ic_ptr->status = 0x8;
  8459  0015E4  EE20 F00D          	lfsr	2,13
  8460  0015E8  5050               	movf	_ic_ptr,w,c
  8461  0015EA  26D9               	addwf	fsr2l,f,c
  8462  0015EC  5051               	movf	_ic_ptr+1,w,c
  8463  0015EE  22DA               	addwfc	fsr2h,f,c
  8464  0015F0  0E08               	movlw	8
  8465  0015F2  6EDF               	movwf	indf2,c
  8466                           
  8467                           ;my_i2c.c: 124: } else {
  8468  0015F4  0012               	return	
  8469  0015F6                     i2l3145:
  8470                           
  8471                           ;my_i2c.c: 125: ic_ptr->status = 0x7;
  8472  0015F6  EE20 F00D          	lfsr	2,13
  8473  0015FA  5050               	movf	_ic_ptr,w,c
  8474  0015FC  26D9               	addwf	fsr2l,f,c
  8475  0015FE  5051               	movf	_ic_ptr+1,w,c
  8476  001600  22DA               	addwfc	fsr2h,f,c
  8477  001602  0E07               	movlw	7
  8478  001604  6EDF               	movwf	indf2,c
  8479  001606  0012               	return	
  8480  001608                     i2l3147:
  8481                           
  8482                           ;my_i2c.c: 129: ic_ptr->status = 0x6;
  8483  001608  EE20 F00D          	lfsr	2,13
  8484  00160C  5050               	movf	_ic_ptr,w,c
  8485  00160E  26D9               	addwf	fsr2l,f,c
  8486  001610  5051               	movf	_ic_ptr+1,w,c
  8487  001612  22DA               	addwfc	fsr2h,f,c
  8488  001614  0E06               	movlw	6
  8489  001616  6EDF               	movwf	indf2,c
  8490  001618  0012               	return	
  8491  00161A                     __end_of_handle_start:
  8492                           	opt stack 0
  8493                           pclatu	equ	0xFFB
  8494                           pclath	equ	0xFFA
  8495                           tblptru	equ	0xFF8
  8496                           tblptrh	equ	0xFF7
  8497                           tblptrl	equ	0xFF6
  8498                           tablat	equ	0xFF5
  8499                           prodh	equ	0xFF4
  8500                           prodl	equ	0xFF3
  8501                           intcon	equ	0xFF2
  8502                           postinc0	equ	0xFEE
  8503                           fsr0h	equ	0xFEA
  8504                           fsr0l	equ	0xFE9
  8505                           wreg	equ	0xFE8
  8506                           indf1	equ	0xFE7
  8507                           postinc1	equ	0xFE6
  8508                           postdec1	equ	0xFE5
  8509                           fsr1h	equ	0xFE2
  8510                           fsr1l	equ	0xFE1
  8511                           bsr	equ	0xFE0
  8512                           indf2	equ	0xFDF
  8513                           postinc2	equ	0xFDE
  8514                           postdec2	equ	0xFDD
  8515                           fsr2h	equ	0xFDA
  8516                           fsr2l	equ	0xFD9
  8517                           status	equ	0xFD8
  8518                           
  8519 ;; *************** function _ToMainHigh_sendmsg *****************
  8520 ;; Defined at:
  8521 ;;		line 126 in file "../src/messages.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;  length          1    wreg     unsigned char 
  8524 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8525 ;;  data            2   23[BANK0 ] PTR void 
  8526 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), main@ic(29), 
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;  length          1   25[BANK0 ] unsigned char 
  8529 ;; Return value:  Size  Location     Type
  8530 ;;                  1    wreg      char 
  8531 ;; Registers used:
  8532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8538 ;;      Params:         0       3       0       0       0
  8539 ;;      Locals:         0       1       0       0       0
  8540 ;;      Temps:          0       0       0       0       0
  8541 ;;      Totals:         0       4       0       0       0
  8542 ;;Total ram usage:        4 bytes
  8543 ;; Hardware stack levels used:    1
  8544 ;; Hardware stack levels required when called:    2
  8545 ;; This function calls:
  8546 ;;		i2_send_msg
  8547 ;; This function is called by:
  8548 ;;		_i2c_slave_int_handler
  8549 ;;		_i2c_master_int_handler
  8550 ;; This function uses a non-reentrant model
  8551 ;;
  8552                           
  8553                           	psect	text49
  8554  001EF6                     __ptext49:
  8555                           	opt stack 0
  8556  001EF6                     _ToMainHigh_sendmsg:
  8557                           	opt stack 16
  8558                           
  8559                           ;incstack = 0
  8560                           ;ToMainHigh_sendmsg@length stored from wreg
  8561  001EF6  CFE8 F099          	movff	wreg,ToMainHigh_sendmsg@length
  8562                           
  8563                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8564                           ;	Return value of _ToMainHigh_sendmsg is never used
  8565  001EFA  0101               	movlb	1	; () banked
  8566  001EFC  0E01               	movlw	high _ToMainHigh_MQ
  8567  001EFE  0100               	movlb	0	; () banked
  8568  001F00  0100               	movlb	0	; () banked
  8569  001F02  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8570  001F04  0101               	movlb	1	; () banked
  8571  001F06  0E00               	movlw	low _ToMainHigh_MQ
  8572  001F08  0100               	movlb	0	; () banked
  8573  001F0A  0100               	movlb	0	; () banked
  8574  001F0C  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  8575  001F0E  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8576  001F12  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8577  001F16  0100               	movlb	0	; () banked
  8578  001F18  0100               	movlb	0	; () banked
  8579  001F1A  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8580  001F1E  0100               	movlb	0	; () banked
  8581  001F20  0100               	movlb	0	; () banked
  8582  001F22  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8583  001F26  EC63  F007         	call	i2_send_msg	;wreg free
  8584  001F2A  0012               	return	
  8585  001F2C                     __end_of_ToMainHigh_sendmsg:
  8586                           	opt stack 0
  8587                           pclatu	equ	0xFFB
  8588                           pclath	equ	0xFFA
  8589                           tblptru	equ	0xFF8
  8590                           tblptrh	equ	0xFF7
  8591                           tblptrl	equ	0xFF6
  8592                           tablat	equ	0xFF5
  8593                           prodh	equ	0xFF4
  8594                           prodl	equ	0xFF3
  8595                           intcon	equ	0xFF2
  8596                           postinc0	equ	0xFEE
  8597                           fsr0h	equ	0xFEA
  8598                           fsr0l	equ	0xFE9
  8599                           wreg	equ	0xFE8
  8600                           indf1	equ	0xFE7
  8601                           postinc1	equ	0xFE6
  8602                           postdec1	equ	0xFE5
  8603                           fsr1h	equ	0xFE2
  8604                           fsr1l	equ	0xFE1
  8605                           bsr	equ	0xFE0
  8606                           indf2	equ	0xFDF
  8607                           postinc2	equ	0xFDE
  8608                           postdec2	equ	0xFDD
  8609                           fsr2h	equ	0xFDA
  8610                           fsr2l	equ	0xFD9
  8611                           status	equ	0xFD8
  8612                           
  8613 ;; *************** function i2_send_msg *****************
  8614 ;; Defined at:
  8615 ;;		line 24 in file "../src/messages.c"
  8616 ;; Parameters:    Size  Location     Type
  8617 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8618 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8619 ;;  length          1   12[BANK0 ] unsigned char 
  8620 ;;  msgtype         1   13[BANK0 ] unsigned char 
  8621 ;;  data            2   14[BANK0 ] PTR void 
  8622 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), 
  8623 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  8624 ;; Auto vars:     Size  Location     Type
  8625 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  8626 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8627 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8628 ;;  send_msg        2   17[BANK0 ] unsigned int 
  8629 ;;  send_msg        1   19[BANK0 ] unsigned char 
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  1    wreg      char 
  8632 ;; Registers used:
  8633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8639 ;;      Params:         0       6       0       0       0
  8640 ;;      Locals:         0       5       0       0       0
  8641 ;;      Temps:          0       1       0       0       0
  8642 ;;      Totals:         0      12       0       0       0
  8643 ;;Total ram usage:       12 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:    1
  8646 ;; This function calls:
  8647 ;;		i2___awmod
  8648 ;;		i2_memcpy
  8649 ;; This function is called by:
  8650 ;;		_ToMainHigh_sendmsg
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           	psect	text50
  8655  000EC6                     __ptext50:
  8656                           	opt stack 0
  8657  000EC6                     i2_send_msg:
  8658                           	opt stack 16
  8659                           
  8660                           ;messages.c: 25: unsigned char slot;
  8661                           ;messages.c: 27: msg *qmsg;
  8662                           ;messages.c: 28: size_t tlength = length;
  8663                           
  8664                           ;incstack = 0
  8665  000EC6  0100               	movlb	0	; () banked
  8666  000EC8  0100               	movlb	0	; () banked
  8667  000ECA  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  8668  000ECE  0100               	movlb	0	; () banked
  8669  000ED0  0100               	movlb	0	; () banked
  8670  000ED2  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8674  000ED4  0100               	movlb	0	; () banked
  8675  000ED6  EE20 F041          	lfsr	2,65
  8676  000EDA  0100               	movlb	0	; () banked
  8677  000EDC  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8678  000EDE  26D9               	addwf	fsr2l,f,c
  8679  000EE0  0100               	movlb	0	; () banked
  8680  000EE2  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8681  000EE4  22DA               	addwfc	fsr2h,f,c
  8682  000EE6  50DF               	movf	indf2,w,c
  8683  000EE8  0100               	movlb	0	; () banked
  8684  000EEA  0100               	movlb	0	; () banked
  8685  000EEC  6F93               	movwf	i2send_msg@slot& (0+255),b
  8686                           
  8687                           ; BSR set to: 0
  8688                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8689  000EEE  0100               	movlb	0	; () banked
  8690  000EF0  0100               	movlb	0	; () banked
  8691  000EF2  5193               	movf	i2send_msg@slot& (0+255),w,b
  8692  000EF4  0D0D               	mullw	13
  8693  000EF6  50F3               	movf	prodl,w,c
  8694  000EF8  0100               	movlb	0	; () banked
  8695  000EFA  0100               	movlb	0	; () banked
  8696  000EFC  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  8697  000EFE  0100               	movlb	0	; () banked
  8698  000F00  0100               	movlb	0	; () banked
  8699  000F02  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  8700  000F04  50F4               	movf	prodh,w,c
  8701  000F06  0100               	movlb	0	; () banked
  8702  000F08  0100               	movlb	0	; () banked
  8703  000F0A  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8704  000F0C  0100               	movlb	0	; () banked
  8705  000F0E  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8706                           
  8707                           ; BSR set to: 0
  8708                           ;messages.c: 41: if (qmsg->full != 0) {
  8709  000F10  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8710  000F14  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8711  000F18  50DF               	movf	indf2,w,c
  8712  000F1A  B4D8               	btfsc	status,2,c
  8713  000F1C  D002               	goto	i2l4573
  8714                           
  8715                           ; BSR set to: 0
  8716                           ;messages.c: 42: return (-1);
  8717  000F1E  0EFF               	movlw	255
  8718  000F20  0012               	return	
  8719  000F22                     i2l4573:
  8720                           
  8721                           ; BSR set to: 0
  8722                           ;messages.c: 43: }
  8723                           ;messages.c: 46: qmsg->length = length;
  8724  000F22  0100               	movlb	0	; () banked
  8725  000F24  EE20 F001          	lfsr	2,1
  8726  000F28  0100               	movlb	0	; () banked
  8727  000F2A  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8728  000F2C  26D9               	addwf	fsr2l,f,c
  8729  000F2E  0100               	movlb	0	; () banked
  8730  000F30  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8731  000F32  22DA               	addwfc	fsr2h,f,c
  8732  000F34  0100               	movlb	0	; () banked
  8733  000F36  C08C  FFDF         	movff	i2send_msg@length,indf2
  8734                           
  8735                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8736  000F3A  0100               	movlb	0	; () banked
  8737  000F3C  EE20 F002          	lfsr	2,2
  8738  000F40  0100               	movlb	0	; () banked
  8739  000F42  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  8740  000F44  26D9               	addwf	fsr2l,f,c
  8741  000F46  0100               	movlb	0	; () banked
  8742  000F48  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8743  000F4A  22DA               	addwfc	fsr2h,f,c
  8744  000F4C  0100               	movlb	0	; () banked
  8745  000F4E  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8749  000F52  0E03               	movlw	3
  8750  000F54  0100               	movlb	0	; () banked
  8751  000F56  0100               	movlb	0	; () banked
  8752  000F58  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  8753  000F5A  0100               	movlb	0	; () banked
  8754  000F5C  0100               	movlb	0	; () banked
  8755  000F5E  6F80               	movwf	i2memcpy@d1& (0+255),b
  8756  000F60  0E00               	movlw	0
  8757  000F62  0100               	movlb	0	; () banked
  8758  000F64  0100               	movlb	0	; () banked
  8759  000F66  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8760  000F68  0100               	movlb	0	; () banked
  8761  000F6A  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  8762  000F6C  0100               	movlb	0	; () banked
  8763  000F6E  0100               	movlb	0	; () banked
  8764  000F70  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8765  000F74  0100               	movlb	0	; () banked
  8766  000F76  0100               	movlb	0	; () banked
  8767  000F78  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  8768  000F7C  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  8769  000F80  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8770  000F84  ECA6  F00D         	call	i2_memcpy	;wreg free
  8771                           
  8772                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 5;
  8773  000F88  0100               	movlb	0	; () banked
  8774  000F8A  EE20 F041          	lfsr	2,65
  8775  000F8E  0100               	movlb	0	; () banked
  8776  000F90  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8777  000F92  26D9               	addwf	fsr2l,f,c
  8778  000F94  0100               	movlb	0	; () banked
  8779  000F96  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8780  000F98  22DA               	addwfc	fsr2h,f,c
  8781  000F9A  0100               	movlb	0	; () banked
  8782  000F9C  EE10 F041          	lfsr	1,65
  8783  000FA0  0100               	movlb	0	; () banked
  8784  000FA2  518A               	movf	i2send_msg@qptr& (0+255),w,b
  8785  000FA4  26E1               	addwf	fsr1l,f,c
  8786  000FA6  0100               	movlb	0	; () banked
  8787  000FA8  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8788  000FAA  22E2               	addwfc	fsr1h,f,c
  8789  000FAC  50E7               	movf	indf1,w,c
  8790  000FAE  0100               	movlb	0	; () banked
  8791  000FB0  6F90               	movwf	??i2_send_msg& (0+255),b
  8792  000FB2  0E01               	movlw	1
  8793  000FB4  0100               	movlb	0	; () banked
  8794  000FB6  2590               	addwf	??i2_send_msg& (0+255),w,b
  8795  000FB8  0100               	movlb	0	; () banked
  8796  000FBA  0100               	movlb	0	; () banked
  8797  000FBC  6F80               	movwf	i2___awmod@dividend& (0+255),b
  8798  000FBE  0100               	movlb	0	; () banked
  8799  000FC0  0100               	movlb	0	; () banked
  8800  000FC2  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  8801  000FC4  0E00               	movlw	0
  8802  000FC6  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  8803  000FC8  0E00               	movlw	0
  8804  000FCA  0100               	movlb	0	; () banked
  8805  000FCC  0100               	movlb	0	; () banked
  8806  000FCE  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  8807  000FD0  0E05               	movlw	5
  8808  000FD2  0100               	movlb	0	; () banked
  8809  000FD4  6F82               	movwf	i2___awmod@divisor& (0+255),b
  8810  000FD6  EC80  F008         	call	i2___awmod	;wreg free
  8811  000FDA  0100               	movlb	0	; () banked
  8812  000FDC  0100               	movlb	0	; () banked
  8813  000FDE  5180               	movf	?i2___awmod& (0+255),w,b
  8814  000FE0  6EDF               	movwf	indf2,c
  8815                           
  8816                           ; BSR set to: 0
  8817                           ;messages.c: 59: qmsg->full = 1;
  8818  000FE2  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8819  000FE6  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8820  000FEA  0E01               	movlw	1
  8821  000FEC  6EDF               	movwf	indf2,c
  8822                           
  8823                           ; BSR set to: 0
  8824                           ;messages.c: 60: return (1);
  8825  000FEE  0E01               	movlw	1
  8826  000FF0  0012               	return	
  8827  000FF2                     __end_ofi2_send_msg:
  8828                           	opt stack 0
  8829                           pclatu	equ	0xFFB
  8830                           pclath	equ	0xFFA
  8831                           tblptru	equ	0xFF8
  8832                           tblptrh	equ	0xFF7
  8833                           tblptrl	equ	0xFF6
  8834                           tablat	equ	0xFF5
  8835                           prodh	equ	0xFF4
  8836                           prodl	equ	0xFF3
  8837                           intcon	equ	0xFF2
  8838                           postinc0	equ	0xFEE
  8839                           fsr0h	equ	0xFEA
  8840                           fsr0l	equ	0xFE9
  8841                           wreg	equ	0xFE8
  8842                           indf1	equ	0xFE7
  8843                           postinc1	equ	0xFE6
  8844                           postdec1	equ	0xFE5
  8845                           fsr1h	equ	0xFE2
  8846                           fsr1l	equ	0xFE1
  8847                           bsr	equ	0xFE0
  8848                           indf2	equ	0xFDF
  8849                           postinc2	equ	0xFDE
  8850                           postdec2	equ	0xFDD
  8851                           fsr2h	equ	0xFDA
  8852                           fsr2l	equ	0xFD9
  8853                           status	equ	0xFD8
  8854                           
  8855 ;; *************** function _FromMainLow_recvmsg *****************
  8856 ;; Defined at:
  8857 ;;		line 159 in file "../src/messages.c"
  8858 ;; Parameters:    Size  Location     Type
  8859 ;;  maxlength       1    wreg     unsigned char 
  8860 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  8861 ;;		 -> i2c_slave_int_handler@msgtype_1508(2), i2c_slave_int_handler@msgtype(2), 
  8862 ;;  data            2   26[BANK0 ] PTR void 
  8863 ;;		 -> i2c_slave_int_handler@motorData(5), i2c_slave_int_handler@sensorData(5), 
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;  maxlength       1   28[BANK0 ] unsigned char 
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  1    wreg      char 
  8868 ;; Registers used:
  8869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8870 ;; Tracked objects:
  8871 ;;		On entry : 0/0
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8875 ;;      Params:         0       4       0       0       0
  8876 ;;      Locals:         0       1       0       0       0
  8877 ;;      Temps:          0       0       0       0       0
  8878 ;;      Totals:         0       5       0       0       0
  8879 ;;Total ram usage:        5 bytes
  8880 ;; Hardware stack levels used:    1
  8881 ;; Hardware stack levels required when called:    2
  8882 ;; This function calls:
  8883 ;;		i2_recv_msg
  8884 ;; This function is called by:
  8885 ;;		_i2c_slave_int_handler
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           
  8889                           	psect	text51
  8890  001D5A                     __ptext51:
  8891                           	opt stack 0
  8892  001D5A                     _FromMainLow_recvmsg:
  8893                           	opt stack 16
  8894                           
  8895                           ; BSR set to: 0
  8896                           ;incstack = 0
  8897                           ;FromMainLow_recvmsg@maxlength stored from wreg
  8898  001D5A  CFE8 F09C          	movff	wreg,FromMainLow_recvmsg@maxlength
  8899                           
  8900                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  8901  001D5E  0102               	movlb	2	; () banked
  8902  001D60  0E02               	movlw	high _FromMainLow_MQ
  8903  001D62  0100               	movlb	0	; () banked
  8904  001D64  0100               	movlb	0	; () banked
  8905  001D66  6F8B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  8906  001D68  0102               	movlb	2	; () banked
  8907  001D6A  0E43               	movlw	low _FromMainLow_MQ
  8908  001D6C  0100               	movlb	0	; () banked
  8909  001D6E  0100               	movlb	0	; () banked
  8910  001D70  6F8A               	movwf	i2recv_msg@qptr& (0+255),b
  8911  001D72  C09C  F08C         	movff	FromMainLow_recvmsg@maxlength,i2recv_msg@maxlength
  8912  001D76  0100               	movlb	0	; () banked
  8913  001D78  0100               	movlb	0	; () banked
  8914  001D7A  C099  F08E         	movff	FromMainLow_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  8915  001D7E  0100               	movlb	0	; () banked
  8916  001D80  0100               	movlb	0	; () banked
  8917  001D82  C098  F08D         	movff	FromMainLow_recvmsg@msgtype,i2recv_msg@msgtype
  8918  001D86  0100               	movlb	0	; () banked
  8919  001D88  0100               	movlb	0	; () banked
  8920  001D8A  C09B  F090         	movff	FromMainLow_recvmsg@data+1,i2recv_msg@data+1
  8921  001D8E  0100               	movlb	0	; () banked
  8922  001D90  0100               	movlb	0	; () banked
  8923  001D92  C09A  F08F         	movff	FromMainLow_recvmsg@data,i2recv_msg@data
  8924  001D96  EC1E  F006         	call	i2_recv_msg	;wreg free
  8925  001D9A  0012               	return	
  8926  001D9C                     __end_of_FromMainLow_recvmsg:
  8927                           	opt stack 0
  8928                           pclatu	equ	0xFFB
  8929                           pclath	equ	0xFFA
  8930                           tblptru	equ	0xFF8
  8931                           tblptrh	equ	0xFF7
  8932                           tblptrl	equ	0xFF6
  8933                           tablat	equ	0xFF5
  8934                           prodh	equ	0xFF4
  8935                           prodl	equ	0xFF3
  8936                           intcon	equ	0xFF2
  8937                           postinc0	equ	0xFEE
  8938                           fsr0h	equ	0xFEA
  8939                           fsr0l	equ	0xFE9
  8940                           wreg	equ	0xFE8
  8941                           indf1	equ	0xFE7
  8942                           postinc1	equ	0xFE6
  8943                           postdec1	equ	0xFE5
  8944                           fsr1h	equ	0xFE2
  8945                           fsr1l	equ	0xFE1
  8946                           bsr	equ	0xFE0
  8947                           indf2	equ	0xFDF
  8948                           postinc2	equ	0xFDE
  8949                           postdec2	equ	0xFDD
  8950                           fsr2h	equ	0xFDA
  8951                           fsr2l	equ	0xFD9
  8952                           status	equ	0xFD8
  8953                           
  8954 ;; *************** function i2_recv_msg *****************
  8955 ;; Defined at:
  8956 ;;		line 63 in file "../src/messages.c"
  8957 ;; Parameters:    Size  Location     Type
  8958 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  8959 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8960 ;;  maxlength       1   12[BANK0 ] unsigned char 
  8961 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  8962 ;;		 -> i2c_slave_int_handler@msgtype_1508(2), i2c_slave_int_handler@msgtype(2), main@msgtype(1), 
  8963 ;;  data            2   15[BANK0 ] PTR void 
  8964 ;;		 -> i2c_slave_int_handler@motorData(5), i2c_slave_int_handler@sensorData(5), main@msgbuffer(11), 
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  8967 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  8968 ;;		 -> FromMainHigh_MQ(67), FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  8969 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  8970 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  8971 ;; Return value:  Size  Location     Type
  8972 ;;                  1    wreg      char 
  8973 ;; Registers used:
  8974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8975 ;; Tracked objects:
  8976 ;;		On entry : 0/0
  8977 ;;		On exit  : 0/0
  8978 ;;		Unchanged: 0/0
  8979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8980 ;;      Params:         0       7       0       0       0
  8981 ;;      Locals:         0       5       0       0       0
  8982 ;;      Temps:          0       2       0       0       0
  8983 ;;      Totals:         0      14       0       0       0
  8984 ;;Total ram usage:       14 bytes
  8985 ;; Hardware stack levels used:    1
  8986 ;; Hardware stack levels required when called:    1
  8987 ;; This function calls:
  8988 ;;		i2___awmod
  8989 ;;		i2_memcpy
  8990 ;; This function is called by:
  8991 ;;		_FromMainLow_recvmsg
  8992 ;; This function uses a non-reentrant model
  8993 ;;
  8994                           
  8995                           	psect	text52
  8996  000C3C                     __ptext52:
  8997                           	opt stack 0
  8998  000C3C                     i2_recv_msg:
  8999                           	opt stack 16
  9000                           
  9001                           ;messages.c: 64: unsigned char slot;
  9002                           ;messages.c: 68: msg *qmsg;
  9003                           ;messages.c: 69: size_t tlength;
  9004                           ;messages.c: 72: slot = qptr->cur_read_ind;
  9005                           
  9006                           ;incstack = 0
  9007  000C3C  0100               	movlb	0	; () banked
  9008  000C3E  EE20 F042          	lfsr	2,66
  9009  000C42  0100               	movlb	0	; () banked
  9010  000C44  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  9011  000C46  26D9               	addwf	fsr2l,f,c
  9012  000C48  0100               	movlb	0	; () banked
  9013  000C4A  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9014  000C4C  22DA               	addwfc	fsr2h,f,c
  9015  000C4E  50DF               	movf	indf2,w,c
  9016  000C50  0100               	movlb	0	; () banked
  9017  000C52  0100               	movlb	0	; () banked
  9018  000C54  6F93               	movwf	i2recv_msg@slot& (0+255),b
  9019                           
  9020                           ; BSR set to: 0
  9021                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  9022  000C56  0100               	movlb	0	; () banked
  9023  000C58  0100               	movlb	0	; () banked
  9024  000C5A  5193               	movf	i2recv_msg@slot& (0+255),w,b
  9025  000C5C  0D0D               	mullw	13
  9026  000C5E  50F3               	movf	prodl,w,c
  9027  000C60  0100               	movlb	0	; () banked
  9028  000C62  0100               	movlb	0	; () banked
  9029  000C64  258A               	addwf	i2recv_msg@qptr& (0+255),w,b
  9030  000C66  0100               	movlb	0	; () banked
  9031  000C68  0100               	movlb	0	; () banked
  9032  000C6A  6F96               	movwf	i2recv_msg@qmsg& (0+255),b
  9033  000C6C  50F4               	movf	prodh,w,c
  9034  000C6E  0100               	movlb	0	; () banked
  9035  000C70  0100               	movlb	0	; () banked
  9036  000C72  218B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  9037  000C74  0100               	movlb	0	; () banked
  9038  000C76  6F97               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  9039                           
  9040                           ; BSR set to: 0
  9041                           ;messages.c: 74: if (qmsg->full == 1) {
  9042  000C78  0E01               	movlw	1
  9043  000C7A  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  9044  000C7E  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  9045  000C82  62DF               	cpfseq	indf2,c
  9046  000C84  D088               	goto	i2l4613
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;messages.c: 76: if (qmsg->length > maxlength) {
  9050  000C86  0100               	movlb	0	; () banked
  9051  000C88  EE20 F001          	lfsr	2,1
  9052  000C8C  0100               	movlb	0	; () banked
  9053  000C8E  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  9054  000C90  26D9               	addwf	fsr2l,f,c
  9055  000C92  0100               	movlb	0	; () banked
  9056  000C94  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9057  000C96  22DA               	addwfc	fsr2h,f,c
  9058  000C98  50DF               	movf	indf2,w,c
  9059  000C9A  0100               	movlb	0	; () banked
  9060  000C9C  0100               	movlb	0	; () banked
  9061  000C9E  5D8C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  9062  000CA0  B0D8               	btfsc	status,0,c
  9063  000CA2  D002               	goto	i2l4597
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;messages.c: 77: return (-3);
  9067  000CA4  0EFD               	movlw	253
  9068  000CA6  0012               	return	
  9069  000CA8                     i2l4597:
  9070                           
  9071                           ; BSR set to: 0
  9072                           ;messages.c: 78: }
  9073                           ;messages.c: 80: tlength = qmsg->length;
  9074  000CA8  0100               	movlb	0	; () banked
  9075  000CAA  EE20 F001          	lfsr	2,1
  9076  000CAE  0100               	movlb	0	; () banked
  9077  000CB0  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  9078  000CB2  26D9               	addwf	fsr2l,f,c
  9079  000CB4  0100               	movlb	0	; () banked
  9080  000CB6  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9081  000CB8  22DA               	addwfc	fsr2h,f,c
  9082  000CBA  50DF               	movf	indf2,w,c
  9083  000CBC  0100               	movlb	0	; () banked
  9084  000CBE  6F91               	movwf	??i2_recv_msg& (0+255),b
  9085  000CC0  0100               	movlb	0	; () banked
  9086  000CC2  5191               	movf	??i2_recv_msg& (0+255),w,b
  9087  000CC4  0100               	movlb	0	; () banked
  9088  000CC6  0100               	movlb	0	; () banked
  9089  000CC8  6F94               	movwf	i2recv_msg@tlength& (0+255),b
  9090  000CCA  0100               	movlb	0	; () banked
  9091  000CCC  6B95               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  9092                           
  9093                           ; BSR set to: 0
  9094                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  9095  000CCE  0100               	movlb	0	; () banked
  9096  000CD0  0100               	movlb	0	; () banked
  9097  000CD2  C090  F081         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  9098  000CD6  0100               	movlb	0	; () banked
  9099  000CD8  0100               	movlb	0	; () banked
  9100  000CDA  C08F  F080         	movff	i2recv_msg@data,i2memcpy@d1
  9101  000CDE  0E03               	movlw	3
  9102  000CE0  0100               	movlb	0	; () banked
  9103  000CE2  0100               	movlb	0	; () banked
  9104  000CE4  2596               	addwf	i2recv_msg@qmsg& (0+255),w,b
  9105  000CE6  0100               	movlb	0	; () banked
  9106  000CE8  6F91               	movwf	??i2_recv_msg& (0+255),b
  9107  000CEA  0E00               	movlw	0
  9108  000CEC  0100               	movlb	0	; () banked
  9109  000CEE  0100               	movlb	0	; () banked
  9110  000CF0  2197               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  9111  000CF2  0100               	movlb	0	; () banked
  9112  000CF4  6F92               	movwf	(??i2_recv_msg+1)& (0+255),b
  9113  000CF6  C091  F082         	movff	??i2_recv_msg,i2memcpy@s1
  9114  000CFA  C092  F083         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  9115  000CFE  C094  F084         	movff	i2recv_msg@tlength,i2memcpy@n
  9116  000D02  C095  F085         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  9117  000D06  ECA6  F00D         	call	i2_memcpy	;wreg free
  9118                           
  9119                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 5;
  9120  000D0A  0100               	movlb	0	; () banked
  9121  000D0C  EE20 F042          	lfsr	2,66
  9122  000D10  0100               	movlb	0	; () banked
  9123  000D12  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  9124  000D14  26D9               	addwf	fsr2l,f,c
  9125  000D16  0100               	movlb	0	; () banked
  9126  000D18  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9127  000D1A  22DA               	addwfc	fsr2h,f,c
  9128  000D1C  0100               	movlb	0	; () banked
  9129  000D1E  EE10 F042          	lfsr	1,66
  9130  000D22  0100               	movlb	0	; () banked
  9131  000D24  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  9132  000D26  26E1               	addwf	fsr1l,f,c
  9133  000D28  0100               	movlb	0	; () banked
  9134  000D2A  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  9135  000D2C  22E2               	addwfc	fsr1h,f,c
  9136  000D2E  50E7               	movf	indf1,w,c
  9137  000D30  0100               	movlb	0	; () banked
  9138  000D32  6F91               	movwf	??i2_recv_msg& (0+255),b
  9139  000D34  0E01               	movlw	1
  9140  000D36  0100               	movlb	0	; () banked
  9141  000D38  2591               	addwf	??i2_recv_msg& (0+255),w,b
  9142  000D3A  0100               	movlb	0	; () banked
  9143  000D3C  0100               	movlb	0	; () banked
  9144  000D3E  6F80               	movwf	i2___awmod@dividend& (0+255),b
  9145  000D40  0100               	movlb	0	; () banked
  9146  000D42  0100               	movlb	0	; () banked
  9147  000D44  6B81               	clrf	(i2___awmod@dividend+1)& (0+255),b
  9148  000D46  0E00               	movlw	0
  9149  000D48  2381               	addwfc	(i2___awmod@dividend+1)& (0+255),f,b
  9150  000D4A  0E00               	movlw	0
  9151  000D4C  0100               	movlb	0	; () banked
  9152  000D4E  0100               	movlb	0	; () banked
  9153  000D50  6F83               	movwf	(i2___awmod@divisor+1)& (0+255),b
  9154  000D52  0E05               	movlw	5
  9155  000D54  0100               	movlb	0	; () banked
  9156  000D56  6F82               	movwf	i2___awmod@divisor& (0+255),b
  9157  000D58  EC80  F008         	call	i2___awmod	;wreg free
  9158  000D5C  0100               	movlb	0	; () banked
  9159  000D5E  0100               	movlb	0	; () banked
  9160  000D60  5180               	movf	?i2___awmod& (0+255),w,b
  9161  000D62  6EDF               	movwf	indf2,c
  9162                           
  9163                           ; BSR set to: 0
  9164                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  9165  000D64  0100               	movlb	0	; () banked
  9166  000D66  EE20 F002          	lfsr	2,2
  9167  000D6A  0100               	movlb	0	; () banked
  9168  000D6C  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  9169  000D6E  26D9               	addwf	fsr2l,f,c
  9170  000D70  0100               	movlb	0	; () banked
  9171  000D72  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  9172  000D74  22DA               	addwfc	fsr2h,f,c
  9173  000D76  C08D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  9174  000D7A  C08E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  9175  000D7E  CFDF FFE7          	movff	indf2,indf1
  9176                           
  9177                           ; BSR set to: 0
  9178                           ;messages.c: 91: qmsg->full = 0;
  9179  000D82  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  9180  000D86  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  9181  000D8A  0E00               	movlw	0
  9182  000D8C  6EDF               	movwf	indf2,c
  9183                           
  9184                           ; BSR set to: 0
  9185                           ;messages.c: 92: return (tlength);
  9186  000D8E  0100               	movlb	0	; () banked
  9187  000D90  0100               	movlb	0	; () banked
  9188  000D92  5194               	movf	i2recv_msg@tlength& (0+255),w,b
  9189  000D94  0012               	return	
  9190  000D96                     i2l4613:
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;messages.c: 94: return (-4);
  9194  000D96  0EFC               	movlw	252
  9195  000D98  0012               	return	
  9196  000D9A                     __end_ofi2_recv_msg:
  9197                           	opt stack 0
  9198                           pclatu	equ	0xFFB
  9199                           pclath	equ	0xFFA
  9200                           tblptru	equ	0xFF8
  9201                           tblptrh	equ	0xFF7
  9202                           tblptrl	equ	0xFF6
  9203                           tablat	equ	0xFF5
  9204                           prodh	equ	0xFF4
  9205                           prodl	equ	0xFF3
  9206                           intcon	equ	0xFF2
  9207                           postinc0	equ	0xFEE
  9208                           fsr0h	equ	0xFEA
  9209                           fsr0l	equ	0xFE9
  9210                           wreg	equ	0xFE8
  9211                           indf1	equ	0xFE7
  9212                           postinc1	equ	0xFE6
  9213                           postdec1	equ	0xFE5
  9214                           fsr1h	equ	0xFE2
  9215                           fsr1l	equ	0xFE1
  9216                           bsr	equ	0xFE0
  9217                           indf2	equ	0xFDF
  9218                           postinc2	equ	0xFDE
  9219                           postdec2	equ	0xFDD
  9220                           fsr2h	equ	0xFDA
  9221                           fsr2l	equ	0xFD9
  9222                           status	equ	0xFD8
  9223                           
  9224 ;; *************** function i2_memcpy *****************
  9225 ;; Defined at:
  9226 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;  d1              2    0[BANK0 ] PTR void 
  9229 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  9230 ;;		 -> i2c_slave_int_handler@motorData(5), i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67)
      +, 
  9231 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  9232 ;;  s1              2    2[BANK0 ] PTR const void 
  9233 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9234 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9235 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  9236 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  9237 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  9238 ;;  n               2    4[BANK0 ] unsigned int 
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9241 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9242 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9243 ;;		 -> NULL(0), i2c_slave_int_handler@reply(5), i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(67), 
  9244 ;;		 -> FromMainLow_MQ(67), ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  9245 ;;		 -> main@t1thread_data(2), main@ic(29), main@uc(13), 
  9246 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9247 ;;		 -> FromMainLow_MQ.queue(65), FromMainHigh_MQ.queue(65), ToMainHigh_MQ.queue(65), ToMainLow_MQ.queue(65), 
  9248 ;;		 -> i2c_slave_int_handler@motorData(5), i2c_slave_int_handler@sensorData(5), FromMainHigh_MQ(67), FromMainLow_MQ(67)
      +, 
  9249 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), main@msgbuffer(11), 
  9250 ;; Return value:  Size  Location     Type
  9251 ;;                  2    0[BANK0 ] PTR void 
  9252 ;; Registers used:
  9253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9254 ;; Tracked objects:
  9255 ;;		On entry : 0/0
  9256 ;;		On exit  : 0/0
  9257 ;;		Unchanged: 0/0
  9258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9259 ;;      Params:         0       6       0       0       0
  9260 ;;      Locals:         0       4       0       0       0
  9261 ;;      Temps:          0       0       0       0       0
  9262 ;;      Totals:         0      10       0       0       0
  9263 ;;Total ram usage:       10 bytes
  9264 ;; Hardware stack levels used:    1
  9265 ;; This function calls:
  9266 ;;		Nothing
  9267 ;; This function is called by:
  9268 ;;		i2_send_msg
  9269 ;;		i2_recv_msg
  9270 ;; This function uses a non-reentrant model
  9271 ;;
  9272                           
  9273                           	psect	text53
  9274  001B4C                     __ptext53:
  9275                           	opt stack 0
  9276  001B4C                     i2_memcpy:
  9277                           	opt stack 16
  9278                           
  9279                           ; BSR set to: 0
  9280                           ;incstack = 0
  9281  001B4C  0100               	movlb	0	; () banked
  9282  001B4E  0100               	movlb	0	; () banked
  9283  001B50  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9284  001B54  0100               	movlb	0	; () banked
  9285  001B56  0100               	movlb	0	; () banked
  9286  001B58  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  9287  001B5C  0100               	movlb	0	; () banked
  9288  001B5E  0100               	movlb	0	; () banked
  9289  001B60  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9290  001B64  0100               	movlb	0	; () banked
  9291  001B66  0100               	movlb	0	; () banked
  9292  001B68  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  9293  001B6C  D012               	goto	i2l4625
  9294  001B6E                     i2l4619:
  9295                           
  9296                           ; BSR set to: 0
  9297  001B6E  C088  FFD9         	movff	i2memcpy@s,fsr2l
  9298  001B72  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  9299  001B76  C086  FFE1         	movff	i2memcpy@d,fsr1l
  9300  001B7A  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  9301  001B7E  CFDF FFE7          	movff	indf2,indf1
  9302                           
  9303                           ; BSR set to: 0
  9304  001B82  0100               	movlb	0	; () banked
  9305  001B84  0100               	movlb	0	; () banked
  9306  001B86  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  9307  001B88  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  9308                           
  9309                           ; BSR set to: 0
  9310  001B8A  0100               	movlb	0	; () banked
  9311  001B8C  0100               	movlb	0	; () banked
  9312  001B8E  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  9313  001B90  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  9314  001B92                     i2l4625:
  9315                           
  9316                           ; BSR set to: 0
  9317  001B92  0100               	movlb	0	; () banked
  9318  001B94  0100               	movlb	0	; () banked
  9319  001B96  0784               	decf	i2memcpy@n& (0+255),f,b
  9320  001B98  A0D8               	btfss	status,0,c
  9321  001B9A  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  9322  001B9C  0100               	movlb	0	; () banked
  9323  001B9E  2984               	incf	i2memcpy@n& (0+255),w,b
  9324  001BA0  B4D8               	btfsc	status,2,c
  9325  001BA2  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  9326  001BA4  B4D8               	btfsc	status,2,c
  9327                           
  9328                           ; BSR set to: 0
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;	Return value of i2_memcpy is never used
  9332  001BA6  0012               	return	
  9333  001BA8  D7E2               	goto	i2l4619
  9334  001BAA                     __end_ofi2_memcpy:
  9335                           	opt stack 0
  9336                           pclatu	equ	0xFFB
  9337                           pclath	equ	0xFFA
  9338                           tblptru	equ	0xFF8
  9339                           tblptrh	equ	0xFF7
  9340                           tblptrl	equ	0xFF6
  9341                           tablat	equ	0xFF5
  9342                           prodh	equ	0xFF4
  9343                           prodl	equ	0xFF3
  9344                           intcon	equ	0xFF2
  9345                           postinc0	equ	0xFEE
  9346                           fsr0h	equ	0xFEA
  9347                           fsr0l	equ	0xFE9
  9348                           wreg	equ	0xFE8
  9349                           indf1	equ	0xFE7
  9350                           postinc1	equ	0xFE6
  9351                           postdec1	equ	0xFE5
  9352                           fsr1h	equ	0xFE2
  9353                           fsr1l	equ	0xFE1
  9354                           bsr	equ	0xFE0
  9355                           indf2	equ	0xFDF
  9356                           postinc2	equ	0xFDE
  9357                           postdec2	equ	0xFDD
  9358                           fsr2h	equ	0xFDA
  9359                           fsr2l	equ	0xFD9
  9360                           status	equ	0xFD8
  9361                           
  9362 ;; *************** function i2___awmod *****************
  9363 ;; Defined at:
  9364 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\awmod.c"
  9365 ;; Parameters:    Size  Location     Type
  9366 ;;  dividend        2    0[BANK0 ] int 
  9367 ;;  divisor         2    2[BANK0 ] int 
  9368 ;; Auto vars:     Size  Location     Type
  9369 ;;  __awmod         1   46[COMRAM] unsigned char 
  9370 ;;  __awmod         1   45[COMRAM] unsigned char 
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  2    0[BANK0 ] int 
  9373 ;; Registers used:
  9374 ;;		wreg, status,2, status,0, prodl
  9375 ;; Tracked objects:
  9376 ;;		On entry : 0/0
  9377 ;;		On exit  : 0/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9380 ;;      Params:         0       4       0       0       0
  9381 ;;      Locals:         2       0       0       0       0
  9382 ;;      Temps:          1       0       0       0       0
  9383 ;;      Totals:         3       4       0       0       0
  9384 ;;Total ram usage:        7 bytes
  9385 ;; Hardware stack levels used:    1
  9386 ;; This function calls:
  9387 ;;		Nothing
  9388 ;; This function is called by:
  9389 ;;		i2_send_msg
  9390 ;;		i2_recv_msg
  9391 ;; This function uses a non-reentrant model
  9392 ;;
  9393                           
  9394                           	psect	text54
  9395  001100                     __ptext54:
  9396                           	opt stack 0
  9397  001100                     i2___awmod:
  9398                           	opt stack 16
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;incstack = 0
  9402  001100  6E2D               	movwf	??i2___awmod& (0+255),c
  9403  001102  0E00               	movlw	0
  9404  001104  6E2F               	movwf	i2___awmod@sign,c
  9405  001106  502D               	movf	??i2___awmod& (0+255),w,c
  9406  001108  0100               	movlb	0	; () banked
  9407  00110A  0100               	movlb	0	; () banked
  9408  00110C  5181               	movf	(i2___awmod@dividend+1)& (0+255),w,b
  9409  00110E  0A80               	xorlw	128
  9410  001110  6EF3               	movwf	prodl,c
  9411  001112  0E80               	movlw	128
  9412  001114  5CF3               	subwf	prodl,w,c
  9413  001116  0E00               	movlw	0
  9414  001118  B4D8               	btfsc	status,2,c
  9415  00111A  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9416  00111C  B0D8               	btfsc	status,0,c
  9417  00111E  D00B               	goto	i2l4635
  9418                           
  9419                           ; BSR set to: 0
  9420  001120  0100               	movlb	0	; () banked
  9421  001122  0100               	movlb	0	; () banked
  9422  001124  6D80               	negf	i2___awmod@dividend& (0+255),b
  9423  001126  0100               	movlb	0	; () banked
  9424  001128  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9425  00112A  B0D8               	btfsc	status,0,c
  9426  00112C  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9427                           
  9428                           ; BSR set to: 0
  9429  00112E  6E2D               	movwf	??i2___awmod& (0+255),c
  9430  001130  0E01               	movlw	1
  9431  001132  6E2F               	movwf	i2___awmod@sign,c
  9432  001134  502D               	movf	??i2___awmod& (0+255),w,c
  9433  001136                     i2l4635:
  9434                           
  9435                           ; BSR set to: 0
  9436  001136  0100               	movlb	0	; () banked
  9437  001138  0100               	movlb	0	; () banked
  9438  00113A  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9439  00113C  0A80               	xorlw	128
  9440  00113E  6EF3               	movwf	prodl,c
  9441  001140  0E80               	movlw	128
  9442  001142  5CF3               	subwf	prodl,w,c
  9443  001144  0E00               	movlw	0
  9444  001146  B4D8               	btfsc	status,2,c
  9445  001148  5D82               	subwf	i2___awmod@divisor& (0+255),w,b
  9446  00114A  B0D8               	btfsc	status,0,c
  9447  00114C  D007               	goto	i2l4639
  9448                           
  9449                           ; BSR set to: 0
  9450  00114E  0100               	movlb	0	; () banked
  9451  001150  0100               	movlb	0	; () banked
  9452  001152  6D82               	negf	i2___awmod@divisor& (0+255),b
  9453  001154  0100               	movlb	0	; () banked
  9454  001156  1F83               	comf	(i2___awmod@divisor+1)& (0+255),f,b
  9455  001158  B0D8               	btfsc	status,0,c
  9456  00115A  2B83               	incf	(i2___awmod@divisor+1)& (0+255),f,b
  9457  00115C                     i2l4639:
  9458                           
  9459                           ; BSR set to: 0
  9460  00115C  0100               	movlb	0	; () banked
  9461  00115E  0100               	movlb	0	; () banked
  9462  001160  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9463  001162  1182               	iorwf	i2___awmod@divisor& (0+255),w,b
  9464  001164  B4D8               	btfsc	status,2,c
  9465  001166  D032               	goto	i2l4655
  9466                           
  9467                           ; BSR set to: 0
  9468  001168  6E2D               	movwf	??i2___awmod& (0+255),c
  9469  00116A  0E01               	movlw	1
  9470  00116C  6E2E               	movwf	i2___awmod@counter,c
  9471  00116E  502D               	movf	??i2___awmod& (0+255),w,c
  9472  001170  D007               	goto	i2l4645
  9473  001172                     i2l4643:
  9474                           
  9475                           ; BSR set to: 0
  9476  001172  0100               	movlb	0	; () banked
  9477  001174  0100               	movlb	0	; () banked
  9478  001176  0100               	movlb	0	; () banked
  9479  001178  90D8               	bcf	status,0,c
  9480  00117A  3782               	rlcf	i2___awmod@divisor& (0+255),f,b
  9481  00117C  3783               	rlcf	(i2___awmod@divisor+1)& (0+255),f,b
  9482  00117E  2A2E               	incf	i2___awmod@counter,f,c
  9483  001180                     i2l4645:
  9484                           
  9485                           ; BSR set to: 0
  9486  001180  0100               	movlb	0	; () banked
  9487  001182  0100               	movlb	0	; () banked
  9488  001184  AF83               	btfss	(i2___awmod@divisor+1)& (0+255),7,b
  9489  001186  D7F5               	goto	i2l4643
  9490  001188                     i2l4647:
  9491                           
  9492                           ; BSR set to: 0
  9493  001188  0100               	movlb	0	; () banked
  9494  00118A  0100               	movlb	0	; () banked
  9495  00118C  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9496  00118E  0100               	movlb	0	; () banked
  9497  001190  0100               	movlb	0	; () banked
  9498  001192  5D80               	subwf	i2___awmod@dividend& (0+255),w,b
  9499  001194  0100               	movlb	0	; () banked
  9500  001196  0100               	movlb	0	; () banked
  9501  001198  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9502  00119A  0100               	movlb	0	; () banked
  9503  00119C  0100               	movlb	0	; () banked
  9504  00119E  5981               	subwfb	(i2___awmod@dividend+1)& (0+255),w,b
  9505  0011A0  A0D8               	btfss	status,0,c
  9506  0011A2  D00C               	goto	i2l4651
  9507                           
  9508                           ; BSR set to: 0
  9509  0011A4  0100               	movlb	0	; () banked
  9510  0011A6  0100               	movlb	0	; () banked
  9511  0011A8  5182               	movf	i2___awmod@divisor& (0+255),w,b
  9512  0011AA  0100               	movlb	0	; () banked
  9513  0011AC  0100               	movlb	0	; () banked
  9514  0011AE  5F80               	subwf	i2___awmod@dividend& (0+255),f,b
  9515  0011B0  0100               	movlb	0	; () banked
  9516  0011B2  0100               	movlb	0	; () banked
  9517  0011B4  5183               	movf	(i2___awmod@divisor+1)& (0+255),w,b
  9518  0011B6  0100               	movlb	0	; () banked
  9519  0011B8  0100               	movlb	0	; () banked
  9520  0011BA  5B81               	subwfb	(i2___awmod@dividend+1)& (0+255),f,b
  9521  0011BC                     i2l4651:
  9522                           
  9523                           ; BSR set to: 0
  9524  0011BC  0100               	movlb	0	; () banked
  9525  0011BE  0100               	movlb	0	; () banked
  9526  0011C0  0100               	movlb	0	; () banked
  9527  0011C2  90D8               	bcf	status,0,c
  9528  0011C4  3383               	rrcf	(i2___awmod@divisor+1)& (0+255),f,b
  9529  0011C6  3382               	rrcf	i2___awmod@divisor& (0+255),f,b
  9530                           
  9531                           ; BSR set to: 0
  9532  0011C8  2E2E               	decfsz	i2___awmod@counter,f,c
  9533  0011CA  D7DE               	goto	i2l4647
  9534  0011CC                     i2l4655:
  9535                           
  9536                           ; BSR set to: 0
  9537  0011CC  502F               	movf	i2___awmod@sign,w,c
  9538  0011CE  B4D8               	btfsc	status,2,c
  9539  0011D0  D007               	goto	i2l4659
  9540                           
  9541                           ; BSR set to: 0
  9542  0011D2  0100               	movlb	0	; () banked
  9543  0011D4  0100               	movlb	0	; () banked
  9544  0011D6  6D80               	negf	i2___awmod@dividend& (0+255),b
  9545  0011D8  0100               	movlb	0	; () banked
  9546  0011DA  1F81               	comf	(i2___awmod@dividend+1)& (0+255),f,b
  9547  0011DC  B0D8               	btfsc	status,0,c
  9548  0011DE  2B81               	incf	(i2___awmod@dividend+1)& (0+255),f,b
  9549  0011E0                     i2l4659:
  9550                           
  9551                           ; BSR set to: 0
  9552  0011E0  C080  F080         	movff	i2___awmod@dividend,?i2___awmod
  9553  0011E4  C081  F081         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9554  0011E8  0012               	return	
  9555  0011EA                     __end_ofi2___awmod:
  9556                           	opt stack 0
  9557                           pclatu	equ	0xFFB
  9558                           pclath	equ	0xFFA
  9559                           tblptru	equ	0xFF8
  9560                           tblptrh	equ	0xFF7
  9561                           tblptrl	equ	0xFF6
  9562                           tablat	equ	0xFF5
  9563                           prodh	equ	0xFF4
  9564                           prodl	equ	0xFF3
  9565                           intcon	equ	0xFF2
  9566                           postinc0	equ	0xFEE
  9567                           fsr0h	equ	0xFEA
  9568                           fsr0l	equ	0xFE9
  9569                           wreg	equ	0xFE8
  9570                           indf1	equ	0xFE7
  9571                           postinc1	equ	0xFE6
  9572                           postdec1	equ	0xFE5
  9573                           fsr1h	equ	0xFE2
  9574                           fsr1l	equ	0xFE1
  9575                           bsr	equ	0xFE0
  9576                           indf2	equ	0xFDF
  9577                           postinc2	equ	0xFDE
  9578                           postdec2	equ	0xFDD
  9579                           fsr2h	equ	0xFDA
  9580                           fsr2l	equ	0xFD9
  9581                           status	equ	0xFD8
  9582                           
  9583 ;; *************** function _SleepIfOkay *****************
  9584 ;; Defined at:
  9585 ;;		line 228 in file "../src/messages.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;		None
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;		None
  9590 ;; Return value:  Size  Location     Type
  9591 ;;		None               void
  9592 ;; Registers used:
  9593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9599 ;;      Params:         0       0       0       0       0
  9600 ;;      Locals:         0       0       0       0       0
  9601 ;;      Temps:          0       0       0       0       0
  9602 ;;      Totals:         0       0       0       0       0
  9603 ;;Total ram usage:        0 bytes
  9604 ;; Hardware stack levels used:    1
  9605 ;; Hardware stack levels required when called:    2
  9606 ;; This function calls:
  9607 ;;		_enter_sleep_mode
  9608 ;;		i2_check_msg
  9609 ;;		i2_in_high_int
  9610 ;;		i2_in_low_int
  9611 ;; This function is called by:
  9612 ;;		_InterruptHandlerHigh
  9613 ;; This function uses a non-reentrant model
  9614 ;;
  9615                           
  9616                           	psect	text55
  9617  001BAA                     __ptext55:
  9618                           	opt stack 0
  9619  001BAA                     _SleepIfOkay:
  9620                           	opt stack 18
  9621                           
  9622                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  9623                           
  9624                           ; BSR set to: 0
  9625                           ;incstack = 0
  9626  001BAA  664E               	tstfsz	_MQ_Main_Willing_to_block,c
  9627  001BAC  D001               	goto	i2l3807
  9628  001BAE  0012               	return	
  9629  001BB0                     i2l3807:
  9630                           
  9631                           ;messages.c: 232: }
  9632                           ;messages.c: 235: if (in_low_int()) {
  9633  001BB0  ECEE  F00E         	call	i2_in_low_int	;wreg free
  9634  001BB4  0100               	movlb	0	; () banked
  9635  001BB6  0100               	movlb	0	; () banked
  9636  001BB8  5181               	movf	(?i2_in_low_int+1)& (0+255),w,b
  9637  001BBA  0100               	movlb	0	; () banked
  9638  001BBC  1180               	iorwf	?i2_in_low_int& (0+255),w,b
  9639  001BBE  A4D8               	btfss	status,2,c
  9640  001BC0  0012               	return	
  9641                           
  9642                           ; BSR set to: 0
  9643                           ;messages.c: 237: }
  9644                           ;messages.c: 240: if (!in_high_int()) {
  9645                           
  9646                           ; BSR set to: 0
  9647                           
  9648                           ; BSR set to: 0
  9649                           ;messages.c: 236: return;
  9650  001BC2  EC6B  F010         	call	i2_in_high_int	;wreg free
  9651  001BC6  502E               	movf	?i2_in_high_int+1,w,c
  9652  001BC8  102D               	iorwf	?i2_in_high_int,w,c
  9653  001BCA  B4D8               	btfsc	status,2,c
  9654  001BCC  0012               	return	
  9655                           
  9656                           ;messages.c: 242: }
  9657                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  9658                           
  9659                           ;messages.c: 241: return;
  9660  001BCE  0101               	movlb	1	; () banked
  9661  001BD0  0E01               	movlw	high _ToMainHigh_MQ
  9662  001BD2  6E2E               	movwf	i2check_msg@qptr+1,c
  9663  001BD4  0101               	movlb	1	; () banked
  9664  001BD6  0E00               	movlw	low _ToMainHigh_MQ
  9665  001BD8  6E2D               	movwf	i2check_msg@qptr,c
  9666  001BDA  ECD2  F00F         	call	i2_check_msg	;wreg free
  9667  001BDE  0900               	iorlw	0
  9668  001BE0  A4D8               	btfss	status,2,c
  9669  001BE2  0012               	return	
  9670                           
  9671                           ;messages.c: 249: }
  9672                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  9673                           
  9674                           ;messages.c: 248: return;
  9675  001BE4  0101               	movlb	1	; () banked
  9676  001BE6  0E01               	movlw	high _ToMainLow_MQ
  9677  001BE8  6E2E               	movwf	i2check_msg@qptr+1,c
  9678  001BEA  0101               	movlb	1	; () banked
  9679  001BEC  0E43               	movlw	low _ToMainLow_MQ
  9680  001BEE  6E2D               	movwf	i2check_msg@qptr,c
  9681  001BF0  ECD2  F00F         	call	i2_check_msg	;wreg free
  9682  001BF4  0900               	iorlw	0
  9683  001BF6  B4D8               	btfsc	status,2,c
  9684                           
  9685                           ;messages.c: 252: }
  9686                           ;messages.c: 253: enter_sleep_mode();
  9687                           
  9688                           ;messages.c: 251: return;
  9689  001BF8  EC7E  F010         	call	_enter_sleep_mode	;wreg free
  9690  001BFC  0012               	return	
  9691  001BFE                     __end_of_SleepIfOkay:
  9692                           	opt stack 0
  9693                           pclatu	equ	0xFFB
  9694                           pclath	equ	0xFFA
  9695                           tblptru	equ	0xFF8
  9696                           tblptrh	equ	0xFF7
  9697                           tblptrl	equ	0xFF6
  9698                           tablat	equ	0xFF5
  9699                           prodh	equ	0xFF4
  9700                           prodl	equ	0xFF3
  9701                           intcon	equ	0xFF2
  9702                           postinc0	equ	0xFEE
  9703                           fsr0h	equ	0xFEA
  9704                           fsr0l	equ	0xFE9
  9705                           wreg	equ	0xFE8
  9706                           indf1	equ	0xFE7
  9707                           postinc1	equ	0xFE6
  9708                           postdec1	equ	0xFE5
  9709                           fsr1h	equ	0xFE2
  9710                           fsr1l	equ	0xFE1
  9711                           bsr	equ	0xFE0
  9712                           indf2	equ	0xFDF
  9713                           postinc2	equ	0xFDE
  9714                           postdec2	equ	0xFDD
  9715                           fsr2h	equ	0xFDA
  9716                           fsr2l	equ	0xFD9
  9717                           status	equ	0xFD8
  9718                           
  9719 ;; *************** function i2_in_low_int *****************
  9720 ;; Defined at:
  9721 ;;		line 31 in file "../src/interrupts.c"
  9722 ;; Parameters:    Size  Location     Type
  9723 ;;		None
  9724 ;; Auto vars:     Size  Location     Type
  9725 ;;		None
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  2    0[BANK0 ] int 
  9728 ;; Registers used:
  9729 ;;		wreg, status,2, status,0, cstack
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9735 ;;      Params:         0       2       0       0       0
  9736 ;;      Locals:         0       0       0       0       0
  9737 ;;      Temps:          0       0       0       0       0
  9738 ;;      Totals:         0       2       0       0       0
  9739 ;;Total ram usage:        2 bytes
  9740 ;; Hardware stack levels used:    1
  9741 ;; Hardware stack levels required when called:    1
  9742 ;; This function calls:
  9743 ;;		i2_in_high_int
  9744 ;; This function is called by:
  9745 ;;		_SleepIfOkay
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749                           	psect	text56
  9750  001DDC                     __ptext56:
  9751                           	opt stack 0
  9752  001DDC                     i2_in_low_int:
  9753                           	opt stack 18
  9754                           
  9755                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  9756                           
  9757                           ;incstack = 0
  9758  001DDC  ACF2               	btfss	intcon,6,c	;volatile
  9759  001DDE  D008               	goto	i2l4549
  9760                           
  9761                           ;interrupts.c: 33: return (0);
  9762  001DE0  0E00               	movlw	0
  9763  001DE2  0100               	movlb	0	; () banked
  9764  001DE4  0100               	movlb	0	; () banked
  9765  001DE6  6F81               	movwf	(?i2_in_low_int+1)& (0+255),b
  9766  001DE8  0E00               	movlw	0
  9767  001DEA  0100               	movlb	0	; () banked
  9768  001DEC  6F80               	movwf	?i2_in_low_int& (0+255),b
  9769  001DEE  0012               	return	
  9770  001DF0                     i2l4549:
  9771  001DF0  EC6B  F010         	call	i2_in_high_int	;wreg free
  9772  001DF4  502E               	movf	?i2_in_high_int+1,w,c
  9773  001DF6  102D               	iorwf	?i2_in_high_int,w,c
  9774  001DF8  B4D8               	btfsc	status,2,c
  9775  001DFA  D008               	goto	i2l4557
  9776                           
  9777                           ;interrupts.c: 35: return (0);
  9778  001DFC  0E00               	movlw	0
  9779  001DFE  0100               	movlb	0	; () banked
  9780  001E00  0100               	movlb	0	; () banked
  9781  001E02  6F81               	movwf	(?i2_in_low_int+1)& (0+255),b
  9782  001E04  0E00               	movlw	0
  9783  001E06  0100               	movlb	0	; () banked
  9784  001E08  6F80               	movwf	?i2_in_low_int& (0+255),b
  9785  001E0A  0012               	return	
  9786  001E0C                     i2l4557:
  9787                           
  9788                           ;interrupts.c: 37: return (1);
  9789  001E0C  0E00               	movlw	0
  9790  001E0E  0100               	movlb	0	; () banked
  9791  001E10  0100               	movlb	0	; () banked
  9792  001E12  6F81               	movwf	(?i2_in_low_int+1)& (0+255),b
  9793  001E14  0E01               	movlw	1
  9794  001E16  0100               	movlb	0	; () banked
  9795  001E18  6F80               	movwf	?i2_in_low_int& (0+255),b
  9796  001E1A  0012               	return	
  9797  001E1C                     __end_ofi2_in_low_int:
  9798                           	opt stack 0
  9799                           pclatu	equ	0xFFB
  9800                           pclath	equ	0xFFA
  9801                           tblptru	equ	0xFF8
  9802                           tblptrh	equ	0xFF7
  9803                           tblptrl	equ	0xFF6
  9804                           tablat	equ	0xFF5
  9805                           prodh	equ	0xFF4
  9806                           prodl	equ	0xFF3
  9807                           intcon	equ	0xFF2
  9808                           postinc0	equ	0xFEE
  9809                           fsr0h	equ	0xFEA
  9810                           fsr0l	equ	0xFE9
  9811                           wreg	equ	0xFE8
  9812                           indf1	equ	0xFE7
  9813                           postinc1	equ	0xFE6
  9814                           postdec1	equ	0xFE5
  9815                           fsr1h	equ	0xFE2
  9816                           fsr1l	equ	0xFE1
  9817                           bsr	equ	0xFE0
  9818                           indf2	equ	0xFDF
  9819                           postinc2	equ	0xFDE
  9820                           postdec2	equ	0xFDD
  9821                           fsr2h	equ	0xFDA
  9822                           fsr2l	equ	0xFD9
  9823                           status	equ	0xFD8
  9824                           
  9825 ;; *************** function i2_in_high_int *****************
  9826 ;; Defined at:
  9827 ;;		line 23 in file "../src/interrupts.c"
  9828 ;; Parameters:    Size  Location     Type
  9829 ;;		None
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;		None
  9832 ;; Return value:  Size  Location     Type
  9833 ;;                  2   44[COMRAM] int 
  9834 ;; Registers used:
  9835 ;;		wreg, status,2
  9836 ;; Tracked objects:
  9837 ;;		On entry : 0/0
  9838 ;;		On exit  : 0/0
  9839 ;;		Unchanged: 0/0
  9840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9841 ;;      Params:         2       0       0       0       0
  9842 ;;      Locals:         0       0       0       0       0
  9843 ;;      Temps:          0       0       0       0       0
  9844 ;;      Totals:         2       0       0       0       0
  9845 ;;Total ram usage:        2 bytes
  9846 ;; Hardware stack levels used:    1
  9847 ;; This function calls:
  9848 ;;		Nothing
  9849 ;; This function is called by:
  9850 ;;		_SleepIfOkay
  9851 ;;		i2_in_low_int
  9852 ;; This function uses a non-reentrant model
  9853 ;;
  9854                           
  9855                           	psect	text57
  9856  0020D6                     __ptext57:
  9857                           	opt stack 0
  9858  0020D6                     i2_in_high_int:
  9859                           	opt stack 18
  9860                           
  9861                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  9862                           
  9863                           ; BSR set to: 0
  9864                           ;incstack = 0
  9865  0020D6  0E00               	movlw	0
  9866  0020D8  AEF2               	btfss	intcon,7,c	;volatile
  9867  0020DA  0E01               	movlw	1
  9868  0020DC  6E2D               	movwf	?i2_in_high_int,c
  9869  0020DE  6A2E               	clrf	?i2_in_high_int+1,c
  9870  0020E0  0012               	return	
  9871  0020E2                     __end_ofi2_in_high_int:
  9872                           	opt stack 0
  9873                           pclatu	equ	0xFFB
  9874                           pclath	equ	0xFFA
  9875                           tblptru	equ	0xFF8
  9876                           tblptrh	equ	0xFF7
  9877                           tblptrl	equ	0xFF6
  9878                           tablat	equ	0xFF5
  9879                           prodh	equ	0xFF4
  9880                           prodl	equ	0xFF3
  9881                           intcon	equ	0xFF2
  9882                           postinc0	equ	0xFEE
  9883                           fsr0h	equ	0xFEA
  9884                           fsr0l	equ	0xFE9
  9885                           wreg	equ	0xFE8
  9886                           indf1	equ	0xFE7
  9887                           postinc1	equ	0xFE6
  9888                           postdec1	equ	0xFE5
  9889                           fsr1h	equ	0xFE2
  9890                           fsr1l	equ	0xFE1
  9891                           bsr	equ	0xFE0
  9892                           indf2	equ	0xFDF
  9893                           postinc2	equ	0xFDE
  9894                           postdec2	equ	0xFDD
  9895                           fsr2h	equ	0xFDA
  9896                           fsr2l	equ	0xFD9
  9897                           status	equ	0xFD8
  9898                           
  9899 ;; *************** function i2_check_msg *****************
  9900 ;; Defined at:
  9901 ;;		line 222 in file "../src/messages.c"
  9902 ;; Parameters:    Size  Location     Type
  9903 ;;  qptr            2   44[COMRAM] PTR struct __msg_queue
  9904 ;;		 -> ToMainHigh_MQ(67), ToMainLow_MQ(67), 
  9905 ;; Auto vars:     Size  Location     Type
  9906 ;;		None
  9907 ;; Return value:  Size  Location     Type
  9908 ;;                  1    wreg      unsigned char 
  9909 ;; Registers used:
  9910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9911 ;; Tracked objects:
  9912 ;;		On entry : 0/0
  9913 ;;		On exit  : 0/0
  9914 ;;		Unchanged: 0/0
  9915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9916 ;;      Params:         2       0       0       0       0
  9917 ;;      Locals:         0       0       0       0       0
  9918 ;;      Temps:          1       0       0       0       0
  9919 ;;      Totals:         3       0       0       0       0
  9920 ;;Total ram usage:        3 bytes
  9921 ;; Hardware stack levels used:    1
  9922 ;; This function calls:
  9923 ;;		Nothing
  9924 ;; This function is called by:
  9925 ;;		_SleepIfOkay
  9926 ;; This function uses a non-reentrant model
  9927 ;;
  9928                           
  9929                           	psect	text58
  9930  001FA4                     __ptext58:
  9931                           	opt stack 0
  9932  001FA4                     i2_check_msg:
  9933                           	opt stack 19
  9934                           
  9935                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9936                           
  9937                           ;incstack = 0
  9938  001FA4  EE20 F042          	lfsr	2,66
  9939  001FA8  502D               	movf	i2check_msg@qptr,w,c
  9940  001FAA  26D9               	addwf	fsr2l,f,c
  9941  001FAC  502E               	movf	i2check_msg@qptr+1,w,c
  9942  001FAE  22DA               	addwfc	fsr2h,f,c
  9943  001FB0  50DF               	movf	indf2,w,c
  9944  001FB2  6E2F               	movwf	??i2_check_msg& (0+255),c
  9945  001FB4  502F               	movf	??i2_check_msg,w,c
  9946  001FB6  0D0D               	mullw	13
  9947  001FB8  50F3               	movf	prodl,w,c
  9948  001FBA  242D               	addwf	i2check_msg@qptr,w,c
  9949  001FBC  6ED9               	movwf	fsr2l,c
  9950  001FBE  50F4               	movf	prodh,w,c
  9951  001FC0  202E               	addwfc	i2check_msg@qptr+1,w,c
  9952  001FC2  6EDA               	movwf	fsr2h,c
  9953  001FC4  50DF               	movf	indf2,w,c
  9954  001FC6  0012               	return	
  9955  001FC8                     __end_ofi2_check_msg:
  9956                           	opt stack 0
  9957                           pclatu	equ	0xFFB
  9958                           pclath	equ	0xFFA
  9959                           tblptru	equ	0xFF8
  9960                           tblptrh	equ	0xFF7
  9961                           tblptrl	equ	0xFF6
  9962                           tablat	equ	0xFF5
  9963                           prodh	equ	0xFF4
  9964                           prodl	equ	0xFF3
  9965                           intcon	equ	0xFF2
  9966                           postinc0	equ	0xFEE
  9967                           fsr0h	equ	0xFEA
  9968                           fsr0l	equ	0xFE9
  9969                           wreg	equ	0xFE8
  9970                           indf1	equ	0xFE7
  9971                           postinc1	equ	0xFE6
  9972                           postdec1	equ	0xFE5
  9973                           fsr1h	equ	0xFE2
  9974                           fsr1l	equ	0xFE1
  9975                           bsr	equ	0xFE0
  9976                           indf2	equ	0xFDF
  9977                           postinc2	equ	0xFDE
  9978                           postdec2	equ	0xFDD
  9979                           fsr2h	equ	0xFDA
  9980                           fsr2l	equ	0xFD9
  9981                           status	equ	0xFD8
  9982                           
  9983 ;; *************** function _enter_sleep_mode *****************
  9984 ;; Defined at:
  9985 ;;		line 202 in file "../src/messages.c"
  9986 ;; Parameters:    Size  Location     Type
  9987 ;;		None
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;		None
  9990 ;; Return value:  Size  Location     Type
  9991 ;;		None               void
  9992 ;; Registers used:
  9993 ;;		None
  9994 ;; Tracked objects:
  9995 ;;		On entry : 0/0
  9996 ;;		On exit  : 0/0
  9997 ;;		Unchanged: 0/0
  9998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9999 ;;      Params:         0       0       0       0       0
 10000 ;;      Locals:         0       0       0       0       0
 10001 ;;      Temps:          0       0       0       0       0
 10002 ;;      Totals:         0       0       0       0       0
 10003 ;;Total ram usage:        0 bytes
 10004 ;; Hardware stack levels used:    1
 10005 ;; This function calls:
 10006 ;;		Nothing
 10007 ;; This function is called by:
 10008 ;;		_SleepIfOkay
 10009 ;; This function uses a non-reentrant model
 10010 ;;
 10011                           
 10012                           	psect	text59
 10013  0020FC                     __ptext59:
 10014                           	opt stack 0
 10015  0020FC                     _enter_sleep_mode:
 10016                           	opt stack 19
 10017                           
 10018                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 10019                           
 10020                           ;incstack = 0
 10021  0020FC  8ED3               	bsf	4051,7,c	;volatile
 10022  0020FE  0003               	sleep		;# 
 10023  002100  0012               	return	
 10024  002102                     __end_of_enter_sleep_mode:
 10025                           	opt stack 0
 10026  0000                     pclatu	equ	0xFFB
 10027                           pclath	equ	0xFFA
 10028                           tblptru	equ	0xFF8
 10029                           tblptrh	equ	0xFF7
 10030                           tblptrl	equ	0xFF6
 10031                           tablat	equ	0xFF5
 10032                           prodh	equ	0xFF4
 10033                           prodl	equ	0xFF3
 10034                           intcon	equ	0xFF2
 10035                           postinc0	equ	0xFEE
 10036                           fsr0h	equ	0xFEA
 10037                           fsr0l	equ	0xFE9
 10038                           wreg	equ	0xFE8
 10039                           indf1	equ	0xFE7
 10040                           postinc1	equ	0xFE6
 10041                           postdec1	equ	0xFE5
 10042                           fsr1h	equ	0xFE2
 10043                           fsr1l	equ	0xFE1
 10044                           bsr	equ	0xFE0
 10045                           indf2	equ	0xFDF
 10046                           postinc2	equ	0xFDE
 10047                           postdec2	equ	0xFDD
 10048                           fsr2h	equ	0xFDA
 10049                           fsr2l	equ	0xFD9
 10050                           status	equ	0xFD8
 10051                           pclatu	equ	0xFFB
 10052                           pclath	equ	0xFFA
 10053                           tblptru	equ	0xFF8
 10054                           tblptrh	equ	0xFF7
 10055                           tblptrl	equ	0xFF6
 10056                           tablat	equ	0xFF5
 10057                           prodh	equ	0xFF4
 10058                           prodl	equ	0xFF3
 10059                           intcon	equ	0xFF2
 10060                           postinc0	equ	0xFEE
 10061                           fsr0h	equ	0xFEA
 10062                           fsr0l	equ	0xFE9
 10063                           wreg	equ	0xFE8
 10064                           indf1	equ	0xFE7
 10065                           postinc1	equ	0xFE6
 10066                           postdec1	equ	0xFE5
 10067                           fsr1h	equ	0xFE2
 10068                           fsr1l	equ	0xFE1
 10069                           bsr	equ	0xFE0
 10070                           indf2	equ	0xFDF
 10071                           postinc2	equ	0xFDE
 10072                           postdec2	equ	0xFDD
 10073                           fsr2h	equ	0xFDA
 10074                           fsr2l	equ	0xFD9
 10075                           status	equ	0xFD8
 10076                           
 10077                           	psect	rparam
 10078  0000                     pclatu	equ	0xFFB
 10079                           pclath	equ	0xFFA
 10080                           tblptru	equ	0xFF8
 10081                           tblptrh	equ	0xFF7
 10082                           tblptrl	equ	0xFF6
 10083                           tablat	equ	0xFF5
 10084                           prodh	equ	0xFF4
 10085                           prodl	equ	0xFF3
 10086                           intcon	equ	0xFF2
 10087                           postinc0	equ	0xFEE
 10088                           fsr0h	equ	0xFEA
 10089                           fsr0l	equ	0xFE9
 10090                           wreg	equ	0xFE8
 10091                           indf1	equ	0xFE7
 10092                           postinc1	equ	0xFE6
 10093                           postdec1	equ	0xFE5
 10094                           fsr1h	equ	0xFE2
 10095                           fsr1l	equ	0xFE1
 10096                           bsr	equ	0xFE0
 10097                           indf2	equ	0xFDF
 10098                           postinc2	equ	0xFDE
 10099                           postdec2	equ	0xFDD
 10100                           fsr2h	equ	0xFDA
 10101                           fsr2l	equ	0xFD9
 10102                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         310
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     47      83
    BANK0           128     91     112
    BANK1           256    100     236
    BANK2           256      0     134
    BANK3           256      0       0

Pointer List with Targets:

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> i2c_slave_int_handler@motorData(BANK0[5]), i2c_slave_int_handler@sensorData(BANK0[5]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> i2c_slave_int_handler@motorData(BANK0[5]), i2c_slave_int_handler@sensorData(BANK0[5]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@reply(BANK0[5]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), 
		 -> FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@msgbuffer(BANK1[11]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), main@uc(BANK1[13]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK2[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK2[10]), 
		 -> NULL(NULL[0]), i2c_slave_int_handler@reply(BANK0[5]), i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[67]), 
		 -> FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@msgbuffer(BANK1[11]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), main@uc(BANK1[13]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_trans@data	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 13
		 -> main@uc(BANK1[13]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK1[29]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 5
		 -> i2c_slave_int_handler@motorData(BANK0[5]), i2c_slave_int_handler@noData_1511(BANK0[5]), i2c_slave_int_handler@movecomAck(BANK0[3]), i2c_slave_int_handler@sensorData(BANK0[5]), 
		 -> i2c_slave_int_handler@noData(BANK0[5]), i2c_slave_int_handler@gatherAck(BANK0[3]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK1[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 5
		 -> i2c_slave_int_handler@motorData(BANK0[5]), i2c_slave_int_handler@sensorData(BANK0[5]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> i2c_slave_int_handler@msgtype_1508(BANK0[2]), i2c_slave_int_handler@msgtype(BANK0[2]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@reply(BANK0[5]), i2c_slave_int_handler@error_buf(BANK0[3]), main@ic(BANK1[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 13
		 -> NULL(NULL[0]), main@uc(BANK1[13]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> i2c_slave_int_handler@msgtype_1508(BANK0[2]), i2c_slave_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> i2c_slave_int_handler@motorData(BANK0[5]), i2c_slave_int_handler@sensorData(BANK0[5]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    sp__memcpy	PTR void  size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> i2c_slave_int_handler@motorData(BANK0[5]), i2c_slave_int_handler@sensorData(BANK0[5]), FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), 
		 -> ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> NULL(NULL[0]), i2c_slave_int_handler@reply(BANK0[5]), i2c_slave_int_handler@error_buf(BANK0[3]), main@msgbuffer(BANK1[11]), 
		 -> main@t1thread_data(BANK1[2]), main@ic(BANK1[29]), main@uc(BANK1[13]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 67
		 -> FromMainLow_MQ.queue(BANK2[65]), FromMainHigh_MQ.queue(BANK2[65]), ToMainHigh_MQ.queue(BANK1[65]), ToMainLow_MQ.queue(BANK1[65]), 
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 67
		 -> FromMainHigh_MQ(BANK2[67]), FromMainLow_MQ(BANK2[67]), ToMainHigh_MQ(BANK1[67]), ToMainLow_MQ(BANK1[67]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _timer0_int_handler->_WriteTimer0
    _i2c_slave_int_handler->_start_i2c_slave_reply
    i2_send_msg->i2___awmod
    i2_recv_msg->i2___awmod
    _SleepIfOkay->i2_check_msg
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy
    _timer1_int_handler->_WriteTimer1

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _timer0_int_handler->_WriteTimer0
    _i2c_int_handler->_i2c_slave_int_handler
    _i2c_slave_int_handler->_FromMainLow_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainLow_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0   15918
                                             36 BANK1     64    64      0
                _FromMainLow_sendmsg
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                         _uart_trans
 ---------------------------------------------------------------------------------
 (1) _uart_trans                                           5     3      2     192
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    3379
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2690
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2861
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2861
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2638
                                             10 BANK1     14     7      7
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     347
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (1) _FromMainLow_sendmsg                                  4     1      3    2690
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2467
                                             10 BANK1     12     6      6
                            ___awmod
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     669
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    3486
                                             27 COMRAM    17    17      0
                    _adc_int_handler
                 _timer1_int_handler
              _uart_recv_int_handler
             _uart_trans_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_trans_int_handler                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    3398
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    3375
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    3022
                                             10 COMRAM    12     6      6
                          i1___awmod
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     809
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   0     0      0      88
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0   11456
                                             77 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  0     0      0     121
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     121
                                             44 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0   11099
              _i2c_slave_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_slave_int_handler                              48    48      0   11099
                                             29 BANK0     48    48      0
                _FromMainLow_recvmsg
                 _ToMainHigh_sendmsg
                       _handle_start
              _start_i2c_slave_reply
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     3      2     483
                                             44 COMRAM     3     1      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    4718
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    3845
                                             10 BANK0     12     6      6
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) _FromMainLow_recvmsg                                 5     1      4    4286
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (14) i2_recv_msg                                         14     7      7    3933
                                             10 BANK0     14     7      7
                          i2___awmod
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6    1108
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (15) i2___awmod                                           7     3      4    1186
                                             44 COMRAM     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              0 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                             44 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     236
                                             44 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FromMainLow_sendmsg
     _send_msg
       ___awmod
       _memcpy
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       ___awmod
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         ___awmod
         _memcpy
     ___lwmod
   _uart_trans

 _InterruptHandlerLow (ROOT)
   _adc_int_handler
   _timer1_int_handler
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1___awmod
         i1_memcpy
   _uart_trans_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_slave_int_handler
       _FromMainLow_recvmsg
         i2_recv_msg
           i2___awmod
           i2_memcpy
       _ToMainHigh_sendmsg
         i2_send_msg
           i2___awmod
           i2_memcpy
       _handle_start
       _start_i2c_slave_reply
   _timer0_int_handler
     _WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      86       8       52.3%
BITBANK1           100      0       0       5        0.0%
BANK1              100     64      EC       6       92.2%
BITBANK0            80      0       0       3        0.0%
BANK0               80     5B      70       4       87.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2F      53       1       65.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     235      11        0.0%
DATA                 0      0     235      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Mar 04 18:04:58 2014

          _MQ_Main_Willing_to_block 004E                         _SSPSTATbits 000FC7  
         __end_of_ToMainLow_recvmsg 1D18                                  bsr 000FE0  
         __end_of_ToMainLow_sendmsg 1FA4                        __CFG_CP0$OFF 000000  
                 i2recv_msg@msgtype 008D                   i2recv_msg@tlength 0094  
              ?_FromMainLow_recvmsg 0098                                 l132 0994  
                               l144 0A90                                 l517 1F50  
                               l541 1E36                                 l518 1F52  
                               l543 1E4E                                 l544 1E50  
                               l811 204A                                 l582 166E  
                               l583 1670                                 l584 167E  
                               l585 1680                                 l498 17B6  
                               l578 164E                ?_FromMainLow_sendmsg 019C  
   __size_of_uart_trans_int_handler 0068                __size_of_WriteTimer0 0012  
              __size_of_WriteTimer1 0012                        ___awmod@sign 018C  
                    _FromMainLow_MQ 0243                                 prod 000FF3  
                               wreg 000FE8                        __CFG_IESO$ON 000000  
                      ?_in_high_int 0186                    ??_init_uart_recv 0188  
      i2c_slave_int_handler@msgtype 00C6          i2c_slave_int_handler@F5130 00DB  
        i2c_slave_int_handler@F5141 00EB          i2c_slave_int_handler@F5134 00E6  
        i2c_slave_int_handler@F5128 00E0          i2c_slave_int_handler@F5137 00E3  
               i2recv_msg@maxlength 008C                                l1123 172C  
                              l4007 1650                                l4115 1902  
                              l4133 0DF6                                l4071 18B2  
                              l4153 1B34                                l4065 1886  
                              l4081 1448                                l4147 1B10  
                              l4059 185A                                l4501 105E  
                              l4085 14B2                                l4167 0B4A  
                              l4183 0C38                                l4521 10F6  
                              l4513 10CA                                l4505 107C  
                              l4507 108E                                l4531 16DC  
                              l4509 1096                                l4517 10DE  
                              l4533 16E4                                l4537 1718  
                              l4529 16CA                                l3905 0A3E  
                              l3913 0AC4                                l3765 1C82  
                              l3757 1C60                                l4497 1038  
                              l3881 0900                                l3779 1CC6  
                              l3891 099A                                l3893 09BA  
                              l3959 1E38                                l3889 0942  
                              l3897 09DA                                l3899 0A00  
                              l3999 163A                                _LATA 000F89  
                              _LATB 000F8A                                u4007 204C  
                              i1l57 0080                     _FromMainHigh_MQ 0200  
                     __CFG_FCMEN$ON 000000              ?_block_on_To_msgqueues 0001  
                              _main 082A                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr0l 000FE9  
                              fsr2h 000FDA                                indf1 000FE7  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                         main@msgtype 01BE  
                        i1_send_msg 1372                                pclat 000FFA  
                       i2_check_msg 1FA4                                prodh 000FF4  
                              prodl 000FF3               handle_start@data_read 002D  
                              start 00C6                          i2_recv_msg 0C3C  
                     __CFG_FOSC2$ON 000000                    ?_adc_int_handler 0001  
                        i2_send_msg 0EC6          i2c_slave_int_handler@reply 009F  
         ToMainHigh_recvmsg@msgtype 019E                      send_msg@length 0192  
                   __end_of_OpenADC 17BA         __size_of_timer0_int_handler 0012  
           ??_i2c_slave_int_handler 009D                         _Delay1KTCYx 2046  
             ??_FromMainLow_recvmsg 0030               ??_FromMainLow_sendmsg 019F  
                             ?_main 0001                     __end_of___awmod 1100  
                             _T0CON 000FD5                               _T1CON 000FCD  
                   __end_of___lwmod 1736                          i1memcpy@d1 0001  
                             i1l438 1AEA                               i2l330 0466  
                             i2l332 0180                               i2l350 02F8  
                             i2l336 01BE                               i2l364 0478  
                             i1l596 2036                               i2l293 15E0  
                             i2l358 03EA                          i1memcpy@s1 0003  
                             _RCREG 000FAE                               _RCSTA 000FAB  
                             _TMR0H 000FD7                               _TMR1H 000FCF  
                             _TMR0L 000FD6                               _TMR1L 000FCE  
                             _SPBRG 000FAF                               _PORTA 000F80  
                             _TRISA 000F92                               _TRISB 000F93  
                             _TRISC 000F94                               _TXREG 000FAD  
                             _TXSTA 000FAC                          i2memcpy@d1 0080  
                        i2memcpy@s1 0082                        ?_init_queues 0001  
         __size_of_enter_sleep_mode 0006                      i1___awmod@sign 0007  
                   __end_of_in_main 1CD6          ToMainLow_recvmsg@maxlength 01A2  
           timer0_lthread@msgbuffer 018C             i2c_configure_slave@addr 0186  
                             tablat 000FF5                               status 000FD8  
            _uart_trans_int_handler 1A86                    __end_ofi1_memcpy 1DDC  
                __size_ofi1___awmod 009C                    __end_ofi2_memcpy 1BAA  
                __size_ofi2___awmod 00EA                     __initialization 1934  
                      __end_of_main 0ADE         __size_of_timer1_int_handler 000E  
        __size_of_ToMainLow_recvmsg 0042          __size_of_ToMainLow_sendmsg 0026  
             __size_ofi2_in_low_int 0040       __size_of_FromMainHigh_sendmsg 0036  
                            ??_main 01AA                     send_msg@msgtype 0193  
                     __activetblptr 000002                     send_msg@tlength 0197  
        FromMainLow_sendmsg@msgtype 019C                          _SetChanADC 1FEA  
              __end_of_handle_start 161A                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADCON2 000FC0  
                            _ADRESH 000FC4             ??_uart_recv_int_handler 001B  
                            i1l1375 1FD4                              i1l3601 1540  
                            i1l3603 1548                              i1l3605 154C  
                            i1l3613 156A                              i1l3617 1578  
                            i1l3609 1560                              i1l3573 1DCA  
                            i1l3567 1DAE                              i1l4703 130E  
                            i1l3593 1512                              i1l4721 0066  
                            i1l3597 152E                              i1l4709 1352  
                            i1l4727 0070                              i2l3145 15F6  
                        _OpenTimer0 1F2C                          _OpenTimer1 1E1C  
                            i2l3147 1608                              i1l4675 13AA  
                            i2l4213 1200                      __CFG_WDTEN$OFF 000000  
                            i2l4303 0352                              i2l4217 1262  
                            i2l4305 0382                              i2l4403 076A  
                            i2l4331 0440                              i2l4243 0176  
                            i2l4421 0818                              i2l4309 0394  
                            i2l4261 01F0                              i2l4237 015E  
                            i2l4351 053E                              i2l4343 04C4  
                            i2l4263 0210                              i2l4337 047C  
                            i2l4281 0280                              i2l4273 0240  
                            i2l4419 0806                              i2l4613 0D96  
                            i2l3807 1BB0                              i2l4391 06F4  
                            i2l4375 065A                              i2l4359 05C6  
                            i2l4279 0252                              i2l4625 1B92  
                            i2l4393 0708                              i2l4651 11BC  
                            i2l4643 1172                              i2l4635 1136  
                            i2l4619 1B6E                              i2l4557 1E0C  
                            i2l4549 1DF0                              i2l4645 1180  
                            i2l4573 0F22                              i2l4647 1188  
                            i2l4655 11CC                              i2l4639 115C  
                            i2l4659 11E0                              i2l3795 17FE  
                            i2l4597 0CA8                              i2l3789 17F4  
       __end_of_i2c_configure_slave 1F7E                       ??_SleepIfOkay 0030  
                __size_of_ReadUSART 001E                              _OSCCON 000FD3  
                            _SPBRGH 000FB0                              _SSPADD 000FC8  
                            _SSPBUF 000FC9      __size_of_start_i2c_slave_reply 00C8  
                       ?i1_send_msg 000B       __end_of_start_i2c_slave_reply 12B2  
                timer0_lthread@tptr 0186             FromMainLow_recvmsg@data 009A  
                       ?i2_recv_msg 008A                           ??_OpenADC 0188  
                      i2_in_low_int 1DDC                         ?i2_send_msg 008A  
                    __CFG_XINST$OFF 000000                  __size_of_OpenUSART 0092  
                   _i2c_int_handler 20F6                           ??___awmod 018A  
 i2c_slave_int_handler@data_written 00C1                    OpenTimer0@config 0186  
                            _ic_ptr 0050                           ??___lwmod 018A  
                     main@msgbuffer 01AF                    __end_of_init_i2c 1C4C  
                  OpenTimer1@config 0186                              _memcpy 1AEE  
                            clear_0 193A                              clear_1 1946  
                            clear_2 1952                              clear_3 195E  
                   ___awmod@divisor 0188                              _uc_ptr 0052  
                   ___awmod@counter 018B                              main@ic 01CD  
                            main@uc 01C0                    __end_of_recv_msg 0C3C  
       start_i2c_slave_reply@length 002F                           ??_in_main 018C  
                 __end_ofi1___awmod 1582                    __end_of_send_msg 0EC6  
                 __end_ofi2___awmod 11EA                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                       init_queue@i 0189                      i2___awmod@sign 002F  
          ToMainLow_recvmsg@msgtype 019E                __size_of_in_high_int 0012  
           FromMainLow_sendmsg@data 019D                     __CFG_FOSC$HSPLL 000000  
                        __accesstop 0080             __end_of__initialization 199C  
        __end_of_ToMainHigh_recvmsg 1D5A          __end_of_ToMainHigh_sendmsg 1F2C  
       __end_of_init_timer1_lthread 2080                 __end_of_SleepIfOkay 1BFE  
                    __pcstackCOMRAM 0001                        __pidataBANK0 20E2  
                      __pidataBANK1 2102              __size_ofi2_in_high_int 000C  
                __size_of_check_msg 0036                   __end_of_ReadUSART 2046  
                       ?_SetChanADC 0001                 __size_ofi1_send_msg 00C0  
                         ?i1_memcpy 0001       __size_of_InterruptHandlerHigh 1834  
       __end_of_InterruptHandlerLow 00C6                           ?i2_memcpy 0080  
                     _ToMainHigh_MQ 0100                 __size_ofi2_recv_msg 015E  
                  _enter_sleep_mode 20FC                 __size_ofi2_send_msg 012C  
              timer1_lthread@length 01A4                       ReadUSART@data 0001  
                 __end_of_OpenUSART 16AC                       check_msg@qptr 0186  
              timer1_lthread@retval 01A9             ??_block_on_To_msgqueues 018C  
              __size_of_init_queues 006E                          __pbssBANK0 00E6  
                        __pbssBANK1 0100                          __pbssBANK2 0200  
                       ?_OpenTimer0 0001                         ?_OpenTimer1 0001  
                        __pnvCOMRAM 0050             __end_of_i2c_int_handler 20FC  
                      ?i2_check_msg 002D                  timer1_lthread@tptr 01A0  
                 recv_msg@maxlength 0192                     recv_msg@msgtype 0193  
                   recv_msg@tlength 019A               __size_of_handle_start 0098  
                      ?_Delay1KTCYx 0001                    WriteTimer0@timer 0080  
                           ?_memcpy 0186                    WriteTimer1@timer 0003  
                     ??_WriteTimer0 002F                       ??_WriteTimer1 0003  
    __size_of_i2c_slave_int_handler 0760             __size_of_timer0_lthread 0012  
     __end_of_i2c_slave_int_handler 082A             __size_of_timer1_lthread 0072  
                        ??i1_memcpy 0007                          ??i2_memcpy 002D  
                  i1send_msg@length 000D                       i2_in_high_int 20D6  
                           _SSPCON1 000FC6                             _SSPCON2 000FC5  
                           _SSPSTAT 000FC7             ?_uart_trans_int_handler 0001  
                 __end_of_check_msg 1EC0                           ?_init_i2c 0186  
                       _SleepIfOkay 1BAA                           ?_recv_msg 0190  
                           _OpenADC 1736                          _in_low_int 1C4C  
                      _handle_start 1582                             __Hparam 0000  
               __size_of_SetChanADC 0020                           ?_send_msg 0190  
                           __Lparam 0000          __end_of_timer0_int_handler 20B6  
       __end_of_FromMainLow_recvmsg 1D9C         __end_of_FromMainLow_sendmsg 1EF6  
                  init_uart_recv@uc 0186                             ___awmod 0FF2  
                           ___lwmod 16AC                     __CFG_STVREN$OFF 000000  
i2c_slave_int_handler@overrun_error 00C2                             __pcinit 1934  
                   __size_of_memcpy 005E            __size_of_adc_int_handler 0022  
                        _init_queue 18BA                             __ramtop 0400  
               __size_of_OpenTimer0 002A                 __size_of_OpenTimer1 0038  
                           __ptext0 082A                             __ptext1 1432  
                           __ptext2 19A6                             __ptext3 16AC  
                           __ptext4 1E54                             __ptext5 205C  
                           __ptext6 200A                             __ptext7 206E  
                           __ptext8 1A18                             __ptext9 18BA  
                         _T0CONbits 000FD5                             _in_main 1C92  
                         _T1CONbits 000FCD                    ___awmod@dividend 0186  
               __end_of_WriteTimer0 20C8                 __end_of_WriteTimer1 20A4  
                    ?i2_in_high_int 002D      __end_of_uart_trans_int_handler 1AEE  
                    OpenADC@config2 0186                             main@msg 01AC  
   i2c_slave_int_handler@movecomAck 00A7                      __pintcode_body 17BA  
              end_of_initialization 199C             timer1_lthread@msgbuffer 01A6  
      __end_of_FromMainHigh_sendmsg 1E8A      __size_of_uart_recv_int_handler 00C0  
        FromMainHigh_sendmsg@length 019F                             memcpy@d 018C  
                           memcpy@n 018A                             memcpy@s 018E  
     __end_of_uart_recv_int_handler 1372                          ??_init_i2c 0188  
   i2c_slave_int_handler@sensorData 00AA                       __Lmediumconst 0000  
                           int_func 17BA                        ??i1_send_msg 0011  
           __size_of_init_uart_recv 001E                    ?_i2c_int_handler 0001  
                      ??i2_recv_msg 0091                          ??_recv_msg 0197  
                      ??i2_send_msg 0090                          ??_send_msg 0196  
        __end_of_timer1_int_handler 20D6                           _RCSTAbits 000FAB  
                           postdec1 000FE5                             postdec2 000FDD  
                           postinc0 000FEE                             postinc1 000FE6  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 0096  
                        _uart_trans 1432                  __end_ofi1_send_msg 1432  
       FromMainHigh_sendmsg@msgtype 019C                           _TRISCbits 000F94  
                __end_ofi2_recv_msg 0D9A                           i1___awmod 14E6  
                __end_ofi2_send_msg 0FF2                           i2___awmod 1100  
                         _TXSTAbits 000FAC                          main@length 01BF  
                       ?_in_low_int 0188               timer0_lthread@msgtype 0188  
             _start_i2c_slave_reply 11EA        __size_of_i2c_configure_slave 0028  
              __size_ofi2_check_msg 0024            __end_of_enter_sleep_mode 2102  
                _ToMainHigh_recvmsg 1D18                           i1memcpy@d 0007  
                _ToMainHigh_sendmsg 1EF6                           i1memcpy@n 0005  
                         i1memcpy@s 0009                      _timer0_lthread 205C  
                       ?_init_queue 0186                           i2memcpy@d 0086  
                       _WriteTimer0 20B6                         _WriteTimer1 2092  
                         i2memcpy@n 0084                           i2memcpy@s 0088  
                    _timer1_lthread 19A6                      __end_of_memcpy 1B4C  
                 _enable_interrupts 20EE                __size_of_Delay1KTCYx 0016  
                      ??_SetChanADC 0186                 ?_ToMainHigh_recvmsg 019E  
                   ??i2_in_high_int 002F                 ?_ToMainHigh_sendmsg 0096  
                ?_enable_interrupts 0001                 start_initialization 1934  
                     ??_in_high_int 0188                           _ReadUSART 2028  
                 ??_adc_int_handler 0001                          ?i1___awmod 0001  
                 __size_ofi1_memcpy 0040                   __size_ofi2_memcpy 005E  
                        ?i2___awmod 0080           FromMainLow_sendmsg@length 019F  
               ??_enable_interrupts 0186                        ??_OpenTimer0 0186  
                      ??_OpenTimer1 0186      __size_of_block_on_To_msgqueues 007E  
     __end_of_block_on_To_msgqueues 18BA                           _OpenUSART 161A  
      __end_of_InterruptHandlerHigh 183C                          init_i2c@ic 0186  
              ??_ToMainHigh_recvmsg 01A2                ??_ToMainHigh_sendmsg 0030  
                __end_of_SetChanADC 200A              __end_of_timer0_lthread 206E  
                       __pdataBANK0 00DB                         __pdataBANK1 01EA  
            __end_of_timer1_lthread 1A18                  i1___awmod@dividend 0001  
         __end_of_enable_interrupts 20F6                            ??_memcpy 018C  
             timer1_lthread@msgtype 01A2                         ?_uart_trans 0186  
              _FromMainHigh_sendmsg 1E54        __size_of_init_timer1_lthread 0012  
                __end_of_OpenTimer0 1F56                  __end_of_OpenTimer1 1E54  
                       __pbssCOMRAM 0030                          ?_ReadUSART 0001  
                     ??_init_queues 018A                       __pcstackBANK0 0080  
                     __pcstackBANK1 0186                 __size_of_in_low_int 0046  
          start_i2c_slave_reply@msg 002D                           _adcbuffer 0030  
               __CFG_CCP2MX$DEFAULT 000000                     Delay1KTCYx@unit 0186  
          ToMainLow_sendmsg@msgtype 0017        __size_of_InterruptHandlerLow 00AE  
    i2c_slave_int_handler@data_read 00CA                 __end_of_in_high_int 2092  
                        ?_OpenUSART 0186                        ?_SleepIfOkay 0001  
             ToMainLow_recvmsg@data 01A0                        _ToMainLow_MQ 0143  
               __size_of_init_queue 007A                      _init_uart_recv 200A  
                         _check_msg 1E8A              ?_start_i2c_slave_reply 002D  
                 __size_of_init_i2c 004E                   OpenADC@portconfig 0187  
                          ?_OpenADC 0186      i2c_slave_int_handler@gatherAck 00A4  
                      recv_msg@data 0195                        recv_msg@qmsg 019C  
                      recv_msg@slot 0199                        recv_msg@qptr 0190  
                 __size_of_recv_msg 015E                           __pintcode 0008  
                 __size_of_send_msg 012C                            ?___awmod 0186  
                   ?_timer0_lthread 0186                            ?___lwmod 0186  
                   ?_timer1_lthread 01A0    i2c_slave_int_handler@noData_1511 00B9  
             ?_FromMainHigh_sendmsg 019C                         __pintcodelo 0018  
            ToMainHigh_recvmsg@data 01A0                            ?_in_main 018A  
                 WriteTimer0@timer0 002D                  _timer0_int_handler 20A4  
                 WriteTimer1@timer1 0001               _i2c_slave_int_handler 00CA  
    i2c_slave_int_handler@error_buf 00BE                         ??i1___awmod 0005  
             ToMainLow_sendmsg@data 0018                         ??i2___awmod 002D  
               ?_timer0_int_handler 0001      i2c_slave_int_handler@msg_ready 00C5  
            __end_of_init_uart_recv 2028         i2c_slave_int_handler@noData 00B4  
               __end_of_init_queues 1A86         i2c_slave_int_handler@length 00CB  
               __size_of_uart_trans 00B4                       OpenADC@config 018A  
                          _LATBbits 000F8A      i2c_slave_int_handler@motorData 00AF  
                   i2check_msg@qptr 002D                          ?_check_msg 0186  
                          _IPR1bits 000F9F                            _PIE1bits 000F9D  
                     ?i2_in_low_int 0080                            i2u352_41 0626  
                          _PIR1bits 000F9E                            i2u354_41 0672  
                          i2u359_41 0782              ToMainHigh_sendmsg@data 0097  
                          _RCONbits 000FD0                    __CFG_WDTPS$32768 000000  
                         main@F5212 01EA                ??_timer0_int_handler 002F  
      FromMainLow_recvmsg@maxlength 009C          __size_of_enable_interrupts 0008  
                 i1send_msg@msgtype 000E                   i1send_msg@tlength 0012  
        FromMainLow_recvmsg@msgtype 0098                          _ADCON0bits 000FC2  
      __size_of_FromMainLow_recvmsg 0042        __size_of_FromMainLow_sendmsg 0036  
              timer0_lthread@length 018A                  _timer1_int_handler 20C8  
                          i1_memcpy 1D9C                _InterruptHandlerHigh 0008  
                       ??_ReadUSART 0001                            i2_memcpy 1B4C  
              timer0_lthread@msgval 018E                         _in_high_int 2080  
                      send_msg@data 0194                 _i2c_configure_slave 1F56  
                      send_msg@qmsg 019A                        send_msg@slot 0199  
                      send_msg@qptr 0190                           copy_data0 1990  
               ?_timer1_int_handler 0001                  i2___awmod@dividend 0080  
                   ?_init_uart_recv 0186                         ??_OpenUSART 0188  
                   OpenUSART@config 018B                      ??i2_in_low_int 002F  
             _uart_recv_int_handler 12B2                        ??_in_low_int 018A  
                          __Hrparam 0000                    __size_of_OpenADC 0084  
              ?_i2c_configure_slave 0001                            __Lrparam 0000  
                 ?_enter_sleep_mode 0001              ??_FromMainHigh_sendmsg 019F  
                 i1___awmod@divisor 0003                ??_timer1_int_handler 0005  
                 i1___awmod@counter 0006   i2c_slave_int_handler@msgtype_1508 00C8  
                   _adc_int_handler 1FC8            __size_of_i2c_int_handler 0006  
                  __size_of___awmod 010E                  ??_enter_sleep_mode 002D  
                  __size_of___lwmod 008A                        ??_init_queue 0188  
                      ?_WriteTimer0 002D                        ?_WriteTimer1 0001  
          FromMainHigh_sendmsg@data 019D             ToMainLow_sendmsg@length 001A  
            ?_i2c_slave_int_handler 0001                   main@t0thread_data 01BA  
             ?_InterruptHandlerHigh 0001                    __size_of_in_main 0044  
                 i2send_msg@msgtype 008D         ToMainHigh_recvmsg@maxlength 01A2  
                 i2send_msg@tlength 0091             init_timer1_lthread@tptr 0186  
                       _init_queues 1A18                  __end_of_in_low_int 1C92  
                          __ptext10 1BFE                            __ptext11 1F56  
                          __ptext20 1D18                            __ptext12 20EE  
                          __ptext21 0ADE                            __ptext13 183C  
                          __ptext30 0FF2                            __ptext22 1FEA  
                          __ptext14 1C92                            __ptext23 161A  
                          __ptext15 1C4C                            __ptext40 2092  
                          __ptext32 1A86                            __ptext24 1E1C  
                          __ptext16 2080                            __ptext41 1FC8  
                          __ptext33 12B2                            __ptext25 1F2C  
                          __ptext17 1E8A                            __ptext50 0EC6  
                          __ptext34 1F7E                            __ptext26 1736  
                          __ptext18 2046                            __ptext51 1D5A  
                          __ptext43 20A4                            __ptext35 1372  
                          __ptext27 1EC0                            __ptext19 1CD6  
                          __ptext52 0C3C                            __ptext44 20B6  
                          __ptext36 1D9C                            __ptext28 0D9A  
                          __ptext53 1B4C                            __ptext45 20F6  
                          __ptext37 14E6                            __ptext29 1AEE  
                          __ptext54 1100                            __ptext46 00CA  
                          __ptext38 2028                            __ptext55 1BAA  
                          __ptext47 11EA                            __ptext39 20C8  
                          __ptext56 1DDC                            __ptext48 1582  
                          __ptext57 20D6                            __ptext49 1EF6  
                          __ptext58 1FA4                            __ptext59 20FC  
                    i1send_msg@data 000F                      i1send_msg@qmsg 0015  
                    i1send_msg@slot 0014                      i1send_msg@qptr 000B  
                          _init_i2c 1BFE                 _init_timer1_lthread 206E  
                     __size_of_main 02B4                       ??i2_check_msg 002F  
                 main@t1thread_data 01BC                         ??_check_msg 0188  
                __end_of_init_queue 1934                __size_of_SleepIfOkay 0054  
                          _recv_msg 0ADE    i2c_slave_int_handler@msg_to_send 00C4  
             ??_i2c_configure_slave 0186                            _send_msg 0D9A  
                    init_queue@qptr 0186                      i2recv_msg@data 008F  
                    i2recv_msg@qmsg 0096                       ??_Delay1KTCYx 0186  
                    i2recv_msg@slot 0093                      i2recv_msg@qptr 008A  
                  uart_trans@length 018A                        ??_uart_trans 0188  
               _InterruptHandlerLow 0018                ?_init_timer1_lthread 0186  
          ??_uart_trans_int_handler 0001                   i2___awmod@divisor 0082  
                 i2___awmod@counter 002E                         _OSCTUNEbits 000F9B  
                        _INTCONbits 000FF2                      OpenUSART@spbrg 0186  
                          memcpy@d1 0186                            memcpy@s1 0188  
             __end_ofi2_in_high_int 20E2                    i2send_msg@length 008C  
                          intlevel1 0000                            intlevel2 0000  
              ?_InterruptHandlerLow 0001             ??_start_i2c_slave_reply 0080  
                  ___lwmod@dividend 0186              ?_uart_recv_int_handler 0001  
                __end_of_uart_trans 14E6                   SetChanADC@channel 0187  
             _block_on_To_msgqueues 183C                       ?_handle_start 0001  
                  ??_timer0_lthread 018E         __size_of_ToMainHigh_recvmsg 0042  
           __end_of_adc_int_handler 1FEA         __size_of_ToMainHigh_sendmsg 0036  
                        _OSCCONbits 000FD3                    ??_timer1_lthread 01A8  
          ToMainHigh_sendmsg@length 0099                 __end_ofi2_check_msg 1FC8  
                       _uartTimeOut 004C               ??_init_timer1_lthread 0188  
            ??_InterruptHandlerHigh 00CD                   _ToMainLow_recvmsg 1CD6  
                 _ToMainLow_sendmsg 1F7E                  main@last_reg_recvd 01AE  
                   ___lwmod@divisor 0188                __end_ofi2_in_low_int 1E1C  
                ?_ToMainLow_recvmsg 019E                 __end_of_Delay1KTCYx 205C  
                 ??_i2c_int_handler 0030                     ___lwmod@counter 018B  
                ?_ToMainLow_sendmsg 0017                      uart_trans@data 0186  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
                    i2send_msg@data 008E               ??_InterruptHandlerLow 001C  
               ??_ToMainLow_recvmsg 01A2                      i2send_msg@qmsg 0094  
                    i2send_msg@slot 0093                      i2send_msg@qptr 008A  
               ??_ToMainLow_sendmsg 001A       i2c_slave_int_handler@i2c_data 00C3  
               _FromMainLow_recvmsg 1D5A                      ??_handle_start 002D  
               _FromMainLow_sendmsg 1EC0                        _USART_Status 004F  
